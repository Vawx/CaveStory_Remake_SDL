; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\Cavestory\Cavestory\Cavestory\tinyxml2.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_02HFBBBACF@?$DM?$DP?$AA@			; `string'
PUBLIC	??_C@_04FFDNBKGC@?$DM?$CB?9?9?$AA@		; `string'
PUBLIC	??_C@_09BLLNCBLF@?$DM?$CB?$FLCDATA?$FL?$AA@	; `string'
PUBLIC	??_C@_02KBFACPPK@?$DM?$CB?$AA@			; `string'
PUBLIC	??_C@_01MNNFJEPP@?$DM?$AA@			; `string'
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	??_C@_04KJFGKBNM@quot?$AA@			; `string'
PUBLIC	??_C@_03DCBBJBAA@amp?$AA@			; `string'
PUBLIC	??_C@_04LBCJFAKL@apos?$AA@			; `string'
PUBLIC	??_C@_02KCAKIFL@lt?$AA@				; `string'
PUBLIC	??_C@_02GHFEHLK@gt?$AA@				; `string'
PUBLIC	??_C@_0M@OFJBHGBM@XML_SUCCESS?$AA@		; `string'
PUBLIC	??_C@_0BB@IGIENDAL@XML_NO_ATTRIBUTE?$AA@	; `string'
PUBLIC	??_C@_0BJ@NLEFELMO@XML_WRONG_ATTRIBUTE_TYPE?$AA@ ; `string'
PUBLIC	??_C@_0BJ@FAMPBCLJ@XML_ERROR_FILE_NOT_FOUND?$AA@ ; `string'
PUBLIC	??_C@_0CD@IINDOEGO@XML_ERROR_FILE_COULD_NOT_BE_OPEN@ ; `string'
PUBLIC	??_C@_0BK@LJEPDGMH@XML_ERROR_FILE_READ_ERROR?$AA@ ; `string'
PUBLIC	??_C@_0BL@NNOBPLPE@XML_ERROR_ELEMENT_MISMATCH?$AA@ ; `string'
PUBLIC	??_C@_0BK@LPPPMOBG@XML_ERROR_PARSING_ELEMENT?$AA@ ; `string'
PUBLIC	??_C@_0BM@LDAFAPCN@XML_ERROR_PARSING_ATTRIBUTE?$AA@ ; `string'
PUBLIC	??_C@_0BK@HFOKKMCK@XML_ERROR_IDENTIFYING_TAG?$AA@ ; `string'
PUBLIC	??_C@_0BH@GPBIBIKN@XML_ERROR_PARSING_TEXT?$AA@	; `string'
PUBLIC	??_C@_0BI@EPMILKIP@XML_ERROR_PARSING_CDATA?$AA@	; `string'
PUBLIC	??_C@_0BK@KECLFPGB@XML_ERROR_PARSING_COMMENT?$AA@ ; `string'
PUBLIC	??_C@_0BO@JFKIELCK@XML_ERROR_PARSING_DECLARATION?$AA@ ; `string'
PUBLIC	??_C@_0BK@OFBGHHPE@XML_ERROR_PARSING_UNKNOWN?$AA@ ; `string'
PUBLIC	??_C@_0BJ@CHGEEKHN@XML_ERROR_EMPTY_DOCUMENT?$AA@ ; `string'
PUBLIC	??_C@_0BN@LCLEMLDC@XML_ERROR_MISMATCHED_ELEMENT?$AA@ ; `string'
PUBLIC	??_C@_0BC@IEJHGDCA@XML_ERROR_PARSING?$AA@	; `string'
PUBLIC	??_C@_0BJ@NENGEPDP@XML_CAN_NOT_CONVERT_TEXT?$AA@ ; `string'
PUBLIC	??_C@_0BB@PLDKPHOM@XML_NO_TEXT_NODE?$AA@	; `string'
PUBLIC	?_errorNames@XMLDocument@tinyxml2@@0PAPBDA	; tinyxml2::XMLDocument::_errorNames
;	COMDAT ??_C@_0BB@PLDKPHOM@XML_NO_TEXT_NODE?$AA@
CONST	SEGMENT
??_C@_0BB@PLDKPHOM@XML_NO_TEXT_NODE?$AA@ DB 'XML_NO_TEXT_NODE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NENGEPDP@XML_CAN_NOT_CONVERT_TEXT?$AA@
CONST	SEGMENT
??_C@_0BJ@NENGEPDP@XML_CAN_NOT_CONVERT_TEXT?$AA@ DB 'XML_CAN_NOT_CONVERT_'
	DB	'TEXT', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IEJHGDCA@XML_ERROR_PARSING?$AA@
CONST	SEGMENT
??_C@_0BC@IEJHGDCA@XML_ERROR_PARSING?$AA@ DB 'XML_ERROR_PARSING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LCLEMLDC@XML_ERROR_MISMATCHED_ELEMENT?$AA@
CONST	SEGMENT
??_C@_0BN@LCLEMLDC@XML_ERROR_MISMATCHED_ELEMENT?$AA@ DB 'XML_ERROR_MISMAT'
	DB	'CHED_ELEMENT', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CHGEEKHN@XML_ERROR_EMPTY_DOCUMENT?$AA@
CONST	SEGMENT
??_C@_0BJ@CHGEEKHN@XML_ERROR_EMPTY_DOCUMENT?$AA@ DB 'XML_ERROR_EMPTY_DOCU'
	DB	'MENT', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OFBGHHPE@XML_ERROR_PARSING_UNKNOWN?$AA@
CONST	SEGMENT
??_C@_0BK@OFBGHHPE@XML_ERROR_PARSING_UNKNOWN?$AA@ DB 'XML_ERROR_PARSING_U'
	DB	'NKNOWN', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JFKIELCK@XML_ERROR_PARSING_DECLARATION?$AA@
CONST	SEGMENT
??_C@_0BO@JFKIELCK@XML_ERROR_PARSING_DECLARATION?$AA@ DB 'XML_ERROR_PARSI'
	DB	'NG_DECLARATION', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KECLFPGB@XML_ERROR_PARSING_COMMENT?$AA@
CONST	SEGMENT
??_C@_0BK@KECLFPGB@XML_ERROR_PARSING_COMMENT?$AA@ DB 'XML_ERROR_PARSING_C'
	DB	'OMMENT', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EPMILKIP@XML_ERROR_PARSING_CDATA?$AA@
CONST	SEGMENT
??_C@_0BI@EPMILKIP@XML_ERROR_PARSING_CDATA?$AA@ DB 'XML_ERROR_PARSING_CDA'
	DB	'TA', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GPBIBIKN@XML_ERROR_PARSING_TEXT?$AA@
CONST	SEGMENT
??_C@_0BH@GPBIBIKN@XML_ERROR_PARSING_TEXT?$AA@ DB 'XML_ERROR_PARSING_TEXT'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HFOKKMCK@XML_ERROR_IDENTIFYING_TAG?$AA@
CONST	SEGMENT
??_C@_0BK@HFOKKMCK@XML_ERROR_IDENTIFYING_TAG?$AA@ DB 'XML_ERROR_IDENTIFYI'
	DB	'NG_TAG', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LDAFAPCN@XML_ERROR_PARSING_ATTRIBUTE?$AA@
CONST	SEGMENT
??_C@_0BM@LDAFAPCN@XML_ERROR_PARSING_ATTRIBUTE?$AA@ DB 'XML_ERROR_PARSING'
	DB	'_ATTRIBUTE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LPPPMOBG@XML_ERROR_PARSING_ELEMENT?$AA@
CONST	SEGMENT
??_C@_0BK@LPPPMOBG@XML_ERROR_PARSING_ELEMENT?$AA@ DB 'XML_ERROR_PARSING_E'
	DB	'LEMENT', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NNOBPLPE@XML_ERROR_ELEMENT_MISMATCH?$AA@
CONST	SEGMENT
??_C@_0BL@NNOBPLPE@XML_ERROR_ELEMENT_MISMATCH?$AA@ DB 'XML_ERROR_ELEMENT_'
	DB	'MISMATCH', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LJEPDGMH@XML_ERROR_FILE_READ_ERROR?$AA@
CONST	SEGMENT
??_C@_0BK@LJEPDGMH@XML_ERROR_FILE_READ_ERROR?$AA@ DB 'XML_ERROR_FILE_READ'
	DB	'_ERROR', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@IINDOEGO@XML_ERROR_FILE_COULD_NOT_BE_OPEN@
CONST	SEGMENT
??_C@_0CD@IINDOEGO@XML_ERROR_FILE_COULD_NOT_BE_OPEN@ DB 'XML_ERROR_FILE_C'
	DB	'OULD_NOT_BE_OPENED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FAMPBCLJ@XML_ERROR_FILE_NOT_FOUND?$AA@
CONST	SEGMENT
??_C@_0BJ@FAMPBCLJ@XML_ERROR_FILE_NOT_FOUND?$AA@ DB 'XML_ERROR_FILE_NOT_F'
	DB	'OUND', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NLEFELMO@XML_WRONG_ATTRIBUTE_TYPE?$AA@
CONST	SEGMENT
??_C@_0BJ@NLEFELMO@XML_WRONG_ATTRIBUTE_TYPE?$AA@ DB 'XML_WRONG_ATTRIBUTE_'
	DB	'TYPE', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IGIENDAL@XML_NO_ATTRIBUTE?$AA@
CONST	SEGMENT
??_C@_0BB@IGIENDAL@XML_NO_ATTRIBUTE?$AA@ DB 'XML_NO_ATTRIBUTE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OFJBHGBM@XML_SUCCESS?$AA@
CONST	SEGMENT
??_C@_0M@OFJBHGBM@XML_SUCCESS?$AA@ DB 'XML_SUCCESS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02GHFEHLK@gt?$AA@
CONST	SEGMENT
??_C@_02GHFEHLK@gt?$AA@ DB 'gt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KCAKIFL@lt?$AA@
CONST	SEGMENT
??_C@_02KCAKIFL@lt?$AA@ DB 'lt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LBCJFAKL@apos?$AA@
CONST	SEGMENT
??_C@_04LBCJFAKL@apos?$AA@ DB 'apos', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DCBBJBAA@amp?$AA@
CONST	SEGMENT
??_C@_03DCBBJBAA@amp?$AA@ DB 'amp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KJFGKBNM@quot?$AA@
CONST	SEGMENT
??_C@_04KJFGKBNM@quot?$AA@ DB 'quot', 00H		; `string'
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ??_C@_01MNNFJEPP@?$DM?$AA@
CONST	SEGMENT
??_C@_01MNNFJEPP@?$DM?$AA@ DB '<', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KBFACPPK@?$DM?$CB?$AA@
CONST	SEGMENT
??_C@_02KBFACPPK@?$DM?$CB?$AA@ DB '<!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BLLNCBLF@?$DM?$CB?$FLCDATA?$FL?$AA@
CONST	SEGMENT
??_C@_09BLLNCBLF@?$DM?$CB?$FLCDATA?$FL?$AA@ DB '<![CDATA[', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04FFDNBKGC@?$DM?$CB?9?9?$AA@
CONST	SEGMENT
??_C@_04FFDNBKGC@?$DM?$CB?9?9?$AA@ DB '<!--', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02HFBBBACF@?$DM?$DP?$AA@
CONST	SEGMENT
??_C@_02HFBBBACF@?$DM?$DP?$AA@ DB '<?', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
?xmlHeader@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4PBDB DD FLAT:??_C@_02HFBBBACF@?$DM?$DP?$AA@ ; `tinyxml2::XMLDocument::Identify'::`14'::xmlHeader
?commentHeader@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4PBDB DD FLAT:??_C@_04FFDNBKGC@?$DM?$CB?9?9?$AA@ ; `tinyxml2::XMLDocument::Identify'::`14'::commentHeader
?cdataHeader@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4PBDB DD FLAT:??_C@_09BLLNCBLF@?$DM?$CB?$FLCDATA?$FL?$AA@ ; `tinyxml2::XMLDocument::Identify'::`14'::cdataHeader
?dtdHeader@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4PBDB DD FLAT:??_C@_02KBFACPPK@?$DM?$CB?$AA@ ; `tinyxml2::XMLDocument::Identify'::`14'::dtdHeader
?elementHeader@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4PBDB DD FLAT:??_C@_01MNNFJEPP@?$DM?$AA@ ; `tinyxml2::XMLDocument::Identify'::`14'::elementHeader
	ORG $+4
?_errorNames@XMLDocument@tinyxml2@@0PAPBDA DD FLAT:??_C@_0M@OFJBHGBM@XML_SUCCESS?$AA@ ; tinyxml2::XMLDocument::_errorNames
	DD	FLAT:??_C@_0BB@IGIENDAL@XML_NO_ATTRIBUTE?$AA@
	DD	FLAT:??_C@_0BJ@NLEFELMO@XML_WRONG_ATTRIBUTE_TYPE?$AA@
	DD	FLAT:??_C@_0BJ@FAMPBCLJ@XML_ERROR_FILE_NOT_FOUND?$AA@
	DD	FLAT:??_C@_0CD@IINDOEGO@XML_ERROR_FILE_COULD_NOT_BE_OPEN@
	DD	FLAT:??_C@_0BK@LJEPDGMH@XML_ERROR_FILE_READ_ERROR?$AA@
	DD	FLAT:??_C@_0BL@NNOBPLPE@XML_ERROR_ELEMENT_MISMATCH?$AA@
	DD	FLAT:??_C@_0BK@LPPPMOBG@XML_ERROR_PARSING_ELEMENT?$AA@
	DD	FLAT:??_C@_0BM@LDAFAPCN@XML_ERROR_PARSING_ATTRIBUTE?$AA@
	DD	FLAT:??_C@_0BK@HFOKKMCK@XML_ERROR_IDENTIFYING_TAG?$AA@
	DD	FLAT:??_C@_0BH@GPBIBIKN@XML_ERROR_PARSING_TEXT?$AA@
	DD	FLAT:??_C@_0BI@EPMILKIP@XML_ERROR_PARSING_CDATA?$AA@
	DD	FLAT:??_C@_0BK@KECLFPGB@XML_ERROR_PARSING_COMMENT?$AA@
	DD	FLAT:??_C@_0BO@JFKIELCK@XML_ERROR_PARSING_DECLARATION?$AA@
	DD	FLAT:??_C@_0BK@OFBGHHPE@XML_ERROR_PARSING_UNKNOWN?$AA@
	DD	FLAT:??_C@_0BJ@CHGEEKHN@XML_ERROR_EMPTY_DOCUMENT?$AA@
	DD	FLAT:??_C@_0BN@LCLEMLDC@XML_ERROR_MISMATCHED_ELEMENT?$AA@
	DD	FLAT:??_C@_0BC@IEJHGDCA@XML_ERROR_PARSING?$AA@
	DD	FLAT:??_C@_0BJ@NENGEPDP@XML_CAN_NOT_CONVERT_TEXT?$AA@
	DD	FLAT:??_C@_0BB@PLDKPHOM@XML_NO_TEXT_NODE?$AA@
_DATA	ENDS
CONST	SEGMENT
?LEN@?4??PrintError@XMLDocument@tinyxml2@@QBEXXZ@4HB DD 014H ; `tinyxml2::XMLDocument::PrintError'::`5'::LEN
?xmlHeaderLen@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4HB DD 02H ; `tinyxml2::XMLDocument::Identify'::`14'::xmlHeaderLen
?commentHeaderLen@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4HB DD 04H ; `tinyxml2::XMLDocument::Identify'::`14'::commentHeaderLen
?cdataHeaderLen@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4HB DD 09H ; `tinyxml2::XMLDocument::Identify'::`14'::cdataHeaderLen
?dtdHeaderLen@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4HB DD 02H ; `tinyxml2::XMLDocument::Identify'::`14'::dtdHeaderLen
?elementHeaderLen@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4HB DD 01H ; `tinyxml2::XMLDocument::Identify'::`14'::elementHeaderLen
?bom@?4??PushHeader@XMLPrinter@tinyxml2@@QAEX_N0@Z@4QBEB DB 0efH ; `tinyxml2::XMLPrinter::PushHeader'::`5'::bom
	DB	0bbH
	DB	0bfH
	DB	00H
_entities DD	FLAT:??_C@_04KJFGKBNM@quot?$AA@
	DD	04H
	DB	022H
	ORG $+3
	DD	FLAT:??_C@_03DCBBJBAA@amp?$AA@
	DD	03H
	DB	026H
	ORG $+3
	DD	FLAT:??_C@_04LBCJFAKL@apos?$AA@
	DD	04H
	DB	027H
	ORG $+3
	DD	FLAT:??_C@_02KCAKIFL@lt?$AA@
	DD	02H
	DB	03cH
	ORG $+3
	DD	FLAT:??_C@_02GHFEHLK@gt?$AA@
	DD	02H
	DB	03eH
	ORG $+3
?SEMICOLON@?7??GetCharacterRef@XMLUtil@tinyxml2@@SAPBDPBDPADPAH@Z@4DB DB 03bH ; `tinyxml2::XMLUtil::GetCharacterRef'::`8'::SEMICOLON
CONST	ENDS
PUBLIC	??0StrPair@tinyxml2@@QAE@XZ			; tinyxml2::StrPair::StrPair
PUBLIC	??1StrPair@tinyxml2@@QAE@XZ			; tinyxml2::StrPair::~StrPair
PUBLIC	?Set@StrPair@tinyxml2@@QAEXPAD0H@Z		; tinyxml2::StrPair::Set
PUBLIC	?GetStr@StrPair@tinyxml2@@QAEPBDXZ		; tinyxml2::StrPair::GetStr
PUBLIC	?Empty@StrPair@tinyxml2@@QBE_NXZ		; tinyxml2::StrPair::Empty
PUBLIC	?SetInternedStr@StrPair@tinyxml2@@QAEXPBD@Z	; tinyxml2::StrPair::SetInternedStr
PUBLIC	?SetStr@StrPair@tinyxml2@@QAEXPBDH@Z		; tinyxml2::StrPair::SetStr
PUBLIC	?ParseText@StrPair@tinyxml2@@QAEPADPADPBDH@Z	; tinyxml2::StrPair::ParseText
PUBLIC	?ParseName@StrPair@tinyxml2@@QAEPADPAD@Z	; tinyxml2::StrPair::ParseName
PUBLIC	?TransferTo@StrPair@tinyxml2@@QAEXPAV12@@Z	; tinyxml2::StrPair::TransferTo
PUBLIC	?Reset@StrPair@tinyxml2@@AAEXXZ			; tinyxml2::StrPair::Reset
PUBLIC	?CollapseWhitespace@StrPair@tinyxml2@@AAEXXZ	; tinyxml2::StrPair::CollapseWhitespace
PUBLIC	?__autoclassinit2@StrPair@tinyxml2@@QAEXI@Z	; tinyxml2::StrPair::__autoclassinit2
PUBLIC	??0MemPool@tinyxml2@@QAE@XZ			; tinyxml2::MemPool::MemPool
PUBLIC	??1MemPool@tinyxml2@@UAE@XZ			; tinyxml2::MemPool::~MemPool
PUBLIC	??_GMemPool@tinyxml2@@UAEPAXI@Z			; tinyxml2::MemPool::`scalar deleting destructor'
PUBLIC	??1XMLVisitor@tinyxml2@@UAE@XZ			; tinyxml2::XMLVisitor::~XMLVisitor
PUBLIC	?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z ; tinyxml2::XMLVisitor::VisitEnter
PUBLIC	?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z ; tinyxml2::XMLVisitor::VisitExit
PUBLIC	?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z ; tinyxml2::XMLVisitor::VisitEnter
PUBLIC	?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@@Z ; tinyxml2::XMLVisitor::VisitExit
PUBLIC	?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z ; tinyxml2::XMLVisitor::Visit
PUBLIC	?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLText@2@@Z ; tinyxml2::XMLVisitor::Visit
PUBLIC	?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLComment@2@@Z ; tinyxml2::XMLVisitor::Visit
PUBLIC	?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLUnknown@2@@Z ; tinyxml2::XMLVisitor::Visit
PUBLIC	??0XMLVisitor@tinyxml2@@QAE@XZ			; tinyxml2::XMLVisitor::XMLVisitor
PUBLIC	??_GXMLVisitor@tinyxml2@@UAEPAXI@Z		; tinyxml2::XMLVisitor::`scalar deleting destructor'
PUBLIC	?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPBDPBD@Z	; tinyxml2::XMLUtil::SkipWhiteSpace
PUBLIC	?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPADPAD@Z	; tinyxml2::XMLUtil::SkipWhiteSpace
PUBLIC	?IsWhiteSpace@XMLUtil@tinyxml2@@SA_ND@Z		; tinyxml2::XMLUtil::IsWhiteSpace
PUBLIC	?IsNameStartChar@XMLUtil@tinyxml2@@SA_NE@Z	; tinyxml2::XMLUtil::IsNameStartChar
PUBLIC	?IsNameChar@XMLUtil@tinyxml2@@SA_NE@Z		; tinyxml2::XMLUtil::IsNameChar
PUBLIC	?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z	; tinyxml2::XMLUtil::StringEqual
PUBLIC	?IsUTF8Continuation@XMLUtil@tinyxml2@@SA_ND@Z	; tinyxml2::XMLUtil::IsUTF8Continuation
PUBLIC	?ReadBOM@XMLUtil@tinyxml2@@SAPBDPBDPA_N@Z	; tinyxml2::XMLUtil::ReadBOM
PUBLIC	?GetCharacterRef@XMLUtil@tinyxml2@@SAPBDPBDPADPAH@Z ; tinyxml2::XMLUtil::GetCharacterRef
PUBLIC	?ConvertUTF32ToUTF8@XMLUtil@tinyxml2@@SAXKPADPAH@Z ; tinyxml2::XMLUtil::ConvertUTF32ToUTF8
PUBLIC	?ToStr@XMLUtil@tinyxml2@@SAXHPADH@Z		; tinyxml2::XMLUtil::ToStr
PUBLIC	?ToStr@XMLUtil@tinyxml2@@SAXIPADH@Z		; tinyxml2::XMLUtil::ToStr
PUBLIC	?ToStr@XMLUtil@tinyxml2@@SAX_NPADH@Z		; tinyxml2::XMLUtil::ToStr
PUBLIC	?ToStr@XMLUtil@tinyxml2@@SAXMPADH@Z		; tinyxml2::XMLUtil::ToStr
PUBLIC	?ToStr@XMLUtil@tinyxml2@@SAXNPADH@Z		; tinyxml2::XMLUtil::ToStr
PUBLIC	?ToInt@XMLUtil@tinyxml2@@SA_NPBDPAH@Z		; tinyxml2::XMLUtil::ToInt
PUBLIC	?ToUnsigned@XMLUtil@tinyxml2@@SA_NPBDPAI@Z	; tinyxml2::XMLUtil::ToUnsigned
PUBLIC	?ToBool@XMLUtil@tinyxml2@@SA_NPBDPA_N@Z		; tinyxml2::XMLUtil::ToBool
PUBLIC	?ToFloat@XMLUtil@tinyxml2@@SA_NPBDPAM@Z		; tinyxml2::XMLUtil::ToFloat
PUBLIC	?ToDouble@XMLUtil@tinyxml2@@SA_NPBDPAN@Z	; tinyxml2::XMLUtil::ToDouble
PUBLIC	?GetDocument@XMLNode@tinyxml2@@QAEPAVXMLDocument@2@XZ ; tinyxml2::XMLNode::GetDocument
PUBLIC	?ToElement@XMLNode@tinyxml2@@UAEPAVXMLElement@2@XZ ; tinyxml2::XMLNode::ToElement
PUBLIC	?ToText@XMLNode@tinyxml2@@UAEPAVXMLText@2@XZ	; tinyxml2::XMLNode::ToText
PUBLIC	?ToComment@XMLNode@tinyxml2@@UAEPAVXMLComment@2@XZ ; tinyxml2::XMLNode::ToComment
PUBLIC	?ToDocument@XMLNode@tinyxml2@@UAEPAVXMLDocument@2@XZ ; tinyxml2::XMLNode::ToDocument
PUBLIC	?ToDeclaration@XMLNode@tinyxml2@@UAEPAVXMLDeclaration@2@XZ ; tinyxml2::XMLNode::ToDeclaration
PUBLIC	?ToUnknown@XMLNode@tinyxml2@@UAEPAVXMLUnknown@2@XZ ; tinyxml2::XMLNode::ToUnknown
PUBLIC	?ToElement@XMLNode@tinyxml2@@UBEPBVXMLElement@2@XZ ; tinyxml2::XMLNode::ToElement
PUBLIC	?ToText@XMLNode@tinyxml2@@UBEPBVXMLText@2@XZ	; tinyxml2::XMLNode::ToText
PUBLIC	?ToComment@XMLNode@tinyxml2@@UBEPBVXMLComment@2@XZ ; tinyxml2::XMLNode::ToComment
PUBLIC	?ToDocument@XMLNode@tinyxml2@@UBEPBVXMLDocument@2@XZ ; tinyxml2::XMLNode::ToDocument
PUBLIC	?ToDeclaration@XMLNode@tinyxml2@@UBEPBVXMLDeclaration@2@XZ ; tinyxml2::XMLNode::ToDeclaration
PUBLIC	?ToUnknown@XMLNode@tinyxml2@@UBEPBVXMLUnknown@2@XZ ; tinyxml2::XMLNode::ToUnknown
PUBLIC	?Value@XMLNode@tinyxml2@@QBEPBDXZ		; tinyxml2::XMLNode::Value
PUBLIC	?SetValue@XMLNode@tinyxml2@@QAEXPBD_N@Z		; tinyxml2::XMLNode::SetValue
PUBLIC	?Parent@XMLNode@tinyxml2@@QBEPBV12@XZ		; tinyxml2::XMLNode::Parent
PUBLIC	?NoChildren@XMLNode@tinyxml2@@QBE_NXZ		; tinyxml2::XMLNode::NoChildren
PUBLIC	?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ	; tinyxml2::XMLNode::FirstChild
PUBLIC	?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ	; tinyxml2::XMLNode::FirstChild
PUBLIC	?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
PUBLIC	?LastChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::LastChildElement
PUBLIC	?PreviousSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::PreviousSiblingElement
PUBLIC	?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ	; tinyxml2::XMLNode::NextSibling
PUBLIC	?NextSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
PUBLIC	?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertEndChild
PUBLIC	?InsertFirstChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertFirstChild
PUBLIC	?InsertAfterChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@0@Z ; tinyxml2::XMLNode::InsertAfterChild
PUBLIC	?DeleteChildren@XMLNode@tinyxml2@@QAEXXZ	; tinyxml2::XMLNode::DeleteChildren
PUBLIC	?DeleteChild@XMLNode@tinyxml2@@QAEXPAV12@@Z	; tinyxml2::XMLNode::DeleteChild
PUBLIC	??0XMLNode@tinyxml2@@IAE@PAVXMLDocument@1@@Z	; tinyxml2::XMLNode::XMLNode
PUBLIC	??1XMLNode@tinyxml2@@MAE@XZ			; tinyxml2::XMLNode::~XMLNode
PUBLIC	?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ; tinyxml2::XMLNode::ParseDeep
PUBLIC	?Unlink@XMLNode@tinyxml2@@AAEXPAV12@@Z		; tinyxml2::XMLNode::Unlink
PUBLIC	?DeleteNode@XMLNode@tinyxml2@@CAXPAV12@@Z	; tinyxml2::XMLNode::DeleteNode
PUBLIC	?InsertChildPreamble@XMLNode@tinyxml2@@ABEXPAV12@@Z ; tinyxml2::XMLNode::InsertChildPreamble
PUBLIC	??_GXMLNode@tinyxml2@@MAEPAXI@Z			; tinyxml2::XMLNode::`scalar deleting destructor'
PUBLIC	?Accept@XMLText@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ; tinyxml2::XMLText::Accept
PUBLIC	?ToText@XMLText@tinyxml2@@UAEPAV12@XZ		; tinyxml2::XMLText::ToText
PUBLIC	?ToText@XMLText@tinyxml2@@UBEPBV12@XZ		; tinyxml2::XMLText::ToText
PUBLIC	?SetCData@XMLText@tinyxml2@@QAEX_N@Z		; tinyxml2::XMLText::SetCData
PUBLIC	?CData@XMLText@tinyxml2@@QBE_NXZ		; tinyxml2::XMLText::CData
PUBLIC	?ShallowClone@XMLText@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z ; tinyxml2::XMLText::ShallowClone
PUBLIC	?ShallowEqual@XMLText@tinyxml2@@UBE_NPBVXMLNode@2@@Z ; tinyxml2::XMLText::ShallowEqual
PUBLIC	??0XMLText@tinyxml2@@IAE@PAVXMLDocument@1@@Z	; tinyxml2::XMLText::XMLText
PUBLIC	??1XMLText@tinyxml2@@MAE@XZ			; tinyxml2::XMLText::~XMLText
PUBLIC	?ParseDeep@XMLText@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ; tinyxml2::XMLText::ParseDeep
PUBLIC	??_GXMLText@tinyxml2@@MAEPAXI@Z			; tinyxml2::XMLText::`scalar deleting destructor'
PUBLIC	?ToComment@XMLComment@tinyxml2@@UAEPAV12@XZ	; tinyxml2::XMLComment::ToComment
PUBLIC	?ToComment@XMLComment@tinyxml2@@UBEPBV12@XZ	; tinyxml2::XMLComment::ToComment
PUBLIC	?Accept@XMLComment@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ; tinyxml2::XMLComment::Accept
PUBLIC	?ShallowClone@XMLComment@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z ; tinyxml2::XMLComment::ShallowClone
PUBLIC	?ShallowEqual@XMLComment@tinyxml2@@UBE_NPBVXMLNode@2@@Z ; tinyxml2::XMLComment::ShallowEqual
PUBLIC	??0XMLComment@tinyxml2@@IAE@PAVXMLDocument@1@@Z	; tinyxml2::XMLComment::XMLComment
PUBLIC	??1XMLComment@tinyxml2@@MAE@XZ			; tinyxml2::XMLComment::~XMLComment
PUBLIC	?ParseDeep@XMLComment@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ; tinyxml2::XMLComment::ParseDeep
PUBLIC	??_GXMLComment@tinyxml2@@MAEPAXI@Z		; tinyxml2::XMLComment::`scalar deleting destructor'
PUBLIC	?ToDeclaration@XMLDeclaration@tinyxml2@@UAEPAV12@XZ ; tinyxml2::XMLDeclaration::ToDeclaration
PUBLIC	?ToDeclaration@XMLDeclaration@tinyxml2@@UBEPBV12@XZ ; tinyxml2::XMLDeclaration::ToDeclaration
PUBLIC	?Accept@XMLDeclaration@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ; tinyxml2::XMLDeclaration::Accept
PUBLIC	?ShallowClone@XMLDeclaration@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z ; tinyxml2::XMLDeclaration::ShallowClone
PUBLIC	?ShallowEqual@XMLDeclaration@tinyxml2@@UBE_NPBVXMLNode@2@@Z ; tinyxml2::XMLDeclaration::ShallowEqual
PUBLIC	??0XMLDeclaration@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLDeclaration::XMLDeclaration
PUBLIC	??1XMLDeclaration@tinyxml2@@MAE@XZ		; tinyxml2::XMLDeclaration::~XMLDeclaration
PUBLIC	?ParseDeep@XMLDeclaration@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ; tinyxml2::XMLDeclaration::ParseDeep
PUBLIC	??_GXMLDeclaration@tinyxml2@@MAEPAXI@Z		; tinyxml2::XMLDeclaration::`scalar deleting destructor'
PUBLIC	?ToUnknown@XMLUnknown@tinyxml2@@UAEPAV12@XZ	; tinyxml2::XMLUnknown::ToUnknown
PUBLIC	?ToUnknown@XMLUnknown@tinyxml2@@UBEPBV12@XZ	; tinyxml2::XMLUnknown::ToUnknown
PUBLIC	?Accept@XMLUnknown@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ; tinyxml2::XMLUnknown::Accept
PUBLIC	?ShallowClone@XMLUnknown@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z ; tinyxml2::XMLUnknown::ShallowClone
PUBLIC	?ShallowEqual@XMLUnknown@tinyxml2@@UBE_NPBVXMLNode@2@@Z ; tinyxml2::XMLUnknown::ShallowEqual
PUBLIC	??0XMLUnknown@tinyxml2@@IAE@PAVXMLDocument@1@@Z	; tinyxml2::XMLUnknown::XMLUnknown
PUBLIC	??1XMLUnknown@tinyxml2@@MAE@XZ			; tinyxml2::XMLUnknown::~XMLUnknown
PUBLIC	?ParseDeep@XMLUnknown@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ; tinyxml2::XMLUnknown::ParseDeep
PUBLIC	??_GXMLUnknown@tinyxml2@@MAEPAXI@Z		; tinyxml2::XMLUnknown::`scalar deleting destructor'
PUBLIC	?Name@XMLAttribute@tinyxml2@@QBEPBDXZ		; tinyxml2::XMLAttribute::Name
PUBLIC	?Value@XMLAttribute@tinyxml2@@QBEPBDXZ		; tinyxml2::XMLAttribute::Value
PUBLIC	?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ	; tinyxml2::XMLAttribute::Next
PUBLIC	?QueryIntValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAH@Z ; tinyxml2::XMLAttribute::QueryIntValue
PUBLIC	?QueryUnsignedValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAI@Z ; tinyxml2::XMLAttribute::QueryUnsignedValue
PUBLIC	?QueryBoolValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PA_N@Z ; tinyxml2::XMLAttribute::QueryBoolValue
PUBLIC	?QueryDoubleValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAN@Z ; tinyxml2::XMLAttribute::QueryDoubleValue
PUBLIC	?QueryFloatValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAM@Z ; tinyxml2::XMLAttribute::QueryFloatValue
PUBLIC	?SetAttribute@XMLAttribute@tinyxml2@@QAEXPBD@Z	; tinyxml2::XMLAttribute::SetAttribute
PUBLIC	?SetAttribute@XMLAttribute@tinyxml2@@QAEXH@Z	; tinyxml2::XMLAttribute::SetAttribute
PUBLIC	?SetAttribute@XMLAttribute@tinyxml2@@QAEXI@Z	; tinyxml2::XMLAttribute::SetAttribute
PUBLIC	?SetAttribute@XMLAttribute@tinyxml2@@QAEX_N@Z	; tinyxml2::XMLAttribute::SetAttribute
PUBLIC	?SetAttribute@XMLAttribute@tinyxml2@@QAEXN@Z	; tinyxml2::XMLAttribute::SetAttribute
PUBLIC	?SetAttribute@XMLAttribute@tinyxml2@@QAEXM@Z	; tinyxml2::XMLAttribute::SetAttribute
PUBLIC	??0XMLAttribute@tinyxml2@@AAE@XZ		; tinyxml2::XMLAttribute::XMLAttribute
PUBLIC	??1XMLAttribute@tinyxml2@@EAE@XZ		; tinyxml2::XMLAttribute::~XMLAttribute
PUBLIC	?SetName@XMLAttribute@tinyxml2@@AAEXPBD@Z	; tinyxml2::XMLAttribute::SetName
PUBLIC	?ParseDeep@XMLAttribute@tinyxml2@@AAEPADPAD_N@Z	; tinyxml2::XMLAttribute::ParseDeep
PUBLIC	??_GXMLAttribute@tinyxml2@@EAEPAXI@Z		; tinyxml2::XMLAttribute::`scalar deleting destructor'
PUBLIC	?Name@XMLElement@tinyxml2@@QBEPBDXZ		; tinyxml2::XMLElement::Name
PUBLIC	?SetName@XMLElement@tinyxml2@@QAEXPBD_N@Z	; tinyxml2::XMLElement::SetName
PUBLIC	?ToElement@XMLElement@tinyxml2@@UAEPAV12@XZ	; tinyxml2::XMLElement::ToElement
PUBLIC	?ToElement@XMLElement@tinyxml2@@UBEPBV12@XZ	; tinyxml2::XMLElement::ToElement
PUBLIC	?Accept@XMLElement@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ; tinyxml2::XMLElement::Accept
PUBLIC	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z	; tinyxml2::XMLElement::Attribute
PUBLIC	?SetAttribute@XMLElement@tinyxml2@@QAEXPBD0@Z	; tinyxml2::XMLElement::SetAttribute
PUBLIC	?DeleteAttribute@XMLElement@tinyxml2@@QAEXPBD@Z	; tinyxml2::XMLElement::DeleteAttribute
PUBLIC	?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ ; tinyxml2::XMLElement::FirstAttribute
PUBLIC	?FindAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindAttribute
PUBLIC	?GetText@XMLElement@tinyxml2@@QBEPBDXZ		; tinyxml2::XMLElement::GetText
PUBLIC	?SetText@XMLElement@tinyxml2@@QAEXPBD@Z		; tinyxml2::XMLElement::SetText
PUBLIC	?SetText@XMLElement@tinyxml2@@QAEXH@Z		; tinyxml2::XMLElement::SetText
PUBLIC	?SetText@XMLElement@tinyxml2@@QAEXI@Z		; tinyxml2::XMLElement::SetText
PUBLIC	?SetText@XMLElement@tinyxml2@@QAEX_N@Z		; tinyxml2::XMLElement::SetText
PUBLIC	?SetText@XMLElement@tinyxml2@@QAEXN@Z		; tinyxml2::XMLElement::SetText
PUBLIC	?SetText@XMLElement@tinyxml2@@QAEXM@Z		; tinyxml2::XMLElement::SetText
PUBLIC	?QueryIntText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAH@Z ; tinyxml2::XMLElement::QueryIntText
PUBLIC	?QueryUnsignedText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAI@Z ; tinyxml2::XMLElement::QueryUnsignedText
PUBLIC	?QueryBoolText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PA_N@Z ; tinyxml2::XMLElement::QueryBoolText
PUBLIC	?QueryDoubleText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAN@Z ; tinyxml2::XMLElement::QueryDoubleText
PUBLIC	?QueryFloatText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAM@Z ; tinyxml2::XMLElement::QueryFloatText
PUBLIC	?ClosingType@XMLElement@tinyxml2@@QBEHXZ	; tinyxml2::XMLElement::ClosingType
PUBLIC	?ShallowClone@XMLElement@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z ; tinyxml2::XMLElement::ShallowClone
PUBLIC	?ShallowEqual@XMLElement@tinyxml2@@UBE_NPBVXMLNode@2@@Z ; tinyxml2::XMLElement::ShallowEqual
PUBLIC	?ParseDeep@XMLElement@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ; tinyxml2::XMLElement::ParseDeep
PUBLIC	??0XMLElement@tinyxml2@@AAE@PAVXMLDocument@1@@Z	; tinyxml2::XMLElement::XMLElement
PUBLIC	??1XMLElement@tinyxml2@@EAE@XZ			; tinyxml2::XMLElement::~XMLElement
PUBLIC	?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindOrCreateAttribute
PUBLIC	?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z ; tinyxml2::XMLElement::ParseAttributes
PUBLIC	?DeleteAttribute@XMLElement@tinyxml2@@CAXPAVXMLAttribute@2@@Z ; tinyxml2::XMLElement::DeleteAttribute
PUBLIC	??_GXMLElement@tinyxml2@@EAEPAXI@Z		; tinyxml2::XMLElement::`scalar deleting destructor'
PUBLIC	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
PUBLIC	??1XMLDocument@tinyxml2@@UAE@XZ			; tinyxml2::XMLDocument::~XMLDocument
PUBLIC	?ToDocument@XMLDocument@tinyxml2@@UAEPAV12@XZ	; tinyxml2::XMLDocument::ToDocument
PUBLIC	?ToDocument@XMLDocument@tinyxml2@@UBEPBV12@XZ	; tinyxml2::XMLDocument::ToDocument
PUBLIC	?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ; tinyxml2::XMLDocument::Parse
PUBLIC	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ; tinyxml2::XMLDocument::LoadFile
PUBLIC	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@@Z ; tinyxml2::XMLDocument::LoadFile
PUBLIC	?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD_N@Z ; tinyxml2::XMLDocument::SaveFile
PUBLIC	?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z ; tinyxml2::XMLDocument::SaveFile
PUBLIC	?ProcessEntities@XMLDocument@tinyxml2@@QBE_NXZ	; tinyxml2::XMLDocument::ProcessEntities
PUBLIC	?WhitespaceMode@XMLDocument@tinyxml2@@QBE?AW4Whitespace@2@XZ ; tinyxml2::XMLDocument::WhitespaceMode
PUBLIC	?HasBOM@XMLDocument@tinyxml2@@QBE_NXZ		; tinyxml2::XMLDocument::HasBOM
PUBLIC	?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print
PUBLIC	?Accept@XMLDocument@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ; tinyxml2::XMLDocument::Accept
PUBLIC	?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLDocument::NewElement
PUBLIC	?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z ; tinyxml2::XMLDocument::NewComment
PUBLIC	?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z ; tinyxml2::XMLDocument::NewText
PUBLIC	?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z ; tinyxml2::XMLDocument::NewDeclaration
PUBLIC	?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z ; tinyxml2::XMLDocument::NewUnknown
PUBLIC	?DeleteNode@XMLDocument@tinyxml2@@QAEXPAVXMLNode@2@@Z ; tinyxml2::XMLDocument::DeleteNode
PUBLIC	?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
PUBLIC	?Error@XMLDocument@tinyxml2@@QBE_NXZ		; tinyxml2::XMLDocument::Error
PUBLIC	?ErrorName@XMLDocument@tinyxml2@@QBEPBDXZ	; tinyxml2::XMLDocument::ErrorName
PUBLIC	?PrintError@XMLDocument@tinyxml2@@QBEXXZ	; tinyxml2::XMLDocument::PrintError
PUBLIC	?Clear@XMLDocument@tinyxml2@@QAEXXZ		; tinyxml2::XMLDocument::Clear
PUBLIC	?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z ; tinyxml2::XMLDocument::Identify
PUBLIC	?ShallowClone@XMLDocument@tinyxml2@@UBEPAVXMLNode@2@PAV12@@Z ; tinyxml2::XMLDocument::ShallowClone
PUBLIC	?ShallowEqual@XMLDocument@tinyxml2@@UBE_NPBVXMLNode@2@@Z ; tinyxml2::XMLDocument::ShallowEqual
PUBLIC	??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ		; tinyxml2::MemPoolT<52>::MemPoolT<52>
PUBLIC	??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ		; tinyxml2::MemPoolT<52>::~MemPoolT<52>
PUBLIC	?Clear@?$MemPoolT@$0DE@@tinyxml2@@UAEXXZ	; tinyxml2::MemPoolT<52>::Clear
PUBLIC	?ItemSize@?$MemPoolT@$0DE@@tinyxml2@@UBEHXZ	; tinyxml2::MemPoolT<52>::ItemSize
PUBLIC	?CurrentAllocs@?$MemPoolT@$0DE@@tinyxml2@@QBEHXZ ; tinyxml2::MemPoolT<52>::CurrentAllocs
PUBLIC	?Alloc@?$MemPoolT@$0DE@@tinyxml2@@UAEPAXXZ	; tinyxml2::MemPoolT<52>::Alloc
PUBLIC	?Free@?$MemPoolT@$0DE@@tinyxml2@@UAEXPAX@Z	; tinyxml2::MemPoolT<52>::Free
PUBLIC	?SetTracked@?$MemPoolT@$0DE@@tinyxml2@@UAEXXZ	; tinyxml2::MemPoolT<52>::SetTracked
PUBLIC	?Untracked@?$MemPoolT@$0DE@@tinyxml2@@QBEHXZ	; tinyxml2::MemPoolT<52>::Untracked
PUBLIC	??0?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::DynArray<tinyxml2::MemPoolT<52>::Block *,10>
PUBLIC	??1?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::~DynArray<tinyxml2::MemPoolT<52>::Block *,10>
PUBLIC	?Push@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0DE@@2@@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::Push
PUBLIC	?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0DE@@2@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::Pop
PUBLIC	?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QBE_NXZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::Empty
PUBLIC	?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::EnsureCapacity
PUBLIC	??_G?$MemPoolT@$0DE@@tinyxml2@@UAEPAXI@Z	; tinyxml2::MemPoolT<52>::`scalar deleting destructor'
PUBLIC	??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ		; tinyxml2::MemPoolT<36>::MemPoolT<36>
PUBLIC	??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ		; tinyxml2::MemPoolT<36>::~MemPoolT<36>
PUBLIC	?Clear@?$MemPoolT@$0CE@@tinyxml2@@UAEXXZ	; tinyxml2::MemPoolT<36>::Clear
PUBLIC	?ItemSize@?$MemPoolT@$0CE@@tinyxml2@@UBEHXZ	; tinyxml2::MemPoolT<36>::ItemSize
PUBLIC	?CurrentAllocs@?$MemPoolT@$0CE@@tinyxml2@@QBEHXZ ; tinyxml2::MemPoolT<36>::CurrentAllocs
PUBLIC	?Alloc@?$MemPoolT@$0CE@@tinyxml2@@UAEPAXXZ	; tinyxml2::MemPoolT<36>::Alloc
PUBLIC	?Free@?$MemPoolT@$0CE@@tinyxml2@@UAEXPAX@Z	; tinyxml2::MemPoolT<36>::Free
PUBLIC	?SetTracked@?$MemPoolT@$0CE@@tinyxml2@@UAEXXZ	; tinyxml2::MemPoolT<36>::SetTracked
PUBLIC	?Untracked@?$MemPoolT@$0CE@@tinyxml2@@QBEHXZ	; tinyxml2::MemPoolT<36>::Untracked
PUBLIC	??0?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::DynArray<tinyxml2::MemPoolT<36>::Block *,10>
PUBLIC	??1?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::~DynArray<tinyxml2::MemPoolT<36>::Block *,10>
PUBLIC	?Push@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0CE@@2@@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::Push
PUBLIC	?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0CE@@2@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::Pop
PUBLIC	?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QBE_NXZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::Empty
PUBLIC	?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::EnsureCapacity
PUBLIC	??_G?$MemPoolT@$0CE@@tinyxml2@@UAEPAXI@Z	; tinyxml2::MemPoolT<36>::`scalar deleting destructor'
PUBLIC	??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ		; tinyxml2::MemPoolT<48>::MemPoolT<48>
PUBLIC	??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ		; tinyxml2::MemPoolT<48>::~MemPoolT<48>
PUBLIC	?Clear@?$MemPoolT@$0DA@@tinyxml2@@UAEXXZ	; tinyxml2::MemPoolT<48>::Clear
PUBLIC	?ItemSize@?$MemPoolT@$0DA@@tinyxml2@@UBEHXZ	; tinyxml2::MemPoolT<48>::ItemSize
PUBLIC	?CurrentAllocs@?$MemPoolT@$0DA@@tinyxml2@@QBEHXZ ; tinyxml2::MemPoolT<48>::CurrentAllocs
PUBLIC	?Alloc@?$MemPoolT@$0DA@@tinyxml2@@UAEPAXXZ	; tinyxml2::MemPoolT<48>::Alloc
PUBLIC	?Free@?$MemPoolT@$0DA@@tinyxml2@@UAEXPAX@Z	; tinyxml2::MemPoolT<48>::Free
PUBLIC	?SetTracked@?$MemPoolT@$0DA@@tinyxml2@@UAEXXZ	; tinyxml2::MemPoolT<48>::SetTracked
PUBLIC	?Untracked@?$MemPoolT@$0DA@@tinyxml2@@QBEHXZ	; tinyxml2::MemPoolT<48>::Untracked
PUBLIC	??0?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::DynArray<tinyxml2::MemPoolT<48>::Block *,10>
PUBLIC	??1?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::~DynArray<tinyxml2::MemPoolT<48>::Block *,10>
PUBLIC	?Push@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0DA@@2@@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::Push
PUBLIC	?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0DA@@2@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::Pop
PUBLIC	?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QBE_NXZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::Empty
PUBLIC	?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::EnsureCapacity
PUBLIC	??_G?$MemPoolT@$0DA@@tinyxml2@@UAEPAXI@Z	; tinyxml2::MemPoolT<48>::`scalar deleting destructor'
PUBLIC	??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ		; tinyxml2::MemPoolT<44>::MemPoolT<44>
PUBLIC	??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ		; tinyxml2::MemPoolT<44>::~MemPoolT<44>
PUBLIC	?Clear@?$MemPoolT@$0CM@@tinyxml2@@UAEXXZ	; tinyxml2::MemPoolT<44>::Clear
PUBLIC	?ItemSize@?$MemPoolT@$0CM@@tinyxml2@@UBEHXZ	; tinyxml2::MemPoolT<44>::ItemSize
PUBLIC	?CurrentAllocs@?$MemPoolT@$0CM@@tinyxml2@@QBEHXZ ; tinyxml2::MemPoolT<44>::CurrentAllocs
PUBLIC	?Alloc@?$MemPoolT@$0CM@@tinyxml2@@UAEPAXXZ	; tinyxml2::MemPoolT<44>::Alloc
PUBLIC	?Free@?$MemPoolT@$0CM@@tinyxml2@@UAEXPAX@Z	; tinyxml2::MemPoolT<44>::Free
PUBLIC	?SetTracked@?$MemPoolT@$0CM@@tinyxml2@@UAEXXZ	; tinyxml2::MemPoolT<44>::SetTracked
PUBLIC	?Untracked@?$MemPoolT@$0CM@@tinyxml2@@QBEHXZ	; tinyxml2::MemPoolT<44>::Untracked
PUBLIC	??0?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::DynArray<tinyxml2::MemPoolT<44>::Block *,10>
PUBLIC	??1?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::~DynArray<tinyxml2::MemPoolT<44>::Block *,10>
PUBLIC	?Push@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0CM@@2@@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::Push
PUBLIC	?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0CM@@2@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::Pop
PUBLIC	?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QBE_NXZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::Empty
PUBLIC	?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::EnsureCapacity
PUBLIC	??_G?$MemPoolT@$0CM@@tinyxml2@@UAEPAXI@Z	; tinyxml2::MemPoolT<44>::`scalar deleting destructor'
PUBLIC	?Parse@XMLDocument@tinyxml2@@AAEXXZ		; tinyxml2::XMLDocument::Parse
PUBLIC	??_GXMLDocument@tinyxml2@@UAEPAXI@Z		; tinyxml2::XMLDocument::`scalar deleting destructor'
PUBLIC	??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z	; tinyxml2::XMLPrinter::XMLPrinter
PUBLIC	??1XMLPrinter@tinyxml2@@UAE@XZ			; tinyxml2::XMLPrinter::~XMLPrinter
PUBLIC	?PushHeader@XMLPrinter@tinyxml2@@QAEX_N0@Z	; tinyxml2::XMLPrinter::PushHeader
PUBLIC	?OpenElement@XMLPrinter@tinyxml2@@QAEXPBD_N@Z	; tinyxml2::XMLPrinter::OpenElement
PUBLIC	?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD0@Z	; tinyxml2::XMLPrinter::PushAttribute
PUBLIC	?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBDH@Z	; tinyxml2::XMLPrinter::PushAttribute
PUBLIC	?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBDI@Z	; tinyxml2::XMLPrinter::PushAttribute
PUBLIC	?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD_N@Z	; tinyxml2::XMLPrinter::PushAttribute
PUBLIC	?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBDN@Z	; tinyxml2::XMLPrinter::PushAttribute
PUBLIC	?CloseElement@XMLPrinter@tinyxml2@@UAEX_N@Z	; tinyxml2::XMLPrinter::CloseElement
PUBLIC	?PushText@XMLPrinter@tinyxml2@@QAEXPBD_N@Z	; tinyxml2::XMLPrinter::PushText
PUBLIC	?PushText@XMLPrinter@tinyxml2@@QAEXH@Z		; tinyxml2::XMLPrinter::PushText
PUBLIC	?PushText@XMLPrinter@tinyxml2@@QAEXI@Z		; tinyxml2::XMLPrinter::PushText
PUBLIC	?PushText@XMLPrinter@tinyxml2@@QAEX_N@Z		; tinyxml2::XMLPrinter::PushText
PUBLIC	?PushText@XMLPrinter@tinyxml2@@QAEXM@Z		; tinyxml2::XMLPrinter::PushText
PUBLIC	?PushText@XMLPrinter@tinyxml2@@QAEXN@Z		; tinyxml2::XMLPrinter::PushText
PUBLIC	?PushComment@XMLPrinter@tinyxml2@@QAEXPBD@Z	; tinyxml2::XMLPrinter::PushComment
PUBLIC	?PushDeclaration@XMLPrinter@tinyxml2@@QAEXPBD@Z	; tinyxml2::XMLPrinter::PushDeclaration
PUBLIC	?PushUnknown@XMLPrinter@tinyxml2@@QAEXPBD@Z	; tinyxml2::XMLPrinter::PushUnknown
PUBLIC	?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z ; tinyxml2::XMLPrinter::VisitEnter
PUBLIC	?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z ; tinyxml2::XMLPrinter::VisitExit
PUBLIC	?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z ; tinyxml2::XMLPrinter::VisitEnter
PUBLIC	?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@@Z ; tinyxml2::XMLPrinter::VisitExit
PUBLIC	?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLText@2@@Z ; tinyxml2::XMLPrinter::Visit
PUBLIC	?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLComment@2@@Z ; tinyxml2::XMLPrinter::Visit
PUBLIC	?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z ; tinyxml2::XMLPrinter::Visit
PUBLIC	?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLUnknown@2@@Z ; tinyxml2::XMLPrinter::Visit
PUBLIC	?CompactMode@XMLPrinter@tinyxml2@@MAE_NABVXMLElement@2@@Z ; tinyxml2::XMLPrinter::CompactMode
PUBLIC	?PrintSpace@XMLPrinter@tinyxml2@@MAEXH@Z	; tinyxml2::XMLPrinter::PrintSpace
PUBLIC	?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ		; tinyxml2::XMLPrinter::Print
PUBLIC	?SealElementIfJustOpened@XMLPrinter@tinyxml2@@IAEXXZ ; tinyxml2::XMLPrinter::SealElementIfJustOpened
PUBLIC	??0?$DynArray@PBD$09@tinyxml2@@QAE@XZ		; tinyxml2::DynArray<char const *,10>::DynArray<char const *,10>
PUBLIC	??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ		; tinyxml2::DynArray<char const *,10>::~DynArray<char const *,10>
PUBLIC	?Push@?$DynArray@PBD$09@tinyxml2@@QAEXPBD@Z	; tinyxml2::DynArray<char const *,10>::Push
PUBLIC	?Pop@?$DynArray@PBD$09@tinyxml2@@QAEPBDXZ	; tinyxml2::DynArray<char const *,10>::Pop
PUBLIC	?EnsureCapacity@?$DynArray@PBD$09@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<char const *,10>::EnsureCapacity
PUBLIC	?PrintString@XMLPrinter@tinyxml2@@AAEXPBD_N@Z	; tinyxml2::XMLPrinter::PrintString
PUBLIC	??0?$DynArray@D$0BE@@tinyxml2@@QAE@XZ		; tinyxml2::DynArray<char,20>::DynArray<char,20>
PUBLIC	??1?$DynArray@D$0BE@@tinyxml2@@QAE@XZ		; tinyxml2::DynArray<char,20>::~DynArray<char,20>
PUBLIC	?Push@?$DynArray@D$0BE@@tinyxml2@@QAEXD@Z	; tinyxml2::DynArray<char,20>::Push
PUBLIC	?PushArr@?$DynArray@D$0BE@@tinyxml2@@QAEPADH@Z	; tinyxml2::DynArray<char,20>::PushArr
PUBLIC	??A?$DynArray@D$0BE@@tinyxml2@@QAEAADH@Z	; tinyxml2::DynArray<char,20>::operator[]
PUBLIC	?Size@?$DynArray@D$0BE@@tinyxml2@@QBEHXZ	; tinyxml2::DynArray<char,20>::Size
PUBLIC	?EnsureCapacity@?$DynArray@D$0BE@@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<char,20>::EnsureCapacity
PUBLIC	?__autoclassinit2@XMLPrinter@tinyxml2@@QAEXI@Z	; tinyxml2::XMLPrinter::__autoclassinit2
PUBLIC	??_GXMLPrinter@tinyxml2@@UAEPAXI@Z		; tinyxml2::XMLPrinter::`scalar deleting destructor'
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?Fits@?$LongFitsIntoSizeTMinusOne@$00@tinyxml2@@SA_NK@Z ; tinyxml2::LongFitsIntoSizeTMinusOne<1>::Fits
PUBLIC	??_7MemPool@tinyxml2@@6B@			; tinyxml2::MemPool::`vftable'
PUBLIC	??_7XMLVisitor@tinyxml2@@6B@			; tinyxml2::XMLVisitor::`vftable'
PUBLIC	??_7XMLNode@tinyxml2@@6B@			; tinyxml2::XMLNode::`vftable'
PUBLIC	??_7XMLText@tinyxml2@@6B@			; tinyxml2::XMLText::`vftable'
PUBLIC	??_7XMLComment@tinyxml2@@6B@			; tinyxml2::XMLComment::`vftable'
PUBLIC	??_7XMLDeclaration@tinyxml2@@6B@		; tinyxml2::XMLDeclaration::`vftable'
PUBLIC	??_7XMLUnknown@tinyxml2@@6B@			; tinyxml2::XMLUnknown::`vftable'
PUBLIC	??_7XMLAttribute@tinyxml2@@6B@			; tinyxml2::XMLAttribute::`vftable'
PUBLIC	??_7XMLElement@tinyxml2@@6B@			; tinyxml2::XMLElement::`vftable'
PUBLIC	??_7?$MemPoolT@$0DE@@tinyxml2@@6B@		; tinyxml2::MemPoolT<52>::`vftable'
PUBLIC	??_7?$MemPoolT@$0CE@@tinyxml2@@6B@		; tinyxml2::MemPoolT<36>::`vftable'
PUBLIC	??_7?$MemPoolT@$0DA@@tinyxml2@@6B@		; tinyxml2::MemPoolT<48>::`vftable'
PUBLIC	??_7?$MemPoolT@$0CM@@tinyxml2@@6B@		; tinyxml2::MemPoolT<44>::`vftable'
PUBLIC	??_7XMLDocument@tinyxml2@@6B@			; tinyxml2::XMLDocument::`vftable'
PUBLIC	??_7XMLPrinter@tinyxml2@@6B@			; tinyxml2::XMLPrinter::`vftable'
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	??_C@_02GMHACPFF@?$CFu?$AA@			; `string'
PUBLIC	??_C@_04HANFDJND@?$CF?48g?$AA@			; `string'
PUBLIC	??_C@_05CEKCMKAN@?$CF?417g?$AA@			; `string'
PUBLIC	??_C@_04LOAJBDKD@true?$AA@			; `string'
PUBLIC	??_C@_05LAPONLG@false?$AA@			; `string'
PUBLIC	??_C@_02NJPGOMH@?$CFf?$AA@			; `string'
PUBLIC	??_C@_03DLDNIBIK@?$CFlf?$AA@			; `string'
PUBLIC	??_C@_03MCHNFBAC@?$FN?$FN?$DO?$AA@		; `string'
PUBLIC	??_C@_03PNLDJJMO@?9?9?$DO?$AA@			; `string'
PUBLIC	??_C@_02GOEMJPDN@?$DP?$DO?$AA@			; `string'
PUBLIC	??_C@_01PPODPGHN@?$DO?$AA@			; `string'
PUBLIC	??_C@_0CD@MCGGMGEP@xml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCUTF?9@ ; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0CO@CKABJOJH@XMLDocument?5error?5id?$DN?$CFd?5?8?$CFs?8?5str@ ; `string'
PUBLIC	??_C@_04PFOHOKJK@?5?5?5?5?$AA@			; `string'
PUBLIC	??_C@_04EBNJJJJI@?$CF?4?$CKs?$AA@		; `string'
PUBLIC	??_C@_04IKLFLEHL@?$CG?$CFs?$DL?$AA@		; `string'
PUBLIC	??_C@_0BC@CIAMHNHO@xml?5version?$DN?$CC1?40?$CC?$AA@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_03FONCMJME@?$DM?$CFs?$AA@			; `string'
PUBLIC	??_C@_05LCDLMEIP@?5?$CFs?$DN?$CC?$AA@		; `string'
PUBLIC	??_C@_01BJJEKLCA@?$CC?$AA@			; `string'
PUBLIC	??_C@_02HCGKDMEN@?1?$DO?$AA@			; `string'
PUBLIC	??_C@_05POIKLDCH@?$DM?1?$CFs?$DO?$AA@		; `string'
PUBLIC	??_C@_0P@FBMMJGJN@?$DM?$CB?$FLCDATA?$FL?$CFs?$FN?$FN?$DO?$AA@ ; `string'
PUBLIC	??_C@_09PNDCPLLD@?$DM?$CB?9?9?$CFs?9?9?$DO?$AA@	; `string'
PUBLIC	??_C@_06OGCFEMAJ@?$DM?$DP?$CFs?$DP?$DO?$AA@	; `string'
PUBLIC	??_C@_05EBLKANEG@?$DM?$CB?$CFs?$DO?$AA@		; `string'
PUBLIC	??_R4XMLDocument@tinyxml2@@6B@			; tinyxml2::XMLDocument::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVXMLDocument@tinyxml2@@@8		; tinyxml2::XMLDocument `RTTI Type Descriptor'
PUBLIC	??_R3XMLDocument@tinyxml2@@8			; tinyxml2::XMLDocument::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XMLDocument@tinyxml2@@8			; tinyxml2::XMLDocument::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@XMLDocument@tinyxml2@@8		; tinyxml2::XMLDocument::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@XMLNode@tinyxml2@@8		; tinyxml2::XMLNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVXMLNode@tinyxml2@@@8			; tinyxml2::XMLNode `RTTI Type Descriptor'
PUBLIC	??_R3XMLNode@tinyxml2@@8			; tinyxml2::XMLNode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XMLNode@tinyxml2@@8			; tinyxml2::XMLNode::`RTTI Base Class Array'
PUBLIC	??_R4XMLElement@tinyxml2@@6B@			; tinyxml2::XMLElement::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVXMLElement@tinyxml2@@@8			; tinyxml2::XMLElement `RTTI Type Descriptor'
PUBLIC	??_R3XMLElement@tinyxml2@@8			; tinyxml2::XMLElement::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XMLElement@tinyxml2@@8			; tinyxml2::XMLElement::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@XMLElement@tinyxml2@@8		; tinyxml2::XMLElement::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4XMLAttribute@tinyxml2@@6B@			; tinyxml2::XMLAttribute::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVXMLAttribute@tinyxml2@@@8		; tinyxml2::XMLAttribute `RTTI Type Descriptor'
PUBLIC	??_R3XMLAttribute@tinyxml2@@8			; tinyxml2::XMLAttribute::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XMLAttribute@tinyxml2@@8			; tinyxml2::XMLAttribute::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@XMLAttribute@tinyxml2@@8		; tinyxml2::XMLAttribute::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4XMLComment@tinyxml2@@6B@			; tinyxml2::XMLComment::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVXMLComment@tinyxml2@@@8			; tinyxml2::XMLComment `RTTI Type Descriptor'
PUBLIC	??_R3XMLComment@tinyxml2@@8			; tinyxml2::XMLComment::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XMLComment@tinyxml2@@8			; tinyxml2::XMLComment::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@XMLComment@tinyxml2@@8		; tinyxml2::XMLComment::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4XMLText@tinyxml2@@6B@			; tinyxml2::XMLText::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVXMLText@tinyxml2@@@8			; tinyxml2::XMLText `RTTI Type Descriptor'
PUBLIC	??_R3XMLText@tinyxml2@@8			; tinyxml2::XMLText::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XMLText@tinyxml2@@8			; tinyxml2::XMLText::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@XMLText@tinyxml2@@8		; tinyxml2::XMLText::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4XMLDeclaration@tinyxml2@@6B@		; tinyxml2::XMLDeclaration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVXMLDeclaration@tinyxml2@@@8		; tinyxml2::XMLDeclaration `RTTI Type Descriptor'
PUBLIC	??_R3XMLDeclaration@tinyxml2@@8			; tinyxml2::XMLDeclaration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XMLDeclaration@tinyxml2@@8			; tinyxml2::XMLDeclaration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@XMLDeclaration@tinyxml2@@8	; tinyxml2::XMLDeclaration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4XMLUnknown@tinyxml2@@6B@			; tinyxml2::XMLUnknown::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVXMLUnknown@tinyxml2@@@8			; tinyxml2::XMLUnknown `RTTI Type Descriptor'
PUBLIC	??_R3XMLUnknown@tinyxml2@@8			; tinyxml2::XMLUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XMLUnknown@tinyxml2@@8			; tinyxml2::XMLUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@XMLUnknown@tinyxml2@@8		; tinyxml2::XMLUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4XMLPrinter@tinyxml2@@6B@			; tinyxml2::XMLPrinter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVXMLPrinter@tinyxml2@@@8			; tinyxml2::XMLPrinter `RTTI Type Descriptor'
PUBLIC	??_R3XMLPrinter@tinyxml2@@8			; tinyxml2::XMLPrinter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XMLPrinter@tinyxml2@@8			; tinyxml2::XMLPrinter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@XMLPrinter@tinyxml2@@8		; tinyxml2::XMLPrinter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@XMLVisitor@tinyxml2@@8		; tinyxml2::XMLVisitor::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVXMLVisitor@tinyxml2@@@8			; tinyxml2::XMLVisitor `RTTI Type Descriptor'
PUBLIC	??_R3XMLVisitor@tinyxml2@@8			; tinyxml2::XMLVisitor::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XMLVisitor@tinyxml2@@8			; tinyxml2::XMLVisitor::`RTTI Base Class Array'
PUBLIC	??_R4MemPool@tinyxml2@@6B@			; tinyxml2::MemPool::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMemPool@tinyxml2@@@8			; tinyxml2::MemPool `RTTI Type Descriptor'
PUBLIC	??_R3MemPool@tinyxml2@@8			; tinyxml2::MemPool::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MemPool@tinyxml2@@8			; tinyxml2::MemPool::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MemPool@tinyxml2@@8		; tinyxml2::MemPool::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4XMLVisitor@tinyxml2@@6B@			; tinyxml2::XMLVisitor::`RTTI Complete Object Locator'
PUBLIC	??_R4XMLNode@tinyxml2@@6B@			; tinyxml2::XMLNode::`RTTI Complete Object Locator'
PUBLIC	??_R4?$MemPoolT@$0DE@@tinyxml2@@6B@		; tinyxml2::MemPoolT<52>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$MemPoolT@$0DE@@tinyxml2@@@8		; tinyxml2::MemPoolT<52> `RTTI Type Descriptor'
PUBLIC	??_R3?$MemPoolT@$0DE@@tinyxml2@@8		; tinyxml2::MemPoolT<52>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$MemPoolT@$0DE@@tinyxml2@@8		; tinyxml2::MemPoolT<52>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$MemPoolT@$0DE@@tinyxml2@@8	; tinyxml2::MemPoolT<52>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$MemPoolT@$0CE@@tinyxml2@@6B@		; tinyxml2::MemPoolT<36>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$MemPoolT@$0CE@@tinyxml2@@@8		; tinyxml2::MemPoolT<36> `RTTI Type Descriptor'
PUBLIC	??_R3?$MemPoolT@$0CE@@tinyxml2@@8		; tinyxml2::MemPoolT<36>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$MemPoolT@$0CE@@tinyxml2@@8		; tinyxml2::MemPoolT<36>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$MemPoolT@$0CE@@tinyxml2@@8	; tinyxml2::MemPoolT<36>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$MemPoolT@$0DA@@tinyxml2@@6B@		; tinyxml2::MemPoolT<48>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$MemPoolT@$0DA@@tinyxml2@@@8		; tinyxml2::MemPoolT<48> `RTTI Type Descriptor'
PUBLIC	??_R3?$MemPoolT@$0DA@@tinyxml2@@8		; tinyxml2::MemPoolT<48>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$MemPoolT@$0DA@@tinyxml2@@8		; tinyxml2::MemPoolT<48>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$MemPoolT@$0DA@@tinyxml2@@8	; tinyxml2::MemPoolT<48>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$MemPoolT@$0CM@@tinyxml2@@6B@		; tinyxml2::MemPoolT<44>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$MemPoolT@$0CM@@tinyxml2@@@8		; tinyxml2::MemPoolT<44> `RTTI Type Descriptor'
PUBLIC	??_R3?$MemPoolT@$0CM@@tinyxml2@@8		; tinyxml2::MemPoolT<44>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$MemPoolT@$0CM@@tinyxml2@@8		; tinyxml2::MemPoolT<44>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$MemPoolT@$0CM@@tinyxml2@@8	; tinyxml2::MemPoolT<44>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__isalpha:PROC
EXTRN	__imp__isdigit:PROC
EXTRN	__imp__isspace:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__ferror:PROC
EXTRN	__imp__fgetc:PROC
EXTRN	__imp__fopen_s:PROC
EXTRN	__imp__fread:PROC
EXTRN	__imp__fseek:PROC
EXTRN	__imp__ftell:PROC
EXTRN	__imp__printf:PROC
EXTRN	__imp__sscanf_s:PROC
EXTRN	__imp__vfprintf:PROC
EXTRN	__imp__vsnprintf_s:PROC
EXTRN	__imp___vscprintf:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	??_EMemPool@tinyxml2@@UAEPAXI@Z:PROC		; tinyxml2::MemPool::`vector deleting destructor'
EXTRN	??_EXMLVisitor@tinyxml2@@UAEPAXI@Z:PROC		; tinyxml2::XMLVisitor::`vector deleting destructor'
EXTRN	??_EXMLNode@tinyxml2@@MAEPAXI@Z:PROC		; tinyxml2::XMLNode::`vector deleting destructor'
EXTRN	??_EXMLText@tinyxml2@@MAEPAXI@Z:PROC		; tinyxml2::XMLText::`vector deleting destructor'
EXTRN	??_EXMLComment@tinyxml2@@MAEPAXI@Z:PROC		; tinyxml2::XMLComment::`vector deleting destructor'
EXTRN	??_EXMLDeclaration@tinyxml2@@MAEPAXI@Z:PROC	; tinyxml2::XMLDeclaration::`vector deleting destructor'
EXTRN	??_EXMLUnknown@tinyxml2@@MAEPAXI@Z:PROC		; tinyxml2::XMLUnknown::`vector deleting destructor'
EXTRN	??_EXMLAttribute@tinyxml2@@EAEPAXI@Z:PROC	; tinyxml2::XMLAttribute::`vector deleting destructor'
EXTRN	??_EXMLElement@tinyxml2@@EAEPAXI@Z:PROC		; tinyxml2::XMLElement::`vector deleting destructor'
EXTRN	??_E?$MemPoolT@$0DE@@tinyxml2@@UAEPAXI@Z:PROC	; tinyxml2::MemPoolT<52>::`vector deleting destructor'
EXTRN	??_E?$MemPoolT@$0CE@@tinyxml2@@UAEPAXI@Z:PROC	; tinyxml2::MemPoolT<36>::`vector deleting destructor'
EXTRN	??_E?$MemPoolT@$0DA@@tinyxml2@@UAEPAXI@Z:PROC	; tinyxml2::MemPoolT<48>::`vector deleting destructor'
EXTRN	??_E?$MemPoolT@$0CM@@tinyxml2@@UAEPAXI@Z:PROC	; tinyxml2::MemPoolT<44>::`vector deleting destructor'
EXTRN	??_EXMLDocument@tinyxml2@@UAEPAXI@Z:PROC	; tinyxml2::XMLDocument::`vector deleting destructor'
EXTRN	??_EXMLPrinter@tinyxml2@@UAEPAXI@Z:PROC		; tinyxml2::XMLPrinter::`vector deleting destructor'
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@?$MemPoolT@$0CM@@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$MemPoolT@$0CM@@tinyxml2@@8 DD FLAT:??_R0?AV?$MemPoolT@$0CM@@tinyxml2@@@8 ; tinyxml2::MemPoolT<44>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$MemPoolT@$0CM@@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2?$MemPoolT@$0CM@@tinyxml2@@8
rdata$r	SEGMENT
??_R2?$MemPoolT@$0CM@@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@?$MemPoolT@$0CM@@tinyxml2@@8 ; tinyxml2::MemPoolT<44>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@MemPool@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R3?$MemPoolT@$0CM@@tinyxml2@@8
rdata$r	SEGMENT
??_R3?$MemPoolT@$0CM@@tinyxml2@@8 DD 00H		; tinyxml2::MemPoolT<44>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$MemPoolT@$0CM@@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$MemPoolT@$0CM@@tinyxml2@@@8
data$r	SEGMENT
??_R0?AV?$MemPoolT@$0CM@@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::MemPoolT<44> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$MemPoolT@$0CM@@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$MemPoolT@$0CM@@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4?$MemPoolT@$0CM@@tinyxml2@@6B@ DD 00H		; tinyxml2::MemPoolT<44>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$MemPoolT@$0CM@@tinyxml2@@@8
	DD	FLAT:??_R3?$MemPoolT@$0CM@@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$MemPoolT@$0DA@@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$MemPoolT@$0DA@@tinyxml2@@8 DD FLAT:??_R0?AV?$MemPoolT@$0DA@@tinyxml2@@@8 ; tinyxml2::MemPoolT<48>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$MemPoolT@$0DA@@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2?$MemPoolT@$0DA@@tinyxml2@@8
rdata$r	SEGMENT
??_R2?$MemPoolT@$0DA@@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@?$MemPoolT@$0DA@@tinyxml2@@8 ; tinyxml2::MemPoolT<48>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@MemPool@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R3?$MemPoolT@$0DA@@tinyxml2@@8
rdata$r	SEGMENT
??_R3?$MemPoolT@$0DA@@tinyxml2@@8 DD 00H		; tinyxml2::MemPoolT<48>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$MemPoolT@$0DA@@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$MemPoolT@$0DA@@tinyxml2@@@8
data$r	SEGMENT
??_R0?AV?$MemPoolT@$0DA@@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::MemPoolT<48> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$MemPoolT@$0DA@@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$MemPoolT@$0DA@@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4?$MemPoolT@$0DA@@tinyxml2@@6B@ DD 00H		; tinyxml2::MemPoolT<48>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$MemPoolT@$0DA@@tinyxml2@@@8
	DD	FLAT:??_R3?$MemPoolT@$0DA@@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$MemPoolT@$0CE@@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$MemPoolT@$0CE@@tinyxml2@@8 DD FLAT:??_R0?AV?$MemPoolT@$0CE@@tinyxml2@@@8 ; tinyxml2::MemPoolT<36>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$MemPoolT@$0CE@@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2?$MemPoolT@$0CE@@tinyxml2@@8
rdata$r	SEGMENT
??_R2?$MemPoolT@$0CE@@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@?$MemPoolT@$0CE@@tinyxml2@@8 ; tinyxml2::MemPoolT<36>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@MemPool@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R3?$MemPoolT@$0CE@@tinyxml2@@8
rdata$r	SEGMENT
??_R3?$MemPoolT@$0CE@@tinyxml2@@8 DD 00H		; tinyxml2::MemPoolT<36>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$MemPoolT@$0CE@@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$MemPoolT@$0CE@@tinyxml2@@@8
data$r	SEGMENT
??_R0?AV?$MemPoolT@$0CE@@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::MemPoolT<36> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$MemPoolT@$0CE@@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$MemPoolT@$0CE@@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4?$MemPoolT@$0CE@@tinyxml2@@6B@ DD 00H		; tinyxml2::MemPoolT<36>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$MemPoolT@$0CE@@tinyxml2@@@8
	DD	FLAT:??_R3?$MemPoolT@$0CE@@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$MemPoolT@$0DE@@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$MemPoolT@$0DE@@tinyxml2@@8 DD FLAT:??_R0?AV?$MemPoolT@$0DE@@tinyxml2@@@8 ; tinyxml2::MemPoolT<52>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$MemPoolT@$0DE@@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2?$MemPoolT@$0DE@@tinyxml2@@8
rdata$r	SEGMENT
??_R2?$MemPoolT@$0DE@@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@?$MemPoolT@$0DE@@tinyxml2@@8 ; tinyxml2::MemPoolT<52>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@MemPool@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R3?$MemPoolT@$0DE@@tinyxml2@@8
rdata$r	SEGMENT
??_R3?$MemPoolT@$0DE@@tinyxml2@@8 DD 00H		; tinyxml2::MemPoolT<52>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$MemPoolT@$0DE@@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$MemPoolT@$0DE@@tinyxml2@@@8
data$r	SEGMENT
??_R0?AV?$MemPoolT@$0DE@@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::MemPoolT<52> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$MemPoolT@$0DE@@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$MemPoolT@$0DE@@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4?$MemPoolT@$0DE@@tinyxml2@@6B@ DD 00H		; tinyxml2::MemPoolT<52>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$MemPoolT@$0DE@@tinyxml2@@@8
	DD	FLAT:??_R3?$MemPoolT@$0DE@@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R4XMLNode@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4XMLNode@tinyxml2@@6B@ DD 00H			; tinyxml2::XMLNode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXMLNode@tinyxml2@@@8
	DD	FLAT:??_R3XMLNode@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R4XMLVisitor@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4XMLVisitor@tinyxml2@@6B@ DD 00H			; tinyxml2::XMLVisitor::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXMLVisitor@tinyxml2@@@8
	DD	FLAT:??_R3XMLVisitor@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MemPool@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MemPool@tinyxml2@@8 DD FLAT:??_R0?AVMemPool@tinyxml2@@@8 ; tinyxml2::MemPool::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MemPool@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2MemPool@tinyxml2@@8
rdata$r	SEGMENT
??_R2MemPool@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@MemPool@tinyxml2@@8 ; tinyxml2::MemPool::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3MemPool@tinyxml2@@8
rdata$r	SEGMENT
??_R3MemPool@tinyxml2@@8 DD 00H				; tinyxml2::MemPool::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2MemPool@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMemPool@tinyxml2@@@8
data$r	SEGMENT
??_R0?AVMemPool@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@	; tinyxml2::MemPool `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMemPool@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4MemPool@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4MemPool@tinyxml2@@6B@ DD 00H			; tinyxml2::MemPool::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMemPool@tinyxml2@@@8
	DD	FLAT:??_R3MemPool@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2XMLVisitor@tinyxml2@@8
rdata$r	SEGMENT
??_R2XMLVisitor@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@XMLVisitor@tinyxml2@@8 ; tinyxml2::XMLVisitor::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3XMLVisitor@tinyxml2@@8
rdata$r	SEGMENT
??_R3XMLVisitor@tinyxml2@@8 DD 00H			; tinyxml2::XMLVisitor::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2XMLVisitor@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXMLVisitor@tinyxml2@@@8
data$r	SEGMENT
??_R0?AVXMLVisitor@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::XMLVisitor `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXMLVisitor@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XMLVisitor@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XMLVisitor@tinyxml2@@8 DD FLAT:??_R0?AVXMLVisitor@tinyxml2@@@8 ; tinyxml2::XMLVisitor::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XMLVisitor@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XMLPrinter@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XMLPrinter@tinyxml2@@8 DD FLAT:??_R0?AVXMLPrinter@tinyxml2@@@8 ; tinyxml2::XMLPrinter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XMLPrinter@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2XMLPrinter@tinyxml2@@8
rdata$r	SEGMENT
??_R2XMLPrinter@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@XMLPrinter@tinyxml2@@8 ; tinyxml2::XMLPrinter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@XMLVisitor@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R3XMLPrinter@tinyxml2@@8
rdata$r	SEGMENT
??_R3XMLPrinter@tinyxml2@@8 DD 00H			; tinyxml2::XMLPrinter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2XMLPrinter@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXMLPrinter@tinyxml2@@@8
data$r	SEGMENT
??_R0?AVXMLPrinter@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::XMLPrinter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXMLPrinter@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4XMLPrinter@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4XMLPrinter@tinyxml2@@6B@ DD 00H			; tinyxml2::XMLPrinter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXMLPrinter@tinyxml2@@@8
	DD	FLAT:??_R3XMLPrinter@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XMLUnknown@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XMLUnknown@tinyxml2@@8 DD FLAT:??_R0?AVXMLUnknown@tinyxml2@@@8 ; tinyxml2::XMLUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XMLUnknown@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2XMLUnknown@tinyxml2@@8
rdata$r	SEGMENT
??_R2XMLUnknown@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@XMLUnknown@tinyxml2@@8 ; tinyxml2::XMLUnknown::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@XMLNode@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R3XMLUnknown@tinyxml2@@8
rdata$r	SEGMENT
??_R3XMLUnknown@tinyxml2@@8 DD 00H			; tinyxml2::XMLUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2XMLUnknown@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXMLUnknown@tinyxml2@@@8
data$r	SEGMENT
??_R0?AVXMLUnknown@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::XMLUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXMLUnknown@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4XMLUnknown@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4XMLUnknown@tinyxml2@@6B@ DD 00H			; tinyxml2::XMLUnknown::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXMLUnknown@tinyxml2@@@8
	DD	FLAT:??_R3XMLUnknown@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XMLDeclaration@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XMLDeclaration@tinyxml2@@8 DD FLAT:??_R0?AVXMLDeclaration@tinyxml2@@@8 ; tinyxml2::XMLDeclaration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XMLDeclaration@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2XMLDeclaration@tinyxml2@@8
rdata$r	SEGMENT
??_R2XMLDeclaration@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@XMLDeclaration@tinyxml2@@8 ; tinyxml2::XMLDeclaration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@XMLNode@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R3XMLDeclaration@tinyxml2@@8
rdata$r	SEGMENT
??_R3XMLDeclaration@tinyxml2@@8 DD 00H			; tinyxml2::XMLDeclaration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2XMLDeclaration@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXMLDeclaration@tinyxml2@@@8
data$r	SEGMENT
??_R0?AVXMLDeclaration@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::XMLDeclaration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXMLDeclaration@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4XMLDeclaration@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4XMLDeclaration@tinyxml2@@6B@ DD 00H		; tinyxml2::XMLDeclaration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXMLDeclaration@tinyxml2@@@8
	DD	FLAT:??_R3XMLDeclaration@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XMLText@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XMLText@tinyxml2@@8 DD FLAT:??_R0?AVXMLText@tinyxml2@@@8 ; tinyxml2::XMLText::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XMLText@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2XMLText@tinyxml2@@8
rdata$r	SEGMENT
??_R2XMLText@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@XMLText@tinyxml2@@8 ; tinyxml2::XMLText::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@XMLNode@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R3XMLText@tinyxml2@@8
rdata$r	SEGMENT
??_R3XMLText@tinyxml2@@8 DD 00H				; tinyxml2::XMLText::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2XMLText@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXMLText@tinyxml2@@@8
data$r	SEGMENT
??_R0?AVXMLText@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@	; tinyxml2::XMLText `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXMLText@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4XMLText@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4XMLText@tinyxml2@@6B@ DD 00H			; tinyxml2::XMLText::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXMLText@tinyxml2@@@8
	DD	FLAT:??_R3XMLText@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XMLComment@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XMLComment@tinyxml2@@8 DD FLAT:??_R0?AVXMLComment@tinyxml2@@@8 ; tinyxml2::XMLComment::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XMLComment@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2XMLComment@tinyxml2@@8
rdata$r	SEGMENT
??_R2XMLComment@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@XMLComment@tinyxml2@@8 ; tinyxml2::XMLComment::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@XMLNode@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R3XMLComment@tinyxml2@@8
rdata$r	SEGMENT
??_R3XMLComment@tinyxml2@@8 DD 00H			; tinyxml2::XMLComment::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2XMLComment@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXMLComment@tinyxml2@@@8
data$r	SEGMENT
??_R0?AVXMLComment@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::XMLComment `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXMLComment@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4XMLComment@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4XMLComment@tinyxml2@@6B@ DD 00H			; tinyxml2::XMLComment::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXMLComment@tinyxml2@@@8
	DD	FLAT:??_R3XMLComment@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XMLAttribute@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XMLAttribute@tinyxml2@@8 DD FLAT:??_R0?AVXMLAttribute@tinyxml2@@@8 ; tinyxml2::XMLAttribute::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XMLAttribute@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2XMLAttribute@tinyxml2@@8
rdata$r	SEGMENT
??_R2XMLAttribute@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@XMLAttribute@tinyxml2@@8 ; tinyxml2::XMLAttribute::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3XMLAttribute@tinyxml2@@8
rdata$r	SEGMENT
??_R3XMLAttribute@tinyxml2@@8 DD 00H			; tinyxml2::XMLAttribute::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2XMLAttribute@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXMLAttribute@tinyxml2@@@8
data$r	SEGMENT
??_R0?AVXMLAttribute@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::XMLAttribute `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXMLAttribute@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4XMLAttribute@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4XMLAttribute@tinyxml2@@6B@ DD 00H			; tinyxml2::XMLAttribute::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXMLAttribute@tinyxml2@@@8
	DD	FLAT:??_R3XMLAttribute@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XMLElement@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XMLElement@tinyxml2@@8 DD FLAT:??_R0?AVXMLElement@tinyxml2@@@8 ; tinyxml2::XMLElement::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XMLElement@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2XMLElement@tinyxml2@@8
rdata$r	SEGMENT
??_R2XMLElement@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@XMLElement@tinyxml2@@8 ; tinyxml2::XMLElement::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@XMLNode@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R3XMLElement@tinyxml2@@8
rdata$r	SEGMENT
??_R3XMLElement@tinyxml2@@8 DD 00H			; tinyxml2::XMLElement::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2XMLElement@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXMLElement@tinyxml2@@@8
data$r	SEGMENT
??_R0?AVXMLElement@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::XMLElement `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXMLElement@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4XMLElement@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4XMLElement@tinyxml2@@6B@ DD 00H			; tinyxml2::XMLElement::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXMLElement@tinyxml2@@@8
	DD	FLAT:??_R3XMLElement@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2XMLNode@tinyxml2@@8
rdata$r	SEGMENT
??_R2XMLNode@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@XMLNode@tinyxml2@@8 ; tinyxml2::XMLNode::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3XMLNode@tinyxml2@@8
rdata$r	SEGMENT
??_R3XMLNode@tinyxml2@@8 DD 00H				; tinyxml2::XMLNode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2XMLNode@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXMLNode@tinyxml2@@@8
data$r	SEGMENT
??_R0?AVXMLNode@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@	; tinyxml2::XMLNode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXMLNode@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XMLNode@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XMLNode@tinyxml2@@8 DD FLAT:??_R0?AVXMLNode@tinyxml2@@@8 ; tinyxml2::XMLNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XMLNode@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XMLDocument@tinyxml2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XMLDocument@tinyxml2@@8 DD FLAT:??_R0?AVXMLDocument@tinyxml2@@@8 ; tinyxml2::XMLDocument::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3XMLDocument@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R2XMLDocument@tinyxml2@@8
rdata$r	SEGMENT
??_R2XMLDocument@tinyxml2@@8 DD FLAT:??_R1A@?0A@EA@XMLDocument@tinyxml2@@8 ; tinyxml2::XMLDocument::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@XMLNode@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R3XMLDocument@tinyxml2@@8
rdata$r	SEGMENT
??_R3XMLDocument@tinyxml2@@8 DD 00H			; tinyxml2::XMLDocument::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2XMLDocument@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXMLDocument@tinyxml2@@@8
data$r	SEGMENT
??_R0?AVXMLDocument@tinyxml2@@@8 DD FLAT:??_7type_info@@6B@ ; tinyxml2::XMLDocument `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVXMLDocument@tinyxml2@@', 00H
data$r	ENDS
;	COMDAT ??_R4XMLDocument@tinyxml2@@6B@
rdata$r	SEGMENT
??_R4XMLDocument@tinyxml2@@6B@ DD 00H			; tinyxml2::XMLDocument::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVXMLDocument@tinyxml2@@@8
	DD	FLAT:??_R3XMLDocument@tinyxml2@@8
rdata$r	ENDS
;	COMDAT ??_C@_05EBLKANEG@?$DM?$CB?$CFs?$DO?$AA@
CONST	SEGMENT
??_C@_05EBLKANEG@?$DM?$CB?$CFs?$DO?$AA@ DB '<!%s>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06OGCFEMAJ@?$DM?$DP?$CFs?$DP?$DO?$AA@
CONST	SEGMENT
??_C@_06OGCFEMAJ@?$DM?$DP?$CFs?$DP?$DO?$AA@ DB '<?%s?>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PNDCPLLD@?$DM?$CB?9?9?$CFs?9?9?$DO?$AA@
CONST	SEGMENT
??_C@_09PNDCPLLD@?$DM?$CB?9?9?$CFs?9?9?$DO?$AA@ DB '<!--%s-->', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FBMMJGJN@?$DM?$CB?$FLCDATA?$FL?$CFs?$FN?$FN?$DO?$AA@
CONST	SEGMENT
??_C@_0P@FBMMJGJN@?$DM?$CB?$FLCDATA?$FL?$CFs?$FN?$FN?$DO?$AA@ DB '<![CDAT'
	DB	'A[%s]]>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05POIKLDCH@?$DM?1?$CFs?$DO?$AA@
CONST	SEGMENT
??_C@_05POIKLDCH@?$DM?1?$CFs?$DO?$AA@ DB '</%s>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02HCGKDMEN@?1?$DO?$AA@
CONST	SEGMENT
??_C@_02HCGKDMEN@?1?$DO?$AA@ DB '/>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01BJJEKLCA@?$CC?$AA@
CONST	SEGMENT
??_C@_01BJJEKLCA@?$CC?$AA@ DB '"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LCDLMEIP@?5?$CFs?$DN?$CC?$AA@
CONST	SEGMENT
??_C@_05LCDLMEIP@?5?$CFs?$DN?$CC?$AA@ DB ' %s="', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03FONCMJME@?$DM?$CFs?$AA@
CONST	SEGMENT
??_C@_03FONCMJME@?$DM?$CFs?$AA@ DB '<%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CIAMHNHO@xml?5version?$DN?$CC1?40?$CC?$AA@
CONST	SEGMENT
??_C@_0BC@CIAMHNHO@xml?5version?$DN?$CC1?40?$CC?$AA@ DB 'xml version="1.0'
	DB	'"', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04IKLFLEHL@?$CG?$CFs?$DL?$AA@
CONST	SEGMENT
??_C@_04IKLFLEHL@?$CG?$CFs?$DL?$AA@ DB '&%s;', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04EBNJJJJI@?$CF?4?$CKs?$AA@
CONST	SEGMENT
??_C@_04EBNJJJJI@?$CF?4?$CKs?$AA@ DB '%.*s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_04PFOHOKJK@?5?5?5?5?$AA@ DB '    ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@CKABJOJH@XMLDocument?5error?5id?$DN?$CFd?5?8?$CFs?8?5str@
CONST	SEGMENT
??_C@_0CO@CKABJOJH@XMLDocument?5error?5id?$DN?$CFd?5?8?$CFs?8?5str@ DB 'X'
	DB	'MLDocument error id=%d ''%s'' str1=%s str2=%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MCGGMGEP@xml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCUTF?9@
CONST	SEGMENT
??_C@_0CD@MCGGMGEP@xml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCUTF?9@ DB 'x'
	DB	'ml version="1.0" encoding="UTF-8"', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01PPODPGHN@?$DO?$AA@
CONST	SEGMENT
??_C@_01PPODPGHN@?$DO?$AA@ DB '>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GOEMJPDN@?$DP?$DO?$AA@
CONST	SEGMENT
??_C@_02GOEMJPDN@?$DP?$DO?$AA@ DB '?>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03PNLDJJMO@?9?9?$DO?$AA@
CONST	SEGMENT
??_C@_03PNLDJJMO@?9?9?$DO?$AA@ DB '-->', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MCHNFBAC@?$FN?$FN?$DO?$AA@
CONST	SEGMENT
??_C@_03MCHNFBAC@?$FN?$FN?$DO?$AA@ DB ']]>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03DLDNIBIK@?$CFlf?$AA@
CONST	SEGMENT
??_C@_03DLDNIBIK@?$CFlf?$AA@ DB '%lf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02NJPGOMH@?$CFf?$AA@
CONST	SEGMENT
??_C@_02NJPGOMH@?$CFf?$AA@ DB '%f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT
??_C@_05LAPONLG@false?$AA@ DB 'false', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true?$AA@
CONST	SEGMENT
??_C@_04LOAJBDKD@true?$AA@ DB 'true', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CEKCMKAN@?$CF?417g?$AA@
CONST	SEGMENT
??_C@_05CEKCMKAN@?$CF?417g?$AA@ DB '%.17g', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HANFDJND@?$CF?48g?$AA@
CONST	SEGMENT
??_C@_04HANFDJND@?$CF?48g?$AA@ DB '%.8g', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMHACPFF@?$CFu?$AA@
CONST	SEGMENT
??_C@_02GMHACPFF@?$CFu?$AA@ DB '%u', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7XMLPrinter@tinyxml2@@6B@
CONST	SEGMENT
??_7XMLPrinter@tinyxml2@@6B@ DD FLAT:??_R4XMLPrinter@tinyxml2@@6B@ ; tinyxml2::XMLPrinter::`vftable'
	DD	FLAT:??_EXMLPrinter@tinyxml2@@UAEPAXI@Z
	DD	FLAT:?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z
	DD	FLAT:?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z
	DD	FLAT:?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@@Z
	DD	FLAT:?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z
	DD	FLAT:?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLUnknown@2@@Z
	DD	FLAT:?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLComment@2@@Z
	DD	FLAT:?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLText@2@@Z
	DD	FLAT:?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z
	DD	FLAT:?CloseElement@XMLPrinter@tinyxml2@@UAEX_N@Z
	DD	FLAT:?CompactMode@XMLPrinter@tinyxml2@@MAE_NABVXMLElement@2@@Z
	DD	FLAT:?PrintSpace@XMLPrinter@tinyxml2@@MAEXH@Z
CONST	ENDS
;	COMDAT ??_7XMLDocument@tinyxml2@@6B@
CONST	SEGMENT
??_7XMLDocument@tinyxml2@@6B@ DD FLAT:??_R4XMLDocument@tinyxml2@@6B@ ; tinyxml2::XMLDocument::`vftable'
	DD	FLAT:?ToElement@XMLNode@tinyxml2@@UBEPBVXMLElement@2@XZ
	DD	FLAT:?ToElement@XMLNode@tinyxml2@@UAEPAVXMLElement@2@XZ
	DD	FLAT:?ToText@XMLNode@tinyxml2@@UBEPBVXMLText@2@XZ
	DD	FLAT:?ToText@XMLNode@tinyxml2@@UAEPAVXMLText@2@XZ
	DD	FLAT:?ToComment@XMLNode@tinyxml2@@UBEPBVXMLComment@2@XZ
	DD	FLAT:?ToComment@XMLNode@tinyxml2@@UAEPAVXMLComment@2@XZ
	DD	FLAT:?ToDocument@XMLDocument@tinyxml2@@UBEPBV12@XZ
	DD	FLAT:?ToDocument@XMLDocument@tinyxml2@@UAEPAV12@XZ
	DD	FLAT:?ToDeclaration@XMLNode@tinyxml2@@UBEPBVXMLDeclaration@2@XZ
	DD	FLAT:?ToDeclaration@XMLNode@tinyxml2@@UAEPAVXMLDeclaration@2@XZ
	DD	FLAT:?ToUnknown@XMLNode@tinyxml2@@UBEPBVXMLUnknown@2@XZ
	DD	FLAT:?ToUnknown@XMLNode@tinyxml2@@UAEPAVXMLUnknown@2@XZ
	DD	FLAT:?ShallowClone@XMLDocument@tinyxml2@@UBEPAVXMLNode@2@PAV12@@Z
	DD	FLAT:?ShallowEqual@XMLDocument@tinyxml2@@UBE_NPBVXMLNode@2@@Z
	DD	FLAT:?Accept@XMLDocument@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z
	DD	FLAT:??_EXMLDocument@tinyxml2@@UAEPAXI@Z
	DD	FLAT:?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
CONST	ENDS
;	COMDAT ??_7?$MemPoolT@$0CM@@tinyxml2@@6B@
CONST	SEGMENT
??_7?$MemPoolT@$0CM@@tinyxml2@@6B@ DD FLAT:??_R4?$MemPoolT@$0CM@@tinyxml2@@6B@ ; tinyxml2::MemPoolT<44>::`vftable'
	DD	FLAT:??_E?$MemPoolT@$0CM@@tinyxml2@@UAEPAXI@Z
	DD	FLAT:?ItemSize@?$MemPoolT@$0CM@@tinyxml2@@UBEHXZ
	DD	FLAT:?Alloc@?$MemPoolT@$0CM@@tinyxml2@@UAEPAXXZ
	DD	FLAT:?Free@?$MemPoolT@$0CM@@tinyxml2@@UAEXPAX@Z
	DD	FLAT:?SetTracked@?$MemPoolT@$0CM@@tinyxml2@@UAEXXZ
	DD	FLAT:?Clear@?$MemPoolT@$0CM@@tinyxml2@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7?$MemPoolT@$0DA@@tinyxml2@@6B@
CONST	SEGMENT
??_7?$MemPoolT@$0DA@@tinyxml2@@6B@ DD FLAT:??_R4?$MemPoolT@$0DA@@tinyxml2@@6B@ ; tinyxml2::MemPoolT<48>::`vftable'
	DD	FLAT:??_E?$MemPoolT@$0DA@@tinyxml2@@UAEPAXI@Z
	DD	FLAT:?ItemSize@?$MemPoolT@$0DA@@tinyxml2@@UBEHXZ
	DD	FLAT:?Alloc@?$MemPoolT@$0DA@@tinyxml2@@UAEPAXXZ
	DD	FLAT:?Free@?$MemPoolT@$0DA@@tinyxml2@@UAEXPAX@Z
	DD	FLAT:?SetTracked@?$MemPoolT@$0DA@@tinyxml2@@UAEXXZ
	DD	FLAT:?Clear@?$MemPoolT@$0DA@@tinyxml2@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7?$MemPoolT@$0CE@@tinyxml2@@6B@
CONST	SEGMENT
??_7?$MemPoolT@$0CE@@tinyxml2@@6B@ DD FLAT:??_R4?$MemPoolT@$0CE@@tinyxml2@@6B@ ; tinyxml2::MemPoolT<36>::`vftable'
	DD	FLAT:??_E?$MemPoolT@$0CE@@tinyxml2@@UAEPAXI@Z
	DD	FLAT:?ItemSize@?$MemPoolT@$0CE@@tinyxml2@@UBEHXZ
	DD	FLAT:?Alloc@?$MemPoolT@$0CE@@tinyxml2@@UAEPAXXZ
	DD	FLAT:?Free@?$MemPoolT@$0CE@@tinyxml2@@UAEXPAX@Z
	DD	FLAT:?SetTracked@?$MemPoolT@$0CE@@tinyxml2@@UAEXXZ
	DD	FLAT:?Clear@?$MemPoolT@$0CE@@tinyxml2@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7?$MemPoolT@$0DE@@tinyxml2@@6B@
CONST	SEGMENT
??_7?$MemPoolT@$0DE@@tinyxml2@@6B@ DD FLAT:??_R4?$MemPoolT@$0DE@@tinyxml2@@6B@ ; tinyxml2::MemPoolT<52>::`vftable'
	DD	FLAT:??_E?$MemPoolT@$0DE@@tinyxml2@@UAEPAXI@Z
	DD	FLAT:?ItemSize@?$MemPoolT@$0DE@@tinyxml2@@UBEHXZ
	DD	FLAT:?Alloc@?$MemPoolT@$0DE@@tinyxml2@@UAEPAXXZ
	DD	FLAT:?Free@?$MemPoolT@$0DE@@tinyxml2@@UAEXPAX@Z
	DD	FLAT:?SetTracked@?$MemPoolT@$0DE@@tinyxml2@@UAEXXZ
	DD	FLAT:?Clear@?$MemPoolT@$0DE@@tinyxml2@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7XMLElement@tinyxml2@@6B@
CONST	SEGMENT
??_7XMLElement@tinyxml2@@6B@ DD FLAT:??_R4XMLElement@tinyxml2@@6B@ ; tinyxml2::XMLElement::`vftable'
	DD	FLAT:?ToElement@XMLElement@tinyxml2@@UBEPBV12@XZ
	DD	FLAT:?ToElement@XMLElement@tinyxml2@@UAEPAV12@XZ
	DD	FLAT:?ToText@XMLNode@tinyxml2@@UBEPBVXMLText@2@XZ
	DD	FLAT:?ToText@XMLNode@tinyxml2@@UAEPAVXMLText@2@XZ
	DD	FLAT:?ToComment@XMLNode@tinyxml2@@UBEPBVXMLComment@2@XZ
	DD	FLAT:?ToComment@XMLNode@tinyxml2@@UAEPAVXMLComment@2@XZ
	DD	FLAT:?ToDocument@XMLNode@tinyxml2@@UBEPBVXMLDocument@2@XZ
	DD	FLAT:?ToDocument@XMLNode@tinyxml2@@UAEPAVXMLDocument@2@XZ
	DD	FLAT:?ToDeclaration@XMLNode@tinyxml2@@UBEPBVXMLDeclaration@2@XZ
	DD	FLAT:?ToDeclaration@XMLNode@tinyxml2@@UAEPAVXMLDeclaration@2@XZ
	DD	FLAT:?ToUnknown@XMLNode@tinyxml2@@UBEPBVXMLUnknown@2@XZ
	DD	FLAT:?ToUnknown@XMLNode@tinyxml2@@UAEPAVXMLUnknown@2@XZ
	DD	FLAT:?ShallowClone@XMLElement@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z
	DD	FLAT:?ShallowEqual@XMLElement@tinyxml2@@UBE_NPBVXMLNode@2@@Z
	DD	FLAT:?Accept@XMLElement@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z
	DD	FLAT:??_EXMLElement@tinyxml2@@EAEPAXI@Z
	DD	FLAT:?ParseDeep@XMLElement@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
CONST	ENDS
;	COMDAT ??_7XMLAttribute@tinyxml2@@6B@
CONST	SEGMENT
??_7XMLAttribute@tinyxml2@@6B@ DD FLAT:??_R4XMLAttribute@tinyxml2@@6B@ ; tinyxml2::XMLAttribute::`vftable'
	DD	FLAT:??_EXMLAttribute@tinyxml2@@EAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7XMLUnknown@tinyxml2@@6B@
CONST	SEGMENT
??_7XMLUnknown@tinyxml2@@6B@ DD FLAT:??_R4XMLUnknown@tinyxml2@@6B@ ; tinyxml2::XMLUnknown::`vftable'
	DD	FLAT:?ToElement@XMLNode@tinyxml2@@UBEPBVXMLElement@2@XZ
	DD	FLAT:?ToElement@XMLNode@tinyxml2@@UAEPAVXMLElement@2@XZ
	DD	FLAT:?ToText@XMLNode@tinyxml2@@UBEPBVXMLText@2@XZ
	DD	FLAT:?ToText@XMLNode@tinyxml2@@UAEPAVXMLText@2@XZ
	DD	FLAT:?ToComment@XMLNode@tinyxml2@@UBEPBVXMLComment@2@XZ
	DD	FLAT:?ToComment@XMLNode@tinyxml2@@UAEPAVXMLComment@2@XZ
	DD	FLAT:?ToDocument@XMLNode@tinyxml2@@UBEPBVXMLDocument@2@XZ
	DD	FLAT:?ToDocument@XMLNode@tinyxml2@@UAEPAVXMLDocument@2@XZ
	DD	FLAT:?ToDeclaration@XMLNode@tinyxml2@@UBEPBVXMLDeclaration@2@XZ
	DD	FLAT:?ToDeclaration@XMLNode@tinyxml2@@UAEPAVXMLDeclaration@2@XZ
	DD	FLAT:?ToUnknown@XMLUnknown@tinyxml2@@UBEPBV12@XZ
	DD	FLAT:?ToUnknown@XMLUnknown@tinyxml2@@UAEPAV12@XZ
	DD	FLAT:?ShallowClone@XMLUnknown@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z
	DD	FLAT:?ShallowEqual@XMLUnknown@tinyxml2@@UBE_NPBVXMLNode@2@@Z
	DD	FLAT:?Accept@XMLUnknown@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z
	DD	FLAT:??_EXMLUnknown@tinyxml2@@MAEPAXI@Z
	DD	FLAT:?ParseDeep@XMLUnknown@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
CONST	ENDS
;	COMDAT ??_7XMLDeclaration@tinyxml2@@6B@
CONST	SEGMENT
??_7XMLDeclaration@tinyxml2@@6B@ DD FLAT:??_R4XMLDeclaration@tinyxml2@@6B@ ; tinyxml2::XMLDeclaration::`vftable'
	DD	FLAT:?ToElement@XMLNode@tinyxml2@@UBEPBVXMLElement@2@XZ
	DD	FLAT:?ToElement@XMLNode@tinyxml2@@UAEPAVXMLElement@2@XZ
	DD	FLAT:?ToText@XMLNode@tinyxml2@@UBEPBVXMLText@2@XZ
	DD	FLAT:?ToText@XMLNode@tinyxml2@@UAEPAVXMLText@2@XZ
	DD	FLAT:?ToComment@XMLNode@tinyxml2@@UBEPBVXMLComment@2@XZ
	DD	FLAT:?ToComment@XMLNode@tinyxml2@@UAEPAVXMLComment@2@XZ
	DD	FLAT:?ToDocument@XMLNode@tinyxml2@@UBEPBVXMLDocument@2@XZ
	DD	FLAT:?ToDocument@XMLNode@tinyxml2@@UAEPAVXMLDocument@2@XZ
	DD	FLAT:?ToDeclaration@XMLDeclaration@tinyxml2@@UBEPBV12@XZ
	DD	FLAT:?ToDeclaration@XMLDeclaration@tinyxml2@@UAEPAV12@XZ
	DD	FLAT:?ToUnknown@XMLNode@tinyxml2@@UBEPBVXMLUnknown@2@XZ
	DD	FLAT:?ToUnknown@XMLNode@tinyxml2@@UAEPAVXMLUnknown@2@XZ
	DD	FLAT:?ShallowClone@XMLDeclaration@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z
	DD	FLAT:?ShallowEqual@XMLDeclaration@tinyxml2@@UBE_NPBVXMLNode@2@@Z
	DD	FLAT:?Accept@XMLDeclaration@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z
	DD	FLAT:??_EXMLDeclaration@tinyxml2@@MAEPAXI@Z
	DD	FLAT:?ParseDeep@XMLDeclaration@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
CONST	ENDS
;	COMDAT ??_7XMLComment@tinyxml2@@6B@
CONST	SEGMENT
??_7XMLComment@tinyxml2@@6B@ DD FLAT:??_R4XMLComment@tinyxml2@@6B@ ; tinyxml2::XMLComment::`vftable'
	DD	FLAT:?ToElement@XMLNode@tinyxml2@@UBEPBVXMLElement@2@XZ
	DD	FLAT:?ToElement@XMLNode@tinyxml2@@UAEPAVXMLElement@2@XZ
	DD	FLAT:?ToText@XMLNode@tinyxml2@@UBEPBVXMLText@2@XZ
	DD	FLAT:?ToText@XMLNode@tinyxml2@@UAEPAVXMLText@2@XZ
	DD	FLAT:?ToComment@XMLComment@tinyxml2@@UBEPBV12@XZ
	DD	FLAT:?ToComment@XMLComment@tinyxml2@@UAEPAV12@XZ
	DD	FLAT:?ToDocument@XMLNode@tinyxml2@@UBEPBVXMLDocument@2@XZ
	DD	FLAT:?ToDocument@XMLNode@tinyxml2@@UAEPAVXMLDocument@2@XZ
	DD	FLAT:?ToDeclaration@XMLNode@tinyxml2@@UBEPBVXMLDeclaration@2@XZ
	DD	FLAT:?ToDeclaration@XMLNode@tinyxml2@@UAEPAVXMLDeclaration@2@XZ
	DD	FLAT:?ToUnknown@XMLNode@tinyxml2@@UBEPBVXMLUnknown@2@XZ
	DD	FLAT:?ToUnknown@XMLNode@tinyxml2@@UAEPAVXMLUnknown@2@XZ
	DD	FLAT:?ShallowClone@XMLComment@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z
	DD	FLAT:?ShallowEqual@XMLComment@tinyxml2@@UBE_NPBVXMLNode@2@@Z
	DD	FLAT:?Accept@XMLComment@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z
	DD	FLAT:??_EXMLComment@tinyxml2@@MAEPAXI@Z
	DD	FLAT:?ParseDeep@XMLComment@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
CONST	ENDS
;	COMDAT ??_7XMLText@tinyxml2@@6B@
CONST	SEGMENT
??_7XMLText@tinyxml2@@6B@ DD FLAT:??_R4XMLText@tinyxml2@@6B@ ; tinyxml2::XMLText::`vftable'
	DD	FLAT:?ToElement@XMLNode@tinyxml2@@UBEPBVXMLElement@2@XZ
	DD	FLAT:?ToElement@XMLNode@tinyxml2@@UAEPAVXMLElement@2@XZ
	DD	FLAT:?ToText@XMLText@tinyxml2@@UBEPBV12@XZ
	DD	FLAT:?ToText@XMLText@tinyxml2@@UAEPAV12@XZ
	DD	FLAT:?ToComment@XMLNode@tinyxml2@@UBEPBVXMLComment@2@XZ
	DD	FLAT:?ToComment@XMLNode@tinyxml2@@UAEPAVXMLComment@2@XZ
	DD	FLAT:?ToDocument@XMLNode@tinyxml2@@UBEPBVXMLDocument@2@XZ
	DD	FLAT:?ToDocument@XMLNode@tinyxml2@@UAEPAVXMLDocument@2@XZ
	DD	FLAT:?ToDeclaration@XMLNode@tinyxml2@@UBEPBVXMLDeclaration@2@XZ
	DD	FLAT:?ToDeclaration@XMLNode@tinyxml2@@UAEPAVXMLDeclaration@2@XZ
	DD	FLAT:?ToUnknown@XMLNode@tinyxml2@@UBEPBVXMLUnknown@2@XZ
	DD	FLAT:?ToUnknown@XMLNode@tinyxml2@@UAEPAVXMLUnknown@2@XZ
	DD	FLAT:?ShallowClone@XMLText@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z
	DD	FLAT:?ShallowEqual@XMLText@tinyxml2@@UBE_NPBVXMLNode@2@@Z
	DD	FLAT:?Accept@XMLText@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z
	DD	FLAT:??_EXMLText@tinyxml2@@MAEPAXI@Z
	DD	FLAT:?ParseDeep@XMLText@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
CONST	ENDS
;	COMDAT ??_7XMLNode@tinyxml2@@6B@
CONST	SEGMENT
??_7XMLNode@tinyxml2@@6B@ DD FLAT:??_R4XMLNode@tinyxml2@@6B@ ; tinyxml2::XMLNode::`vftable'
	DD	FLAT:?ToElement@XMLNode@tinyxml2@@UBEPBVXMLElement@2@XZ
	DD	FLAT:?ToElement@XMLNode@tinyxml2@@UAEPAVXMLElement@2@XZ
	DD	FLAT:?ToText@XMLNode@tinyxml2@@UBEPBVXMLText@2@XZ
	DD	FLAT:?ToText@XMLNode@tinyxml2@@UAEPAVXMLText@2@XZ
	DD	FLAT:?ToComment@XMLNode@tinyxml2@@UBEPBVXMLComment@2@XZ
	DD	FLAT:?ToComment@XMLNode@tinyxml2@@UAEPAVXMLComment@2@XZ
	DD	FLAT:?ToDocument@XMLNode@tinyxml2@@UBEPBVXMLDocument@2@XZ
	DD	FLAT:?ToDocument@XMLNode@tinyxml2@@UAEPAVXMLDocument@2@XZ
	DD	FLAT:?ToDeclaration@XMLNode@tinyxml2@@UBEPBVXMLDeclaration@2@XZ
	DD	FLAT:?ToDeclaration@XMLNode@tinyxml2@@UAEPAVXMLDeclaration@2@XZ
	DD	FLAT:?ToUnknown@XMLNode@tinyxml2@@UBEPBVXMLUnknown@2@XZ
	DD	FLAT:?ToUnknown@XMLNode@tinyxml2@@UAEPAVXMLUnknown@2@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:??_EXMLNode@tinyxml2@@MAEPAXI@Z
	DD	FLAT:?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
CONST	ENDS
;	COMDAT ??_7XMLVisitor@tinyxml2@@6B@
CONST	SEGMENT
??_7XMLVisitor@tinyxml2@@6B@ DD FLAT:??_R4XMLVisitor@tinyxml2@@6B@ ; tinyxml2::XMLVisitor::`vftable'
	DD	FLAT:??_EXMLVisitor@tinyxml2@@UAEPAXI@Z
	DD	FLAT:?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z
	DD	FLAT:?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z
	DD	FLAT:?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@@Z
	DD	FLAT:?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z
	DD	FLAT:?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLUnknown@2@@Z
	DD	FLAT:?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLComment@2@@Z
	DD	FLAT:?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLText@2@@Z
	DD	FLAT:?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z
CONST	ENDS
;	COMDAT ??_7MemPool@tinyxml2@@6B@
CONST	SEGMENT
??_7MemPool@tinyxml2@@6B@ DD FLAT:??_R4MemPool@tinyxml2@@6B@ ; tinyxml2::MemPool::`vftable'
	DD	FLAT:??_EMemPool@tinyxml2@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1XMLPrinter@tinyxml2@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1XMLPrinter@tinyxml2@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1XMLPrinter@tinyxml2@@UAE@XZ$1
__ehfuncinfo$??1XMLPrinter@tinyxml2@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1XMLPrinter@tinyxml2@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z$2
__ehfuncinfo$??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ$1
__ehfuncinfo$??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ$0
__ehfuncinfo$??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ$1
__ehfuncinfo$??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ$0
__ehfuncinfo$??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ$1
__ehfuncinfo$??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ$0
__ehfuncinfo$??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ$1
__ehfuncinfo$??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ$0
__ehfuncinfo$??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z$0
__ehfuncinfo$?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z$0
__ehfuncinfo$?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z$0
__ehfuncinfo$?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z$0
__ehfuncinfo$?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z$0
__ehfuncinfo$?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z$0
__ehfuncinfo$?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z$0
__ehfuncinfo$?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1XMLDocument@tinyxml2@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1XMLDocument@tinyxml2@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1XMLDocument@tinyxml2@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1XMLDocument@tinyxml2@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1XMLDocument@tinyxml2@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1XMLDocument@tinyxml2@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1XMLDocument@tinyxml2@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1XMLDocument@tinyxml2@@UAE@XZ$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z$3
__ehfuncinfo$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z$0
__ehfuncinfo$?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z$0
__ehfuncinfo$?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1XMLElement@tinyxml2@@EAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1XMLElement@tinyxml2@@EAE@XZ$0
__ehfuncinfo$??1XMLElement@tinyxml2@@EAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1XMLElement@tinyxml2@@EAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1XMLAttribute@tinyxml2@@EAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1XMLAttribute@tinyxml2@@EAE@XZ$0
__ehfuncinfo$??1XMLAttribute@tinyxml2@@EAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1XMLAttribute@tinyxml2@@EAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0XMLAttribute@tinyxml2@@AAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0XMLAttribute@tinyxml2@@AAE@XZ$0
__ehfuncinfo$??0XMLAttribute@tinyxml2@@AAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0XMLAttribute@tinyxml2@@AAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z$0
__ehfuncinfo$?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1XMLNode@tinyxml2@@MAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1XMLNode@tinyxml2@@MAE@XZ$0
__ehfuncinfo$??1XMLNode@tinyxml2@@MAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1XMLNode@tinyxml2@@MAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Fits@?$LongFitsIntoSizeTMinusOne@$00@tinyxml2@@SA_NK@Z
_TEXT	SEGMENT
tv65 = -196						; size = 4
_value$ = 8						; size = 4
?Fits@?$LongFitsIntoSizeTMinusOne@$00@tinyxml2@@SA_NK@Z PROC ; tinyxml2::LongFitsIntoSizeTMinusOne<1>::Fits, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1928
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1929
  0001e	83 7d 08 ff	 cmp	 DWORD PTR _value$[ebp], -1
  00022	73 0c		 jae	 SHORT $LN3@Fits
  00024	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv65[ebp], 1
  0002e	eb 0a		 jmp	 SHORT $LN4@Fits
$LN3@Fits:
  00030	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv65[ebp], 0
$LN4@Fits:
  0003a	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv65[ebp]
; Line 1930
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?Fits@?$LongFitsIntoSizeTMinusOne@$00@tinyxml2@@SA_NK@Z ENDP ; tinyxml2::LongFitsIntoSizeTMinusOne<1>::Fits
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?callfopen@tinyxml2@@YAPAU_iobuf@@PBD0@Z
_TEXT	SEGMENT
_err$ = -24						; size = 4
_fp$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_filepath$ = 8						; size = 4
_mode$ = 12						; size = 4
?callfopen@tinyxml2@@YAPAU_iobuf@@PBD0@Z PROC		; tinyxml2::callfopen, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1872
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00012	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 1873
  00028	83 7d 08 00	 cmp	 DWORD PTR _filepath$[ebp], 0
  0002c	75 01		 jne	 SHORT $LN3@callfopen
  0002e	cc		 int	 3
$LN3@callfopen:
; Line 1874
  0002f	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  00033	75 01		 jne	 SHORT $LN2@callfopen
  00035	cc		 int	 3
$LN2@callfopen:
; Line 1876
  00036	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _fp$[ebp], 0
; Line 1877
  0003d	8b f4		 mov	 esi, esp
  0003f	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00042	50		 push	 eax
  00043	8b 4d 08	 mov	 ecx, DWORD PTR _filepath$[ebp]
  00046	51		 push	 ecx
  00047	8d 55 f4	 lea	 edx, DWORD PTR _fp$[ebp]
  0004a	52		 push	 edx
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen_s
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	89 45 e8	 mov	 DWORD PTR _err$[ebp], eax
; Line 1878
  0005e	83 7d e8 00	 cmp	 DWORD PTR _err$[ebp], 0
  00062	74 04		 je	 SHORT $LN1@callfopen
; Line 1879
  00064	33 c0		 xor	 eax, eax
  00066	eb 03		 jmp	 SHORT $LN4@callfopen
$LN1@callfopen:
; Line 1884
  00068	8b 45 f4	 mov	 eax, DWORD PTR _fp$[ebp]
$LN4@callfopen:
; Line 1885
  0006b	52		 push	 edx
  0006c	8b cd		 mov	 ecx, ebp
  0006e	50		 push	 eax
  0006f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@callfopen
  00075	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0007a	58		 pop	 eax
  0007b	5a		 pop	 edx
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00082	33 cd		 xor	 ecx, ebp
  00084	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00089	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0008f	3b ec		 cmp	 ebp, esp
  00091	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
  0009a	8b ff		 npad	 2
$LN8@callfopen:
  0009c	01 00 00 00	 DD	 1
  000a0	00 00 00 00	 DD	 $LN7@callfopen
$LN7@callfopen:
  000a4	f4 ff ff ff	 DD	 -12			; fffffff4H
  000a8	04 00 00 00	 DD	 4
  000ac	00 00 00 00	 DD	 $LN6@callfopen
$LN6@callfopen:
  000b0	66		 DB	 102			; 00000066H
  000b1	70		 DB	 112			; 00000070H
  000b2	00		 DB	 0
?callfopen@tinyxml2@@YAPAU_iobuf@@PBD0@Z ENDP		; tinyxml2::callfopen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?TIXML_VSNPRINTF@@YAHPADIPBD0@Z
_TEXT	SEGMENT
_result$ = -8						; size = 4
_buffer$ = 8						; size = 4
_size$ = 12						; size = 4
_format$ = 16						; size = 4
_va$ = 20						; size = 4
?TIXML_VSNPRINTF@@YAHPADIPBD0@Z PROC			; TIXML_VSNPRINTF, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 54
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 55
  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 14	 mov	 eax, DWORD PTR _va$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 10	 mov	 ecx, DWORD PTR _format$[ebp]
  00027	51		 push	 ecx
  00028	6a ff		 push	 -1
  0002a	8b 55 0c	 mov	 edx, DWORD PTR _size$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00031	50		 push	 eax
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__vsnprintf_s
  00038	83 c4 14	 add	 esp, 20			; 00000014H
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	89 45 f8	 mov	 DWORD PTR _result$[ebp], eax
; Line 56
  00045	8b 45 f8	 mov	 eax, DWORD PTR _result$[ebp]
; Line 57
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?TIXML_VSNPRINTF@@YAHPADIPBD0@Z ENDP			; TIXML_VSNPRINTF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?TIXML_SNPRINTF@@YAHPADIPBDZZ
_TEXT	SEGMENT
_result$ = -20						; size = 4
_va$ = -8						; size = 4
_buffer$ = 8						; size = 4
_size$ = 12						; size = 4
_format$ = 16						; size = 4
?TIXML_SNPRINTF@@YAHPADIPBDZZ PROC			; TIXML_SNPRINTF, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 45
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 47
  0001e	8d 45 14	 lea	 eax, DWORD PTR _format$[ebp+4]
  00021	89 45 f8	 mov	 DWORD PTR _va$[ebp], eax
; Line 48
  00024	8b f4		 mov	 esi, esp
  00026	8b 45 f8	 mov	 eax, DWORD PTR _va$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 10	 mov	 ecx, DWORD PTR _format$[ebp]
  0002d	51		 push	 ecx
  0002e	6a ff		 push	 -1
  00030	8b 55 0c	 mov	 edx, DWORD PTR _size$[ebp]
  00033	52		 push	 edx
  00034	8b 45 08	 mov	 eax, DWORD PTR _buffer$[ebp]
  00037	50		 push	 eax
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__vsnprintf_s
  0003e	83 c4 14	 add	 esp, 20			; 00000014H
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	89 45 ec	 mov	 DWORD PTR _result$[ebp], eax
; Line 49
  0004b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _va$[ebp], 0
; Line 50
  00052	8b 45 ec	 mov	 eax, DWORD PTR _result$[ebp]
; Line 51
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?TIXML_SNPRINTF@@YAHPADIPBDZZ ENDP			; TIXML_SNPRINTF
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 65
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 60
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
; Line 61
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GXMLPrinter@tinyxml2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GXMLPrinter@tinyxml2@@UAEPAXI@Z PROC			; tinyxml2::XMLPrinter::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1XMLPrinter@tinyxml2@@UAE@XZ ; tinyxml2::XMLPrinter::~XMLPrinter
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_GXMLPrinter@tinyxml2@@UAEPAXI@Z ENDP			; tinyxml2::XMLPrinter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@XMLPrinter@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@XMLPrinter@tinyxml2@@QAEXI@Z PROC	; tinyxml2::XMLPrinter::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00026	50		 push	 eax
  00027	6a 00		 push	 0
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?__autoclassinit2@XMLPrinter@tinyxml2@@QAEXI@Z ENDP	; tinyxml2::XMLPrinter::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnsureCapacity@?$DynArray@D$0BE@@tinyxml2@@AAEXH@Z
_TEXT	SEGMENT
$T1 = -248						; size = 4
$T2 = -236						; size = 4
_newMem$3 = -32						; size = 4
_newAllocated$4 = -20					; size = 4
_this$ = -8						; size = 4
_cap$ = 8						; size = 4
?EnsureCapacity@?$DynArray@D$0BE@@tinyxml2@@AAEXH@Z PROC ; tinyxml2::DynArray<char,20>::EnsureCapacity, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 271
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00013	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 272
  00023	83 7d 08 00	 cmp	 DWORD PTR _cap$[ebp], 0
  00027	7f 01		 jg	 SHORT $LN4@EnsureCapa
  00029	cc		 int	 3
$LN4@EnsureCapa:
; Line 273
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _cap$[ebp]
  00030	3b 48 18	 cmp	 ecx, DWORD PTR [eax+24]
  00033	7e 7e		 jle	 SHORT $LN5@EnsureCapa
; Line 274
  00035	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR _cap$[ebp], 1073741823 ; 3fffffffH
  0003c	7e 01		 jle	 SHORT $LN2@EnsureCapa
  0003e	cc		 int	 3
$LN2@EnsureCapa:
; Line 275
  0003f	8b 45 08	 mov	 eax, DWORD PTR _cap$[ebp]
  00042	d1 e0		 shl	 eax, 1
  00044	89 45 ec	 mov	 DWORD PTR _newAllocated$4[ebp], eax
; Line 276
  00047	8b 45 ec	 mov	 eax, DWORD PTR _newAllocated$4[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00050	83 c4 04	 add	 esp, 4
  00053	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00059	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  0005f	89 4d e0	 mov	 DWORD PTR _newMem$3[ebp], ecx
; Line 277
  00062	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00065	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00068	51		 push	 ecx
  00069	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006c	8b 02		 mov	 eax, DWORD PTR [edx]
  0006e	50		 push	 eax
  0006f	8b 4d e0	 mov	 ecx, DWORD PTR _newMem$3[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 _memcpy
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 278
  0007b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	83 c0 04	 add	 eax, 4
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	39 01		 cmp	 DWORD PTR [ecx], eax
  00086	74 1a		 je	 SHORT $LN1@EnsureCapa
; Line 279
  00088	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008d	89 8d 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00093	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00099	52		 push	 edx
  0009a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0009f	83 c4 04	 add	 esp, 4
$LN1@EnsureCapa:
; Line 281
  000a2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a5	8b 4d e0	 mov	 ecx, DWORD PTR _newMem$3[ebp]
  000a8	89 08		 mov	 DWORD PTR [eax], ecx
; Line 282
  000aa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	8b 4d ec	 mov	 ecx, DWORD PTR _newAllocated$4[ebp]
  000b0	89 48 18	 mov	 DWORD PTR [eax+24], ecx
$LN5@EnsureCapa:
; Line 284
  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000bc	3b ec		 cmp	 ebp, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
?EnsureCapacity@?$DynArray@D$0BE@@tinyxml2@@AAEXH@Z ENDP ; tinyxml2::DynArray<char,20>::EnsureCapacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Size@?$DynArray@D$0BE@@tinyxml2@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Size@?$DynArray@D$0BE@@tinyxml2@@QBEHXZ PROC		; tinyxml2::DynArray<char,20>::Size, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 247
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 248
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  0002a	7d 01		 jge	 SHORT $LN1@Size
  0002c	cc		 int	 3
$LN1@Size:
; Line 249
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
; Line 250
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?Size@?$DynArray@D$0BE@@tinyxml2@@QBEHXZ ENDP		; tinyxml2::DynArray<char,20>::Size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$DynArray@D$0BE@@tinyxml2@@QAEAADH@Z
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$DynArray@D$0BE@@tinyxml2@@QAEAADH@Z PROC		; tinyxml2::DynArray<char,20>::operator[], COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 232
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 233
  00023	83 7d 08 00	 cmp	 DWORD PTR _i$[ebp], 0
  00027	7c 17		 jl	 SHORT $LN4@operator
  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _i$[ebp]
  0002f	3b 48 1c	 cmp	 ecx, DWORD PTR [eax+28]
  00032	7d 0c		 jge	 SHORT $LN4@operator
  00034	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv67[ebp], 1
  0003e	eb 0a		 jmp	 SHORT $LN5@operator
$LN4@operator:
  00040	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv67[ebp], 0
$LN5@operator:
  0004a	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR tv67[ebp], 0
  00051	75 01		 jne	 SHORT $LN1@operator
  00053	cc		 int	 3
$LN1@operator:
; Line 234
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 00		 mov	 eax, DWORD PTR [eax]
  00059	03 45 08	 add	 eax, DWORD PTR _i$[ebp]
; Line 235
  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
??A?$DynArray@D$0BE@@tinyxml2@@QAEAADH@Z ENDP		; tinyxml2::DynArray<char,20>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushArr@?$DynArray@D$0BE@@tinyxml2@@QAEPADH@Z
_TEXT	SEGMENT
_ret$ = -20						; size = 4
_this$ = -8						; size = 4
_count$ = 8						; size = 4
?PushArr@?$DynArray@D$0BE@@tinyxml2@@QAEPADH@Z PROC	; tinyxml2::DynArray<char,20>::PushArr, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 210
  00023	83 7d 08 00	 cmp	 DWORD PTR _count$[ebp], 0
  00027	7d 01		 jge	 SHORT $LN2@PushArr
  00029	cc		 int	 3
$LN2@PushArr:
; Line 211
  0002a	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0002f	2b 45 08	 sub	 eax, DWORD PTR _count$[ebp]
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	39 41 1c	 cmp	 DWORD PTR [ecx+28], eax
  00038	7e 01		 jle	 SHORT $LN1@PushArr
  0003a	cc		 int	 3
$LN1@PushArr:
; Line 212
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00041	03 4d 08	 add	 ecx, DWORD PTR _count$[ebp]
  00044	51		 push	 ecx
  00045	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?EnsureCapacity@?$DynArray@D$0BE@@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<char,20>::EnsureCapacity
; Line 213
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00050	8b 08		 mov	 ecx, DWORD PTR [eax]
  00052	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00055	03 4a 1c	 add	 ecx, DWORD PTR [edx+28]
  00058	89 4d ec	 mov	 DWORD PTR _ret$[ebp], ecx
; Line 214
  0005b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00061	03 4d 08	 add	 ecx, DWORD PTR _count$[ebp]
  00064	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00067	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
; Line 215
  0006a	8b 45 ec	 mov	 eax, DWORD PTR _ret$[ebp]
; Line 216
  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	5b		 pop	 ebx
  00070	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00076	3b ec		 cmp	 ebp, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c2 04 00	 ret	 4
?PushArr@?$DynArray@D$0BE@@tinyxml2@@QAEPADH@Z ENDP	; tinyxml2::DynArray<char,20>::PushArr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Push@?$DynArray@D$0BE@@tinyxml2@@QAEXD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 1
?Push@?$DynArray@D$0BE@@tinyxml2@@QAEXD@Z PROC		; tinyxml2::DynArray<char,20>::Push, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	81 78 1c ff ff
	ff 7f		 cmp	 DWORD PTR [eax+28], 2147483647 ; 7fffffffH
  0002d	7c 01		 jl	 SHORT $LN1@Push
  0002f	cc		 int	 3
$LN1@Push:
; Line 205
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00036	83 c1 01	 add	 ecx, 1
  00039	51		 push	 ecx
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?EnsureCapacity@?$DynArray@D$0BE@@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<char,20>::EnsureCapacity
; Line 206
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00048	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 02		 mov	 eax, DWORD PTR [edx]
  0004d	8a 55 08	 mov	 dl, BYTE PTR _t$[ebp]
  00050	88 14 08	 mov	 BYTE PTR [eax+ecx], dl
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00059	83 c1 01	 add	 ecx, 1
  0005c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005f	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
; Line 207
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?Push@?$DynArray@D$0BE@@tinyxml2@@QAEXD@Z ENDP		; tinyxml2::DynArray<char,20>::Push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$DynArray@D$0BE@@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$DynArray@D$0BE@@tinyxml2@@QAE@XZ PROC		; tinyxml2::DynArray<char,20>::~DynArray<char,20>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 193
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 194
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	39 01		 cmp	 DWORD PTR [ecx], eax
  0002e	74 1a		 je	 SHORT $LN2@DynArray
; Line 195
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  0003b	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00047	83 c4 04	 add	 esp, 4
$LN2@DynArray:
; Line 197
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??1?$DynArray@D$0BE@@tinyxml2@@QAE@XZ ENDP		; tinyxml2::DynArray<char,20>::~DynArray<char,20>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$DynArray@D$0BE@@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$DynArray@D$0BE@@tinyxml2@@QAE@XZ PROC		; tinyxml2::DynArray<char,20>::DynArray<char,20>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 187
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 188
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	89 01		 mov	 DWORD PTR [ecx], eax
; Line 189
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 40 18 14 00
	00 00		 mov	 DWORD PTR [eax+24], 20	; 00000014H
; Line 190
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
; Line 191
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??0?$DynArray@D$0BE@@tinyxml2@@QAE@XZ ENDP		; tinyxml2::DynArray<char,20>::DynArray<char,20>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PrintString@XMLPrinter@tinyxml2@@AAEXPBD_N@Z
_TEXT	SEGMENT
tv87 = -280						; size = 4
tv71 = -280						; size = 4
_i$1 = -80						; size = 4
_entityPatternPrinted$2 = -65				; size = 1
_toPrint$3 = -56					; size = 4
_delta$4 = -44						; size = 4
_flag$5 = -32						; size = 4
_q$ = -20						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
_restricted$ = 12					; size = 1
?PrintString@XMLPrinter@tinyxml2@@AAEXPBD_N@Z PROC	; tinyxml2::XMLPrinter::PrintString, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2159
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 18 01 00
	00		 sub	 esp, 280		; 00000118H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd e8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-280]
  00013	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2161
  00023	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00026	89 45 ec	 mov	 DWORD PTR _q$[ebp], eax
; Line 2163
  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	0f b6 48 4c	 movzx	 ecx, BYTE PTR [eax+76]
  00030	85 c9		 test	 ecx, ecx
  00032	0f 84 55 01 00
	00		 je	 $LN18@PrintStrin
; Line 2164
  00038	0f b6 45 0c	 movzx	 eax, BYTE PTR _restricted$[ebp]
  0003c	85 c0		 test	 eax, eax
  0003e	74 11		 je	 SHORT $LN21@PrintStrin
  00040	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	81 c1 8e 00 00
	00		 add	 ecx, 142		; 0000008eH
  00049	89 8d e8 fe ff
	ff		 mov	 DWORD PTR tv71[ebp], ecx
  0004f	eb 0c		 jmp	 SHORT $LN22@PrintStrin
$LN21@PrintStrin:
  00051	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00054	83 c2 4e	 add	 edx, 78			; 0000004eH
  00057	89 95 e8 fe ff
	ff		 mov	 DWORD PTR tv71[ebp], edx
$LN22@PrintStrin:
  0005d	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00063	89 45 e0	 mov	 DWORD PTR _flag$5[ebp], eax
$LN17@PrintStrin:
; Line 2165
  00066	8b 45 ec	 mov	 eax, DWORD PTR _q$[ebp]
  00069	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0006c	85 c9		 test	 ecx, ecx
  0006e	0f 84 19 01 00
	00		 je	 $LN18@PrintStrin
; Line 2166
  00074	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00077	3b 45 ec	 cmp	 eax, DWORD PTR _q$[ebp]
  0007a	76 01		 jbe	 SHORT $LN15@PrintStrin
  0007c	cc		 int	 3
$LN15@PrintStrin:
; Line 2168
  0007d	8b 45 ec	 mov	 eax, DWORD PTR _q$[ebp]
  00080	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00083	85 c9		 test	 ecx, ecx
  00085	0f 8e eb 00 00
	00		 jle	 $LN14@PrintStrin
  0008b	8b 45 ec	 mov	 eax, DWORD PTR _q$[ebp]
  0008e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00091	83 f9 40	 cmp	 ecx, 64			; 00000040H
  00094	0f 8d dc 00 00
	00		 jge	 $LN14@PrintStrin
; Line 2172
  0009a	8b 45 ec	 mov	 eax, DWORD PTR _q$[ebp]
  0009d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000a0	8b 55 e0	 mov	 edx, DWORD PTR _flag$5[ebp]
  000a3	0f b6 04 0a	 movzx	 eax, BYTE PTR [edx+ecx]
  000a7	85 c0		 test	 eax, eax
  000a9	0f 84 c7 00 00
	00		 je	 $LN14@PrintStrin
$LN12@PrintStrin:
; Line 2173
  000af	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000b2	3b 45 ec	 cmp	 eax, DWORD PTR _q$[ebp]
  000b5	73 54		 jae	 SHORT $LN11@PrintStrin
; Line 2174
  000b7	8b 45 ec	 mov	 eax, DWORD PTR _q$[ebp]
  000ba	2b 45 08	 sub	 eax, DWORD PTR _p$[ebp]
  000bd	89 45 d4	 mov	 DWORD PTR _delta$4[ebp], eax
; Line 2176
  000c0	81 7d d4 ff ff
	ff 7f		 cmp	 DWORD PTR _delta$4[ebp], 2147483647 ; 7fffffffH
  000c7	76 0c		 jbe	 SHORT $LN23@PrintStrin
  000c9	c7 85 e8 fe ff
	ff ff ff ff 7f	 mov	 DWORD PTR tv87[ebp], 2147483647 ; 7fffffffH
  000d3	eb 09		 jmp	 SHORT $LN24@PrintStrin
$LN23@PrintStrin:
  000d5	8b 45 d4	 mov	 eax, DWORD PTR _delta$4[ebp]
  000d8	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv87[ebp], eax
$LN24@PrintStrin:
  000de	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR tv87[ebp]
  000e4	89 4d c8	 mov	 DWORD PTR _toPrint$3[ebp], ecx
; Line 2177
  000e7	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000ea	50		 push	 eax
  000eb	8b 4d c8	 mov	 ecx, DWORD PTR _toPrint$3[ebp]
  000ee	51		 push	 ecx
  000ef	68 00 00 00 00	 push	 OFFSET ??_C@_04EBNJJJJI@?$CF?4?$CKs?$AA@
  000f4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  000fd	83 c4 10	 add	 esp, 16			; 00000010H
; Line 2178
  00100	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00103	03 45 c8	 add	 eax, DWORD PTR _toPrint$3[ebp]
  00106	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 2179
  00109	eb a4		 jmp	 SHORT $LN12@PrintStrin
$LN11@PrintStrin:
; Line 2180
  0010b	c6 45 bf 00	 mov	 BYTE PTR _entityPatternPrinted$2[ebp], 0
; Line 2181
  0010f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00116	eb 09		 jmp	 SHORT $LN10@PrintStrin
$LN9@PrintStrin:
  00118	8b 45 b0	 mov	 eax, DWORD PTR _i$1[ebp]
  0011b	83 c0 01	 add	 eax, 1
  0011e	89 45 b0	 mov	 DWORD PTR _i$1[ebp], eax
$LN10@PrintStrin:
  00121	83 7d b0 05	 cmp	 DWORD PTR _i$1[ebp], 5
  00125	7d 39		 jge	 SHORT $LN8@PrintStrin
; Line 2182
  00127	6b 45 b0 0c	 imul	 eax, DWORD PTR _i$1[ebp], 12
  0012b	0f be 88 08 00
	00 00		 movsx	 ecx, BYTE PTR _entities[eax+8]
  00132	8b 55 ec	 mov	 edx, DWORD PTR _q$[ebp]
  00135	0f be 02	 movsx	 eax, BYTE PTR [edx]
  00138	3b c8		 cmp	 ecx, eax
  0013a	75 22		 jne	 SHORT $LN7@PrintStrin
; Line 2183
  0013c	6b 45 b0 0c	 imul	 eax, DWORD PTR _i$1[ebp], 12
  00140	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR _entities[eax]
  00146	51		 push	 ecx
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_04IKLFLEHL@?$CG?$CFs?$DL?$AA@
  0014c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0014f	52		 push	 edx
  00150	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00155	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2184
  00158	c6 45 bf 01	 mov	 BYTE PTR _entityPatternPrinted$2[ebp], 1
; Line 2185
  0015c	eb 02		 jmp	 SHORT $LN8@PrintStrin
$LN7@PrintStrin:
; Line 2187
  0015e	eb b8		 jmp	 SHORT $LN9@PrintStrin
$LN8@PrintStrin:
; Line 2188
  00160	0f b6 45 bf	 movzx	 eax, BYTE PTR _entityPatternPrinted$2[ebp]
  00164	85 c0		 test	 eax, eax
  00166	75 05		 jne	 SHORT $LN6@PrintStrin
; Line 2190
  00168	33 c0		 xor	 eax, eax
  0016a	75 01		 jne	 SHORT $LN6@PrintStrin
  0016c	cc		 int	 3
$LN6@PrintStrin:
; Line 2192
  0016d	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00170	83 c0 01	 add	 eax, 1
  00173	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
$LN14@PrintStrin:
; Line 2195
  00176	8b 45 ec	 mov	 eax, DWORD PTR _q$[ebp]
  00179	83 c0 01	 add	 eax, 1
  0017c	89 45 ec	 mov	 DWORD PTR _q$[ebp], eax
; Line 2196
  0017f	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00182	3b 45 ec	 cmp	 eax, DWORD PTR _q$[ebp]
  00185	76 01		 jbe	 SHORT $LN4@PrintStrin
  00187	cc		 int	 3
$LN4@PrintStrin:
; Line 2197
  00188	e9 d9 fe ff ff	 jmp	 $LN17@PrintStrin
$LN18@PrintStrin:
; Line 2201
  0018d	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00190	3b 45 ec	 cmp	 eax, DWORD PTR _q$[ebp]
  00193	76 01		 jbe	 SHORT $LN3@PrintStrin
  00195	cc		 int	 3
$LN3@PrintStrin:
; Line 2202
  00196	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00199	0f b6 48 4c	 movzx	 ecx, BYTE PTR [eax+76]
  0019d	85 c9		 test	 ecx, ecx
  0019f	74 08		 je	 SHORT $LN1@PrintStrin
  001a1	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  001a4	3b 45 ec	 cmp	 eax, DWORD PTR _q$[ebp]
  001a7	73 15		 jae	 SHORT $LN19@PrintStrin
$LN1@PrintStrin:
; Line 2203
  001a9	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  001ac	50		 push	 eax
  001ad	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
  001b2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	51		 push	 ecx
  001b6	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  001bb	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN19@PrintStrin:
; Line 2205
  001be	5f		 pop	 edi
  001bf	5e		 pop	 esi
  001c0	5b		 pop	 ebx
  001c1	81 c4 18 01 00
	00		 add	 esp, 280		; 00000118H
  001c7	3b ec		 cmp	 ebp, esp
  001c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c2 08 00	 ret	 8
?PrintString@XMLPrinter@tinyxml2@@AAEXPBD_N@Z ENDP	; tinyxml2::XMLPrinter::PrintString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnsureCapacity@?$DynArray@PBD$09@tinyxml2@@AAEXH@Z
_TEXT	SEGMENT
$T1 = -248						; size = 4
$T2 = -236						; size = 4
_newMem$3 = -32						; size = 4
_newAllocated$4 = -20					; size = 4
_this$ = -8						; size = 4
_cap$ = 8						; size = 4
?EnsureCapacity@?$DynArray@PBD$09@tinyxml2@@AAEXH@Z PROC ; tinyxml2::DynArray<char const *,10>::EnsureCapacity, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 271
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00013	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 272
  00023	83 7d 08 00	 cmp	 DWORD PTR _cap$[ebp], 0
  00027	7f 01		 jg	 SHORT $LN4@EnsureCapa
  00029	cc		 int	 3
$LN4@EnsureCapa:
; Line 273
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _cap$[ebp]
  00030	3b 48 2c	 cmp	 ecx, DWORD PTR [eax+44]
  00033	0f 8e 91 00 00
	00		 jle	 $LN5@EnsureCapa
; Line 274
  00039	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR _cap$[ebp], 1073741823 ; 3fffffffH
  00040	7e 01		 jle	 SHORT $LN2@EnsureCapa
  00042	cc		 int	 3
$LN2@EnsureCapa:
; Line 275
  00043	8b 45 08	 mov	 eax, DWORD PTR _cap$[ebp]
  00046	d1 e0		 shl	 eax, 1
  00048	89 45 ec	 mov	 DWORD PTR _newAllocated$4[ebp], eax
; Line 276
  0004b	33 c9		 xor	 ecx, ecx
  0004d	8b 45 ec	 mov	 eax, DWORD PTR _newAllocated$4[ebp]
  00050	ba 04 00 00 00	 mov	 edx, 4
  00055	f7 e2		 mul	 edx
  00057	0f 90 c1	 seto	 cl
  0005a	f7 d9		 neg	 ecx
  0005c	0b c8		 or	 ecx, eax
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00064	83 c4 04	 add	 esp, 4
  00067	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0006d	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00073	89 45 e0	 mov	 DWORD PTR _newMem$3[ebp], eax
; Line 277
  00076	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00079	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0007c	c1 e1 02	 shl	 ecx, 2
  0007f	51		 push	 ecx
  00080	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 02		 mov	 eax, DWORD PTR [edx]
  00085	50		 push	 eax
  00086	8b 4d e0	 mov	 ecx, DWORD PTR _newMem$3[ebp]
  00089	51		 push	 ecx
  0008a	e8 00 00 00 00	 call	 _memcpy
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 278
  00092	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	83 c0 04	 add	 eax, 4
  00098	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	39 01		 cmp	 DWORD PTR [ecx], eax
  0009d	74 1a		 je	 SHORT $LN1@EnsureCapa
; Line 279
  0009f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a4	89 8d 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000aa	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  000b0	52		 push	 edx
  000b1	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000b6	83 c4 04	 add	 esp, 4
$LN1@EnsureCapa:
; Line 281
  000b9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bc	8b 4d e0	 mov	 ecx, DWORD PTR _newMem$3[ebp]
  000bf	89 08		 mov	 DWORD PTR [eax], ecx
; Line 282
  000c1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	8b 4d ec	 mov	 ecx, DWORD PTR _newAllocated$4[ebp]
  000c7	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
$LN5@EnsureCapa:
; Line 284
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 04 00	 ret	 4
?EnsureCapacity@?$DynArray@PBD$09@tinyxml2@@AAEXH@Z ENDP ; tinyxml2::DynArray<char const *,10>::EnsureCapacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Pop@?$DynArray@PBD$09@tinyxml2@@QAEPBDXZ
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
?Pop@?$DynArray@PBD$09@tinyxml2@@QAEPBDXZ PROC		; tinyxml2::DynArray<char const *,10>::Pop, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 218
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 219
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0002a	7f 01		 jg	 SHORT $LN1@Pop
  0002c	cc		 int	 3
$LN1@Pop:
; Line 220
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00033	83 e9 01	 sub	 ecx, 1
  00036	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], ecx
  0003c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00045	89 42 30	 mov	 DWORD PTR [edx+48], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00053	8b 04 82	 mov	 eax, DWORD PTR [edx+eax*4]
; Line 221
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?Pop@?$DynArray@PBD$09@tinyxml2@@QAEPBDXZ ENDP		; tinyxml2::DynArray<char const *,10>::Pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Push@?$DynArray@PBD$09@tinyxml2@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?Push@?$DynArray@PBD$09@tinyxml2@@QAEXPBD@Z PROC	; tinyxml2::DynArray<char const *,10>::Push, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	81 78 30 ff ff
	ff 7f		 cmp	 DWORD PTR [eax+48], 2147483647 ; 7fffffffH
  0002d	7c 01		 jl	 SHORT $LN1@Push
  0002f	cc		 int	 3
$LN1@Push:
; Line 205
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00036	83 c1 01	 add	 ecx, 1
  00039	51		 push	 ecx
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?EnsureCapacity@?$DynArray@PBD$09@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<char const *,10>::EnsureCapacity
; Line 206
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00048	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 02		 mov	 eax, DWORD PTR [edx]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _t$[ebp]
  00050	89 14 88	 mov	 DWORD PTR [eax+ecx*4], edx
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00059	83 c1 01	 add	 ecx, 1
  0005c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005f	89 4a 30	 mov	 DWORD PTR [edx+48], ecx
; Line 207
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?Push@?$DynArray@PBD$09@tinyxml2@@QAEXPBD@Z ENDP	; tinyxml2::DynArray<char const *,10>::Push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ PROC		; tinyxml2::DynArray<char const *,10>::~DynArray<char const *,10>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 193
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 194
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	39 01		 cmp	 DWORD PTR [ecx], eax
  0002e	74 1a		 je	 SHORT $LN2@DynArray
; Line 195
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  0003b	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00047	83 c4 04	 add	 esp, 4
$LN2@DynArray:
; Line 197
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ ENDP		; tinyxml2::DynArray<char const *,10>::~DynArray<char const *,10>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$DynArray@PBD$09@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$DynArray@PBD$09@tinyxml2@@QAE@XZ PROC		; tinyxml2::DynArray<char const *,10>::DynArray<char const *,10>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 187
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 188
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	89 01		 mov	 DWORD PTR [ecx], eax
; Line 189
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 40 2c 0a 00
	00 00		 mov	 DWORD PTR [eax+44], 10	; 0000000aH
; Line 190
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0
; Line 191
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??0?$DynArray@PBD$09@tinyxml2@@QAE@XZ ENDP		; tinyxml2::DynArray<char const *,10>::DynArray<char const *,10>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SealElementIfJustOpened@XMLPrinter@tinyxml2@@IAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SealElementIfJustOpened@XMLPrinter@tinyxml2@@IAEXXZ PROC ; tinyxml2::XMLPrinter::SealElementIfJustOpened, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2307
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2308
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0002a	85 c9		 test	 ecx, ecx
  0002c	75 02		 jne	 SHORT $LN1@SealElemen
; Line 2309
  0002e	eb 18		 jmp	 SHORT $LN2@SealElemen
$LN1@SealElemen:
; Line 2311
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
; Line 2312
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_01PPODPGHN@?$DO?$AA@
  0003c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00045	83 c4 08	 add	 esp, 8
$LN2@SealElemen:
; Line 2313
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?SealElementIfJustOpened@XMLPrinter@tinyxml2@@IAEXXZ ENDP ; tinyxml2::XMLPrinter::SealElementIfJustOpened
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ
_TEXT	SEGMENT
tv90 = -232						; size = 4
_p$1 = -32						; size = 4
_len$2 = -20						; size = 4
_va$ = -8						; size = 4
_this$ = 8						; size = 4
_format$ = 12						; size = 4
?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ PROC		; tinyxml2::XMLPrinter::Print, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2129
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 2131
  0001e	8d 45 10	 lea	 eax, DWORD PTR _format$[ebp+4]
  00021	89 45 f8	 mov	 DWORD PTR _va$[ebp], eax
; Line 2133
  00024	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  0002b	74 26		 je	 SHORT $LN4@Print
; Line 2134
  0002d	8b f4		 mov	 esi, esp
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _va$[ebp]
  00032	50		 push	 eax
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR _format$[ebp]
  00036	51		 push	 ecx
  00037	8b 55 08	 mov	 edx, DWORD PTR _this$[ebp]
  0003a	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0003d	50		 push	 eax
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__vfprintf
  00044	83 c4 0c	 add	 esp, 12			; 0000000cH
  00047	3b f4		 cmp	 esi, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2136
  0004e	e9 bd 00 00 00	 jmp	 $LN3@Print
$LN4@Print:
; Line 2137
  00053	8b f4		 mov	 esi, esp
  00055	8b 45 f8	 mov	 eax, DWORD PTR _va$[ebp]
  00058	50		 push	 eax
  00059	8b 4d 0c	 mov	 ecx, DWORD PTR _format$[ebp]
  0005c	51		 push	 ecx
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___vscprintf
  00063	83 c4 08	 add	 esp, 8
  00066	3b f4		 cmp	 esi, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	89 45 ec	 mov	 DWORD PTR _len$2[ebp], eax
; Line 2139
  00070	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _va$[ebp], 0
; Line 2140
  00077	83 7d ec 00	 cmp	 DWORD PTR _len$2[ebp], 0
  0007b	7d 01		 jge	 SHORT $LN2@Print
  0007d	cc		 int	 3
$LN2@Print:
; Line 2141
  0007e	8d 45 10	 lea	 eax, DWORD PTR _format$[ebp+4]
  00081	89 45 f8	 mov	 DWORD PTR _va$[ebp], eax
; Line 2142
  00084	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00087	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  0008d	e8 00 00 00 00	 call	 ?Size@?$DynArray@D$0BE@@tinyxml2@@QBEHXZ ; tinyxml2::DynArray<char,20>::Size
  00092	85 c0		 test	 eax, eax
  00094	7e 33		 jle	 SHORT $LN7@Print
  00096	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  00099	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  0009f	e8 00 00 00 00	 call	 ?Size@?$DynArray@D$0BE@@tinyxml2@@QBEHXZ ; tinyxml2::DynArray<char,20>::Size
  000a4	83 e8 01	 sub	 eax, 1
  000a7	50		 push	 eax
  000a8	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  000b1	e8 00 00 00 00	 call	 ??A?$DynArray@D$0BE@@tinyxml2@@QAEAADH@Z ; tinyxml2::DynArray<char,20>::operator[]
  000b6	0f be 00	 movsx	 eax, BYTE PTR [eax]
  000b9	85 c0		 test	 eax, eax
  000bb	75 0c		 jne	 SHORT $LN7@Print
  000bd	c7 85 18 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv90[ebp], 1
  000c7	eb 0a		 jmp	 SHORT $LN8@Print
$LN7@Print:
  000c9	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN8@Print:
  000d3	83 bd 18 ff ff
	ff 00		 cmp	 DWORD PTR tv90[ebp], 0
  000da	75 01		 jne	 SHORT $LN1@Print
  000dc	cc		 int	 3
$LN1@Print:
; Line 2143
  000dd	8b 45 ec	 mov	 eax, DWORD PTR _len$2[ebp]
  000e0	50		 push	 eax
  000e1	8b 4d 08	 mov	 ecx, DWORD PTR _this$[ebp]
  000e4	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  000ea	e8 00 00 00 00	 call	 ?PushArr@?$DynArray@D$0BE@@tinyxml2@@QAEPADH@Z ; tinyxml2::DynArray<char,20>::PushArr
  000ef	83 e8 01	 sub	 eax, 1
  000f2	89 45 e0	 mov	 DWORD PTR _p$1[ebp], eax
; Line 2144
  000f5	8b 45 f8	 mov	 eax, DWORD PTR _va$[ebp]
  000f8	50		 push	 eax
  000f9	8b 4d 0c	 mov	 ecx, DWORD PTR _format$[ebp]
  000fc	51		 push	 ecx
  000fd	8b 55 ec	 mov	 edx, DWORD PTR _len$2[ebp]
  00100	83 c2 01	 add	 edx, 1
  00103	52		 push	 edx
  00104	8b 45 e0	 mov	 eax, DWORD PTR _p$1[ebp]
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ?TIXML_VSNPRINTF@@YAHPADIPBD0@Z ; TIXML_VSNPRINTF
  0010d	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@Print:
; Line 2146
  00110	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _va$[ebp], 0
; Line 2147
  00117	5f		 pop	 edi
  00118	5e		 pop	 esi
  00119	5b		 pop	 ebx
  0011a	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  00120	3b ec		 cmp	 ebp, esp
  00122	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00127	8b e5		 mov	 esp, ebp
  00129	5d		 pop	 ebp
  0012a	c3		 ret	 0
?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ENDP		; tinyxml2::XMLPrinter::Print
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PrintSpace@XMLPrinter@tinyxml2@@MAEXH@Z
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_this$ = -8						; size = 4
_depth$ = 8						; size = 4
?PrintSpace@XMLPrinter@tinyxml2@@MAEXH@Z PROC		; tinyxml2::XMLPrinter::PrintSpace, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2151
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2152
  00023	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0002a	eb 09		 jmp	 SHORT $LN3@PrintSpace
$LN2@PrintSpace:
  0002c	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  0002f	83 c0 01	 add	 eax, 1
  00032	89 45 ec	 mov	 DWORD PTR _i$1[ebp], eax
$LN3@PrintSpace:
  00035	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00038	3b 45 08	 cmp	 eax, DWORD PTR _depth$[ebp]
  0003b	7d 13		 jge	 SHORT $LN4@PrintSpace
; Line 2153
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  0004b	83 c4 08	 add	 esp, 8
; Line 2154
  0004e	eb dc		 jmp	 SHORT $LN2@PrintSpace
$LN4@PrintSpace:
; Line 2155
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
?PrintSpace@XMLPrinter@tinyxml2@@MAEXH@Z ENDP		; tinyxml2::XMLPrinter::PrintSpace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CompactMode@XMLPrinter@tinyxml2@@MAE_NABVXMLElement@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?CompactMode@XMLPrinter@tinyxml2@@MAE_NABVXMLElement@2@@Z PROC ; tinyxml2::XMLPrinter::CompactMode, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 2063
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8a 40 4d	 mov	 al, BYTE PTR [eax+77]
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?CompactMode@XMLPrinter@tinyxml2@@MAE_NABVXMLElement@2@@Z ENDP ; tinyxml2::XMLPrinter::CompactMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLUnknown@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_unknown$ = 8						; size = 4
?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLUnknown@2@@Z PROC ; tinyxml2::XMLPrinter::Visit, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2459
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2460
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _unknown$[ebp]
  00026	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0002b	50		 push	 eax
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?PushUnknown@XMLPrinter@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLPrinter::PushUnknown
; Line 2461
  00034	b0 01		 mov	 al, 1
; Line 2462
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLUnknown@2@@Z ENDP ; tinyxml2::XMLPrinter::Visit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_declaration$ = 8					; size = 4
?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z PROC ; tinyxml2::XMLPrinter::Visit, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2452
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2453
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _declaration$[ebp]
  00026	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0002b	50		 push	 eax
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?PushDeclaration@XMLPrinter@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLPrinter::PushDeclaration
; Line 2454
  00034	b0 01		 mov	 al, 1
; Line 2455
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z ENDP ; tinyxml2::XMLPrinter::Visit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLComment@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_comment$ = 8						; size = 4
?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLComment@2@@Z PROC ; tinyxml2::XMLPrinter::Visit, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2446
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2447
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _comment$[ebp]
  00026	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0002b	50		 push	 eax
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?PushComment@XMLPrinter@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLPrinter::PushComment
; Line 2448
  00034	b0 01		 mov	 al, 1
; Line 2449
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLComment@2@@Z ENDP ; tinyxml2::XMLPrinter::Visit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLText@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLText@2@@Z PROC	; tinyxml2::XMLPrinter::Visit, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2439
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2440
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _text$[ebp]
  00026	e8 00 00 00 00	 call	 ?CData@XMLText@tinyxml2@@QBE_NXZ ; tinyxml2::XMLText::CData
  0002b	0f b6 c0	 movzx	 eax, al
  0002e	50		 push	 eax
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _text$[ebp]
  00032	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  00037	50		 push	 eax
  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?PushText@XMLPrinter@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLPrinter::PushText
; Line 2441
  00040	b0 01		 mov	 al, 1
; Line 2442
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?Visit@XMLPrinter@tinyxml2@@UAE_NABVXMLText@2@@Z ENDP	; tinyxml2::XMLPrinter::Visit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_element$ = 8						; size = 4
?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@@Z PROC ; tinyxml2::XMLPrinter::VisitExit, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2432
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2433
  00023	8b f4		 mov	 esi, esp
  00025	8b 45 08	 mov	 eax, DWORD PTR _element$[ebp]
  00028	50		 push	 eax
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00034	ff d0		 call	 eax
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b f4		 mov	 esi, esp
  0003f	0f b6 c8	 movzx	 ecx, al
  00042	51		 push	 ecx
  00043	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00046	8b 02		 mov	 eax, DWORD PTR [edx]
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  0004e	ff d2		 call	 edx
  00050	3b f4		 cmp	 esi, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2434
  00057	b0 01		 mov	 al, 1
; Line 2435
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@@Z ENDP ; tinyxml2::XMLPrinter::VisitExit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z
_TEXT	SEGMENT
tv78 = -232						; size = 4
tv89 = -229						; size = 1
_compactMode$ = -29					; size = 1
_parentElem$ = -20					; size = 4
_this$ = -8						; size = 4
_element$ = 8						; size = 4
_attribute$ = 12					; size = 4
?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z PROC ; tinyxml2::XMLPrinter::VisitEnter, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2416
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2417
  00023	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _parentElem$[ebp], 0
; Line 2418
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _element$[ebp]
  0002d	e8 00 00 00 00	 call	 ?Parent@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::Parent
  00032	85 c0		 test	 eax, eax
  00034	74 2c		 je	 SHORT $LN3@VisitEnter
; Line 2419
  00036	8b 4d 08	 mov	 ecx, DWORD PTR _element$[ebp]
  00039	e8 00 00 00 00	 call	 ?Parent@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::Parent
  0003e	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  00044	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  0004a	8b 10		 mov	 edx, DWORD PTR [eax]
  0004c	8b f4		 mov	 esi, esp
  0004e	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv78[ebp]
  00054	8b 02		 mov	 eax, DWORD PTR [edx]
  00056	ff d0		 call	 eax
  00058	3b f4		 cmp	 esi, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	89 45 ec	 mov	 DWORD PTR _parentElem$[ebp], eax
$LN3@VisitEnter:
; Line 2421
  00062	83 7d ec 00	 cmp	 DWORD PTR _parentElem$[ebp], 0
  00066	74 22		 je	 SHORT $LN6@VisitEnter
  00068	8b f4		 mov	 esi, esp
  0006a	8b 45 ec	 mov	 eax, DWORD PTR _parentElem$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 11		 mov	 edx, DWORD PTR [ecx]
  00073	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00079	ff d0		 call	 eax
  0007b	3b f4		 cmp	 esi, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	88 85 1b ff ff
	ff		 mov	 BYTE PTR tv89[ebp], al
  00088	eb 0c		 jmp	 SHORT $LN7@VisitEnter
$LN6@VisitEnter:
  0008a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	8a 51 4d	 mov	 dl, BYTE PTR [ecx+77]
  00090	88 95 1b ff ff
	ff		 mov	 BYTE PTR tv89[ebp], dl
$LN7@VisitEnter:
  00096	8a 85 1b ff ff
	ff		 mov	 al, BYTE PTR tv89[ebp]
  0009c	88 45 e3	 mov	 BYTE PTR _compactMode$[ebp], al
; Line 2422
  0009f	0f b6 45 e3	 movzx	 eax, BYTE PTR _compactMode$[ebp]
  000a3	50		 push	 eax
  000a4	8b 4d 08	 mov	 ecx, DWORD PTR _element$[ebp]
  000a7	e8 00 00 00 00	 call	 ?Name@XMLElement@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLElement::Name
  000ac	50		 push	 eax
  000ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	e8 00 00 00 00	 call	 ?OpenElement@XMLPrinter@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLPrinter::OpenElement
$LN2@VisitEnter:
; Line 2423
  000b5	83 7d 0c 00	 cmp	 DWORD PTR _attribute$[ebp], 0
  000b9	74 27		 je	 SHORT $LN1@VisitEnter
; Line 2424
  000bb	8b 4d 0c	 mov	 ecx, DWORD PTR _attribute$[ebp]
  000be	e8 00 00 00 00	 call	 ?Value@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Value
  000c3	50		 push	 eax
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR _attribute$[ebp]
  000c7	e8 00 00 00 00	 call	 ?Name@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Name
  000cc	50		 push	 eax
  000cd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d0	e8 00 00 00 00	 call	 ?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD0@Z ; tinyxml2::XMLPrinter::PushAttribute
; Line 2425
  000d5	8b 4d 0c	 mov	 ecx, DWORD PTR _attribute$[ebp]
  000d8	e8 00 00 00 00	 call	 ?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLAttribute::Next
  000dd	89 45 0c	 mov	 DWORD PTR _attribute$[ebp], eax
; Line 2426
  000e0	eb d3		 jmp	 SHORT $LN2@VisitEnter
$LN1@VisitEnter:
; Line 2427
  000e2	b0 01		 mov	 al, 1
; Line 2428
  000e4	5f		 pop	 edi
  000e5	5e		 pop	 esi
  000e6	5b		 pop	 ebx
  000e7	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  000ed	3b ec		 cmp	 ebp, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 08 00	 ret	 8
?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z ENDP ; tinyxml2::XMLPrinter::VisitEnter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z PROC ; tinyxml2::XMLPrinter::VisitExit, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 2026
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2027
  00023	b0 01		 mov	 al, 1
; Line 2028
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?VisitExit@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z ENDP ; tinyxml2::XMLPrinter::VisitExit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_doc$ = 8						; size = 4
?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z PROC ; tinyxml2::XMLPrinter::VisitEnter, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2406
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2407
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _doc$[ebp]
  00026	e8 00 00 00 00	 call	 ?ProcessEntities@XMLDocument@tinyxml2@@QBE_NXZ ; tinyxml2::XMLDocument::ProcessEntities
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	88 41 4c	 mov	 BYTE PTR [ecx+76], al
; Line 2408
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _doc$[ebp]
  00034	e8 00 00 00 00	 call	 ?HasBOM@XMLDocument@tinyxml2@@QBE_NXZ ; tinyxml2::XMLDocument::HasBOM
  00039	0f b6 c0	 movzx	 eax, al
  0003c	85 c0		 test	 eax, eax
  0003e	74 0c		 je	 SHORT $LN1@VisitEnter
; Line 2409
  00040	6a 00		 push	 0
  00042	6a 01		 push	 1
  00044	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ?PushHeader@XMLPrinter@tinyxml2@@QAEX_N0@Z ; tinyxml2::XMLPrinter::PushHeader
$LN1@VisitEnter:
; Line 2411
  0004c	b0 01		 mov	 al, 1
; Line 2412
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00057	3b ec		 cmp	 ebp, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
?VisitEnter@XMLPrinter@tinyxml2@@UAE_NABVXMLDocument@2@@Z ENDP ; tinyxml2::XMLPrinter::VisitEnter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushUnknown@XMLPrinter@tinyxml2@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?PushUnknown@XMLPrinter@tinyxml2@@QAEXPBD@Z PROC	; tinyxml2::XMLPrinter::PushUnknown, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2394
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2395
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?SealElementIfJustOpened@XMLPrinter@tinyxml2@@IAEXXZ ; tinyxml2::XMLPrinter::SealElementIfJustOpened
; Line 2396
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00032	7d 44		 jge	 SHORT $LN1@PushUnknow
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	0f b6 48 3c	 movzx	 ecx, BYTE PTR [eax+60]
  0003b	85 c9		 test	 ecx, ecx
  0003d	75 39		 jne	 SHORT $LN1@PushUnknow
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	0f b6 48 4d	 movzx	 ecx, BYTE PTR [eax+77]
  00046	85 c9		 test	 ecx, ecx
  00048	75 2e		 jne	 SHORT $LN1@PushUnknow
; Line 2397
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  0004f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00058	83 c4 08	 add	 esp, 8
; Line 2398
  0005b	8b f4		 mov	 esi, esp
  0005d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00063	51		 push	 ecx
  00064	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00067	8b 02		 mov	 eax, DWORD PTR [edx]
  00069	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  0006f	ff d2		 call	 edx
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@PushUnknow:
; Line 2400
  00078	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	c6 40 3c 00	 mov	 BYTE PTR [eax+60], 0
; Line 2401
  0007f	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00082	50		 push	 eax
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_05EBLKANEG@?$DM?$CB?$CFs?$DO?$AA@
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	51		 push	 ecx
  0008c	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2402
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
?PushUnknown@XMLPrinter@tinyxml2@@QAEXPBD@Z ENDP	; tinyxml2::XMLPrinter::PushUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushDeclaration@XMLPrinter@tinyxml2@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?PushDeclaration@XMLPrinter@tinyxml2@@QAEXPBD@Z PROC	; tinyxml2::XMLPrinter::PushDeclaration, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2382
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2383
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?SealElementIfJustOpened@XMLPrinter@tinyxml2@@IAEXXZ ; tinyxml2::XMLPrinter::SealElementIfJustOpened
; Line 2384
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00032	7d 44		 jge	 SHORT $LN1@PushDeclar
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	0f b6 48 3c	 movzx	 ecx, BYTE PTR [eax+60]
  0003b	85 c9		 test	 ecx, ecx
  0003d	75 39		 jne	 SHORT $LN1@PushDeclar
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	0f b6 48 4d	 movzx	 ecx, BYTE PTR [eax+77]
  00046	85 c9		 test	 ecx, ecx
  00048	75 2e		 jne	 SHORT $LN1@PushDeclar
; Line 2385
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  0004f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00058	83 c4 08	 add	 esp, 8
; Line 2386
  0005b	8b f4		 mov	 esi, esp
  0005d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00063	51		 push	 ecx
  00064	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00067	8b 02		 mov	 eax, DWORD PTR [edx]
  00069	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  0006f	ff d2		 call	 edx
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@PushDeclar:
; Line 2388
  00078	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	c6 40 3c 00	 mov	 BYTE PTR [eax+60], 0
; Line 2389
  0007f	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00082	50		 push	 eax
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_06OGCFEMAJ@?$DM?$DP?$CFs?$DP?$DO?$AA@
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	51		 push	 ecx
  0008c	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2390
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
?PushDeclaration@XMLPrinter@tinyxml2@@QAEXPBD@Z ENDP	; tinyxml2::XMLPrinter::PushDeclaration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushComment@XMLPrinter@tinyxml2@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_comment$ = 8						; size = 4
?PushComment@XMLPrinter@tinyxml2@@QAEXPBD@Z PROC	; tinyxml2::XMLPrinter::PushComment, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2370
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2371
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?SealElementIfJustOpened@XMLPrinter@tinyxml2@@IAEXXZ ; tinyxml2::XMLPrinter::SealElementIfJustOpened
; Line 2372
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00032	7d 44		 jge	 SHORT $LN1@PushCommen
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	0f b6 48 3c	 movzx	 ecx, BYTE PTR [eax+60]
  0003b	85 c9		 test	 ecx, ecx
  0003d	75 39		 jne	 SHORT $LN1@PushCommen
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	0f b6 48 4d	 movzx	 ecx, BYTE PTR [eax+77]
  00046	85 c9		 test	 ecx, ecx
  00048	75 2e		 jne	 SHORT $LN1@PushCommen
; Line 2373
  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  0004f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00058	83 c4 08	 add	 esp, 8
; Line 2374
  0005b	8b f4		 mov	 esi, esp
  0005d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00063	51		 push	 ecx
  00064	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00067	8b 02		 mov	 eax, DWORD PTR [edx]
  00069	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  0006f	ff d2		 call	 edx
  00071	3b f4		 cmp	 esi, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@PushCommen:
; Line 2376
  00078	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	c6 40 3c 00	 mov	 BYTE PTR [eax+60], 0
; Line 2377
  0007f	8b 45 08	 mov	 eax, DWORD PTR _comment$[ebp]
  00082	50		 push	 eax
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_09PNDCPLLD@?$DM?$CB?9?9?$CFs?9?9?$DO?$AA@
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	51		 push	 ecx
  0008c	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2378
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 04 00	 ret	 4
?PushComment@XMLPrinter@tinyxml2@@QAEXPBD@Z ENDP	; tinyxml2::XMLPrinter::PushComment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushText@XMLPrinter@tinyxml2@@QAEXN@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_value$ = 8						; size = 8
?PushText@XMLPrinter@tinyxml2@@QAEXN@Z PROC		; tinyxml2::XMLPrinter::PushText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2362
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2364
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	83 ec 08	 sub	 esp, 8
  0003c	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _value$[ebp]
  00041	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00046	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXNPADH@Z ; tinyxml2::XMLUtil::ToStr
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 2365
  0004e	6a 00		 push	 0
  00050	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00056	50		 push	 eax
  00057	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?PushText@XMLPrinter@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLPrinter::PushText
; Line 2366
  0005f	52		 push	 edx
  00060	8b cd		 mov	 ecx, ebp
  00062	50		 push	 eax
  00063	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@PushText
  00069	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006e	58		 pop	 eax
  0006f	5a		 pop	 edx
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00076	33 cd		 xor	 ecx, ebp
  00078	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007d	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 08 00	 ret	 8
$LN5@PushText:
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN4@PushText
$LN4@PushText:
  00098	24 ff ff ff	 DD	 -220			; ffffff24H
  0009c	c8 00 00 00	 DD	 200			; 000000c8H
  000a0	00 00 00 00	 DD	 $LN3@PushText
$LN3@PushText:
  000a4	62		 DB	 98			; 00000062H
  000a5	75		 DB	 117			; 00000075H
  000a6	66		 DB	 102			; 00000066H
  000a7	00		 DB	 0
?PushText@XMLPrinter@tinyxml2@@QAEXN@Z ENDP		; tinyxml2::XMLPrinter::PushText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushText@XMLPrinter@tinyxml2@@QAEXM@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_value$ = 8						; size = 4
?PushText@XMLPrinter@tinyxml2@@QAEXM@Z PROC		; tinyxml2::XMLPrinter::PushText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2354
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2356
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	51		 push	 ecx
  0003a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _value$[ebp]
  0003f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00044	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXMPADH@Z ; tinyxml2::XMLUtil::ToStr
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2357
  0004c	6a 00		 push	 0
  0004e	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00054	50		 push	 eax
  00055	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?PushText@XMLPrinter@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLPrinter::PushText
; Line 2358
  0005d	52		 push	 edx
  0005e	8b cd		 mov	 ecx, ebp
  00060	50		 push	 eax
  00061	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@PushText
  00067	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006c	58		 pop	 eax
  0006d	5a		 pop	 edx
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00074	33 cd		 xor	 ecx, ebp
  00076	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007b	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  00081	3b ec		 cmp	 ebp, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 04 00	 ret	 4
  0008e	8b ff		 npad	 2
$LN5@PushText:
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN4@PushText
$LN4@PushText:
  00098	24 ff ff ff	 DD	 -220			; ffffff24H
  0009c	c8 00 00 00	 DD	 200			; 000000c8H
  000a0	00 00 00 00	 DD	 $LN3@PushText
$LN3@PushText:
  000a4	62		 DB	 98			; 00000062H
  000a5	75		 DB	 117			; 00000075H
  000a6	66		 DB	 102			; 00000066H
  000a7	00		 DB	 0
?PushText@XMLPrinter@tinyxml2@@QAEXM@Z ENDP		; tinyxml2::XMLPrinter::PushText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushText@XMLPrinter@tinyxml2@@QAEX_N@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_value$ = 8						; size = 1
?PushText@XMLPrinter@tinyxml2@@QAEX_N@Z PROC		; tinyxml2::XMLPrinter::PushText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2346
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2348
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	0f b6 4d 08	 movzx	 ecx, BYTE PTR _value$[ebp]
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAX_NPADH@Z ; tinyxml2::XMLUtil::ToStr
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2349
  00046	6a 00		 push	 0
  00048	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?PushText@XMLPrinter@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLPrinter::PushText
; Line 2350
  00057	52		 push	 edx
  00058	8b cd		 mov	 ecx, ebp
  0005a	50		 push	 eax
  0005b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@PushText
  00061	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00066	58		 pop	 eax
  00067	5a		 pop	 edx
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006e	33 cd		 xor	 ecx, ebp
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  0007b	3b ec		 cmp	 ebp, esp
  0007d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
$LN5@PushText:
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN4@PushText
$LN4@PushText:
  00090	24 ff ff ff	 DD	 -220			; ffffff24H
  00094	c8 00 00 00	 DD	 200			; 000000c8H
  00098	00 00 00 00	 DD	 $LN3@PushText
$LN3@PushText:
  0009c	62		 DB	 98			; 00000062H
  0009d	75		 DB	 117			; 00000075H
  0009e	66		 DB	 102			; 00000066H
  0009f	00		 DB	 0
?PushText@XMLPrinter@tinyxml2@@QAEX_N@Z ENDP		; tinyxml2::XMLPrinter::PushText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushText@XMLPrinter@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_value$ = 8						; size = 4
?PushText@XMLPrinter@tinyxml2@@QAEXI@Z PROC		; tinyxml2::XMLPrinter::PushText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2338
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2340
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	8b 4d 08	 mov	 ecx, DWORD PTR _value$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXIPADH@Z ; tinyxml2::XMLUtil::ToStr
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2341
  00045	6a 00		 push	 0
  00047	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?PushText@XMLPrinter@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLPrinter::PushText
; Line 2342
  00056	52		 push	 edx
  00057	8b cd		 mov	 ecx, ebp
  00059	50		 push	 eax
  0005a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@PushText
  00060	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00065	58		 pop	 eax
  00066	5a		 pop	 edx
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006d	33 cd		 xor	 ecx, ebp
  0006f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00074	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
  00087	90		 npad	 1
$LN5@PushText:
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN4@PushText
$LN4@PushText:
  00090	24 ff ff ff	 DD	 -220			; ffffff24H
  00094	c8 00 00 00	 DD	 200			; 000000c8H
  00098	00 00 00 00	 DD	 $LN3@PushText
$LN3@PushText:
  0009c	62		 DB	 98			; 00000062H
  0009d	75		 DB	 117			; 00000075H
  0009e	66		 DB	 102			; 00000066H
  0009f	00		 DB	 0
?PushText@XMLPrinter@tinyxml2@@QAEXI@Z ENDP		; tinyxml2::XMLPrinter::PushText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushText@XMLPrinter@tinyxml2@@QAEXH@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_value$ = 8						; size = 4
?PushText@XMLPrinter@tinyxml2@@QAEXH@Z PROC		; tinyxml2::XMLPrinter::PushText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2330
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2332
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	8b 4d 08	 mov	 ecx, DWORD PTR _value$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXHPADH@Z ; tinyxml2::XMLUtil::ToStr
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2333
  00045	6a 00		 push	 0
  00047	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?PushText@XMLPrinter@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLPrinter::PushText
; Line 2334
  00056	52		 push	 edx
  00057	8b cd		 mov	 ecx, ebp
  00059	50		 push	 eax
  0005a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@PushText
  00060	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00065	58		 pop	 eax
  00066	5a		 pop	 edx
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006d	33 cd		 xor	 ecx, ebp
  0006f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00074	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
  00087	90		 npad	 1
$LN5@PushText:
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN4@PushText
$LN4@PushText:
  00090	24 ff ff ff	 DD	 -220			; ffffff24H
  00094	c8 00 00 00	 DD	 200			; 000000c8H
  00098	00 00 00 00	 DD	 $LN3@PushText
$LN3@PushText:
  0009c	62		 DB	 98			; 00000062H
  0009d	75		 DB	 117			; 00000075H
  0009e	66		 DB	 102			; 00000066H
  0009f	00		 DB	 0
?PushText@XMLPrinter@tinyxml2@@QAEXH@Z ENDP		; tinyxml2::XMLPrinter::PushText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushText@XMLPrinter@tinyxml2@@QAEXPBD_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_cdata$ = 12						; size = 1
?PushText@XMLPrinter@tinyxml2@@QAEXPBD_N@Z PROC		; tinyxml2::XMLPrinter::PushText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2317
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2318
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00029	83 e9 01	 sub	 ecx, 1
  0002c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	89 4a 48	 mov	 DWORD PTR [edx+72], ecx
; Line 2320
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?SealElementIfJustOpened@XMLPrinter@tinyxml2@@IAEXXZ ; tinyxml2::XMLPrinter::SealElementIfJustOpened
; Line 2321
  0003a	0f b6 45 0c	 movzx	 eax, BYTE PTR _cdata$[ebp]
  0003e	85 c0		 test	 eax, eax
  00040	74 17		 je	 SHORT $LN2@PushText
; Line 2322
  00042	8b 45 08	 mov	 eax, DWORD PTR _text$[ebp]
  00045	50		 push	 eax
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FBMMJGJN@?$DM?$CB?$FLCDATA?$FL?$CFs?$FN?$FN?$DO?$AA@
  0004b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00054	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2324
  00057	eb 0e		 jmp	 SHORT $LN3@PushText
$LN2@PushText:
; Line 2325
  00059	6a 01		 push	 1
  0005b	8b 45 08	 mov	 eax, DWORD PTR _text$[ebp]
  0005e	50		 push	 eax
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?PrintString@XMLPrinter@tinyxml2@@AAEXPBD_N@Z ; tinyxml2::XMLPrinter::PrintString
$LN3@PushText:
; Line 2327
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 08 00	 ret	 8
?PushText@XMLPrinter@tinyxml2@@QAEXPBD_N@Z ENDP		; tinyxml2::XMLPrinter::PushText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CloseElement@XMLPrinter@tinyxml2@@UAEX_N@Z
_TEXT	SEGMENT
_name$ = -20						; size = 4
_this$ = -8						; size = 4
_compactMode$ = 8					; size = 1
?CloseElement@XMLPrinter@tinyxml2@@UAEX_N@Z PROC	; tinyxml2::XMLPrinter::CloseElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2281
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2282
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00029	83 e9 01	 sub	 ecx, 1
  0002c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	89 4a 44	 mov	 DWORD PTR [edx+68], ecx
; Line 2283
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	83 c1 08	 add	 ecx, 8
  00038	e8 00 00 00 00	 call	 ?Pop@?$DynArray@PBD$09@tinyxml2@@QAEPBDXZ ; tinyxml2::DynArray<char const *,10>::Pop
  0003d	89 45 ec	 mov	 DWORD PTR _name$[ebp], eax
; Line 2285
  00040	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00043	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00047	85 c9		 test	 ecx, ecx
  00049	74 13		 je	 SHORT $LN5@CloseEleme
; Line 2286
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_02HCGKDMEN@?1?$DO?$AA@
  00050	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00059	83 c4 08	 add	 esp, 8
; Line 2288
  0005c	eb 54		 jmp	 SHORT $LN4@CloseEleme
$LN5@CloseEleme:
; Line 2289
  0005e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00061	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00065	7d 36		 jge	 SHORT $LN3@CloseEleme
  00067	0f b6 45 08	 movzx	 eax, BYTE PTR _compactMode$[ebp]
  0006b	85 c0		 test	 eax, eax
  0006d	75 2e		 jne	 SHORT $LN3@CloseEleme
; Line 2290
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  00074	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  0007d	83 c4 08	 add	 esp, 8
; Line 2291
  00080	8b f4		 mov	 esi, esp
  00082	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00088	51		 push	 ecx
  00089	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0008c	8b 02		 mov	 eax, DWORD PTR [edx]
  0008e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  00094	ff d2		 call	 edx
  00096	3b f4		 cmp	 esi, esp
  00098	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@CloseEleme:
; Line 2293
  0009d	8b 45 ec	 mov	 eax, DWORD PTR _name$[ebp]
  000a0	50		 push	 eax
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_05POIKLDCH@?$DM?1?$CFs?$DO?$AA@
  000a6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  000af	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@CloseEleme:
; Line 2296
  000b2	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	8b 50 48	 mov	 edx, DWORD PTR [eax+72]
  000bb	3b 51 44	 cmp	 edx, DWORD PTR [ecx+68]
  000be	75 0a		 jne	 SHORT $LN2@CloseEleme
; Line 2297
  000c0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c3	c7 40 48 ff ff
	ff ff		 mov	 DWORD PTR [eax+72], -1
$LN2@CloseEleme:
; Line 2299
  000ca	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  000d1	75 19		 jne	 SHORT $LN1@CloseEleme
  000d3	0f b6 45 08	 movzx	 eax, BYTE PTR _compactMode$[ebp]
  000d7	85 c0		 test	 eax, eax
  000d9	75 11		 jne	 SHORT $LN1@CloseEleme
; Line 2300
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  000e0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  000e9	83 c4 08	 add	 esp, 8
$LN1@CloseEleme:
; Line 2302
  000ec	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ef	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
; Line 2303
  000f3	5f		 pop	 edi
  000f4	5e		 pop	 esi
  000f5	5b		 pop	 ebx
  000f6	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000fc	3b ec		 cmp	 ebp, esp
  000fe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 04 00	 ret	 4
?CloseElement@XMLPrinter@tinyxml2@@UAEX_N@Z ENDP	; tinyxml2::XMLPrinter::CloseElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBDN@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_v$ = 12						; size = 8
?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBDN@Z PROC	; tinyxml2::XMLPrinter::PushAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2273
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2275
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	83 ec 08	 sub	 esp, 8
  0003c	f2 0f 10 45 0c	 movsd	 xmm0, QWORD PTR _v$[ebp]
  00041	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00046	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXNPADH@Z ; tinyxml2::XMLUtil::ToStr
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 2276
  0004e	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _name$[ebp]
  00058	51		 push	 ecx
  00059	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD0@Z ; tinyxml2::XMLPrinter::PushAttribute
; Line 2277
  00061	52		 push	 edx
  00062	8b cd		 mov	 ecx, ebp
  00064	50		 push	 eax
  00065	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@PushAttrib
  0006b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00070	58		 pop	 eax
  00071	5a		 pop	 edx
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
  00075	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00078	33 cd		 xor	 ecx, ebp
  0007a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007f	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  00085	3b ec		 cmp	 ebp, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 0c 00	 ret	 12			; 0000000cH
  00092	8b ff		 npad	 2
$LN5@PushAttrib:
  00094	01 00 00 00	 DD	 1
  00098	00 00 00 00	 DD	 $LN4@PushAttrib
$LN4@PushAttrib:
  0009c	24 ff ff ff	 DD	 -220			; ffffff24H
  000a0	c8 00 00 00	 DD	 200			; 000000c8H
  000a4	00 00 00 00	 DD	 $LN3@PushAttrib
$LN3@PushAttrib:
  000a8	62		 DB	 98			; 00000062H
  000a9	75		 DB	 117			; 00000075H
  000aa	66		 DB	 102			; 00000066H
  000ab	00		 DB	 0
?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBDN@Z ENDP	; tinyxml2::XMLPrinter::PushAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD_N@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_v$ = 12						; size = 1
?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD_N@Z PROC	; tinyxml2::XMLPrinter::PushAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2265
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2267
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _v$[ebp]
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAX_NPADH@Z ; tinyxml2::XMLUtil::ToStr
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2268
  00046	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _name$[ebp]
  00050	51		 push	 ecx
  00051	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD0@Z ; tinyxml2::XMLPrinter::PushAttribute
; Line 2269
  00059	52		 push	 edx
  0005a	8b cd		 mov	 ecx, ebp
  0005c	50		 push	 eax
  0005d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@PushAttrib
  00063	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00068	58		 pop	 eax
  00069	5a		 pop	 edx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00070	33 cd		 xor	 ecx, ebp
  00072	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00077	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 08 00	 ret	 8
  0008a	8b ff		 npad	 2
$LN5@PushAttrib:
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN4@PushAttrib
$LN4@PushAttrib:
  00094	24 ff ff ff	 DD	 -220			; ffffff24H
  00098	c8 00 00 00	 DD	 200			; 000000c8H
  0009c	00 00 00 00	 DD	 $LN3@PushAttrib
$LN3@PushAttrib:
  000a0	62		 DB	 98			; 00000062H
  000a1	75		 DB	 117			; 00000075H
  000a2	66		 DB	 102			; 00000066H
  000a3	00		 DB	 0
?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD_N@Z ENDP	; tinyxml2::XMLPrinter::PushAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBDI@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_v$ = 12						; size = 4
?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBDI@Z PROC	; tinyxml2::XMLPrinter::PushAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2257
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2259
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXIPADH@Z ; tinyxml2::XMLUtil::ToStr
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2260
  00045	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _name$[ebp]
  0004f	51		 push	 ecx
  00050	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD0@Z ; tinyxml2::XMLPrinter::PushAttribute
; Line 2261
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@PushAttrib
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006f	33 cd		 xor	 ecx, ebp
  00071	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00076	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  0007c	3b ec		 cmp	 ebp, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
  00089	8d 49 00	 npad	 3
$LN5@PushAttrib:
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN4@PushAttrib
$LN4@PushAttrib:
  00094	24 ff ff ff	 DD	 -220			; ffffff24H
  00098	c8 00 00 00	 DD	 200			; 000000c8H
  0009c	00 00 00 00	 DD	 $LN3@PushAttrib
$LN3@PushAttrib:
  000a0	62		 DB	 98			; 00000062H
  000a1	75		 DB	 117			; 00000075H
  000a2	66		 DB	 102			; 00000066H
  000a3	00		 DB	 0
?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBDI@Z ENDP	; tinyxml2::XMLPrinter::PushAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBDH@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_v$ = 12						; size = 4
?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBDH@Z PROC	; tinyxml2::XMLPrinter::PushAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2249
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2251
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXHPADH@Z ; tinyxml2::XMLUtil::ToStr
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2252
  00045	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _name$[ebp]
  0004f	51		 push	 ecx
  00050	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	e8 00 00 00 00	 call	 ?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD0@Z ; tinyxml2::XMLPrinter::PushAttribute
; Line 2253
  00058	52		 push	 edx
  00059	8b cd		 mov	 ecx, ebp
  0005b	50		 push	 eax
  0005c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@PushAttrib
  00062	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00067	58		 pop	 eax
  00068	5a		 pop	 edx
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006f	33 cd		 xor	 ecx, ebp
  00071	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00076	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  0007c	3b ec		 cmp	 ebp, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
  00089	8d 49 00	 npad	 3
$LN5@PushAttrib:
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN4@PushAttrib
$LN4@PushAttrib:
  00094	24 ff ff ff	 DD	 -220			; ffffff24H
  00098	c8 00 00 00	 DD	 200			; 000000c8H
  0009c	00 00 00 00	 DD	 $LN3@PushAttrib
$LN3@PushAttrib:
  000a0	62		 DB	 98			; 00000062H
  000a1	75		 DB	 117			; 00000075H
  000a2	66		 DB	 102			; 00000066H
  000a3	00		 DB	 0
?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBDH@Z ENDP	; tinyxml2::XMLPrinter::PushAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD0@Z PROC	; tinyxml2::XMLPrinter::PushAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2240
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2241
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0002a	85 c9		 test	 ecx, ecx
  0002c	75 01		 jne	 SHORT $LN1@PushAttrib
  0002e	cc		 int	 3
$LN1@PushAttrib:
; Line 2242
  0002f	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00032	50		 push	 eax
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_05LCDLMEIP@?5?$CFs?$DN?$CC?$AA@
  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2243
  00044	6a 00		 push	 0
  00046	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  00049	50		 push	 eax
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?PrintString@XMLPrinter@tinyxml2@@AAEXPBD_N@Z ; tinyxml2::XMLPrinter::PrintString
; Line 2244
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
  00057	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00060	83 c4 08	 add	 esp, 8
; Line 2245
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?PushAttribute@XMLPrinter@tinyxml2@@QAEXPBD0@Z ENDP	; tinyxml2::XMLPrinter::PushAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?OpenElement@XMLPrinter@tinyxml2@@QAEXPBD_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_compactMode$ = 12					; size = 1
?OpenElement@XMLPrinter@tinyxml2@@QAEXPBD_N@Z PROC	; tinyxml2::XMLPrinter::OpenElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2221
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2222
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?SealElementIfJustOpened@XMLPrinter@tinyxml2@@IAEXXZ ; tinyxml2::XMLPrinter::SealElementIfJustOpened
; Line 2223
  0002b	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 08	 add	 ecx, 8
  00035	e8 00 00 00 00	 call	 ?Push@?$DynArray@PBD$09@tinyxml2@@QAEXPBD@Z ; tinyxml2::DynArray<char const *,10>::Push
; Line 2225
  0003a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00041	7d 24		 jge	 SHORT $LN2@OpenElemen
  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	0f b6 48 3c	 movzx	 ecx, BYTE PTR [eax+60]
  0004a	85 c9		 test	 ecx, ecx
  0004c	75 19		 jne	 SHORT $LN2@OpenElemen
  0004e	0f b6 45 0c	 movzx	 eax, BYTE PTR _compactMode$[ebp]
  00052	85 c0		 test	 eax, eax
  00054	75 11		 jne	 SHORT $LN2@OpenElemen
; Line 2226
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  0005b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  00064	83 c4 08	 add	 esp, 8
$LN2@OpenElemen:
; Line 2228
  00067	0f b6 45 0c	 movzx	 eax, BYTE PTR _compactMode$[ebp]
  0006b	85 c0		 test	 eax, eax
  0006d	75 1d		 jne	 SHORT $LN1@OpenElemen
; Line 2229
  0006f	8b f4		 mov	 esi, esp
  00071	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00077	51		 push	 ecx
  00078	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007b	8b 02		 mov	 eax, DWORD PTR [edx]
  0007d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  00083	ff d2		 call	 edx
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@OpenElemen:
; Line 2232
  0008c	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  0008f	50		 push	 eax
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_03FONCMJME@?$DM?$CFs?$AA@
  00095	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  0009e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2233
  000a1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
; Line 2234
  000a8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ab	c6 40 3c 00	 mov	 BYTE PTR [eax+60], 0
; Line 2235
  000af	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b2	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  000b5	83 c1 01	 add	 ecx, 1
  000b8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000bb	89 4a 44	 mov	 DWORD PTR [edx+68], ecx
; Line 2236
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000c7	3b ec		 cmp	 ebp, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ce	8b e5		 mov	 esp, ebp
  000d0	5d		 pop	 ebp
  000d1	c2 08 00	 ret	 8
?OpenElement@XMLPrinter@tinyxml2@@QAEXPBD_N@Z ENDP	; tinyxml2::XMLPrinter::OpenElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PushHeader@XMLPrinter@tinyxml2@@QAEX_N0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_writeBOM$ = 8						; size = 1
_writeDec$ = 12						; size = 1
?PushHeader@XMLPrinter@tinyxml2@@QAEX_N0@Z PROC		; tinyxml2::XMLPrinter::PushHeader, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2209
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2210
  00023	0f b6 45 08	 movzx	 eax, BYTE PTR _writeBOM$[ebp]
  00027	85 c0		 test	 eax, eax
  00029	74 16		 je	 SHORT $LN2@PushHeader
; Line 2212
  0002b	68 00 00 00 00	 push	 OFFSET ?bom@?4??PushHeader@XMLPrinter@tinyxml2@@QAEX_N0@Z@4QBEB
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?Print@XMLPrinter@tinyxml2@@IAAXPBDZZ ; tinyxml2::XMLPrinter::Print
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@PushHeader:
; Line 2214
  00041	0f b6 45 0c	 movzx	 eax, BYTE PTR _writeDec$[ebp]
  00045	85 c0		 test	 eax, eax
  00047	74 0d		 je	 SHORT $LN3@PushHeader
; Line 2215
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CIAMHNHO@xml?5version?$DN?$CC1?40?$CC?$AA@
  0004e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?PushDeclaration@XMLPrinter@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLPrinter::PushDeclaration
$LN3@PushHeader:
; Line 2217
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 08 00	 ret	 8
?PushHeader@XMLPrinter@tinyxml2@@QAEX_N0@Z ENDP		; tinyxml2::XMLPrinter::PushHeader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1XMLPrinter@tinyxml2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1XMLPrinter@tinyxml2@@UAE@XZ PROC			; tinyxml2::XMLPrinter::~XMLPrinter, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1989
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1XMLPrinter@tinyxml2@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLPrinter@tinyxml2@@6B@
  0004b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00052	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  0005b	e8 00 00 00 00	 call	 ??1?$DynArray@D$0BE@@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<char,20>::~DynArray<char,20>
  00060	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00064	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	83 c1 08	 add	 ecx, 8
  0006a	e8 00 00 00 00	 call	 ??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<char const *,10>::~DynArray<char const *,10>
  0006f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00076	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	e8 00 00 00 00	 call	 ??1XMLVisitor@tinyxml2@@UAE@XZ ; tinyxml2::XMLVisitor::~XMLVisitor
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1XMLPrinter@tinyxml2@@UAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1XMLVisitor@tinyxml2@@UAE@XZ ; tinyxml2::XMLVisitor::~XMLVisitor
__unwindfunclet$??1XMLPrinter@tinyxml2@@UAE@XZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 08	 add	 ecx, 8
  0000e	e9 00 00 00 00	 jmp	 ??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<char const *,10>::~DynArray<char const *,10>
__ehhandler$??1XMLPrinter@tinyxml2@@UAE@XZ:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1XMLPrinter@tinyxml2@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1XMLPrinter@tinyxml2@@UAE@XZ ENDP			; tinyxml2::XMLPrinter::~XMLPrinter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z
_TEXT	SEGMENT
tv146 = -256						; size = 4
_entityValue$2 = -53					; size = 1
_i$3 = -44						; size = 4
_i$4 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_file$ = 8						; size = 4
_compact$ = 12						; size = 1
_depth$ = 16						; size = 4
??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z PROC	; tinyxml2::XMLPrinter::XMLPrinter, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2111
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec f4 00 00
	00		 sub	 esp, 244		; 000000f4H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 00 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-256]
  00021	b9 3d 00 00 00	 mov	 ecx, 61			; 0000003dH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0XMLVisitor@tinyxml2@@QAE@XZ
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00054	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLPrinter@tinyxml2@@6B@
  0005a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	83 c1 08	 add	 ecx, 8
  00067	e8 00 00 00 00	 call	 ??0?$DynArray@PBD$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<char const *,10>::DynArray<char const *,10>
  0006c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00070	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00073	c6 40 3c 01	 mov	 BYTE PTR [eax+60], 1
  00077	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 4d 08	 mov	 ecx, DWORD PTR _file$[ebp]
  0007d	89 48 40	 mov	 DWORD PTR [eax+64], ecx
  00080	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 4d 10	 mov	 ecx, DWORD PTR _depth$[ebp]
  00086	89 48 44	 mov	 DWORD PTR [eax+68], ecx
  00089	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	c7 40 48 ff ff
	ff ff		 mov	 DWORD PTR [eax+72], -1
  00093	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00096	c6 40 4c 01	 mov	 BYTE PTR [eax+76], 1
  0009a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	8a 4d 0c	 mov	 cl, BYTE PTR _compact$[ebp]
  000a0	88 48 4d	 mov	 BYTE PTR [eax+77], cl
  000a3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  000ac	e8 00 00 00 00	 call	 ??0?$DynArray@D$0BE@@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<char,20>::DynArray<char,20>
  000b1	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; Line 2112
  000b5	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$4[ebp], 0
  000bc	eb 09		 jmp	 SHORT $LN7@XMLPrinter
$LN6@XMLPrinter:
  000be	8b 45 e0	 mov	 eax, DWORD PTR _i$4[ebp]
  000c1	83 c0 01	 add	 eax, 1
  000c4	89 45 e0	 mov	 DWORD PTR _i$4[ebp], eax
$LN7@XMLPrinter:
  000c7	83 7d e0 40	 cmp	 DWORD PTR _i$4[ebp], 64	; 00000040H
  000cb	7d 19		 jge	 SHORT $LN5@XMLPrinter
; Line 2113
  000cd	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d0	03 45 e0	 add	 eax, DWORD PTR _i$4[ebp]
  000d3	c6 40 4e 00	 mov	 BYTE PTR [eax+78], 0
; Line 2114
  000d7	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000da	03 45 e0	 add	 eax, DWORD PTR _i$4[ebp]
  000dd	c6 80 8e 00 00
	00 00		 mov	 BYTE PTR [eax+142], 0
; Line 2115
  000e4	eb d8		 jmp	 SHORT $LN6@XMLPrinter
$LN5@XMLPrinter:
; Line 2116
  000e6	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  000ed	eb 09		 jmp	 SHORT $LN4@XMLPrinter
$LN3@XMLPrinter:
  000ef	8b 45 d4	 mov	 eax, DWORD PTR _i$3[ebp]
  000f2	83 c0 01	 add	 eax, 1
  000f5	89 45 d4	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@XMLPrinter:
  000f8	83 7d d4 05	 cmp	 DWORD PTR _i$3[ebp], 5
  000fc	7d 4c		 jge	 SHORT $LN2@XMLPrinter
; Line 2117
  000fe	6b 45 d4 0c	 imul	 eax, DWORD PTR _i$3[ebp], 12
  00102	8a 88 08 00 00
	00		 mov	 cl, BYTE PTR _entities[eax+8]
  00108	88 4d cb	 mov	 BYTE PTR _entityValue$2[ebp], cl
; Line 2118
  0010b	0f be 45 cb	 movsx	 eax, BYTE PTR _entityValue$2[ebp]
  0010f	85 c0		 test	 eax, eax
  00111	7c 15		 jl	 SHORT $LN10@XMLPrinter
  00113	0f be 4d cb	 movsx	 ecx, BYTE PTR _entityValue$2[ebp]
  00117	83 f9 40	 cmp	 ecx, 64			; 00000040H
  0011a	7d 0c		 jge	 SHORT $LN10@XMLPrinter
  0011c	c7 85 00 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv146[ebp], 1
  00126	eb 0a		 jmp	 SHORT $LN11@XMLPrinter
$LN10@XMLPrinter:
  00128	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv146[ebp], 0
$LN11@XMLPrinter:
  00132	83 bd 00 ff ff
	ff 00		 cmp	 DWORD PTR tv146[ebp], 0
  00139	75 01		 jne	 SHORT $LN1@XMLPrinter
  0013b	cc		 int	 3
$LN1@XMLPrinter:
; Line 2119
  0013c	0f b6 45 cb	 movzx	 eax, BYTE PTR _entityValue$2[ebp]
  00140	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00143	c6 44 01 4e 01	 mov	 BYTE PTR [ecx+eax+78], 1
; Line 2120
  00148	eb a5		 jmp	 SHORT $LN3@XMLPrinter
$LN2@XMLPrinter:
; Line 2121
  0014a	b8 01 00 00 00	 mov	 eax, 1
  0014f	6b c8 26	 imul	 ecx, eax, 38
  00152	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00155	c6 84 0a 8e 00
	00 00 01	 mov	 BYTE PTR [edx+ecx+142], 1
; Line 2122
  0015d	b8 01 00 00 00	 mov	 eax, 1
  00162	6b c8 3c	 imul	 ecx, eax, 60
  00165	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00168	c6 84 0a 8e 00
	00 00 01	 mov	 BYTE PTR [edx+ecx+142], 1
; Line 2123
  00170	b8 01 00 00 00	 mov	 eax, 1
  00175	6b c8 3e	 imul	 ecx, eax, 62
  00178	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0017b	c6 84 0a 8e 00
	00 00 01	 mov	 BYTE PTR [edx+ecx+142], 1
; Line 2124
  00183	6a 00		 push	 0
  00185	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00188	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  0018e	e8 00 00 00 00	 call	 ?Push@?$DynArray@D$0BE@@tinyxml2@@QAEXD@Z ; tinyxml2::DynArray<char,20>::Push
; Line 2125
  00193	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0019a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0019d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001a7	59		 pop	 ecx
  001a8	5f		 pop	 edi
  001a9	5e		 pop	 esi
  001aa	5b		 pop	 ebx
  001ab	81 c4 00 01 00
	00		 add	 esp, 256		; 00000100H
  001b1	3b ec		 cmp	 ebp, esp
  001b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b8	8b e5		 mov	 esp, ebp
  001ba	5d		 pop	 ebp
  001bb	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1XMLVisitor@tinyxml2@@UAE@XZ ; tinyxml2::XMLVisitor::~XMLVisitor
__unwindfunclet$??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 08	 add	 ecx, 8
  0000e	e9 00 00 00 00	 jmp	 ??1?$DynArray@PBD$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<char const *,10>::~DynArray<char const *,10>
__unwindfunclet$??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z$2:
  00013	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H
  0001c	e9 00 00 00 00	 jmp	 ??1?$DynArray@D$0BE@@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<char,20>::~DynArray<char,20>
__ehhandler$??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z:
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 8a fc fe ff
	ff		 mov	 ecx, DWORD PTR [edx-260]
  0002e	33 c8		 xor	 ecx, eax
  00030	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00035	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z
  0003a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ENDP	; tinyxml2::XMLPrinter::XMLPrinter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GXMLDocument@tinyxml2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GXMLDocument@tinyxml2@@UAEPAXI@Z PROC		; tinyxml2::XMLDocument::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1XMLDocument@tinyxml2@@UAE@XZ ; tinyxml2::XMLDocument::~XMLDocument
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_GXMLDocument@tinyxml2@@UAEPAXI@Z ENDP		; tinyxml2::XMLDocument::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Parse@XMLDocument@tinyxml2@@AAEXXZ
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
?Parse@XMLDocument@tinyxml2@@AAEXXZ PROC		; tinyxml2::XMLDocument::Parse, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2090
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2091
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?NoChildren@XMLNode@tinyxml2@@QBE_NXZ ; tinyxml2::XMLNode::NoChildren
  0002b	0f b6 c0	 movzx	 eax, al
  0002e	85 c0		 test	 eax, eax
  00030	75 01		 jne	 SHORT $LN3@Parse
  00032	cc		 int	 3
$LN3@Parse:
; Line 2092
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  0003a	75 01		 jne	 SHORT $LN2@Parse
  0003c	cc		 int	 3
$LN2@Parse:
; Line 2093
  0003d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00043	89 4d ec	 mov	 DWORD PTR _p$[ebp], ecx
; Line 2094
  00046	8b 45 ec	 mov	 eax, DWORD PTR _p$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPADPAD@Z ; tinyxml2::XMLUtil::SkipWhiteSpace
  0004f	83 c4 04	 add	 esp, 4
  00052	89 45 ec	 mov	 DWORD PTR _p$[ebp], eax
; Line 2095
  00055	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00058	83 c0 2c	 add	 eax, 44			; 0000002cH
  0005b	50		 push	 eax
  0005c	8b 4d ec	 mov	 ecx, DWORD PTR _p$[ebp]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ?ReadBOM@XMLUtil@tinyxml2@@SAPBDPBDPA_N@Z ; tinyxml2::XMLUtil::ReadBOM
  00065	83 c4 08	 add	 esp, 8
  00068	89 45 ec	 mov	 DWORD PTR _p$[ebp], eax
; Line 2096
  0006b	8b 45 ec	 mov	 eax, DWORD PTR _p$[ebp]
  0006e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00071	85 c9		 test	 ecx, ecx
  00073	75 10		 jne	 SHORT $LN1@Parse
; Line 2097
  00075	6a 00		 push	 0
  00077	6a 00		 push	 0
  00079	6a 0f		 push	 15			; 0000000fH
  0007b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 2098
  00083	eb 1c		 jmp	 SHORT $LN4@Parse
$LN1@Parse:
; Line 2100
  00085	8b f4		 mov	 esi, esp
  00087	6a 00		 push	 0
  00089	8b 45 ec	 mov	 eax, DWORD PTR _p$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	8b 11		 mov	 edx, DWORD PTR [ecx]
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00098	ff d0		 call	 eax
  0009a	3b f4		 cmp	 esi, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@Parse:
; Line 2101
  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000aa	3b ec		 cmp	 ebp, esp
  000ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
?Parse@XMLDocument@tinyxml2@@AAEXXZ ENDP		; tinyxml2::XMLDocument::Parse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$MemPoolT@$0CM@@tinyxml2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$MemPoolT@$0CM@@tinyxml2@@UAEPAXI@Z PROC		; tinyxml2::MemPoolT<44>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<44>::~MemPoolT<44>
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_G?$MemPoolT@$0CM@@tinyxml2@@UAEPAXI@Z ENDP		; tinyxml2::MemPoolT<44>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@AAEXH@Z
_TEXT	SEGMENT
$T1 = -248						; size = 4
$T2 = -236						; size = 4
_newMem$3 = -32						; size = 4
_newAllocated$4 = -20					; size = 4
_this$ = -8						; size = 4
_cap$ = 8						; size = 4
?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@AAEXH@Z PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::EnsureCapacity, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 271
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00013	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 272
  00023	83 7d 08 00	 cmp	 DWORD PTR _cap$[ebp], 0
  00027	7f 01		 jg	 SHORT $LN4@EnsureCapa
  00029	cc		 int	 3
$LN4@EnsureCapa:
; Line 273
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _cap$[ebp]
  00030	3b 48 2c	 cmp	 ecx, DWORD PTR [eax+44]
  00033	0f 8e 91 00 00
	00		 jle	 $LN5@EnsureCapa
; Line 274
  00039	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR _cap$[ebp], 1073741823 ; 3fffffffH
  00040	7e 01		 jle	 SHORT $LN2@EnsureCapa
  00042	cc		 int	 3
$LN2@EnsureCapa:
; Line 275
  00043	8b 45 08	 mov	 eax, DWORD PTR _cap$[ebp]
  00046	d1 e0		 shl	 eax, 1
  00048	89 45 ec	 mov	 DWORD PTR _newAllocated$4[ebp], eax
; Line 276
  0004b	33 c9		 xor	 ecx, ecx
  0004d	8b 45 ec	 mov	 eax, DWORD PTR _newAllocated$4[ebp]
  00050	ba 04 00 00 00	 mov	 edx, 4
  00055	f7 e2		 mul	 edx
  00057	0f 90 c1	 seto	 cl
  0005a	f7 d9		 neg	 ecx
  0005c	0b c8		 or	 ecx, eax
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00064	83 c4 04	 add	 esp, 4
  00067	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0006d	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00073	89 45 e0	 mov	 DWORD PTR _newMem$3[ebp], eax
; Line 277
  00076	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00079	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0007c	c1 e1 02	 shl	 ecx, 2
  0007f	51		 push	 ecx
  00080	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 02		 mov	 eax, DWORD PTR [edx]
  00085	50		 push	 eax
  00086	8b 4d e0	 mov	 ecx, DWORD PTR _newMem$3[ebp]
  00089	51		 push	 ecx
  0008a	e8 00 00 00 00	 call	 _memcpy
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 278
  00092	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	83 c0 04	 add	 eax, 4
  00098	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	39 01		 cmp	 DWORD PTR [ecx], eax
  0009d	74 1a		 je	 SHORT $LN1@EnsureCapa
; Line 279
  0009f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a4	89 8d 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000aa	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  000b0	52		 push	 edx
  000b1	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000b6	83 c4 04	 add	 esp, 4
$LN1@EnsureCapa:
; Line 281
  000b9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bc	8b 4d e0	 mov	 ecx, DWORD PTR _newMem$3[ebp]
  000bf	89 08		 mov	 DWORD PTR [eax], ecx
; Line 282
  000c1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	8b 4d ec	 mov	 ecx, DWORD PTR _newAllocated$4[ebp]
  000c7	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
$LN5@EnsureCapa:
; Line 284
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 04 00	 ret	 4
?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@AAEXH@Z ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::EnsureCapacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QBE_NXZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::Empty, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 228
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 229
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0002a	75 0c		 jne	 SHORT $LN3@Empty
  0002c	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00036	eb 0a		 jmp	 SHORT $LN4@Empty
$LN3@Empty:
  00038	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN4@Empty:
  00042	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv66[ebp]
; Line 230
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QBE_NXZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0CM@@2@XZ
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0CM@@2@XZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::Pop, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 218
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 219
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0002a	7f 01		 jg	 SHORT $LN1@Pop
  0002c	cc		 int	 3
$LN1@Pop:
; Line 220
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00033	83 e9 01	 sub	 ecx, 1
  00036	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], ecx
  0003c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00045	89 42 30	 mov	 DWORD PTR [edx+48], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00053	8b 04 82	 mov	 eax, DWORD PTR [edx+eax*4]
; Line 221
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0CM@@2@XZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::Pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Push@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0CM@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?Push@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0CM@@2@@Z PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::Push, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	81 78 30 ff ff
	ff 7f		 cmp	 DWORD PTR [eax+48], 2147483647 ; 7fffffffH
  0002d	7c 01		 jl	 SHORT $LN1@Push
  0002f	cc		 int	 3
$LN1@Push:
; Line 205
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00036	83 c1 01	 add	 ecx, 1
  00039	51		 push	 ecx
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::EnsureCapacity
; Line 206
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00048	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 02		 mov	 eax, DWORD PTR [edx]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _t$[ebp]
  00050	89 14 88	 mov	 DWORD PTR [eax+ecx*4], edx
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00059	83 c1 01	 add	 ecx, 1
  0005c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005f	89 4a 30	 mov	 DWORD PTR [edx+48], ecx
; Line 207
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?Push@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0CM@@2@@Z ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::Push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAE@XZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::~DynArray<tinyxml2::MemPoolT<44>::Block *,10>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 193
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 194
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	39 01		 cmp	 DWORD PTR [ecx], eax
  0002e	74 1a		 je	 SHORT $LN2@DynArray
; Line 195
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  0003b	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00047	83 c4 04	 add	 esp, 4
$LN2@DynArray:
; Line 197
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??1?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAE@XZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::~DynArray<tinyxml2::MemPoolT<44>::Block *,10>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAE@XZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::DynArray<tinyxml2::MemPoolT<44>::Block *,10>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 187
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 188
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	89 01		 mov	 DWORD PTR [ecx], eax
; Line 189
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 40 2c 0a 00
	00 00		 mov	 DWORD PTR [eax+44], 10	; 0000000aH
; Line 190
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0
; Line 191
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??0?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAE@XZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::DynArray<tinyxml2::MemPoolT<44>::Block *,10>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Untracked@?$MemPoolT@$0CM@@tinyxml2@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Untracked@?$MemPoolT@$0CM@@tinyxml2@@QBEHXZ PROC	; tinyxml2::MemPoolT<44>::Untracked, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 388
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 389
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 48	 mov	 eax, DWORD PTR [eax+72]
; Line 390
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?Untracked@?$MemPoolT@$0CM@@tinyxml2@@QBEHXZ ENDP	; tinyxml2::MemPoolT<44>::Untracked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetTracked@?$MemPoolT@$0CM@@tinyxml2@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SetTracked@?$MemPoolT@$0CM@@tinyxml2@@UAEXXZ PROC	; tinyxml2::MemPoolT<44>::SetTracked, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 384
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 385
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00029	83 e9 01	 sub	 ecx, 1
  0002c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	89 4a 48	 mov	 DWORD PTR [edx+72], ecx
; Line 386
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?SetTracked@?$MemPoolT@$0CM@@tinyxml2@@UAEXXZ ENDP	; tinyxml2::MemPoolT<44>::SetTracked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Free@?$MemPoolT@$0CM@@tinyxml2@@UAEXPAX@Z
_TEXT	SEGMENT
_chunk$ = -20						; size = 4
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
?Free@?$MemPoolT@$0CM@@tinyxml2@@UAEXPAX@Z PROC		; tinyxml2::MemPoolT<44>::Free, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 367
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 368
  00023	83 7d 08 00	 cmp	 DWORD PTR _mem$[ebp], 0
  00027	75 02		 jne	 SHORT $LN1@Free
; Line 369
  00029	eb 3c		 jmp	 SHORT $LN2@Free
$LN1@Free:
; Line 371
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00031	83 e9 01	 sub	 ecx, 1
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
; Line 372
  0003a	8b 45 08	 mov	 eax, DWORD PTR _mem$[ebp]
  0003d	89 45 ec	 mov	 DWORD PTR _chunk$[ebp], eax
; Line 374
  00040	6a 2c		 push	 44			; 0000002cH
  00042	68 fe 00 00 00	 push	 254			; 000000feH
  00047	8b 45 ec	 mov	 eax, DWORD PTR _chunk$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 _memset
  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 376
  00053	8b 45 ec	 mov	 eax, DWORD PTR _chunk$[ebp]
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0005c	89 10		 mov	 DWORD PTR [eax], edx
; Line 377
  0005e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _chunk$[ebp]
  00064	89 48 38	 mov	 DWORD PTR [eax+56], ecx
$LN2@Free:
; Line 378
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
?Free@?$MemPoolT@$0CM@@tinyxml2@@UAEXPAX@Z ENDP		; tinyxml2::MemPoolT<44>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Alloc@?$MemPoolT@$0CM@@tinyxml2@@UAEPAXXZ
_TEXT	SEGMENT
tv69 = -268						; size = 4
$T1 = -260						; size = 4
$T2 = -248						; size = 4
_result$ = -44						; size = 4
_i$3 = -32						; size = 4
_block$4 = -20						; size = 4
_this$ = -8						; size = 4
?Alloc@?$MemPoolT@$0CM@@tinyxml2@@UAEPAXXZ PROC		; tinyxml2::MemPoolT<44>::Alloc, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 343
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00013	b9 43 00 00 00	 mov	 ecx, 67			; 00000043H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 344
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  0002a	0f 85 bb 00 00
	00		 jne	 $LN5@Alloc
; Line 346
  00030	c7 85 fc fe ff
	ff fc 0f 00 00	 mov	 DWORD PTR $T1[ebp], 4092 ; 00000ffcH
  0003a	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00046	83 c4 04	 add	 esp, 4
  00049	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0004f	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  00056	74 26		 je	 SHORT $LN8@Alloc
  00058	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  0005e	51		 push	 ecx
  0005f	6a 00		 push	 0
  00061	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00067	52		 push	 edx
  00068	e8 00 00 00 00	 call	 _memset
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00076	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  0007c	eb 0a		 jmp	 SHORT $LN9@Alloc
$LN8@Alloc:
  0007e	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN9@Alloc:
  00088	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv69[ebp]
  0008e	89 4d ec	 mov	 DWORD PTR _block$4[ebp], ecx
; Line 347
  00091	8b 45 ec	 mov	 eax, DWORD PTR _block$4[ebp]
  00094	50		 push	 eax
  00095	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	83 c1 04	 add	 ecx, 4
  0009b	e8 00 00 00 00	 call	 ?Push@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0CM@@2@@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::Push
; Line 349
  000a0	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  000a7	eb 09		 jmp	 SHORT $LN4@Alloc
$LN3@Alloc:
  000a9	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  000ac	83 c0 01	 add	 eax, 1
  000af	89 45 e0	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@Alloc:
  000b2	83 7d e0 5c	 cmp	 DWORD PTR _i$3[ebp], 92	; 0000005cH
  000b6	7d 18		 jge	 SHORT $LN2@Alloc
; Line 350
  000b8	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  000bb	83 c0 01	 add	 eax, 1
  000be	6b c8 2c	 imul	 ecx, eax, 44
  000c1	03 4d ec	 add	 ecx, DWORD PTR _block$4[ebp]
  000c4	6b 55 e0 2c	 imul	 edx, DWORD PTR _i$3[ebp], 44
  000c8	8b 45 ec	 mov	 eax, DWORD PTR _block$4[ebp]
  000cb	89 0c 10	 mov	 DWORD PTR [eax+edx], ecx
; Line 351
  000ce	eb d9		 jmp	 SHORT $LN3@Alloc
$LN2@Alloc:
; Line 352
  000d0	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
  000d5	6b c8 5c	 imul	 ecx, eax, 92
  000d8	8b 55 ec	 mov	 edx, DWORD PTR _block$4[ebp]
  000db	c7 04 0a 00 00
	00 00		 mov	 DWORD PTR [edx+ecx], 0
; Line 353
  000e2	8b 45 ec	 mov	 eax, DWORD PTR _block$4[ebp]
  000e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN5@Alloc:
; Line 355
  000eb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000f1	89 4d d4	 mov	 DWORD PTR _result$[ebp], ecx
; Line 356
  000f4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f7	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000fa	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000fd	8b 01		 mov	 eax, DWORD PTR [ecx]
  000ff	89 42 38	 mov	 DWORD PTR [edx+56], eax
; Line 358
  00102	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00105	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00108	83 c1 01	 add	 ecx, 1
  0010b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0010e	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
; Line 359
  00111	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00114	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  0011a	3b 51 44	 cmp	 edx, DWORD PTR [ecx+68]
  0011d	7e 0c		 jle	 SHORT $LN1@Alloc
; Line 360
  0011f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00122	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00128	89 50 44	 mov	 DWORD PTR [eax+68], edx
$LN1@Alloc:
; Line 362
  0012b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0012e	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00131	83 c1 01	 add	 ecx, 1
  00134	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00137	89 4a 40	 mov	 DWORD PTR [edx+64], ecx
; Line 363
  0013a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00140	83 c1 01	 add	 ecx, 1
  00143	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00146	89 4a 48	 mov	 DWORD PTR [edx+72], ecx
; Line 364
  00149	8b 45 d4	 mov	 eax, DWORD PTR _result$[ebp]
; Line 365
  0014c	5f		 pop	 edi
  0014d	5e		 pop	 esi
  0014e	5b		 pop	 ebx
  0014f	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c3		 ret	 0
?Alloc@?$MemPoolT@$0CM@@tinyxml2@@UAEPAXXZ ENDP		; tinyxml2::MemPoolT<44>::Alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CurrentAllocs@?$MemPoolT@$0CM@@tinyxml2@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?CurrentAllocs@?$MemPoolT@$0CM@@tinyxml2@@QBEHXZ PROC	; tinyxml2::MemPoolT<44>::CurrentAllocs, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 339
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 340
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
; Line 341
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?CurrentAllocs@?$MemPoolT@$0CM@@tinyxml2@@QBEHXZ ENDP	; tinyxml2::MemPoolT<44>::CurrentAllocs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ItemSize@?$MemPoolT@$0CM@@tinyxml2@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ItemSize@?$MemPoolT@$0CM@@tinyxml2@@UBEHXZ PROC	; tinyxml2::MemPoolT<44>::ItemSize, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 336
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 337
  00023	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
; Line 338
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?ItemSize@?$MemPoolT@$0CM@@tinyxml2@@UBEHXZ ENDP	; tinyxml2::MemPoolT<44>::ItemSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@?$MemPoolT@$0CM@@tinyxml2@@UAEXXZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T1 = -224						; size = 4
_b$2 = -20						; size = 4
_this$ = -8						; size = 4
?Clear@?$MemPoolT@$0CM@@tinyxml2@@UAEXXZ PROC		; tinyxml2::MemPoolT<44>::Clear, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@Clear:
; Line 325
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 04	 add	 ecx, 4
  00029	e8 00 00 00 00	 call	 ?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QBE_NXZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::Empty
  0002e	0f b6 c0	 movzx	 eax, al
  00031	85 c0		 test	 eax, eax
  00033	75 4d		 jne	 SHORT $LN1@Clear
; Line 326
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 04	 add	 ecx, 4
  0003b	e8 00 00 00 00	 call	 ?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0CM@@2@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::Pop
  00040	89 45 ec	 mov	 DWORD PTR _b$2[ebp], eax
; Line 327
  00043	8b 45 ec	 mov	 eax, DWORD PTR _b$2[ebp]
  00046	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0004c	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00058	83 c4 04	 add	 esp, 4
  0005b	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  00062	75 0c		 jne	 SHORT $LN5@Clear
  00064	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
  0006e	eb 10		 jmp	 SHORT $LN6@Clear
$LN5@Clear:
  00070	c7 45 ec 23 81
	00 00		 mov	 DWORD PTR _b$2[ebp], 33059 ; 00008123H
  00077	8b 55 ec	 mov	 edx, DWORD PTR _b$2[ebp]
  0007a	89 95 18 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], edx
$LN6@Clear:
; Line 328
  00080	eb a1		 jmp	 SHORT $LN2@Clear
$LN1@Clear:
; Line 329
  00082	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00085	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
; Line 330
  0008c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
; Line 331
  00096	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00099	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0
; Line 332
  000a0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0
; Line 333
  000aa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0
; Line 334
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  000bd	3b ec		 cmp	 ebp, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
?Clear@?$MemPoolT@$0CM@@tinyxml2@@UAEXXZ ENDP		; tinyxml2::MemPoolT<44>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ PROC		; tinyxml2::MemPoolT<44>::~MemPoolT<44>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 319
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$MemPoolT@$0CM@@tinyxml2@@6B@
  0004b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; Line 320
  00052	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?Clear@?$MemPoolT@$0CM@@tinyxml2@@UAEXXZ ; tinyxml2::MemPoolT<44>::Clear
; Line 321
  0005a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 04	 add	 ecx, 4
  00064	e8 00 00 00 00	 call	 ??1?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::~DynArray<tinyxml2::MemPoolT<44>::Block *,10>
  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
__unwindfunclet$??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 04	 add	 ecx, 4
  0000e	e9 00 00 00 00	 jmp	 ??1?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::~DynArray<tinyxml2::MemPoolT<44>::Block *,10>
__ehhandler$??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ ENDP		; tinyxml2::MemPoolT<44>::~MemPoolT<44>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ PROC		; tinyxml2::MemPoolT<44>::MemPoolT<44>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 318
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0MemPool@tinyxml2@@QAE@XZ ; tinyxml2::MemPool::MemPool
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00054	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$MemPoolT@$0CM@@tinyxml2@@6B@
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 04	 add	 ecx, 4
  00060	e8 00 00 00 00	 call	 ??0?$DynArray@PAUBlock@?$MemPoolT@$0CM@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<44>::Block *,10>::DynArray<tinyxml2::MemPoolT<44>::Block *,10>
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
  0006f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00072	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
  00079	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0
  00083	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00086	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0
  0008d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00090	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0
  00097	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ab	59		 pop	 ecx
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	5b		 pop	 ebx
  000af	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000b5	3b ec		 cmp	 ebp, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
__ehhandler$??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ ENDP		; tinyxml2::MemPoolT<44>::MemPoolT<44>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$MemPoolT@$0DA@@tinyxml2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$MemPoolT@$0DA@@tinyxml2@@UAEPAXI@Z PROC		; tinyxml2::MemPoolT<48>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<48>::~MemPoolT<48>
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_G?$MemPoolT@$0DA@@tinyxml2@@UAEPAXI@Z ENDP		; tinyxml2::MemPoolT<48>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@AAEXH@Z
_TEXT	SEGMENT
$T1 = -248						; size = 4
$T2 = -236						; size = 4
_newMem$3 = -32						; size = 4
_newAllocated$4 = -20					; size = 4
_this$ = -8						; size = 4
_cap$ = 8						; size = 4
?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@AAEXH@Z PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::EnsureCapacity, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 271
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00013	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 272
  00023	83 7d 08 00	 cmp	 DWORD PTR _cap$[ebp], 0
  00027	7f 01		 jg	 SHORT $LN4@EnsureCapa
  00029	cc		 int	 3
$LN4@EnsureCapa:
; Line 273
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _cap$[ebp]
  00030	3b 48 2c	 cmp	 ecx, DWORD PTR [eax+44]
  00033	0f 8e 91 00 00
	00		 jle	 $LN5@EnsureCapa
; Line 274
  00039	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR _cap$[ebp], 1073741823 ; 3fffffffH
  00040	7e 01		 jle	 SHORT $LN2@EnsureCapa
  00042	cc		 int	 3
$LN2@EnsureCapa:
; Line 275
  00043	8b 45 08	 mov	 eax, DWORD PTR _cap$[ebp]
  00046	d1 e0		 shl	 eax, 1
  00048	89 45 ec	 mov	 DWORD PTR _newAllocated$4[ebp], eax
; Line 276
  0004b	33 c9		 xor	 ecx, ecx
  0004d	8b 45 ec	 mov	 eax, DWORD PTR _newAllocated$4[ebp]
  00050	ba 04 00 00 00	 mov	 edx, 4
  00055	f7 e2		 mul	 edx
  00057	0f 90 c1	 seto	 cl
  0005a	f7 d9		 neg	 ecx
  0005c	0b c8		 or	 ecx, eax
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00064	83 c4 04	 add	 esp, 4
  00067	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0006d	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00073	89 45 e0	 mov	 DWORD PTR _newMem$3[ebp], eax
; Line 277
  00076	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00079	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0007c	c1 e1 02	 shl	 ecx, 2
  0007f	51		 push	 ecx
  00080	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 02		 mov	 eax, DWORD PTR [edx]
  00085	50		 push	 eax
  00086	8b 4d e0	 mov	 ecx, DWORD PTR _newMem$3[ebp]
  00089	51		 push	 ecx
  0008a	e8 00 00 00 00	 call	 _memcpy
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 278
  00092	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	83 c0 04	 add	 eax, 4
  00098	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	39 01		 cmp	 DWORD PTR [ecx], eax
  0009d	74 1a		 je	 SHORT $LN1@EnsureCapa
; Line 279
  0009f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a4	89 8d 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000aa	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  000b0	52		 push	 edx
  000b1	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000b6	83 c4 04	 add	 esp, 4
$LN1@EnsureCapa:
; Line 281
  000b9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bc	8b 4d e0	 mov	 ecx, DWORD PTR _newMem$3[ebp]
  000bf	89 08		 mov	 DWORD PTR [eax], ecx
; Line 282
  000c1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	8b 4d ec	 mov	 ecx, DWORD PTR _newAllocated$4[ebp]
  000c7	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
$LN5@EnsureCapa:
; Line 284
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 04 00	 ret	 4
?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@AAEXH@Z ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::EnsureCapacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QBE_NXZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::Empty, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 228
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 229
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0002a	75 0c		 jne	 SHORT $LN3@Empty
  0002c	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00036	eb 0a		 jmp	 SHORT $LN4@Empty
$LN3@Empty:
  00038	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN4@Empty:
  00042	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv66[ebp]
; Line 230
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QBE_NXZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0DA@@2@XZ
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0DA@@2@XZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::Pop, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 218
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 219
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0002a	7f 01		 jg	 SHORT $LN1@Pop
  0002c	cc		 int	 3
$LN1@Pop:
; Line 220
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00033	83 e9 01	 sub	 ecx, 1
  00036	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], ecx
  0003c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00045	89 42 30	 mov	 DWORD PTR [edx+48], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00053	8b 04 82	 mov	 eax, DWORD PTR [edx+eax*4]
; Line 221
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0DA@@2@XZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::Pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Push@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0DA@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?Push@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0DA@@2@@Z PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::Push, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	81 78 30 ff ff
	ff 7f		 cmp	 DWORD PTR [eax+48], 2147483647 ; 7fffffffH
  0002d	7c 01		 jl	 SHORT $LN1@Push
  0002f	cc		 int	 3
$LN1@Push:
; Line 205
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00036	83 c1 01	 add	 ecx, 1
  00039	51		 push	 ecx
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::EnsureCapacity
; Line 206
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00048	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 02		 mov	 eax, DWORD PTR [edx]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _t$[ebp]
  00050	89 14 88	 mov	 DWORD PTR [eax+ecx*4], edx
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00059	83 c1 01	 add	 ecx, 1
  0005c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005f	89 4a 30	 mov	 DWORD PTR [edx+48], ecx
; Line 207
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?Push@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0DA@@2@@Z ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::Push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAE@XZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::~DynArray<tinyxml2::MemPoolT<48>::Block *,10>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 193
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 194
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	39 01		 cmp	 DWORD PTR [ecx], eax
  0002e	74 1a		 je	 SHORT $LN2@DynArray
; Line 195
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  0003b	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00047	83 c4 04	 add	 esp, 4
$LN2@DynArray:
; Line 197
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??1?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAE@XZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::~DynArray<tinyxml2::MemPoolT<48>::Block *,10>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAE@XZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::DynArray<tinyxml2::MemPoolT<48>::Block *,10>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 187
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 188
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	89 01		 mov	 DWORD PTR [ecx], eax
; Line 189
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 40 2c 0a 00
	00 00		 mov	 DWORD PTR [eax+44], 10	; 0000000aH
; Line 190
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0
; Line 191
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??0?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAE@XZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::DynArray<tinyxml2::MemPoolT<48>::Block *,10>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Untracked@?$MemPoolT@$0DA@@tinyxml2@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Untracked@?$MemPoolT@$0DA@@tinyxml2@@QBEHXZ PROC	; tinyxml2::MemPoolT<48>::Untracked, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 388
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 389
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 48	 mov	 eax, DWORD PTR [eax+72]
; Line 390
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?Untracked@?$MemPoolT@$0DA@@tinyxml2@@QBEHXZ ENDP	; tinyxml2::MemPoolT<48>::Untracked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetTracked@?$MemPoolT@$0DA@@tinyxml2@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SetTracked@?$MemPoolT@$0DA@@tinyxml2@@UAEXXZ PROC	; tinyxml2::MemPoolT<48>::SetTracked, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 384
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 385
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00029	83 e9 01	 sub	 ecx, 1
  0002c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	89 4a 48	 mov	 DWORD PTR [edx+72], ecx
; Line 386
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?SetTracked@?$MemPoolT@$0DA@@tinyxml2@@UAEXXZ ENDP	; tinyxml2::MemPoolT<48>::SetTracked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Free@?$MemPoolT@$0DA@@tinyxml2@@UAEXPAX@Z
_TEXT	SEGMENT
_chunk$ = -20						; size = 4
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
?Free@?$MemPoolT@$0DA@@tinyxml2@@UAEXPAX@Z PROC		; tinyxml2::MemPoolT<48>::Free, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 367
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 368
  00023	83 7d 08 00	 cmp	 DWORD PTR _mem$[ebp], 0
  00027	75 02		 jne	 SHORT $LN1@Free
; Line 369
  00029	eb 3c		 jmp	 SHORT $LN2@Free
$LN1@Free:
; Line 371
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00031	83 e9 01	 sub	 ecx, 1
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
; Line 372
  0003a	8b 45 08	 mov	 eax, DWORD PTR _mem$[ebp]
  0003d	89 45 ec	 mov	 DWORD PTR _chunk$[ebp], eax
; Line 374
  00040	6a 30		 push	 48			; 00000030H
  00042	68 fe 00 00 00	 push	 254			; 000000feH
  00047	8b 45 ec	 mov	 eax, DWORD PTR _chunk$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 _memset
  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 376
  00053	8b 45 ec	 mov	 eax, DWORD PTR _chunk$[ebp]
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0005c	89 10		 mov	 DWORD PTR [eax], edx
; Line 377
  0005e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _chunk$[ebp]
  00064	89 48 38	 mov	 DWORD PTR [eax+56], ecx
$LN2@Free:
; Line 378
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
?Free@?$MemPoolT@$0DA@@tinyxml2@@UAEXPAX@Z ENDP		; tinyxml2::MemPoolT<48>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Alloc@?$MemPoolT@$0DA@@tinyxml2@@UAEPAXXZ
_TEXT	SEGMENT
tv69 = -268						; size = 4
$T1 = -260						; size = 4
$T2 = -248						; size = 4
_result$ = -44						; size = 4
_i$3 = -32						; size = 4
_block$4 = -20						; size = 4
_this$ = -8						; size = 4
?Alloc@?$MemPoolT@$0DA@@tinyxml2@@UAEPAXXZ PROC		; tinyxml2::MemPoolT<48>::Alloc, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 343
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00013	b9 43 00 00 00	 mov	 ecx, 67			; 00000043H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 344
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  0002a	0f 85 bb 00 00
	00		 jne	 $LN5@Alloc
; Line 346
  00030	c7 85 fc fe ff
	ff f0 0f 00 00	 mov	 DWORD PTR $T1[ebp], 4080 ; 00000ff0H
  0003a	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00046	83 c4 04	 add	 esp, 4
  00049	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0004f	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  00056	74 26		 je	 SHORT $LN8@Alloc
  00058	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  0005e	51		 push	 ecx
  0005f	6a 00		 push	 0
  00061	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00067	52		 push	 edx
  00068	e8 00 00 00 00	 call	 _memset
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00076	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  0007c	eb 0a		 jmp	 SHORT $LN9@Alloc
$LN8@Alloc:
  0007e	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN9@Alloc:
  00088	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv69[ebp]
  0008e	89 4d ec	 mov	 DWORD PTR _block$4[ebp], ecx
; Line 347
  00091	8b 45 ec	 mov	 eax, DWORD PTR _block$4[ebp]
  00094	50		 push	 eax
  00095	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	83 c1 04	 add	 ecx, 4
  0009b	e8 00 00 00 00	 call	 ?Push@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0DA@@2@@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::Push
; Line 349
  000a0	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  000a7	eb 09		 jmp	 SHORT $LN4@Alloc
$LN3@Alloc:
  000a9	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  000ac	83 c0 01	 add	 eax, 1
  000af	89 45 e0	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@Alloc:
  000b2	83 7d e0 54	 cmp	 DWORD PTR _i$3[ebp], 84	; 00000054H
  000b6	7d 18		 jge	 SHORT $LN2@Alloc
; Line 350
  000b8	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  000bb	83 c0 01	 add	 eax, 1
  000be	6b c8 30	 imul	 ecx, eax, 48
  000c1	03 4d ec	 add	 ecx, DWORD PTR _block$4[ebp]
  000c4	6b 55 e0 30	 imul	 edx, DWORD PTR _i$3[ebp], 48
  000c8	8b 45 ec	 mov	 eax, DWORD PTR _block$4[ebp]
  000cb	89 0c 10	 mov	 DWORD PTR [eax+edx], ecx
; Line 351
  000ce	eb d9		 jmp	 SHORT $LN3@Alloc
$LN2@Alloc:
; Line 352
  000d0	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
  000d5	6b c8 54	 imul	 ecx, eax, 84
  000d8	8b 55 ec	 mov	 edx, DWORD PTR _block$4[ebp]
  000db	c7 04 0a 00 00
	00 00		 mov	 DWORD PTR [edx+ecx], 0
; Line 353
  000e2	8b 45 ec	 mov	 eax, DWORD PTR _block$4[ebp]
  000e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN5@Alloc:
; Line 355
  000eb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000f1	89 4d d4	 mov	 DWORD PTR _result$[ebp], ecx
; Line 356
  000f4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f7	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000fa	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000fd	8b 01		 mov	 eax, DWORD PTR [ecx]
  000ff	89 42 38	 mov	 DWORD PTR [edx+56], eax
; Line 358
  00102	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00105	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00108	83 c1 01	 add	 ecx, 1
  0010b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0010e	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
; Line 359
  00111	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00114	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  0011a	3b 51 44	 cmp	 edx, DWORD PTR [ecx+68]
  0011d	7e 0c		 jle	 SHORT $LN1@Alloc
; Line 360
  0011f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00122	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00128	89 50 44	 mov	 DWORD PTR [eax+68], edx
$LN1@Alloc:
; Line 362
  0012b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0012e	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00131	83 c1 01	 add	 ecx, 1
  00134	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00137	89 4a 40	 mov	 DWORD PTR [edx+64], ecx
; Line 363
  0013a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00140	83 c1 01	 add	 ecx, 1
  00143	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00146	89 4a 48	 mov	 DWORD PTR [edx+72], ecx
; Line 364
  00149	8b 45 d4	 mov	 eax, DWORD PTR _result$[ebp]
; Line 365
  0014c	5f		 pop	 edi
  0014d	5e		 pop	 esi
  0014e	5b		 pop	 ebx
  0014f	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c3		 ret	 0
?Alloc@?$MemPoolT@$0DA@@tinyxml2@@UAEPAXXZ ENDP		; tinyxml2::MemPoolT<48>::Alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CurrentAllocs@?$MemPoolT@$0DA@@tinyxml2@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?CurrentAllocs@?$MemPoolT@$0DA@@tinyxml2@@QBEHXZ PROC	; tinyxml2::MemPoolT<48>::CurrentAllocs, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 339
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 340
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
; Line 341
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?CurrentAllocs@?$MemPoolT@$0DA@@tinyxml2@@QBEHXZ ENDP	; tinyxml2::MemPoolT<48>::CurrentAllocs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ItemSize@?$MemPoolT@$0DA@@tinyxml2@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ItemSize@?$MemPoolT@$0DA@@tinyxml2@@UBEHXZ PROC	; tinyxml2::MemPoolT<48>::ItemSize, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 336
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 337
  00023	b8 30 00 00 00	 mov	 eax, 48			; 00000030H
; Line 338
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?ItemSize@?$MemPoolT@$0DA@@tinyxml2@@UBEHXZ ENDP	; tinyxml2::MemPoolT<48>::ItemSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@?$MemPoolT@$0DA@@tinyxml2@@UAEXXZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T1 = -224						; size = 4
_b$2 = -20						; size = 4
_this$ = -8						; size = 4
?Clear@?$MemPoolT@$0DA@@tinyxml2@@UAEXXZ PROC		; tinyxml2::MemPoolT<48>::Clear, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@Clear:
; Line 325
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 04	 add	 ecx, 4
  00029	e8 00 00 00 00	 call	 ?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QBE_NXZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::Empty
  0002e	0f b6 c0	 movzx	 eax, al
  00031	85 c0		 test	 eax, eax
  00033	75 4d		 jne	 SHORT $LN1@Clear
; Line 326
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 04	 add	 ecx, 4
  0003b	e8 00 00 00 00	 call	 ?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0DA@@2@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::Pop
  00040	89 45 ec	 mov	 DWORD PTR _b$2[ebp], eax
; Line 327
  00043	8b 45 ec	 mov	 eax, DWORD PTR _b$2[ebp]
  00046	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0004c	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00058	83 c4 04	 add	 esp, 4
  0005b	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  00062	75 0c		 jne	 SHORT $LN5@Clear
  00064	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
  0006e	eb 10		 jmp	 SHORT $LN6@Clear
$LN5@Clear:
  00070	c7 45 ec 23 81
	00 00		 mov	 DWORD PTR _b$2[ebp], 33059 ; 00008123H
  00077	8b 55 ec	 mov	 edx, DWORD PTR _b$2[ebp]
  0007a	89 95 18 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], edx
$LN6@Clear:
; Line 328
  00080	eb a1		 jmp	 SHORT $LN2@Clear
$LN1@Clear:
; Line 329
  00082	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00085	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
; Line 330
  0008c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
; Line 331
  00096	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00099	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0
; Line 332
  000a0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0
; Line 333
  000aa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0
; Line 334
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  000bd	3b ec		 cmp	 ebp, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
?Clear@?$MemPoolT@$0DA@@tinyxml2@@UAEXXZ ENDP		; tinyxml2::MemPoolT<48>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ PROC		; tinyxml2::MemPoolT<48>::~MemPoolT<48>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 319
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$MemPoolT@$0DA@@tinyxml2@@6B@
  0004b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; Line 320
  00052	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?Clear@?$MemPoolT@$0DA@@tinyxml2@@UAEXXZ ; tinyxml2::MemPoolT<48>::Clear
; Line 321
  0005a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 04	 add	 ecx, 4
  00064	e8 00 00 00 00	 call	 ??1?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::~DynArray<tinyxml2::MemPoolT<48>::Block *,10>
  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
__unwindfunclet$??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 04	 add	 ecx, 4
  0000e	e9 00 00 00 00	 jmp	 ??1?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::~DynArray<tinyxml2::MemPoolT<48>::Block *,10>
__ehhandler$??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ ENDP		; tinyxml2::MemPoolT<48>::~MemPoolT<48>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ PROC		; tinyxml2::MemPoolT<48>::MemPoolT<48>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 318
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0MemPool@tinyxml2@@QAE@XZ ; tinyxml2::MemPool::MemPool
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00054	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$MemPoolT@$0DA@@tinyxml2@@6B@
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 04	 add	 ecx, 4
  00060	e8 00 00 00 00	 call	 ??0?$DynArray@PAUBlock@?$MemPoolT@$0DA@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<48>::Block *,10>::DynArray<tinyxml2::MemPoolT<48>::Block *,10>
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
  0006f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00072	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
  00079	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0
  00083	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00086	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0
  0008d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00090	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0
  00097	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ab	59		 pop	 ecx
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	5b		 pop	 ebx
  000af	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000b5	3b ec		 cmp	 ebp, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
__ehhandler$??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ ENDP		; tinyxml2::MemPoolT<48>::MemPoolT<48>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$MemPoolT@$0CE@@tinyxml2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$MemPoolT@$0CE@@tinyxml2@@UAEPAXI@Z PROC		; tinyxml2::MemPoolT<36>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<36>::~MemPoolT<36>
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_G?$MemPoolT@$0CE@@tinyxml2@@UAEPAXI@Z ENDP		; tinyxml2::MemPoolT<36>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@AAEXH@Z
_TEXT	SEGMENT
$T1 = -248						; size = 4
$T2 = -236						; size = 4
_newMem$3 = -32						; size = 4
_newAllocated$4 = -20					; size = 4
_this$ = -8						; size = 4
_cap$ = 8						; size = 4
?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@AAEXH@Z PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::EnsureCapacity, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 271
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00013	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 272
  00023	83 7d 08 00	 cmp	 DWORD PTR _cap$[ebp], 0
  00027	7f 01		 jg	 SHORT $LN4@EnsureCapa
  00029	cc		 int	 3
$LN4@EnsureCapa:
; Line 273
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _cap$[ebp]
  00030	3b 48 2c	 cmp	 ecx, DWORD PTR [eax+44]
  00033	0f 8e 91 00 00
	00		 jle	 $LN5@EnsureCapa
; Line 274
  00039	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR _cap$[ebp], 1073741823 ; 3fffffffH
  00040	7e 01		 jle	 SHORT $LN2@EnsureCapa
  00042	cc		 int	 3
$LN2@EnsureCapa:
; Line 275
  00043	8b 45 08	 mov	 eax, DWORD PTR _cap$[ebp]
  00046	d1 e0		 shl	 eax, 1
  00048	89 45 ec	 mov	 DWORD PTR _newAllocated$4[ebp], eax
; Line 276
  0004b	33 c9		 xor	 ecx, ecx
  0004d	8b 45 ec	 mov	 eax, DWORD PTR _newAllocated$4[ebp]
  00050	ba 04 00 00 00	 mov	 edx, 4
  00055	f7 e2		 mul	 edx
  00057	0f 90 c1	 seto	 cl
  0005a	f7 d9		 neg	 ecx
  0005c	0b c8		 or	 ecx, eax
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00064	83 c4 04	 add	 esp, 4
  00067	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0006d	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00073	89 45 e0	 mov	 DWORD PTR _newMem$3[ebp], eax
; Line 277
  00076	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00079	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0007c	c1 e1 02	 shl	 ecx, 2
  0007f	51		 push	 ecx
  00080	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 02		 mov	 eax, DWORD PTR [edx]
  00085	50		 push	 eax
  00086	8b 4d e0	 mov	 ecx, DWORD PTR _newMem$3[ebp]
  00089	51		 push	 ecx
  0008a	e8 00 00 00 00	 call	 _memcpy
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 278
  00092	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	83 c0 04	 add	 eax, 4
  00098	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	39 01		 cmp	 DWORD PTR [ecx], eax
  0009d	74 1a		 je	 SHORT $LN1@EnsureCapa
; Line 279
  0009f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a4	89 8d 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000aa	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  000b0	52		 push	 edx
  000b1	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000b6	83 c4 04	 add	 esp, 4
$LN1@EnsureCapa:
; Line 281
  000b9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bc	8b 4d e0	 mov	 ecx, DWORD PTR _newMem$3[ebp]
  000bf	89 08		 mov	 DWORD PTR [eax], ecx
; Line 282
  000c1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	8b 4d ec	 mov	 ecx, DWORD PTR _newAllocated$4[ebp]
  000c7	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
$LN5@EnsureCapa:
; Line 284
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 04 00	 ret	 4
?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@AAEXH@Z ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::EnsureCapacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QBE_NXZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::Empty, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 228
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 229
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0002a	75 0c		 jne	 SHORT $LN3@Empty
  0002c	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00036	eb 0a		 jmp	 SHORT $LN4@Empty
$LN3@Empty:
  00038	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN4@Empty:
  00042	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv66[ebp]
; Line 230
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QBE_NXZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0CE@@2@XZ
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0CE@@2@XZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::Pop, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 218
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 219
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0002a	7f 01		 jg	 SHORT $LN1@Pop
  0002c	cc		 int	 3
$LN1@Pop:
; Line 220
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00033	83 e9 01	 sub	 ecx, 1
  00036	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], ecx
  0003c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00045	89 42 30	 mov	 DWORD PTR [edx+48], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00053	8b 04 82	 mov	 eax, DWORD PTR [edx+eax*4]
; Line 221
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0CE@@2@XZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::Pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Push@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0CE@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?Push@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0CE@@2@@Z PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::Push, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	81 78 30 ff ff
	ff 7f		 cmp	 DWORD PTR [eax+48], 2147483647 ; 7fffffffH
  0002d	7c 01		 jl	 SHORT $LN1@Push
  0002f	cc		 int	 3
$LN1@Push:
; Line 205
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00036	83 c1 01	 add	 ecx, 1
  00039	51		 push	 ecx
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::EnsureCapacity
; Line 206
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00048	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 02		 mov	 eax, DWORD PTR [edx]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _t$[ebp]
  00050	89 14 88	 mov	 DWORD PTR [eax+ecx*4], edx
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00059	83 c1 01	 add	 ecx, 1
  0005c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005f	89 4a 30	 mov	 DWORD PTR [edx+48], ecx
; Line 207
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?Push@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0CE@@2@@Z ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::Push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAE@XZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::~DynArray<tinyxml2::MemPoolT<36>::Block *,10>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 193
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 194
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	39 01		 cmp	 DWORD PTR [ecx], eax
  0002e	74 1a		 je	 SHORT $LN2@DynArray
; Line 195
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  0003b	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00047	83 c4 04	 add	 esp, 4
$LN2@DynArray:
; Line 197
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??1?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::~DynArray<tinyxml2::MemPoolT<36>::Block *,10>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAE@XZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::DynArray<tinyxml2::MemPoolT<36>::Block *,10>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 187
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 188
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	89 01		 mov	 DWORD PTR [ecx], eax
; Line 189
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 40 2c 0a 00
	00 00		 mov	 DWORD PTR [eax+44], 10	; 0000000aH
; Line 190
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0
; Line 191
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??0?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::DynArray<tinyxml2::MemPoolT<36>::Block *,10>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Untracked@?$MemPoolT@$0CE@@tinyxml2@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Untracked@?$MemPoolT@$0CE@@tinyxml2@@QBEHXZ PROC	; tinyxml2::MemPoolT<36>::Untracked, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 388
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 389
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 48	 mov	 eax, DWORD PTR [eax+72]
; Line 390
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?Untracked@?$MemPoolT@$0CE@@tinyxml2@@QBEHXZ ENDP	; tinyxml2::MemPoolT<36>::Untracked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetTracked@?$MemPoolT@$0CE@@tinyxml2@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SetTracked@?$MemPoolT@$0CE@@tinyxml2@@UAEXXZ PROC	; tinyxml2::MemPoolT<36>::SetTracked, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 384
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 385
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00029	83 e9 01	 sub	 ecx, 1
  0002c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	89 4a 48	 mov	 DWORD PTR [edx+72], ecx
; Line 386
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?SetTracked@?$MemPoolT@$0CE@@tinyxml2@@UAEXXZ ENDP	; tinyxml2::MemPoolT<36>::SetTracked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Free@?$MemPoolT@$0CE@@tinyxml2@@UAEXPAX@Z
_TEXT	SEGMENT
_chunk$ = -20						; size = 4
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
?Free@?$MemPoolT@$0CE@@tinyxml2@@UAEXPAX@Z PROC		; tinyxml2::MemPoolT<36>::Free, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 367
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 368
  00023	83 7d 08 00	 cmp	 DWORD PTR _mem$[ebp], 0
  00027	75 02		 jne	 SHORT $LN1@Free
; Line 369
  00029	eb 3c		 jmp	 SHORT $LN2@Free
$LN1@Free:
; Line 371
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00031	83 e9 01	 sub	 ecx, 1
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
; Line 372
  0003a	8b 45 08	 mov	 eax, DWORD PTR _mem$[ebp]
  0003d	89 45 ec	 mov	 DWORD PTR _chunk$[ebp], eax
; Line 374
  00040	6a 24		 push	 36			; 00000024H
  00042	68 fe 00 00 00	 push	 254			; 000000feH
  00047	8b 45 ec	 mov	 eax, DWORD PTR _chunk$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 _memset
  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 376
  00053	8b 45 ec	 mov	 eax, DWORD PTR _chunk$[ebp]
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0005c	89 10		 mov	 DWORD PTR [eax], edx
; Line 377
  0005e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _chunk$[ebp]
  00064	89 48 38	 mov	 DWORD PTR [eax+56], ecx
$LN2@Free:
; Line 378
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
?Free@?$MemPoolT@$0CE@@tinyxml2@@UAEXPAX@Z ENDP		; tinyxml2::MemPoolT<36>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Alloc@?$MemPoolT@$0CE@@tinyxml2@@UAEPAXXZ
_TEXT	SEGMENT
tv69 = -268						; size = 4
$T1 = -260						; size = 4
$T2 = -248						; size = 4
_result$ = -44						; size = 4
_i$3 = -32						; size = 4
_block$4 = -20						; size = 4
_this$ = -8						; size = 4
?Alloc@?$MemPoolT@$0CE@@tinyxml2@@UAEPAXXZ PROC		; tinyxml2::MemPoolT<36>::Alloc, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 343
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00013	b9 43 00 00 00	 mov	 ecx, 67			; 00000043H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 344
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  0002a	0f 85 bb 00 00
	00		 jne	 $LN5@Alloc
; Line 346
  00030	c7 85 fc fe ff
	ff e4 0f 00 00	 mov	 DWORD PTR $T1[ebp], 4068 ; 00000fe4H
  0003a	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00046	83 c4 04	 add	 esp, 4
  00049	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0004f	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  00056	74 26		 je	 SHORT $LN8@Alloc
  00058	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  0005e	51		 push	 ecx
  0005f	6a 00		 push	 0
  00061	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00067	52		 push	 edx
  00068	e8 00 00 00 00	 call	 _memset
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00076	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  0007c	eb 0a		 jmp	 SHORT $LN9@Alloc
$LN8@Alloc:
  0007e	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN9@Alloc:
  00088	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv69[ebp]
  0008e	89 4d ec	 mov	 DWORD PTR _block$4[ebp], ecx
; Line 347
  00091	8b 45 ec	 mov	 eax, DWORD PTR _block$4[ebp]
  00094	50		 push	 eax
  00095	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	83 c1 04	 add	 ecx, 4
  0009b	e8 00 00 00 00	 call	 ?Push@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0CE@@2@@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::Push
; Line 349
  000a0	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  000a7	eb 09		 jmp	 SHORT $LN4@Alloc
$LN3@Alloc:
  000a9	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  000ac	83 c0 01	 add	 eax, 1
  000af	89 45 e0	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@Alloc:
  000b2	83 7d e0 70	 cmp	 DWORD PTR _i$3[ebp], 112 ; 00000070H
  000b6	7d 18		 jge	 SHORT $LN2@Alloc
; Line 350
  000b8	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  000bb	83 c0 01	 add	 eax, 1
  000be	6b c8 24	 imul	 ecx, eax, 36
  000c1	03 4d ec	 add	 ecx, DWORD PTR _block$4[ebp]
  000c4	6b 55 e0 24	 imul	 edx, DWORD PTR _i$3[ebp], 36
  000c8	8b 45 ec	 mov	 eax, DWORD PTR _block$4[ebp]
  000cb	89 0c 10	 mov	 DWORD PTR [eax+edx], ecx
; Line 351
  000ce	eb d9		 jmp	 SHORT $LN3@Alloc
$LN2@Alloc:
; Line 352
  000d0	b8 24 00 00 00	 mov	 eax, 36			; 00000024H
  000d5	6b c8 70	 imul	 ecx, eax, 112
  000d8	8b 55 ec	 mov	 edx, DWORD PTR _block$4[ebp]
  000db	c7 04 0a 00 00
	00 00		 mov	 DWORD PTR [edx+ecx], 0
; Line 353
  000e2	8b 45 ec	 mov	 eax, DWORD PTR _block$4[ebp]
  000e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN5@Alloc:
; Line 355
  000eb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000f1	89 4d d4	 mov	 DWORD PTR _result$[ebp], ecx
; Line 356
  000f4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f7	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000fa	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000fd	8b 01		 mov	 eax, DWORD PTR [ecx]
  000ff	89 42 38	 mov	 DWORD PTR [edx+56], eax
; Line 358
  00102	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00105	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00108	83 c1 01	 add	 ecx, 1
  0010b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0010e	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
; Line 359
  00111	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00114	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  0011a	3b 51 44	 cmp	 edx, DWORD PTR [ecx+68]
  0011d	7e 0c		 jle	 SHORT $LN1@Alloc
; Line 360
  0011f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00122	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00128	89 50 44	 mov	 DWORD PTR [eax+68], edx
$LN1@Alloc:
; Line 362
  0012b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0012e	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00131	83 c1 01	 add	 ecx, 1
  00134	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00137	89 4a 40	 mov	 DWORD PTR [edx+64], ecx
; Line 363
  0013a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00140	83 c1 01	 add	 ecx, 1
  00143	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00146	89 4a 48	 mov	 DWORD PTR [edx+72], ecx
; Line 364
  00149	8b 45 d4	 mov	 eax, DWORD PTR _result$[ebp]
; Line 365
  0014c	5f		 pop	 edi
  0014d	5e		 pop	 esi
  0014e	5b		 pop	 ebx
  0014f	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c3		 ret	 0
?Alloc@?$MemPoolT@$0CE@@tinyxml2@@UAEPAXXZ ENDP		; tinyxml2::MemPoolT<36>::Alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CurrentAllocs@?$MemPoolT@$0CE@@tinyxml2@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?CurrentAllocs@?$MemPoolT@$0CE@@tinyxml2@@QBEHXZ PROC	; tinyxml2::MemPoolT<36>::CurrentAllocs, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 339
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 340
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
; Line 341
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?CurrentAllocs@?$MemPoolT@$0CE@@tinyxml2@@QBEHXZ ENDP	; tinyxml2::MemPoolT<36>::CurrentAllocs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ItemSize@?$MemPoolT@$0CE@@tinyxml2@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ItemSize@?$MemPoolT@$0CE@@tinyxml2@@UBEHXZ PROC	; tinyxml2::MemPoolT<36>::ItemSize, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 336
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 337
  00023	b8 24 00 00 00	 mov	 eax, 36			; 00000024H
; Line 338
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?ItemSize@?$MemPoolT@$0CE@@tinyxml2@@UBEHXZ ENDP	; tinyxml2::MemPoolT<36>::ItemSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@?$MemPoolT@$0CE@@tinyxml2@@UAEXXZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T1 = -224						; size = 4
_b$2 = -20						; size = 4
_this$ = -8						; size = 4
?Clear@?$MemPoolT@$0CE@@tinyxml2@@UAEXXZ PROC		; tinyxml2::MemPoolT<36>::Clear, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@Clear:
; Line 325
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 04	 add	 ecx, 4
  00029	e8 00 00 00 00	 call	 ?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QBE_NXZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::Empty
  0002e	0f b6 c0	 movzx	 eax, al
  00031	85 c0		 test	 eax, eax
  00033	75 4d		 jne	 SHORT $LN1@Clear
; Line 326
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 04	 add	 ecx, 4
  0003b	e8 00 00 00 00	 call	 ?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0CE@@2@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::Pop
  00040	89 45 ec	 mov	 DWORD PTR _b$2[ebp], eax
; Line 327
  00043	8b 45 ec	 mov	 eax, DWORD PTR _b$2[ebp]
  00046	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0004c	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00058	83 c4 04	 add	 esp, 4
  0005b	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  00062	75 0c		 jne	 SHORT $LN5@Clear
  00064	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
  0006e	eb 10		 jmp	 SHORT $LN6@Clear
$LN5@Clear:
  00070	c7 45 ec 23 81
	00 00		 mov	 DWORD PTR _b$2[ebp], 33059 ; 00008123H
  00077	8b 55 ec	 mov	 edx, DWORD PTR _b$2[ebp]
  0007a	89 95 18 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], edx
$LN6@Clear:
; Line 328
  00080	eb a1		 jmp	 SHORT $LN2@Clear
$LN1@Clear:
; Line 329
  00082	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00085	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
; Line 330
  0008c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
; Line 331
  00096	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00099	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0
; Line 332
  000a0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0
; Line 333
  000aa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0
; Line 334
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  000bd	3b ec		 cmp	 ebp, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
?Clear@?$MemPoolT@$0CE@@tinyxml2@@UAEXXZ ENDP		; tinyxml2::MemPoolT<36>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ PROC		; tinyxml2::MemPoolT<36>::~MemPoolT<36>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 319
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$MemPoolT@$0CE@@tinyxml2@@6B@
  0004b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; Line 320
  00052	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?Clear@?$MemPoolT@$0CE@@tinyxml2@@UAEXXZ ; tinyxml2::MemPoolT<36>::Clear
; Line 321
  0005a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 04	 add	 ecx, 4
  00064	e8 00 00 00 00	 call	 ??1?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::~DynArray<tinyxml2::MemPoolT<36>::Block *,10>
  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
__unwindfunclet$??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 04	 add	 ecx, 4
  0000e	e9 00 00 00 00	 jmp	 ??1?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::~DynArray<tinyxml2::MemPoolT<36>::Block *,10>
__ehhandler$??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ ENDP		; tinyxml2::MemPoolT<36>::~MemPoolT<36>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ PROC		; tinyxml2::MemPoolT<36>::MemPoolT<36>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 318
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0MemPool@tinyxml2@@QAE@XZ ; tinyxml2::MemPool::MemPool
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00054	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$MemPoolT@$0CE@@tinyxml2@@6B@
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 04	 add	 ecx, 4
  00060	e8 00 00 00 00	 call	 ??0?$DynArray@PAUBlock@?$MemPoolT@$0CE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<36>::Block *,10>::DynArray<tinyxml2::MemPoolT<36>::Block *,10>
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
  0006f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00072	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
  00079	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0
  00083	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00086	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0
  0008d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00090	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0
  00097	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ab	59		 pop	 ecx
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	5b		 pop	 ebx
  000af	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000b5	3b ec		 cmp	 ebp, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
__ehhandler$??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ ENDP		; tinyxml2::MemPoolT<36>::MemPoolT<36>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$MemPoolT@$0DE@@tinyxml2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$MemPoolT@$0DE@@tinyxml2@@UAEPAXI@Z PROC		; tinyxml2::MemPoolT<52>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<52>::~MemPoolT<52>
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_G?$MemPoolT@$0DE@@tinyxml2@@UAEPAXI@Z ENDP		; tinyxml2::MemPoolT<52>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@AAEXH@Z
_TEXT	SEGMENT
$T1 = -248						; size = 4
$T2 = -236						; size = 4
_newMem$3 = -32						; size = 4
_newAllocated$4 = -20					; size = 4
_this$ = -8						; size = 4
_cap$ = 8						; size = 4
?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@AAEXH@Z PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::EnsureCapacity, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 271
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00013	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 272
  00023	83 7d 08 00	 cmp	 DWORD PTR _cap$[ebp], 0
  00027	7f 01		 jg	 SHORT $LN4@EnsureCapa
  00029	cc		 int	 3
$LN4@EnsureCapa:
; Line 273
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _cap$[ebp]
  00030	3b 48 2c	 cmp	 ecx, DWORD PTR [eax+44]
  00033	0f 8e 91 00 00
	00		 jle	 $LN5@EnsureCapa
; Line 274
  00039	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR _cap$[ebp], 1073741823 ; 3fffffffH
  00040	7e 01		 jle	 SHORT $LN2@EnsureCapa
  00042	cc		 int	 3
$LN2@EnsureCapa:
; Line 275
  00043	8b 45 08	 mov	 eax, DWORD PTR _cap$[ebp]
  00046	d1 e0		 shl	 eax, 1
  00048	89 45 ec	 mov	 DWORD PTR _newAllocated$4[ebp], eax
; Line 276
  0004b	33 c9		 xor	 ecx, ecx
  0004d	8b 45 ec	 mov	 eax, DWORD PTR _newAllocated$4[ebp]
  00050	ba 04 00 00 00	 mov	 edx, 4
  00055	f7 e2		 mul	 edx
  00057	0f 90 c1	 seto	 cl
  0005a	f7 d9		 neg	 ecx
  0005c	0b c8		 or	 ecx, eax
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00064	83 c4 04	 add	 esp, 4
  00067	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0006d	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00073	89 45 e0	 mov	 DWORD PTR _newMem$3[ebp], eax
; Line 277
  00076	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00079	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0007c	c1 e1 02	 shl	 ecx, 2
  0007f	51		 push	 ecx
  00080	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00083	8b 02		 mov	 eax, DWORD PTR [edx]
  00085	50		 push	 eax
  00086	8b 4d e0	 mov	 ecx, DWORD PTR _newMem$3[ebp]
  00089	51		 push	 ecx
  0008a	e8 00 00 00 00	 call	 _memcpy
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 278
  00092	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00095	83 c0 04	 add	 eax, 4
  00098	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009b	39 01		 cmp	 DWORD PTR [ecx], eax
  0009d	74 1a		 je	 SHORT $LN1@EnsureCapa
; Line 279
  0009f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a4	89 8d 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000aa	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  000b0	52		 push	 edx
  000b1	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000b6	83 c4 04	 add	 esp, 4
$LN1@EnsureCapa:
; Line 281
  000b9	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bc	8b 4d e0	 mov	 ecx, DWORD PTR _newMem$3[ebp]
  000bf	89 08		 mov	 DWORD PTR [eax], ecx
; Line 282
  000c1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	8b 4d ec	 mov	 ecx, DWORD PTR _newAllocated$4[ebp]
  000c7	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
$LN5@EnsureCapa:
; Line 284
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 04 00	 ret	 4
?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@AAEXH@Z ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::EnsureCapacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QBE_NXZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::Empty, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 228
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 229
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0002a	75 0c		 jne	 SHORT $LN3@Empty
  0002c	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00036	eb 0a		 jmp	 SHORT $LN4@Empty
$LN3@Empty:
  00038	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN4@Empty:
  00042	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv66[ebp]
; Line 230
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QBE_NXZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0DE@@2@XZ
_TEXT	SEGMENT
tv71 = -208						; size = 4
_this$ = -8						; size = 4
?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0DE@@2@XZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::Pop, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 218
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 219
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0002a	7f 01		 jg	 SHORT $LN1@Pop
  0002c	cc		 int	 3
$LN1@Pop:
; Line 220
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00033	83 e9 01	 sub	 ecx, 1
  00036	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], ecx
  0003c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00045	89 42 30	 mov	 DWORD PTR [edx+48], eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00053	8b 04 82	 mov	 eax, DWORD PTR [edx+eax*4]
; Line 221
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0DE@@2@XZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::Pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Push@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0DE@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_t$ = 8							; size = 4
?Push@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0DE@@2@@Z PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::Push, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 204
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	81 78 30 ff ff
	ff 7f		 cmp	 DWORD PTR [eax+48], 2147483647 ; 7fffffffH
  0002d	7c 01		 jl	 SHORT $LN1@Push
  0002f	cc		 int	 3
$LN1@Push:
; Line 205
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00036	83 c1 01	 add	 ecx, 1
  00039	51		 push	 ecx
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?EnsureCapacity@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@AAEXH@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::EnsureCapacity
; Line 206
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00048	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004b	8b 02		 mov	 eax, DWORD PTR [edx]
  0004d	8b 55 08	 mov	 edx, DWORD PTR _t$[ebp]
  00050	89 14 88	 mov	 DWORD PTR [eax+ecx*4], edx
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00059	83 c1 01	 add	 ecx, 1
  0005c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005f	89 4a 30	 mov	 DWORD PTR [edx+48], ecx
; Line 207
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?Push@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0DE@@2@@Z ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::Push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
??1?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAE@XZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::~DynArray<tinyxml2::MemPoolT<52>::Block *,10>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 193
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 194
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	39 01		 cmp	 DWORD PTR [ecx], eax
  0002e	74 1a		 je	 SHORT $LN2@DynArray
; Line 195
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  0003b	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00047	83 c4 04	 add	 esp, 4
$LN2@DynArray:
; Line 197
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??1?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::~DynArray<tinyxml2::MemPoolT<52>::Block *,10>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAE@XZ PROC ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::DynArray<tinyxml2::MemPoolT<52>::Block *,10>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 187
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 188
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	89 01		 mov	 DWORD PTR [ecx], eax
; Line 189
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 40 2c 0a 00
	00 00		 mov	 DWORD PTR [eax+44], 10	; 0000000aH
; Line 190
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0
; Line 191
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??0?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ENDP ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::DynArray<tinyxml2::MemPoolT<52>::Block *,10>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Untracked@?$MemPoolT@$0DE@@tinyxml2@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Untracked@?$MemPoolT@$0DE@@tinyxml2@@QBEHXZ PROC	; tinyxml2::MemPoolT<52>::Untracked, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 388
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 389
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 48	 mov	 eax, DWORD PTR [eax+72]
; Line 390
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?Untracked@?$MemPoolT@$0DE@@tinyxml2@@QBEHXZ ENDP	; tinyxml2::MemPoolT<52>::Untracked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetTracked@?$MemPoolT@$0DE@@tinyxml2@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SetTracked@?$MemPoolT@$0DE@@tinyxml2@@UAEXXZ PROC	; tinyxml2::MemPoolT<52>::SetTracked, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 384
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 385
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00029	83 e9 01	 sub	 ecx, 1
  0002c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0002f	89 4a 48	 mov	 DWORD PTR [edx+72], ecx
; Line 386
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?SetTracked@?$MemPoolT@$0DE@@tinyxml2@@UAEXXZ ENDP	; tinyxml2::MemPoolT<52>::SetTracked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Free@?$MemPoolT@$0DE@@tinyxml2@@UAEXPAX@Z
_TEXT	SEGMENT
_chunk$ = -20						; size = 4
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
?Free@?$MemPoolT@$0DE@@tinyxml2@@UAEXPAX@Z PROC		; tinyxml2::MemPoolT<52>::Free, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 367
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 368
  00023	83 7d 08 00	 cmp	 DWORD PTR _mem$[ebp], 0
  00027	75 02		 jne	 SHORT $LN1@Free
; Line 369
  00029	eb 3c		 jmp	 SHORT $LN2@Free
$LN1@Free:
; Line 371
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00031	83 e9 01	 sub	 ecx, 1
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
; Line 372
  0003a	8b 45 08	 mov	 eax, DWORD PTR _mem$[ebp]
  0003d	89 45 ec	 mov	 DWORD PTR _chunk$[ebp], eax
; Line 374
  00040	6a 34		 push	 52			; 00000034H
  00042	68 fe 00 00 00	 push	 254			; 000000feH
  00047	8b 45 ec	 mov	 eax, DWORD PTR _chunk$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 _memset
  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 376
  00053	8b 45 ec	 mov	 eax, DWORD PTR _chunk$[ebp]
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0005c	89 10		 mov	 DWORD PTR [eax], edx
; Line 377
  0005e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _chunk$[ebp]
  00064	89 48 38	 mov	 DWORD PTR [eax+56], ecx
$LN2@Free:
; Line 378
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
?Free@?$MemPoolT@$0DE@@tinyxml2@@UAEXPAX@Z ENDP		; tinyxml2::MemPoolT<52>::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Alloc@?$MemPoolT@$0DE@@tinyxml2@@UAEPAXXZ
_TEXT	SEGMENT
tv69 = -268						; size = 4
$T1 = -260						; size = 4
$T2 = -248						; size = 4
_result$ = -44						; size = 4
_i$3 = -32						; size = 4
_block$4 = -20						; size = 4
_this$ = -8						; size = 4
?Alloc@?$MemPoolT@$0DE@@tinyxml2@@UAEPAXXZ PROC		; tinyxml2::MemPoolT<52>::Alloc, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 343
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00013	b9 43 00 00 00	 mov	 ecx, 67			; 00000043H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 344
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  0002a	0f 85 bb 00 00
	00		 jne	 $LN5@Alloc
; Line 346
  00030	c7 85 fc fe ff
	ff d8 0f 00 00	 mov	 DWORD PTR $T1[ebp], 4056 ; 00000fd8H
  0003a	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00046	83 c4 04	 add	 esp, 4
  00049	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0004f	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR $T2[ebp], 0
  00056	74 26		 je	 SHORT $LN8@Alloc
  00058	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  0005e	51		 push	 ecx
  0005f	6a 00		 push	 0
  00061	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00067	52		 push	 edx
  00068	e8 00 00 00 00	 call	 _memset
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00076	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  0007c	eb 0a		 jmp	 SHORT $LN9@Alloc
$LN8@Alloc:
  0007e	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN9@Alloc:
  00088	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv69[ebp]
  0008e	89 4d ec	 mov	 DWORD PTR _block$4[ebp], ecx
; Line 347
  00091	8b 45 ec	 mov	 eax, DWORD PTR _block$4[ebp]
  00094	50		 push	 eax
  00095	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	83 c1 04	 add	 ecx, 4
  0009b	e8 00 00 00 00	 call	 ?Push@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEXPAUBlock@?$MemPoolT@$0DE@@2@@Z ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::Push
; Line 349
  000a0	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  000a7	eb 09		 jmp	 SHORT $LN4@Alloc
$LN3@Alloc:
  000a9	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  000ac	83 c0 01	 add	 eax, 1
  000af	89 45 e0	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@Alloc:
  000b2	83 7d e0 4d	 cmp	 DWORD PTR _i$3[ebp], 77	; 0000004dH
  000b6	7d 18		 jge	 SHORT $LN2@Alloc
; Line 350
  000b8	8b 45 e0	 mov	 eax, DWORD PTR _i$3[ebp]
  000bb	83 c0 01	 add	 eax, 1
  000be	6b c8 34	 imul	 ecx, eax, 52
  000c1	03 4d ec	 add	 ecx, DWORD PTR _block$4[ebp]
  000c4	6b 55 e0 34	 imul	 edx, DWORD PTR _i$3[ebp], 52
  000c8	8b 45 ec	 mov	 eax, DWORD PTR _block$4[ebp]
  000cb	89 0c 10	 mov	 DWORD PTR [eax+edx], ecx
; Line 351
  000ce	eb d9		 jmp	 SHORT $LN3@Alloc
$LN2@Alloc:
; Line 352
  000d0	b8 34 00 00 00	 mov	 eax, 52			; 00000034H
  000d5	6b c8 4d	 imul	 ecx, eax, 77
  000d8	8b 55 ec	 mov	 edx, DWORD PTR _block$4[ebp]
  000db	c7 04 0a 00 00
	00 00		 mov	 DWORD PTR [edx+ecx], 0
; Line 353
  000e2	8b 45 ec	 mov	 eax, DWORD PTR _block$4[ebp]
  000e5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN5@Alloc:
; Line 355
  000eb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000f1	89 4d d4	 mov	 DWORD PTR _result$[ebp], ecx
; Line 356
  000f4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f7	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000fa	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000fd	8b 01		 mov	 eax, DWORD PTR [ecx]
  000ff	89 42 38	 mov	 DWORD PTR [edx+56], eax
; Line 358
  00102	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00105	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00108	83 c1 01	 add	 ecx, 1
  0010b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0010e	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
; Line 359
  00111	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00114	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  0011a	3b 51 44	 cmp	 edx, DWORD PTR [ecx+68]
  0011d	7e 0c		 jle	 SHORT $LN1@Alloc
; Line 360
  0011f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00122	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00125	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  00128	89 50 44	 mov	 DWORD PTR [eax+68], edx
$LN1@Alloc:
; Line 362
  0012b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0012e	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00131	83 c1 01	 add	 ecx, 1
  00134	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00137	89 4a 40	 mov	 DWORD PTR [edx+64], ecx
; Line 363
  0013a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00140	83 c1 01	 add	 ecx, 1
  00143	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00146	89 4a 48	 mov	 DWORD PTR [edx+72], ecx
; Line 364
  00149	8b 45 d4	 mov	 eax, DWORD PTR _result$[ebp]
; Line 365
  0014c	5f		 pop	 edi
  0014d	5e		 pop	 esi
  0014e	5b		 pop	 ebx
  0014f	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c3		 ret	 0
?Alloc@?$MemPoolT@$0DE@@tinyxml2@@UAEPAXXZ ENDP		; tinyxml2::MemPoolT<52>::Alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CurrentAllocs@?$MemPoolT@$0DE@@tinyxml2@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?CurrentAllocs@?$MemPoolT@$0DE@@tinyxml2@@QBEHXZ PROC	; tinyxml2::MemPoolT<52>::CurrentAllocs, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 339
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 340
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
; Line 341
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?CurrentAllocs@?$MemPoolT@$0DE@@tinyxml2@@QBEHXZ ENDP	; tinyxml2::MemPoolT<52>::CurrentAllocs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ItemSize@?$MemPoolT@$0DE@@tinyxml2@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ItemSize@?$MemPoolT@$0DE@@tinyxml2@@UBEHXZ PROC	; tinyxml2::MemPoolT<52>::ItemSize, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 336
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 337
  00023	b8 34 00 00 00	 mov	 eax, 52			; 00000034H
; Line 338
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?ItemSize@?$MemPoolT@$0DE@@tinyxml2@@UBEHXZ ENDP	; tinyxml2::MemPoolT<52>::ItemSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@?$MemPoolT@$0DE@@tinyxml2@@UAEXXZ
_TEXT	SEGMENT
tv74 = -232						; size = 4
$T1 = -224						; size = 4
_b$2 = -20						; size = 4
_this$ = -8						; size = 4
?Clear@?$MemPoolT@$0DE@@tinyxml2@@UAEXXZ PROC		; tinyxml2::MemPoolT<52>::Clear, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@Clear:
; Line 325
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 04	 add	 ecx, 4
  00029	e8 00 00 00 00	 call	 ?Empty@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QBE_NXZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::Empty
  0002e	0f b6 c0	 movzx	 eax, al
  00031	85 c0		 test	 eax, eax
  00033	75 4d		 jne	 SHORT $LN1@Clear
; Line 326
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 04	 add	 ecx, 4
  0003b	e8 00 00 00 00	 call	 ?Pop@?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAEPAUBlock@?$MemPoolT@$0DE@@2@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::Pop
  00040	89 45 ec	 mov	 DWORD PTR _b$2[ebp], eax
; Line 327
  00043	8b 45 ec	 mov	 eax, DWORD PTR _b$2[ebp]
  00046	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0004c	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00058	83 c4 04	 add	 esp, 4
  0005b	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  00062	75 0c		 jne	 SHORT $LN5@Clear
  00064	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
  0006e	eb 10		 jmp	 SHORT $LN6@Clear
$LN5@Clear:
  00070	c7 45 ec 23 81
	00 00		 mov	 DWORD PTR _b$2[ebp], 33059 ; 00008123H
  00077	8b 55 ec	 mov	 edx, DWORD PTR _b$2[ebp]
  0007a	89 95 18 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], edx
$LN6@Clear:
; Line 328
  00080	eb a1		 jmp	 SHORT $LN2@Clear
$LN1@Clear:
; Line 329
  00082	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00085	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
; Line 330
  0008c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
; Line 331
  00096	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00099	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0
; Line 332
  000a0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0
; Line 333
  000aa	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0
; Line 334
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  000bd	3b ec		 cmp	 ebp, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
?Clear@?$MemPoolT@$0DE@@tinyxml2@@UAEXXZ ENDP		; tinyxml2::MemPoolT<52>::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ PROC		; tinyxml2::MemPoolT<52>::~MemPoolT<52>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 319
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$MemPoolT@$0DE@@tinyxml2@@6B@
  0004b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; Line 320
  00052	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?Clear@?$MemPoolT@$0DE@@tinyxml2@@UAEXXZ ; tinyxml2::MemPoolT<52>::Clear
; Line 321
  0005a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 04	 add	 ecx, 4
  00064	e8 00 00 00 00	 call	 ??1?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::~DynArray<tinyxml2::MemPoolT<52>::Block *,10>
  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
__unwindfunclet$??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 04	 add	 ecx, 4
  0000e	e9 00 00 00 00	 jmp	 ??1?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::~DynArray<tinyxml2::MemPoolT<52>::Block *,10>
__ehhandler$??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ:
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ ENDP		; tinyxml2::MemPoolT<52>::~MemPoolT<52>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ PROC		; tinyxml2::MemPoolT<52>::MemPoolT<52>, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 318
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0MemPool@tinyxml2@@QAE@XZ ; tinyxml2::MemPool::MemPool
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00054	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$MemPoolT@$0DE@@tinyxml2@@6B@
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 04	 add	 ecx, 4
  00060	e8 00 00 00 00	 call	 ??0?$DynArray@PAUBlock@?$MemPoolT@$0DE@@tinyxml2@@$09@tinyxml2@@QAE@XZ ; tinyxml2::DynArray<tinyxml2::MemPoolT<52>::Block *,10>::DynArray<tinyxml2::MemPoolT<52>::Block *,10>
  00065	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
  0006f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00072	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
  00079	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0
  00083	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00086	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0
  0008d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00090	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0
  00097	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0009e	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ab	59		 pop	 ecx
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	5b		 pop	 ebx
  000af	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000b5	3b ec		 cmp	 ebp, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	8b e5		 mov	 esp, ebp
  000be	5d		 pop	 ebp
  000bf	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
__ehhandler$??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ ENDP		; tinyxml2::MemPoolT<52>::MemPoolT<52>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShallowEqual@XMLDocument@tinyxml2@@UBE_NPBVXMLNode@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?ShallowEqual@XMLDocument@tinyxml2@@UBE_NPBVXMLNode@2@@Z PROC ; tinyxml2::XMLDocument::ShallowEqual, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1706
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1707
  00023	32 c0		 xor	 al, al
; Line 1708
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?ShallowEqual@XMLDocument@tinyxml2@@UBE_NPBVXMLNode@2@@Z ENDP ; tinyxml2::XMLDocument::ShallowEqual
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShallowClone@XMLDocument@tinyxml2@@UBEPAVXMLNode@2@PAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?ShallowClone@XMLDocument@tinyxml2@@UBEPAVXMLNode@2@PAV12@@Z PROC ; tinyxml2::XMLDocument::ShallowClone, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1703
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1704
  00023	33 c0		 xor	 eax, eax
; Line 1705
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?ShallowClone@XMLDocument@tinyxml2@@UBEPAVXMLNode@2@PAV12@@Z ENDP ; tinyxml2::XMLDocument::ShallowClone
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z
_TEXT	SEGMENT
tv381 = -472						; size = 4
tv339 = -472						; size = 4
tv291 = -472						; size = 4
tv238 = -472						; size = 4
tv193 = -472						; size = 4
tv145 = -472						; size = 4
$T2 = -464						; size = 4
$T3 = -452						; size = 4
$T4 = -440						; size = 4
$T5 = -428						; size = 4
$T6 = -416						; size = 4
$T7 = -404						; size = 4
$T8 = -392						; size = 4
$T9 = -380						; size = 4
$T10 = -368						; size = 4
$T11 = -356						; size = 4
$T12 = -344						; size = 4
$T13 = -332						; size = 4
$T14 = -320						; size = 4
$T15 = -308						; size = 4
$T16 = -296						; size = 4
$T17 = -284						; size = 4
$T18 = -272						; size = 4
$T19 = -260						; size = 4
_text$20 = -56						; size = 4
_returnNode$ = -44					; size = 4
_start$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_node$ = 12						; size = 4
?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z PROC ; tinyxml2::XMLDocument::Identify, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 01 00
	00		 sub	 esp, 460		; 000001ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-472]
  00021	b9 73 00 00 00	 mov	 ecx, 115		; 00000073H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 613
  00042	83 7d 0c 00	 cmp	 DWORD PTR _node$[ebp], 0
  00046	75 01		 jne	 SHORT $LN24@Identify
  00048	cc		 int	 3
$LN24@Identify:
; Line 614
  00049	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  0004d	75 01		 jne	 SHORT $LN23@Identify
  0004f	cc		 int	 3
$LN23@Identify:
; Line 615
  00050	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00053	89 45 e0	 mov	 DWORD PTR _start$[ebp], eax
; Line 616
  00056	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPADPAD@Z ; tinyxml2::XMLUtil::SkipWhiteSpace
  0005f	83 c4 04	 add	 esp, 4
  00062	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 617
  00065	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00068	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0006b	85 c9		 test	 ecx, ecx
  0006d	75 18		 jne	 SHORT $LN22@Identify
; Line 618
  0006f	8b 45 0c	 mov	 eax, DWORD PTR _node$[ebp]
  00072	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 619
  00078	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  0007c	75 01		 jne	 SHORT $LN21@Identify
  0007e	cc		 int	 3
$LN21@Identify:
; Line 620
  0007f	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00082	e9 91 05 00 00	 jmp	 $LN25@Identify
$LN22@Identify:
; Line 636
  00087	b8 01 00 00 00	 mov	 eax, 1
  0008c	85 c0		 test	 eax, eax
  0008e	75 01		 jne	 SHORT $LN20@Identify
  00090	cc		 int	 3
$LN20@Identify:
; Line 637
  00091	b8 01 00 00 00	 mov	 eax, 1
  00096	85 c0		 test	 eax, eax
  00098	75 01		 jne	 SHORT $LN19@Identify
  0009a	cc		 int	 3
$LN19@Identify:
; Line 638
  0009b	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _returnNode$[ebp], 0
; Line 639
  000a2	6a 02		 push	 2
  000a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?xmlHeader@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4PBDB
  000a9	50		 push	 eax
  000aa	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  000ad	51		 push	 ecx
  000ae	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  000b3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b6	0f b6 d0	 movzx	 edx, al
  000b9	85 d2		 test	 edx, edx
  000bb	0f 84 cc 00 00
	00		 je	 $LN18@Identify
; Line 640
  000c1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c4	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  000ca	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000cd	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  000d3	8b f4		 mov	 esi, esp
  000d5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000d8	ff d0		 call	 eax
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e1	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  000e4	74 01		 je	 SHORT $LN17@Identify
  000e6	cc		 int	 3
$LN17@Identify:
; Line 641
  000e7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  000f0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  000f9	8b f4		 mov	 esi, esp
  000fb	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000fe	ff d0		 call	 eax
  00100	3b f4		 cmp	 esi, esp
  00102	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00107	89 85 48 fe ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  0010d	8b 8d 48 fe ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  00113	51		 push	 ecx
  00114	6a 2c		 push	 44			; 0000002cH
  00116	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0011b	83 c4 08	 add	 esp, 8
  0011e	89 85 3c fe ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00124	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0012b	83 bd 3c fe ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00132	74 17		 je	 SHORT $LN27@Identify
  00134	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00137	52		 push	 edx
  00138	8b 8d 3c fe ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0013e	e8 00 00 00 00	 call	 ??0XMLDeclaration@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLDeclaration::XMLDeclaration
  00143	89 85 28 fe ff
	ff		 mov	 DWORD PTR tv145[ebp], eax
  00149	eb 0a		 jmp	 SHORT $LN28@Identify
$LN27@Identify:
  0014b	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv145[ebp], 0
$LN28@Identify:
  00155	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv145[ebp]
  0015b	89 85 30 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00161	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00168	8b 8d 30 fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  0016e	89 4d d4	 mov	 DWORD PTR _returnNode$[ebp], ecx
; Line 642
  00171	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00174	05 28 01 00 00	 add	 eax, 296		; 00000128H
  00179	8b 4d d4	 mov	 ecx, DWORD PTR _returnNode$[ebp]
  0017c	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 643
  0017f	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00182	83 c0 02	 add	 eax, 2
  00185	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
  00188	e9 72 04 00 00	 jmp	 $LN16@Identify
$LN18@Identify:
; Line 645
  0018d	6a 04		 push	 4
  0018f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?commentHeader@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4PBDB
  00194	50		 push	 eax
  00195	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00198	51		 push	 ecx
  00199	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  0019e	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a1	0f b6 d0	 movzx	 edx, al
  001a4	85 d2		 test	 edx, edx
  001a6	0f 84 cc 00 00
	00		 je	 $LN15@Identify
; Line 646
  001ac	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001af	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  001b5	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001b8	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  001be	8b f4		 mov	 esi, esp
  001c0	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001c3	ff d0		 call	 eax
  001c5	3b f4		 cmp	 esi, esp
  001c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001cc	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  001cf	74 01		 je	 SHORT $LN14@Identify
  001d1	cc		 int	 3
$LN14@Identify:
; Line 647
  001d2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001d5	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  001db	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  001de	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  001e4	8b f4		 mov	 esi, esp
  001e6	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001e9	ff d0		 call	 eax
  001eb	3b f4		 cmp	 esi, esp
  001ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f2	89 85 6c fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  001f8	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR $T7[ebp]
  001fe	51		 push	 ecx
  001ff	6a 2c		 push	 44			; 0000002cH
  00201	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00206	83 c4 08	 add	 esp, 8
  00209	89 85 60 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  0020f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00216	83 bd 60 fe ff
	ff 00		 cmp	 DWORD PTR $T6[ebp], 0
  0021d	74 17		 je	 SHORT $LN29@Identify
  0021f	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00222	52		 push	 edx
  00223	8b 8d 60 fe ff
	ff		 mov	 ecx, DWORD PTR $T6[ebp]
  00229	e8 00 00 00 00	 call	 ??0XMLComment@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLComment::XMLComment
  0022e	89 85 28 fe ff
	ff		 mov	 DWORD PTR tv193[ebp], eax
  00234	eb 0a		 jmp	 SHORT $LN30@Identify
$LN29@Identify:
  00236	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv193[ebp], 0
$LN30@Identify:
  00240	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv193[ebp]
  00246	89 85 54 fe ff
	ff		 mov	 DWORD PTR $T5[ebp], eax
  0024c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00253	8b 8d 54 fe ff
	ff		 mov	 ecx, DWORD PTR $T5[ebp]
  00259	89 4d d4	 mov	 DWORD PTR _returnNode$[ebp], ecx
; Line 648
  0025c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0025f	05 28 01 00 00	 add	 eax, 296		; 00000128H
  00264	8b 4d d4	 mov	 ecx, DWORD PTR _returnNode$[ebp]
  00267	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 649
  0026a	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0026d	83 c0 04	 add	 eax, 4
  00270	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
  00273	e9 87 03 00 00	 jmp	 $LN16@Identify
$LN15@Identify:
; Line 651
  00278	6a 09		 push	 9
  0027a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?cdataHeader@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4PBDB
  0027f	50		 push	 eax
  00280	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00283	51		 push	 ecx
  00284	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00289	83 c4 0c	 add	 esp, 12			; 0000000cH
  0028c	0f b6 d0	 movzx	 edx, al
  0028f	85 d2		 test	 edx, edx
  00291	0f 84 dc 00 00
	00		 je	 $LN12@Identify
; Line 652
  00297	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0029a	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  002a0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002a3	8b 90 dc 00 00
	00		 mov	 edx, DWORD PTR [eax+220]
  002a9	8b f4		 mov	 esi, esp
  002ab	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  002ae	ff d0		 call	 eax
  002b0	3b f4		 cmp	 esi, esp
  002b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b7	83 f8 30	 cmp	 eax, 48			; 00000030H
  002ba	74 01		 je	 SHORT $LN11@Identify
  002bc	cc		 int	 3
$LN11@Identify:
; Line 653
  002bd	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  002c0	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  002c6	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  002c9	8b 90 dc 00 00
	00		 mov	 edx, DWORD PTR [eax+220]
  002cf	8b f4		 mov	 esi, esp
  002d1	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  002d4	ff d0		 call	 eax
  002d6	3b f4		 cmp	 esi, esp
  002d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002dd	89 85 90 fe ff
	ff		 mov	 DWORD PTR $T10[ebp], eax
  002e3	8b 8d 90 fe ff
	ff		 mov	 ecx, DWORD PTR $T10[ebp]
  002e9	51		 push	 ecx
  002ea	6a 30		 push	 48			; 00000030H
  002ec	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  002f1	83 c4 08	 add	 esp, 8
  002f4	89 85 84 fe ff
	ff		 mov	 DWORD PTR $T9[ebp], eax
  002fa	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00301	83 bd 84 fe ff
	ff 00		 cmp	 DWORD PTR $T9[ebp], 0
  00308	74 17		 je	 SHORT $LN31@Identify
  0030a	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0030d	52		 push	 edx
  0030e	8b 8d 84 fe ff
	ff		 mov	 ecx, DWORD PTR $T9[ebp]
  00314	e8 00 00 00 00	 call	 ??0XMLText@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLText::XMLText
  00319	89 85 28 fe ff
	ff		 mov	 DWORD PTR tv238[ebp], eax
  0031f	eb 0a		 jmp	 SHORT $LN32@Identify
$LN31@Identify:
  00321	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv238[ebp], 0
$LN32@Identify:
  0032b	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv238[ebp]
  00331	89 85 78 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax
  00337	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0033e	8b 8d 78 fe ff
	ff		 mov	 ecx, DWORD PTR $T8[ebp]
  00344	89 4d c8	 mov	 DWORD PTR _text$20[ebp], ecx
; Line 654
  00347	8b 45 c8	 mov	 eax, DWORD PTR _text$20[ebp]
  0034a	89 45 d4	 mov	 DWORD PTR _returnNode$[ebp], eax
; Line 655
  0034d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00350	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  00355	8b 4d d4	 mov	 ecx, DWORD PTR _returnNode$[ebp]
  00358	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 656
  0035b	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0035e	83 c0 09	 add	 eax, 9
  00361	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 657
  00364	6a 01		 push	 1
  00366	8b 4d c8	 mov	 ecx, DWORD PTR _text$20[ebp]
  00369	e8 00 00 00 00	 call	 ?SetCData@XMLText@tinyxml2@@QAEX_N@Z ; tinyxml2::XMLText::SetCData
  0036e	e9 8c 02 00 00	 jmp	 $LN16@Identify
$LN12@Identify:
; Line 659
  00373	6a 02		 push	 2
  00375	a1 00 00 00 00	 mov	 eax, DWORD PTR ?dtdHeader@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4PBDB
  0037a	50		 push	 eax
  0037b	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0037e	51		 push	 ecx
  0037f	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00384	83 c4 0c	 add	 esp, 12			; 0000000cH
  00387	0f b6 d0	 movzx	 edx, al
  0038a	85 d2		 test	 edx, edx
  0038c	0f 84 cc 00 00
	00		 je	 $LN9@Identify
; Line 660
  00392	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00395	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  0039b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0039e	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  003a4	8b f4		 mov	 esi, esp
  003a6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  003a9	ff d0		 call	 eax
  003ab	3b f4		 cmp	 esi, esp
  003ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b2	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  003b5	74 01		 je	 SHORT $LN8@Identify
  003b7	cc		 int	 3
$LN8@Identify:
; Line 661
  003b8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  003bb	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  003c1	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  003c4	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  003ca	8b f4		 mov	 esi, esp
  003cc	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  003cf	ff d0		 call	 eax
  003d1	3b f4		 cmp	 esi, esp
  003d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003d8	89 85 b4 fe ff
	ff		 mov	 DWORD PTR $T13[ebp], eax
  003de	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR $T13[ebp]
  003e4	51		 push	 ecx
  003e5	6a 2c		 push	 44			; 0000002cH
  003e7	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  003ec	83 c4 08	 add	 esp, 8
  003ef	89 85 a8 fe ff
	ff		 mov	 DWORD PTR $T12[ebp], eax
  003f5	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  003fc	83 bd a8 fe ff
	ff 00		 cmp	 DWORD PTR $T12[ebp], 0
  00403	74 17		 je	 SHORT $LN33@Identify
  00405	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  00408	52		 push	 edx
  00409	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR $T12[ebp]
  0040f	e8 00 00 00 00	 call	 ??0XMLUnknown@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLUnknown::XMLUnknown
  00414	89 85 28 fe ff
	ff		 mov	 DWORD PTR tv291[ebp], eax
  0041a	eb 0a		 jmp	 SHORT $LN34@Identify
$LN33@Identify:
  0041c	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv291[ebp], 0
$LN34@Identify:
  00426	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv291[ebp]
  0042c	89 85 9c fe ff
	ff		 mov	 DWORD PTR $T11[ebp], eax
  00432	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00439	8b 8d 9c fe ff
	ff		 mov	 ecx, DWORD PTR $T11[ebp]
  0043f	89 4d d4	 mov	 DWORD PTR _returnNode$[ebp], ecx
; Line 662
  00442	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00445	05 28 01 00 00	 add	 eax, 296		; 00000128H
  0044a	8b 4d d4	 mov	 ecx, DWORD PTR _returnNode$[ebp]
  0044d	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 663
  00450	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00453	83 c0 02	 add	 eax, 2
  00456	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
  00459	e9 a1 01 00 00	 jmp	 $LN16@Identify
$LN9@Identify:
; Line 665
  0045e	6a 01		 push	 1
  00460	a1 00 00 00 00	 mov	 eax, DWORD PTR ?elementHeader@?O@??Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@3@@Z@4PBDB
  00465	50		 push	 eax
  00466	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00469	51		 push	 ecx
  0046a	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  0046f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00472	0f b6 d0	 movzx	 edx, al
  00475	85 d2		 test	 edx, edx
  00477	0f 84 be 00 00
	00		 je	 $LN6@Identify
; Line 666
  0047d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00480	83 c1 44	 add	 ecx, 68			; 00000044H
  00483	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00486	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  00489	8b f4		 mov	 esi, esp
  0048b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0048e	ff d0		 call	 eax
  00490	3b f4		 cmp	 esi, esp
  00492	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00497	83 f8 34	 cmp	 eax, 52			; 00000034H
  0049a	74 01		 je	 SHORT $LN5@Identify
  0049c	cc		 int	 3
$LN5@Identify:
; Line 667
  0049d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  004a0	83 c1 44	 add	 ecx, 68			; 00000044H
  004a3	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  004a6	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  004a9	8b f4		 mov	 esi, esp
  004ab	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  004ae	ff d0		 call	 eax
  004b0	3b f4		 cmp	 esi, esp
  004b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004b7	89 85 d8 fe ff
	ff		 mov	 DWORD PTR $T16[ebp], eax
  004bd	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR $T16[ebp]
  004c3	51		 push	 ecx
  004c4	6a 34		 push	 52			; 00000034H
  004c6	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  004cb	83 c4 08	 add	 esp, 8
  004ce	89 85 cc fe ff
	ff		 mov	 DWORD PTR $T15[ebp], eax
  004d4	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  004db	83 bd cc fe ff
	ff 00		 cmp	 DWORD PTR $T15[ebp], 0
  004e2	74 17		 je	 SHORT $LN35@Identify
  004e4	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  004e7	52		 push	 edx
  004e8	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR $T15[ebp]
  004ee	e8 00 00 00 00	 call	 ??0XMLElement@tinyxml2@@AAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLElement::XMLElement
  004f3	89 85 28 fe ff
	ff		 mov	 DWORD PTR tv339[ebp], eax
  004f9	eb 0a		 jmp	 SHORT $LN36@Identify
$LN35@Identify:
  004fb	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv339[ebp], 0
$LN36@Identify:
  00505	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv339[ebp]
  0050b	89 85 c0 fe ff
	ff		 mov	 DWORD PTR $T14[ebp], eax
  00511	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00518	8b 8d c0 fe ff
	ff		 mov	 ecx, DWORD PTR $T14[ebp]
  0051e	89 4d d4	 mov	 DWORD PTR _returnNode$[ebp], ecx
; Line 668
  00521	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00524	83 c0 44	 add	 eax, 68			; 00000044H
  00527	8b 4d d4	 mov	 ecx, DWORD PTR _returnNode$[ebp]
  0052a	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 669
  0052d	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00530	83 c0 01	 add	 eax, 1
  00533	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 671
  00536	e9 c4 00 00 00	 jmp	 $LN16@Identify
$LN6@Identify:
; Line 672
  0053b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0053e	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  00544	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00547	8b 90 dc 00 00
	00		 mov	 edx, DWORD PTR [eax+220]
  0054d	8b f4		 mov	 esi, esp
  0054f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00552	ff d0		 call	 eax
  00554	3b f4		 cmp	 esi, esp
  00556	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0055b	83 f8 30	 cmp	 eax, 48			; 00000030H
  0055e	74 01		 je	 SHORT $LN3@Identify
  00560	cc		 int	 3
$LN3@Identify:
; Line 673
  00561	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00564	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  0056a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0056d	8b 90 dc 00 00
	00		 mov	 edx, DWORD PTR [eax+220]
  00573	8b f4		 mov	 esi, esp
  00575	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00578	ff d0		 call	 eax
  0057a	3b f4		 cmp	 esi, esp
  0057c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00581	89 85 fc fe ff
	ff		 mov	 DWORD PTR $T19[ebp], eax
  00587	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T19[ebp]
  0058d	51		 push	 ecx
  0058e	6a 30		 push	 48			; 00000030H
  00590	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00595	83 c4 08	 add	 esp, 8
  00598	89 85 f0 fe ff
	ff		 mov	 DWORD PTR $T18[ebp], eax
  0059e	c7 45 fc 05 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 5
  005a5	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR $T18[ebp], 0
  005ac	74 17		 je	 SHORT $LN37@Identify
  005ae	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  005b1	52		 push	 edx
  005b2	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR $T18[ebp]
  005b8	e8 00 00 00 00	 call	 ??0XMLText@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLText::XMLText
  005bd	89 85 28 fe ff
	ff		 mov	 DWORD PTR tv381[ebp], eax
  005c3	eb 0a		 jmp	 SHORT $LN38@Identify
$LN37@Identify:
  005c5	c7 85 28 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv381[ebp], 0
$LN38@Identify:
  005cf	8b 85 28 fe ff
	ff		 mov	 eax, DWORD PTR tv381[ebp]
  005d5	89 85 e4 fe ff
	ff		 mov	 DWORD PTR $T17[ebp], eax
  005db	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  005e2	8b 8d e4 fe ff
	ff		 mov	 ecx, DWORD PTR $T17[ebp]
  005e8	89 4d d4	 mov	 DWORD PTR _returnNode$[ebp], ecx
; Line 674
  005eb	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  005ee	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  005f3	8b 4d d4	 mov	 ecx, DWORD PTR _returnNode$[ebp]
  005f6	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 675
  005f9	8b 45 e0	 mov	 eax, DWORD PTR _start$[ebp]
  005fc	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
$LN16@Identify:
; Line 678
  005ff	83 7d d4 00	 cmp	 DWORD PTR _returnNode$[ebp], 0
  00603	75 01		 jne	 SHORT $LN2@Identify
  00605	cc		 int	 3
$LN2@Identify:
; Line 679
  00606	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  0060a	75 01		 jne	 SHORT $LN1@Identify
  0060c	cc		 int	 3
$LN1@Identify:
; Line 680
  0060d	8b 45 0c	 mov	 eax, DWORD PTR _node$[ebp]
  00610	8b 4d d4	 mov	 ecx, DWORD PTR _returnNode$[ebp]
  00613	89 08		 mov	 DWORD PTR [eax], ecx
; Line 681
  00615	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
$LN25@Identify:
; Line 682
  00618	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0061b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00622	59		 pop	 ecx
  00623	5f		 pop	 edi
  00624	5e		 pop	 esi
  00625	5b		 pop	 ebx
  00626	81 c4 d8 01 00
	00		 add	 esp, 472		; 000001d8H
  0062c	3b ec		 cmp	 ebp, esp
  0062e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00633	8b e5		 mov	 esp, ebp
  00635	5d		 pop	 ebp
  00636	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z$0:
  00000	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00006	50		 push	 eax
  00007	8b 85 3c fe ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__unwindfunclet$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z$1:
  00017	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  0001d	50		 push	 eax
  0001e	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
  0002d	c3		 ret	 0
__unwindfunclet$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z$2:
  0002e	8b 85 90 fe ff
	ff		 mov	 eax, DWORD PTR $T10[ebp]
  00034	50		 push	 eax
  00035	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR $T9[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00041	83 c4 08	 add	 esp, 8
  00044	c3		 ret	 0
__unwindfunclet$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z$3:
  00045	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR $T13[ebp]
  0004b	50		 push	 eax
  0004c	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR $T12[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00058	83 c4 08	 add	 esp, 8
  0005b	c3		 ret	 0
__unwindfunclet$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z$4:
  0005c	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR $T16[ebp]
  00062	50		 push	 eax
  00063	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR $T15[ebp]
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0006f	83 c4 08	 add	 esp, 8
  00072	c3		 ret	 0
__unwindfunclet$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z$5:
  00073	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR $T19[ebp]
  00079	50		 push	 eax
  0007a	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR $T18[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00086	83 c4 08	 add	 esp, 8
  00089	c3		 ret	 0
__ehhandler$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z:
  0008a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0008e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00091	8b 8a 24 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-476]
  00097	33 c8		 xor	 ecx, eax
  00099	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z
  000a3	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z ENDP ; tinyxml2::XMLDocument::Identify
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@XMLDocument@tinyxml2@@QAEXXZ
_TEXT	SEGMENT
$T1 = -224						; size = 4
_hadError$ = -17					; size = 1
_this$ = -8						; size = 4
?Clear@XMLDocument@tinyxml2@@QAEXXZ PROC		; tinyxml2::XMLDocument::Clear, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1791
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1792
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?DeleteChildren@XMLNode@tinyxml2@@QAEXXZ ; tinyxml2::XMLNode::DeleteChildren
; Line 1795
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?Error@XMLDocument@tinyxml2@@QBE_NXZ ; tinyxml2::XMLDocument::Error
  00033	88 45 ef	 mov	 BYTE PTR _hadError$[ebp], al
; Line 1797
  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0
; Line 1798
  00040	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00043	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
; Line 1799
  0004a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
; Line 1801
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0005a	89 8d 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  00060	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00066	52		 push	 edx
  00067	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0006c	83 c4 04	 add	 esp, 4
; Line 1802
  0006f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00072	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0
; Line 1812
  00079	0f b6 45 ef	 movzx	 eax, BYTE PTR _hadError$[ebp]
  0007d	85 c0		 test	 eax, eax
  0007f	0f 85 86 00 00
	00		 jne	 $LN6@Clear
; Line 1813
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	83 c1 44	 add	 ecx, 68			; 00000044H
  0008b	e8 00 00 00 00	 call	 ?CurrentAllocs@?$MemPoolT@$0DE@@tinyxml2@@QBEHXZ ; tinyxml2::MemPoolT<52>::CurrentAllocs
  00090	8b f0		 mov	 esi, eax
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	83 c1 44	 add	 ecx, 68			; 00000044H
  00098	e8 00 00 00 00	 call	 ?Untracked@?$MemPoolT@$0DE@@tinyxml2@@QBEHXZ ; tinyxml2::MemPoolT<52>::Untracked
  0009d	3b f0		 cmp	 esi, eax
  0009f	74 01		 je	 SHORT $LN4@Clear
  000a1	cc		 int	 3
$LN4@Clear:
; Line 1814
  000a2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  000ab	e8 00 00 00 00	 call	 ?CurrentAllocs@?$MemPoolT@$0CE@@tinyxml2@@QBEHXZ ; tinyxml2::MemPoolT<36>::CurrentAllocs
  000b0	8b f0		 mov	 esi, eax
  000b2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  000bb	e8 00 00 00 00	 call	 ?Untracked@?$MemPoolT@$0CE@@tinyxml2@@QBEHXZ ; tinyxml2::MemPoolT<36>::Untracked
  000c0	3b f0		 cmp	 esi, eax
  000c2	74 01		 je	 SHORT $LN3@Clear
  000c4	cc		 int	 3
$LN3@Clear:
; Line 1815
  000c5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c8	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  000ce	e8 00 00 00 00	 call	 ?CurrentAllocs@?$MemPoolT@$0DA@@tinyxml2@@QBEHXZ ; tinyxml2::MemPoolT<48>::CurrentAllocs
  000d3	8b f0		 mov	 esi, eax
  000d5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  000de	e8 00 00 00 00	 call	 ?Untracked@?$MemPoolT@$0DA@@tinyxml2@@QBEHXZ ; tinyxml2::MemPoolT<48>::Untracked
  000e3	3b f0		 cmp	 esi, eax
  000e5	74 01		 je	 SHORT $LN2@Clear
  000e7	cc		 int	 3
$LN2@Clear:
; Line 1816
  000e8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000eb	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  000f1	e8 00 00 00 00	 call	 ?CurrentAllocs@?$MemPoolT@$0CM@@tinyxml2@@QBEHXZ ; tinyxml2::MemPoolT<44>::CurrentAllocs
  000f6	8b f0		 mov	 esi, eax
  000f8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  00101	e8 00 00 00 00	 call	 ?Untracked@?$MemPoolT@$0CM@@tinyxml2@@QBEHXZ ; tinyxml2::MemPoolT<44>::Untracked
  00106	3b f0		 cmp	 esi, eax
  00108	74 01		 je	 SHORT $LN6@Clear
  0010a	cc		 int	 3
$LN6@Clear:
; Line 1819
  0010b	5f		 pop	 edi
  0010c	5e		 pop	 esi
  0010d	5b		 pop	 ebx
  0010e	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00114	3b ec		 cmp	 ebp, esp
  00116	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c3		 ret	 0
?Clear@XMLDocument@tinyxml2@@QAEXXZ ENDP		; tinyxml2::XMLDocument::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PrintError@XMLDocument@tinyxml2@@QBEXXZ
_TEXT	SEGMENT
tv91 = -268						; size = 4
_buf2$1 = -68						; size = 20
_buf1$2 = -40						; size = 20
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?PrintError@XMLDocument@tinyxml2@@QBEXXZ PROC		; tinyxml2::XMLDocument::PrintError, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2068
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00013	b9 43 00 00 00	 mov	 ecx, 67			; 00000043H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2069
  0002d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?Error@XMLDocument@tinyxml2@@QBE_NXZ ; tinyxml2::XMLDocument::Error
  00035	0f b6 c0	 movzx	 eax, al
  00038	85 c0		 test	 eax, eax
  0003a	0f 84 d9 00 00
	00		 je	 $LN5@PrintError
; Line 2071
  00040	c6 45 d8 00	 mov	 BYTE PTR _buf1$2[ebp], 0
  00044	33 c0		 xor	 eax, eax
  00046	89 45 d9	 mov	 DWORD PTR _buf1$2[ebp+1], eax
  00049	89 45 dd	 mov	 DWORD PTR _buf1$2[ebp+5], eax
  0004c	89 45 e1	 mov	 DWORD PTR _buf1$2[ebp+9], eax
  0004f	89 45 e5	 mov	 DWORD PTR _buf1$2[ebp+13], eax
  00052	66 89 45 e9	 mov	 WORD PTR _buf1$2[ebp+17], ax
  00056	88 45 eb	 mov	 BYTE PTR _buf1$2[ebp+19], al
; Line 2072
  00059	c6 45 bc 00	 mov	 BYTE PTR _buf2$1[ebp], 0
  0005d	33 c0		 xor	 eax, eax
  0005f	89 45 bd	 mov	 DWORD PTR _buf2$1[ebp+1], eax
  00062	89 45 c1	 mov	 DWORD PTR _buf2$1[ebp+5], eax
  00065	89 45 c5	 mov	 DWORD PTR _buf2$1[ebp+9], eax
  00068	89 45 c9	 mov	 DWORD PTR _buf2$1[ebp+13], eax
  0006b	66 89 45 cd	 mov	 WORD PTR _buf2$1[ebp+17], ax
  0006f	88 45 cf	 mov	 BYTE PTR _buf2$1[ebp+19], al
; Line 2074
  00072	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  00079	74 1a		 je	 SHORT $LN3@PrintError
; Line 2075
  0007b	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00081	51		 push	 ecx
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
  00087	6a 14		 push	 20			; 00000014H
  00089	8d 55 d8	 lea	 edx, DWORD PTR _buf1$2[ebp]
  0008c	52		 push	 edx
  0008d	e8 00 00 00 00	 call	 ?TIXML_SNPRINTF@@YAHPADIPBDZZ ; TIXML_SNPRINTF
  00092	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@PrintError:
; Line 2077
  00095	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00098	83 78 3c 00	 cmp	 DWORD PTR [eax+60], 0
  0009c	74 1a		 je	 SHORT $LN2@PrintError
; Line 2078
  0009e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000a4	51		 push	 ecx
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
  000aa	6a 14		 push	 20			; 00000014H
  000ac	8d 55 bc	 lea	 edx, DWORD PTR _buf2$1[ebp]
  000af	52		 push	 edx
  000b0	e8 00 00 00 00	 call	 ?TIXML_SNPRINTF@@YAHPADIPBDZZ ; TIXML_SNPRINTF
  000b5	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@PrintError:
; Line 2083
  000b8	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000bb	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  000bf	7c 15		 jl	 SHORT $LN7@PrintError
  000c1	b9 01 00 00 00	 mov	 ecx, 1
  000c6	85 c9		 test	 ecx, ecx
  000c8	74 0c		 je	 SHORT $LN7@PrintError
  000ca	c7 85 f4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv91[ebp], 1
  000d4	eb 0a		 jmp	 SHORT $LN8@PrintError
$LN7@PrintError:
  000d6	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv91[ebp], 0
$LN8@PrintError:
  000e0	83 bd f4 fe ff
	ff 00		 cmp	 DWORD PTR tv91[ebp], 0
  000e7	75 01		 jne	 SHORT $LN1@PrintError
  000e9	cc		 int	 3
$LN1@PrintError:
; Line 2085
  000ea	8b f4		 mov	 esi, esp
  000ec	8d 45 bc	 lea	 eax, DWORD PTR _buf2$1[ebp]
  000ef	50		 push	 eax
  000f0	8d 4d d8	 lea	 ecx, DWORD PTR _buf1$2[ebp]
  000f3	51		 push	 ecx
  000f4	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000f7	e8 00 00 00 00	 call	 ?ErrorName@XMLDocument@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLDocument::ErrorName
  000fc	50		 push	 eax
  000fd	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00100	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00103	50		 push	 eax
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@CKABJOJH@XMLDocument?5error?5id?$DN?$CFd?5?8?$CFs?8?5str@
  00109	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  0010f	83 c4 14	 add	 esp, 20			; 00000014H
  00112	3b f4		 cmp	 esi, esp
  00114	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@PrintError:
; Line 2087
  00119	52		 push	 edx
  0011a	8b cd		 mov	 ecx, ebp
  0011c	50		 push	 eax
  0011d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@PrintError
  00123	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00128	58		 pop	 eax
  00129	5a		 pop	 edx
  0012a	5f		 pop	 edi
  0012b	5e		 pop	 esi
  0012c	5b		 pop	 ebx
  0012d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00130	33 cd		 xor	 ecx, ebp
  00132	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00137	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  0013d	3b ec		 cmp	 ebp, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	8b e5		 mov	 esp, ebp
  00146	5d		 pop	 ebp
  00147	c3		 ret	 0
$LN12@PrintError:
  00148	02 00 00 00	 DD	 2
  0014c	00 00 00 00	 DD	 $LN11@PrintError
$LN11@PrintError:
  00150	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00154	14 00 00 00	 DD	 20			; 00000014H
  00158	00 00 00 00	 DD	 $LN9@PrintError
  0015c	bc ff ff ff	 DD	 -68			; ffffffbcH
  00160	14 00 00 00	 DD	 20			; 00000014H
  00164	00 00 00 00	 DD	 $LN10@PrintError
$LN10@PrintError:
  00168	62		 DB	 98			; 00000062H
  00169	75		 DB	 117			; 00000075H
  0016a	66		 DB	 102			; 00000066H
  0016b	32		 DB	 50			; 00000032H
  0016c	00		 DB	 0
$LN9@PrintError:
  0016d	62		 DB	 98			; 00000062H
  0016e	75		 DB	 117			; 00000075H
  0016f	66		 DB	 102			; 00000066H
  00170	31		 DB	 49			; 00000031H
  00171	00		 DB	 0
?PrintError@XMLDocument@tinyxml2@@QBEXXZ ENDP		; tinyxml2::XMLDocument::PrintError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ErrorName@XMLDocument@tinyxml2@@QBEPBDXZ
_TEXT	SEGMENT
tv79 = -220						; size = 4
tv68 = -220						; size = 4
_errorName$ = -20					; size = 4
_this$ = -8						; size = 4
?ErrorName@XMLDocument@tinyxml2@@QBEPBDXZ PROC		; tinyxml2::XMLDocument::ErrorName, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2060
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2061
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0002a	7c 15		 jl	 SHORT $LN5@ErrorName
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 79 30 14	 cmp	 DWORD PTR [ecx+48], 20	; 00000014H
  00033	7d 0c		 jge	 SHORT $LN5@ErrorName
  00035	c7 85 24 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv68[ebp], 1
  0003f	eb 0a		 jmp	 SHORT $LN6@ErrorName
$LN5@ErrorName:
  00041	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN6@ErrorName:
  0004b	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR tv68[ebp], 0
  00052	75 01		 jne	 SHORT $LN2@ErrorName
  00054	cc		 int	 3
$LN2@ErrorName:
; Line 2062
  00055	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0005b	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?_errorNames@XMLDocument@tinyxml2@@0PAPBDA[ecx*4]
  00062	89 55 ec	 mov	 DWORD PTR _errorName$[ebp], edx
; Line 2063
  00065	83 7d ec 00	 cmp	 DWORD PTR _errorName$[ebp], 0
  00069	74 1f		 je	 SHORT $LN7@ErrorName
  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	6b c8 00	 imul	 ecx, eax, 0
  00073	8b 55 ec	 mov	 edx, DWORD PTR _errorName$[ebp]
  00076	0f be 04 0a	 movsx	 eax, BYTE PTR [edx+ecx]
  0007a	85 c0		 test	 eax, eax
  0007c	74 0c		 je	 SHORT $LN7@ErrorName
  0007e	c7 85 24 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv79[ebp], 1
  00088	eb 0a		 jmp	 SHORT $LN8@ErrorName
$LN7@ErrorName:
  0008a	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
$LN8@ErrorName:
  00094	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR tv79[ebp], 0
  0009b	75 01		 jne	 SHORT $LN1@ErrorName
  0009d	cc		 int	 3
$LN1@ErrorName:
; Line 2064
  0009e	8b 45 ec	 mov	 eax, DWORD PTR _errorName$[ebp]
; Line 2065
  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
?ErrorName@XMLDocument@tinyxml2@@QBEPBDXZ ENDP		; tinyxml2::XMLDocument::ErrorName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Error@XMLDocument@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?Error@XMLDocument@tinyxml2@@QBE_NXZ PROC		; tinyxml2::XMLDocument::Error, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1677
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1678
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0002a	74 0c		 je	 SHORT $LN3@Error
  0002c	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00036	eb 0a		 jmp	 SHORT $LN4@Error
$LN3@Error:
  00038	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN4@Error:
  00042	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv66[ebp]
; Line 1679
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?Error@XMLDocument@tinyxml2@@QBE_NXZ ENDP		; tinyxml2::XMLDocument::Error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
_error$ = 8						; size = 4
_str1$ = 12						; size = 4
_str2$ = 16						; size = 4
?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z PROC ; tinyxml2::XMLDocument::SetError, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2052
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2053
  00023	83 7d 08 00	 cmp	 DWORD PTR _error$[ebp], 0
  00027	7c 12		 jl	 SHORT $LN4@SetError
  00029	83 7d 08 14	 cmp	 DWORD PTR _error$[ebp], 20 ; 00000014H
  0002d	7d 0c		 jge	 SHORT $LN4@SetError
  0002f	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00039	eb 0a		 jmp	 SHORT $LN5@SetError
$LN4@SetError:
  0003b	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN5@SetError:
  00045	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR tv66[ebp], 0
  0004c	75 01		 jne	 SHORT $LN1@SetError
  0004e	cc		 int	 3
$LN1@SetError:
; Line 2054
  0004f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _error$[ebp]
  00055	89 48 30	 mov	 DWORD PTR [eax+48], ecx
; Line 2055
  00058	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  0005e	89 48 38	 mov	 DWORD PTR [eax+56], ecx
; Line 2056
  00061	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  00067	89 48 3c	 mov	 DWORD PTR [eax+60], ecx
; Line 2057
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 0c 00	 ret	 12			; 0000000cH
?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ENDP ; tinyxml2::XMLDocument::SetError
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DeleteNode@XMLDocument@tinyxml2@@QAEXPAVXMLNode@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_node$ = 8						; size = 4
?DeleteNode@XMLDocument@tinyxml2@@QAEXPAVXMLNode@2@@Z PROC ; tinyxml2::XMLDocument::DeleteNode, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1887
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1888
  00023	83 7d 08 00	 cmp	 DWORD PTR _node$[ebp], 0
  00027	75 01		 jne	 SHORT $LN4@DeleteNode
  00029	cc		 int	 3
$LN4@DeleteNode:
; Line 1889
  0002a	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  0002d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00030	3b 4d f8	 cmp	 ecx, DWORD PTR _this$[ebp]
  00033	74 01		 je	 SHORT $LN3@DeleteNode
  00035	cc		 int	 3
$LN3@DeleteNode:
; Line 1890
  00036	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  00039	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0003d	74 11		 je	 SHORT $LN2@DeleteNode
; Line 1891
  0003f	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  00042	50		 push	 eax
  00043	8b 4d 08	 mov	 ecx, DWORD PTR _node$[ebp]
  00046	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00049	e8 00 00 00 00	 call	 ?DeleteChild@XMLNode@tinyxml2@@QAEXPAV12@@Z ; tinyxml2::XMLNode::DeleteChild
; Line 1893
  0004e	eb 28		 jmp	 SHORT $LN5@DeleteNode
$LN2@DeleteNode:
; Line 1898
  00050	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  00053	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00056	8b 55 08	 mov	 edx, DWORD PTR _node$[ebp]
  00059	8b 01		 mov	 eax, DWORD PTR [ecx]
  0005b	8b f4		 mov	 esi, esp
  0005d	8b 4a 28	 mov	 ecx, DWORD PTR [edx+40]
  00060	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00063	ff d2		 call	 edx
  00065	3b f4		 cmp	 esi, esp
  00067	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1900
  0006c	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?DeleteNode@XMLNode@tinyxml2@@CAXPAV12@@Z ; tinyxml2::XMLNode::DeleteNode
  00075	83 c4 04	 add	 esp, 4
$LN5@DeleteNode:
; Line 1902
  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00081	3b ec		 cmp	 ebp, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 04 00	 ret	 4
?DeleteNode@XMLDocument@tinyxml2@@QAEXPAVXMLNode@2@@Z ENDP ; tinyxml2::XMLDocument::DeleteNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z
_TEXT	SEGMENT
tv95 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -236						; size = 4
_unk$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z PROC ; tinyxml2::XMLDocument::NewUnknown, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1863
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00021	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1864
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  0004b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  00054	8b f4		 mov	 esi, esp
  00056	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00059	ff d0		 call	 eax
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  00065	74 01		 je	 SHORT $LN1@NewUnknown
  00067	cc		 int	 3
$LN1@NewUnknown:
; Line 1865
  00068	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  00071	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  0007a	8b f4		 mov	 esi, esp
  0007c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0007f	ff d0		 call	 eax
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  0008e	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  00094	51		 push	 ecx
  00095	6a 2c		 push	 44			; 0000002cH
  00097	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0009c	83 c4 08	 add	 esp, 8
  0009f	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  000a5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ac	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  000b3	74 17		 je	 SHORT $LN4@NewUnknown
  000b5	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000b8	52		 push	 edx
  000b9	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  000bf	e8 00 00 00 00	 call	 ??0XMLUnknown@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLUnknown::XMLUnknown
  000c4	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv95[ebp], eax
  000ca	eb 0a		 jmp	 SHORT $LN5@NewUnknown
$LN4@NewUnknown:
  000cc	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN5@NewUnknown:
  000d6	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR tv95[ebp]
  000dc	89 85 fc fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  000e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e9	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000ef	89 4d e0	 mov	 DWORD PTR _unk$[ebp], ecx
; Line 1866
  000f2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	05 28 01 00 00	 add	 eax, 296		; 00000128H
  000fa	8b 4d e0	 mov	 ecx, DWORD PTR _unk$[ebp]
  000fd	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 1867
  00100	6a 00		 push	 0
  00102	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  00105	50		 push	 eax
  00106	8b 4d e0	 mov	 ecx, DWORD PTR _unk$[ebp]
  00109	e8 00 00 00 00	 call	 ?SetValue@XMLNode@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLNode::SetValue
; Line 1868
  0010e	8b 45 e0	 mov	 eax, DWORD PTR _unk$[ebp]
; Line 1869
  00111	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00114	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011b	59		 pop	 ecx
  0011c	5f		 pop	 edi
  0011d	5e		 pop	 esi
  0011e	5b		 pop	 ebx
  0011f	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  00125	3b ec		 cmp	 ebp, esp
  00127	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z$0:
  00000	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00006	50		 push	 eax
  00007	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 8a f0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-272]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z ENDP ; tinyxml2::XMLDocument::NewUnknown
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z
_TEXT	SEGMENT
tv144 = -268						; size = 4
tv95 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -236						; size = 4
_dec$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z PROC ; tinyxml2::XMLDocument::NewDeclaration, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1853
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00021	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1854
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  0004b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  00054	8b f4		 mov	 esi, esp
  00056	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00059	ff d0		 call	 eax
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  00065	74 01		 je	 SHORT $LN1@NewDeclara
  00067	cc		 int	 3
$LN1@NewDeclara:
; Line 1855
  00068	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  00071	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  0007a	8b f4		 mov	 esi, esp
  0007c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0007f	ff d0		 call	 eax
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  0008e	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  00094	51		 push	 ecx
  00095	6a 2c		 push	 44			; 0000002cH
  00097	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0009c	83 c4 08	 add	 esp, 8
  0009f	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  000a5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ac	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  000b3	74 17		 je	 SHORT $LN4@NewDeclara
  000b5	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000b8	52		 push	 edx
  000b9	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  000bf	e8 00 00 00 00	 call	 ??0XMLDeclaration@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLDeclaration::XMLDeclaration
  000c4	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv95[ebp], eax
  000ca	eb 0a		 jmp	 SHORT $LN5@NewDeclara
$LN4@NewDeclara:
  000cc	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN5@NewDeclara:
  000d6	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR tv95[ebp]
  000dc	89 85 fc fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  000e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e9	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000ef	89 4d e0	 mov	 DWORD PTR _dec$[ebp], ecx
; Line 1856
  000f2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	05 28 01 00 00	 add	 eax, 296		; 00000128H
  000fa	8b 4d e0	 mov	 ecx, DWORD PTR _dec$[ebp]
  000fd	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 1857
  00100	83 7d 08 00	 cmp	 DWORD PTR _str$[ebp], 0
  00104	74 0b		 je	 SHORT $LN6@NewDeclara
  00106	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  00109	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv144[ebp], eax
  0010f	eb 0a		 jmp	 SHORT $LN7@NewDeclara
$LN6@NewDeclara:
  00111	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv144[ebp], OFFSET ??_C@_0CD@MCGGMGEP@xml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCUTF?9@
$LN7@NewDeclara:
  0011b	6a 00		 push	 0
  0011d	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv144[ebp]
  00123	51		 push	 ecx
  00124	8b 4d e0	 mov	 ecx, DWORD PTR _dec$[ebp]
  00127	e8 00 00 00 00	 call	 ?SetValue@XMLNode@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLNode::SetValue
; Line 1858
  0012c	8b 45 e0	 mov	 eax, DWORD PTR _dec$[ebp]
; Line 1859
  0012f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00132	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00139	59		 pop	 ecx
  0013a	5f		 pop	 edi
  0013b	5e		 pop	 esi
  0013c	5b		 pop	 ebx
  0013d	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  00143	3b ec		 cmp	 ebp, esp
  00145	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014a	8b e5		 mov	 esp, ebp
  0014c	5d		 pop	 ebp
  0014d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z$0:
  00000	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00006	50		 push	 eax
  00007	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 8a f0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-272]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z ENDP ; tinyxml2::XMLDocument::NewDeclaration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z
_TEXT	SEGMENT
tv95 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -236						; size = 4
_text$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z PROC ; tinyxml2::XMLDocument::NewText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1843
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00021	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1844
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  0004b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 90 dc 00 00
	00		 mov	 edx, DWORD PTR [eax+220]
  00054	8b f4		 mov	 esi, esp
  00056	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00059	ff d0		 call	 eax
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	83 f8 30	 cmp	 eax, 48			; 00000030H
  00065	74 01		 je	 SHORT $LN1@NewText
  00067	cc		 int	 3
$LN1@NewText:
; Line 1845
  00068	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  00071	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 90 dc 00 00
	00		 mov	 edx, DWORD PTR [eax+220]
  0007a	8b f4		 mov	 esi, esp
  0007c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0007f	ff d0		 call	 eax
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  0008e	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  00094	51		 push	 ecx
  00095	6a 30		 push	 48			; 00000030H
  00097	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0009c	83 c4 08	 add	 esp, 8
  0009f	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  000a5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ac	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  000b3	74 17		 je	 SHORT $LN4@NewText
  000b5	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000b8	52		 push	 edx
  000b9	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  000bf	e8 00 00 00 00	 call	 ??0XMLText@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLText::XMLText
  000c4	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv95[ebp], eax
  000ca	eb 0a		 jmp	 SHORT $LN5@NewText
$LN4@NewText:
  000cc	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN5@NewText:
  000d6	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR tv95[ebp]
  000dc	89 85 fc fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  000e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e9	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000ef	89 4d e0	 mov	 DWORD PTR _text$[ebp], ecx
; Line 1846
  000f2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  000fa	8b 4d e0	 mov	 ecx, DWORD PTR _text$[ebp]
  000fd	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 1847
  00100	6a 00		 push	 0
  00102	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  00105	50		 push	 eax
  00106	8b 4d e0	 mov	 ecx, DWORD PTR _text$[ebp]
  00109	e8 00 00 00 00	 call	 ?SetValue@XMLNode@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLNode::SetValue
; Line 1848
  0010e	8b 45 e0	 mov	 eax, DWORD PTR _text$[ebp]
; Line 1849
  00111	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00114	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011b	59		 pop	 ecx
  0011c	5f		 pop	 edi
  0011d	5e		 pop	 esi
  0011e	5b		 pop	 ebx
  0011f	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  00125	3b ec		 cmp	 ebp, esp
  00127	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z$0:
  00000	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00006	50		 push	 eax
  00007	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 8a f0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-272]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z ENDP ; tinyxml2::XMLDocument::NewText
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z
_TEXT	SEGMENT
tv95 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -236						; size = 4
_comment$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z PROC ; tinyxml2::XMLDocument::NewComment, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1833
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00021	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1834
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  0004b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  00054	8b f4		 mov	 esi, esp
  00056	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00059	ff d0		 call	 eax
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  00065	74 01		 je	 SHORT $LN1@NewComment
  00067	cc		 int	 3
$LN1@NewComment:
; Line 1835
  00068	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  00071	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00074	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  0007a	8b f4		 mov	 esi, esp
  0007c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0007f	ff d0		 call	 eax
  00081	3b f4		 cmp	 esi, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  0008e	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  00094	51		 push	 ecx
  00095	6a 2c		 push	 44			; 0000002cH
  00097	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0009c	83 c4 08	 add	 esp, 8
  0009f	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  000a5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000ac	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  000b3	74 17		 je	 SHORT $LN4@NewComment
  000b5	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000b8	52		 push	 edx
  000b9	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  000bf	e8 00 00 00 00	 call	 ??0XMLComment@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLComment::XMLComment
  000c4	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv95[ebp], eax
  000ca	eb 0a		 jmp	 SHORT $LN5@NewComment
$LN4@NewComment:
  000cc	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN5@NewComment:
  000d6	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR tv95[ebp]
  000dc	89 85 fc fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  000e2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e9	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000ef	89 4d e0	 mov	 DWORD PTR _comment$[ebp], ecx
; Line 1836
  000f2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f5	05 28 01 00 00	 add	 eax, 296		; 00000128H
  000fa	8b 4d e0	 mov	 ecx, DWORD PTR _comment$[ebp]
  000fd	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 1837
  00100	6a 00		 push	 0
  00102	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  00105	50		 push	 eax
  00106	8b 4d e0	 mov	 ecx, DWORD PTR _comment$[ebp]
  00109	e8 00 00 00 00	 call	 ?SetValue@XMLNode@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLNode::SetValue
; Line 1838
  0010e	8b 45 e0	 mov	 eax, DWORD PTR _comment$[ebp]
; Line 1839
  00111	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00114	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011b	59		 pop	 ecx
  0011c	5f		 pop	 edi
  0011d	5e		 pop	 esi
  0011e	5b		 pop	 ebx
  0011f	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  00125	3b ec		 cmp	 ebp, esp
  00127	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012c	8b e5		 mov	 esp, ebp
  0012e	5d		 pop	 ebp
  0012f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z$0:
  00000	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00006	50		 push	 eax
  00007	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 8a f0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-272]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z ENDP ; tinyxml2::XMLDocument::NewComment
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z
_TEXT	SEGMENT
tv95 = -268						; size = 4
$T2 = -260						; size = 4
$T3 = -248						; size = 4
$T4 = -236						; size = 4
_ele$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z PROC ; tinyxml2::XMLDocument::NewElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1823
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00021	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1824
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	83 c1 44	 add	 ecx, 68			; 00000044H
  00048	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  0004e	8b f4		 mov	 esi, esp
  00050	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00053	ff d0		 call	 eax
  00055	3b f4		 cmp	 esi, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	83 f8 34	 cmp	 eax, 52			; 00000034H
  0005f	74 01		 je	 SHORT $LN1@NewElement
  00061	cc		 int	 3
$LN1@NewElement:
; Line 1825
  00062	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	83 c1 44	 add	 ecx, 68			; 00000044H
  00068	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  0006e	8b f4		 mov	 esi, esp
  00070	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00073	ff d0		 call	 eax
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  00082	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  00088	51		 push	 ecx
  00089	6a 34		 push	 52			; 00000034H
  0008b	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00090	83 c4 08	 add	 esp, 8
  00093	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00099	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a0	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  000a7	74 17		 je	 SHORT $LN4@NewElement
  000a9	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000ac	52		 push	 edx
  000ad	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  000b3	e8 00 00 00 00	 call	 ??0XMLElement@tinyxml2@@AAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLElement::XMLElement
  000b8	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv95[ebp], eax
  000be	eb 0a		 jmp	 SHORT $LN5@NewElement
$LN4@NewElement:
  000c0	c7 85 f4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN5@NewElement:
  000ca	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR tv95[ebp]
  000d0	89 85 fc fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  000d6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000dd	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000e3	89 4d e0	 mov	 DWORD PTR _ele$[ebp], ecx
; Line 1826
  000e6	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e9	83 c0 44	 add	 eax, 68			; 00000044H
  000ec	8b 4d e0	 mov	 ecx, DWORD PTR _ele$[ebp]
  000ef	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 1827
  000f2	6a 00		 push	 0
  000f4	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  000f7	50		 push	 eax
  000f8	8b 4d e0	 mov	 ecx, DWORD PTR _ele$[ebp]
  000fb	e8 00 00 00 00	 call	 ?SetName@XMLElement@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLElement::SetName
; Line 1828
  00100	8b 45 e0	 mov	 eax, DWORD PTR _ele$[ebp]
; Line 1829
  00103	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00106	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010d	59		 pop	 ecx
  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	5b		 pop	 ebx
  00111	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  00117	3b ec		 cmp	 ebp, esp
  00119	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z$0:
  00000	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00006	50		 push	 eax
  00007	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 8a f0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-272]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ENDP ; tinyxml2::XMLDocument::NewElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Accept@XMLDocument@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z
_TEXT	SEGMENT
_node$1 = -20						; size = 4
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@XMLDocument@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z PROC ; tinyxml2::XMLDocument::Accept, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 686
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 687
  00023	83 7d 08 00	 cmp	 DWORD PTR _visitor$[ebp], 0
  00027	75 01		 jne	 SHORT $LN6@Accept
  00029	cc		 int	 3
$LN6@Accept:
; Line 688
  0002a	8b f4		 mov	 esi, esp
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  00038	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0003b	ff d0		 call	 eax
  0003d	3b f4		 cmp	 esi, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	0f b6 c8	 movzx	 ecx, al
  00047	85 c9		 test	 ecx, ecx
  00049	74 43		 je	 SHORT $LN5@Accept
; Line 689
  0004b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00053	89 45 ec	 mov	 DWORD PTR _node$1[ebp], eax
  00056	eb 0b		 jmp	 SHORT $LN4@Accept
$LN3@Accept:
  00058	8b 4d ec	 mov	 ecx, DWORD PTR _node$1[ebp]
  0005b	e8 00 00 00 00	 call	 ?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::NextSibling
  00060	89 45 ec	 mov	 DWORD PTR _node$1[ebp], eax
$LN4@Accept:
  00063	83 7d ec 00	 cmp	 DWORD PTR _node$1[ebp], 0
  00067	74 25		 je	 SHORT $LN5@Accept
; Line 690
  00069	8b f4		 mov	 esi, esp
  0006b	8b 45 08	 mov	 eax, DWORD PTR _visitor$[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d ec	 mov	 ecx, DWORD PTR _node$1[ebp]
  00072	8b 11		 mov	 edx, DWORD PTR [ecx]
  00074	8b 4d ec	 mov	 ecx, DWORD PTR _node$1[ebp]
  00077	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0007a	ff d0		 call	 eax
  0007c	3b f4		 cmp	 esi, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00083	0f b6 c8	 movzx	 ecx, al
  00086	85 c9		 test	 ecx, ecx
  00088	75 02		 jne	 SHORT $LN1@Accept
; Line 691
  0008a	eb 02		 jmp	 SHORT $LN5@Accept
$LN1@Accept:
; Line 693
  0008c	eb ca		 jmp	 SHORT $LN3@Accept
$LN5@Accept:
; Line 695
  0008e	8b f4		 mov	 esi, esp
  00090	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00093	50		 push	 eax
  00094	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  00097	8b 11		 mov	 edx, DWORD PTR [ecx]
  00099	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  0009c	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0009f	ff d0		 call	 eax
  000a1	3b f4		 cmp	 esi, esp
  000a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 696
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5b		 pop	 ebx
  000ab	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000b1	3b ec		 cmp	 ebp, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c2 04 00	 ret	 4
?Accept@XMLDocument@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ENDP ; tinyxml2::XMLDocument::Accept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z
_TEXT	SEGMENT
_stdoutStreamer$2 = -272				; size = 240
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_streamer$ = 8						; size = 4
?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z PROC ; tinyxml2::XMLDocument::Print, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2040
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec c8 01 00
	00		 sub	 esp, 456		; 000001c8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 2c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-468]
  00021	b9 72 00 00 00	 mov	 ecx, 114		; 00000072H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2041
  00045	83 7d 08 00	 cmp	 DWORD PTR _streamer$[ebp], 0
  00049	74 1c		 je	 SHORT $LN2@Print
; Line 2042
  0004b	8b f4		 mov	 esi, esp
  0004d	8b 45 08	 mov	 eax, DWORD PTR _streamer$[ebp]
  00050	50		 push	 eax
  00051	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	8b 11		 mov	 edx, DWORD PTR [ecx]
  00056	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0005c	ff d0		 call	 eax
  0005e	3b f4		 cmp	 esi, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2044
  00065	eb 6f		 jmp	 SHORT $LN3@Print
$LN2@Print:
; Line 2045
  00067	68 f0 00 00 00	 push	 240			; 000000f0H
  0006c	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _stdoutStreamer$2[ebp]
  00072	e8 00 00 00 00	 call	 ?__autoclassinit2@XMLPrinter@tinyxml2@@QAEXI@Z
  00077	6a 00		 push	 0
  00079	6a 00		 push	 0
  0007b	8b f4		 mov	 esi, esp
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____iob_func
  00083	3b f4		 cmp	 esi, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0008f	c1 e1 00	 shl	 ecx, 0
  00092	03 c1		 add	 eax, ecx
  00094	50		 push	 eax
  00095	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _stdoutStreamer$2[ebp]
  0009b	e8 00 00 00 00	 call	 ??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
  000a0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 2046
  000a7	8b f4		 mov	 esi, esp
  000a9	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _stdoutStreamer$2[ebp]
  000af	50		 push	 eax
  000b0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  000bb	ff d0		 call	 eax
  000bd	3b f4		 cmp	 esi, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2047
  000c4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000cb	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _stdoutStreamer$2[ebp]
  000d1	e8 00 00 00 00	 call	 ??1XMLPrinter@tinyxml2@@UAE@XZ ; tinyxml2::XMLPrinter::~XMLPrinter
$LN3@Print:
; Line 2048
  000d6	52		 push	 edx
  000d7	8b cd		 mov	 ecx, ebp
  000d9	50		 push	 eax
  000da	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@Print
  000e0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e5	58		 pop	 eax
  000e6	5a		 pop	 edx
  000e7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ea	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f1	59		 pop	 ecx
  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f8	33 cd		 xor	 ecx, ebp
  000fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ff	81 c4 d4 01 00
	00		 add	 esp, 468		; 000001d4H
  00105	3b ec		 cmp	 ebp, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 04 00	 ret	 4
  00112	8b ff		 npad	 2
$LN9@Print:
  00114	01 00 00 00	 DD	 1
  00118	00 00 00 00	 DD	 $LN8@Print
$LN8@Print:
  0011c	f0 fe ff ff	 DD	 -272			; fffffef0H
  00120	f0 00 00 00	 DD	 240			; 000000f0H
  00124	00 00 00 00	 DD	 $LN6@Print
$LN6@Print:
  00128	73		 DB	 115			; 00000073H
  00129	74		 DB	 116			; 00000074H
  0012a	64		 DB	 100			; 00000064H
  0012b	6f		 DB	 111			; 0000006fH
  0012c	75		 DB	 117			; 00000075H
  0012d	74		 DB	 116			; 00000074H
  0012e	53		 DB	 83			; 00000053H
  0012f	74		 DB	 116			; 00000074H
  00130	72		 DB	 114			; 00000072H
  00131	65		 DB	 101			; 00000065H
  00132	61		 DB	 97			; 00000061H
  00133	6d		 DB	 109			; 0000006dH
  00134	65		 DB	 101			; 00000065H
  00135	72		 DB	 114			; 00000072H
  00136	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z$0:
  00000	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _stdoutStreamer$2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1XMLPrinter@tinyxml2@@UAE@XZ ; tinyxml2::XMLPrinter::~XMLPrinter
__ehhandler$?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 28 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-472]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ENDP ; tinyxml2::XMLDocument::Print
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?HasBOM@XMLDocument@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?HasBOM@XMLDocument@tinyxml2@@QBE_NXZ PROC		; tinyxml2::XMLDocument::HasBOM, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1595
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1596
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8a 40 2c	 mov	 al, BYTE PTR [eax+44]
; Line 1597
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?HasBOM@XMLDocument@tinyxml2@@QBE_NXZ ENDP		; tinyxml2::XMLDocument::HasBOM
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?WhitespaceMode@XMLDocument@tinyxml2@@QBE?AW4Whitespace@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?WhitespaceMode@XMLDocument@tinyxml2@@QBE?AW4Whitespace@2@XZ PROC ; tinyxml2::XMLDocument::WhitespaceMode, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1588
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1589
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
; Line 1590
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?WhitespaceMode@XMLDocument@tinyxml2@@QBE?AW4Whitespace@2@XZ ENDP ; tinyxml2::XMLDocument::WhitespaceMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ProcessEntities@XMLDocument@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ProcessEntities@XMLDocument@tinyxml2@@QBE_NXZ PROC	; tinyxml2::XMLDocument::ProcessEntities, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1585
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1586
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8a 40 2d	 mov	 al, BYTE PTR [eax+45]
; Line 1587
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?ProcessEntities@XMLDocument@tinyxml2@@QBE_NXZ ENDP	; tinyxml2::XMLDocument::ProcessEntities
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z
_TEXT	SEGMENT
$T2 = -476						; size = 4
_stream$ = -272						; size = 240
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_fp$ = 8						; size = 4
_compact$ = 12						; size = 1
?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z PROC ; tinyxml2::XMLDocument::SaveFile, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1998
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d4 01 00
	00		 sub	 esp, 468		; 000001d4H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 20 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-480]
  00021	b9 75 00 00 00	 mov	 ecx, 117		; 00000075H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2001
  00045	6a 00		 push	 0
  00047	6a 00		 push	 0
  00049	6a 00		 push	 0
  0004b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 2002
  00053	68 f0 00 00 00	 push	 240			; 000000f0H
  00058	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _stream$[ebp]
  0005e	e8 00 00 00 00	 call	 ?__autoclassinit2@XMLPrinter@tinyxml2@@QAEXI@Z
  00063	6a 00		 push	 0
  00065	0f b6 45 0c	 movzx	 eax, BYTE PTR _compact$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d 08	 mov	 ecx, DWORD PTR _fp$[ebp]
  0006d	51		 push	 ecx
  0006e	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _stream$[ebp]
  00074	e8 00 00 00 00	 call	 ??0XMLPrinter@tinyxml2@@QAE@PAU_iobuf@@_NH@Z ; tinyxml2::XMLPrinter::XMLPrinter
  00079	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 2003
  00080	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _stream$[ebp]
  00086	50		 push	 eax
  00087	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	e8 00 00 00 00	 call	 ?Print@XMLDocument@tinyxml2@@QBEXPAVXMLPrinter@2@@Z ; tinyxml2::XMLDocument::Print
; Line 2004
  0008f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00095	89 8d 24 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  0009b	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a2	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _stream$[ebp]
  000a8	e8 00 00 00 00	 call	 ??1XMLPrinter@tinyxml2@@UAE@XZ ; tinyxml2::XMLPrinter::~XMLPrinter
  000ad	8b 85 24 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
; Line 2005
  000b3	52		 push	 edx
  000b4	8b cd		 mov	 ecx, ebp
  000b6	50		 push	 eax
  000b7	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@SaveFile
  000bd	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000c2	58		 pop	 eax
  000c3	5a		 pop	 edx
  000c4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ce	59		 pop	 ecx
  000cf	5f		 pop	 edi
  000d0	5e		 pop	 esi
  000d1	5b		 pop	 ebx
  000d2	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d5	33 cd		 xor	 ecx, ebp
  000d7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000dc	81 c4 e0 01 00
	00		 add	 esp, 480		; 000001e0H
  000e2	3b ec		 cmp	 ebp, esp
  000e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 08 00	 ret	 8
  000ef	90		 npad	 1
$LN7@SaveFile:
  000f0	01 00 00 00	 DD	 1
  000f4	00 00 00 00	 DD	 $LN6@SaveFile
$LN6@SaveFile:
  000f8	f0 fe ff ff	 DD	 -272			; fffffef0H
  000fc	f0 00 00 00	 DD	 240			; 000000f0H
  00100	00 00 00 00	 DD	 $LN4@SaveFile
$LN4@SaveFile:
  00104	73		 DB	 115			; 00000073H
  00105	74		 DB	 116			; 00000074H
  00106	72		 DB	 114			; 00000072H
  00107	65		 DB	 101			; 00000065H
  00108	61		 DB	 97			; 00000061H
  00109	6d		 DB	 109			; 0000006dH
  0010a	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z$0:
  00000	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _stream$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1XMLPrinter@tinyxml2@@UAE@XZ ; tinyxml2::XMLPrinter::~XMLPrinter
__ehhandler$?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 1c fe ff
	ff		 mov	 ecx, DWORD PTR [edx-484]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z ENDP ; tinyxml2::XMLDocument::SaveFile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD_N@Z
_TEXT	SEGMENT
_fp$ = -20						; size = 4
_this$ = -8						; size = 4
_filename$ = 8						; size = 4
_compact$ = 12						; size = 1
?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD_N@Z PROC ; tinyxml2::XMLDocument::SaveFile, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1985
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1986
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_01NOFIACDB@w?$AA@
  00028	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ?callfopen@tinyxml2@@YAPAU_iobuf@@PBD0@Z ; tinyxml2::callfopen
  00031	83 c4 08	 add	 esp, 8
  00034	89 45 ec	 mov	 DWORD PTR _fp$[ebp], eax
; Line 1987
  00037	83 7d ec 00	 cmp	 DWORD PTR _fp$[ebp], 0
  0003b	75 18		 jne	 SHORT $LN1@SaveFile
; Line 1988
  0003d	6a 00		 push	 0
  0003f	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00042	50		 push	 eax
  00043	6a 04		 push	 4
  00045	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 1989
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00050	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  00053	eb 2d		 jmp	 SHORT $LN2@SaveFile
$LN1@SaveFile:
; Line 1991
  00055	0f b6 45 0c	 movzx	 eax, BYTE PTR _compact$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _fp$[ebp]
  0005d	51		 push	 ecx
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@_N@Z ; tinyxml2::XMLDocument::SaveFile
; Line 1992
  00066	8b f4		 mov	 esi, esp
  00068	8b 45 ec	 mov	 eax, DWORD PTR _fp$[ebp]
  0006b	50		 push	 eax
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  00072	83 c4 04	 add	 esp, 4
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1993
  0007c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
$LN2@SaveFile:
; Line 1994
  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 08 00	 ret	 8
?SaveFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD_N@Z ENDP ; tinyxml2::XMLDocument::SaveFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@@Z
_TEXT	SEGMENT
$T1 = -248						; size = 4
_read$ = -44						; size = 4
_size$ = -32						; size = 4
_filelength$ = -20					; size = 4
_this$ = -8						; size = 4
_fp$ = 8						; size = 4
?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@@Z PROC ; tinyxml2::XMLDocument::LoadFile, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1940
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00013	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1941
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Clear@XMLDocument@tinyxml2@@QAEXXZ ; tinyxml2::XMLDocument::Clear
; Line 1943
  0002b	8b f4		 mov	 esi, esp
  0002d	6a 00		 push	 0
  0002f	6a 00		 push	 0
  00031	8b 45 08	 mov	 eax, DWORD PTR _fp$[ebp]
  00034	50		 push	 eax
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1944
  00045	8b f4		 mov	 esi, esp
  00047	8b 45 08	 mov	 eax, DWORD PTR _fp$[ebp]
  0004a	50		 push	 eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fgetc
  00051	83 c4 04	 add	 esp, 4
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	83 f8 ff	 cmp	 eax, -1
  0005e	75 33		 jne	 SHORT $LN6@LoadFile
  00060	8b f4		 mov	 esi, esp
  00062	8b 45 08	 mov	 eax, DWORD PTR _fp$[ebp]
  00065	50		 push	 eax
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ferror
  0006c	83 c4 04	 add	 esp, 4
  0006f	3b f4		 cmp	 esi, esp
  00071	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00076	85 c0		 test	 eax, eax
  00078	74 19		 je	 SHORT $LN6@LoadFile
; Line 1945
  0007a	6a 00		 push	 0
  0007c	6a 00		 push	 0
  0007e	6a 05		 push	 5
  00080	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 1946
  00088	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  0008e	e9 47 01 00 00	 jmp	 $LN7@LoadFile
$LN6@LoadFile:
; Line 1949
  00093	8b f4		 mov	 esi, esp
  00095	6a 02		 push	 2
  00097	6a 00		 push	 0
  00099	8b 45 08	 mov	 eax, DWORD PTR _fp$[ebp]
  0009c	50		 push	 eax
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  000a3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a6	3b f4		 cmp	 esi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1950
  000ad	8b f4		 mov	 esi, esp
  000af	8b 45 08	 mov	 eax, DWORD PTR _fp$[ebp]
  000b2	50		 push	 eax
  000b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ftell
  000b9	83 c4 04	 add	 esp, 4
  000bc	3b f4		 cmp	 esi, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c3	89 45 ec	 mov	 DWORD PTR _filelength$[ebp], eax
; Line 1951
  000c6	8b f4		 mov	 esi, esp
  000c8	6a 00		 push	 0
  000ca	6a 00		 push	 0
  000cc	8b 45 08	 mov	 eax, DWORD PTR _fp$[ebp]
  000cf	50		 push	 eax
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  000d6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1952
  000e0	83 7d ec ff	 cmp	 DWORD PTR _filelength$[ebp], -1
  000e4	75 19		 jne	 SHORT $LN5@LoadFile
; Line 1953
  000e6	6a 00		 push	 0
  000e8	6a 00		 push	 0
  000ea	6a 05		 push	 5
  000ec	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 1954
  000f4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f7	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  000fa	e9 db 00 00 00	 jmp	 $LN7@LoadFile
$LN5@LoadFile:
; Line 1957
  000ff	8b 45 ec	 mov	 eax, DWORD PTR _filelength$[ebp]
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 ?Fits@?$LongFitsIntoSizeTMinusOne@$00@tinyxml2@@SA_NK@Z ; tinyxml2::LongFitsIntoSizeTMinusOne<1>::Fits
  00108	83 c4 04	 add	 esp, 4
  0010b	0f b6 c8	 movzx	 ecx, al
  0010e	85 c9		 test	 ecx, ecx
  00110	75 19		 jne	 SHORT $LN4@LoadFile
; Line 1959
  00112	6a 00		 push	 0
  00114	6a 00		 push	 0
  00116	6a 05		 push	 5
  00118	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011b	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 1960
  00120	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00123	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  00126	e9 af 00 00 00	 jmp	 $LN7@LoadFile
$LN4@LoadFile:
; Line 1963
  0012b	83 7d ec 00	 cmp	 DWORD PTR _filelength$[ebp], 0
  0012f	75 19		 jne	 SHORT $LN3@LoadFile
; Line 1964
  00131	6a 00		 push	 0
  00133	6a 00		 push	 0
  00135	6a 0f		 push	 15			; 0000000fH
  00137	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013a	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 1965
  0013f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00142	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  00145	e9 90 00 00 00	 jmp	 $LN7@LoadFile
$LN3@LoadFile:
; Line 1968
  0014a	8b 45 ec	 mov	 eax, DWORD PTR _filelength$[ebp]
  0014d	89 45 e0	 mov	 DWORD PTR _size$[ebp], eax
; Line 1969
  00150	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00153	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  00157	74 01		 je	 SHORT $LN2@LoadFile
  00159	cc		 int	 3
$LN2@LoadFile:
; Line 1970
  0015a	8b 45 e0	 mov	 eax, DWORD PTR _size$[ebp]
  0015d	83 c0 01	 add	 eax, 1
  00160	50		 push	 eax
  00161	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00166	83 c4 04	 add	 esp, 4
  00169	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0016f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00172	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00178	89 51 40	 mov	 DWORD PTR [ecx+64], edx
; Line 1971
  0017b	8b f4		 mov	 esi, esp
  0017d	8b 45 08	 mov	 eax, DWORD PTR _fp$[ebp]
  00180	50		 push	 eax
  00181	8b 4d e0	 mov	 ecx, DWORD PTR _size$[ebp]
  00184	51		 push	 ecx
  00185	6a 01		 push	 1
  00187	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0018a	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0018d	50		 push	 eax
  0018e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00194	83 c4 10	 add	 esp, 16			; 00000010H
  00197	3b f4		 cmp	 esi, esp
  00199	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019e	89 45 d4	 mov	 DWORD PTR _read$[ebp], eax
; Line 1972
  001a1	8b 45 d4	 mov	 eax, DWORD PTR _read$[ebp]
  001a4	3b 45 e0	 cmp	 eax, DWORD PTR _size$[ebp]
  001a7	74 16		 je	 SHORT $LN1@LoadFile
; Line 1973
  001a9	6a 00		 push	 0
  001ab	6a 00		 push	 0
  001ad	6a 05		 push	 5
  001af	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b2	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 1974
  001b7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001ba	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  001bd	eb 1b		 jmp	 SHORT $LN7@LoadFile
$LN1@LoadFile:
; Line 1977
  001bf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001c2	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  001c5	8b 55 e0	 mov	 edx, DWORD PTR _size$[ebp]
  001c8	c6 04 11 00	 mov	 BYTE PTR [ecx+edx], 0
; Line 1979
  001cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cf	e8 00 00 00 00	 call	 ?Parse@XMLDocument@tinyxml2@@AAEXXZ ; tinyxml2::XMLDocument::Parse
; Line 1980
  001d4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  001d7	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
$LN7@LoadFile:
; Line 1981
  001da	5f		 pop	 edi
  001db	5e		 pop	 esi
  001dc	5b		 pop	 ebx
  001dd	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  001e3	3b ec		 cmp	 ebp, esp
  001e5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ea	8b e5		 mov	 esp, ebp
  001ec	5d		 pop	 ebp
  001ed	c2 04 00	 ret	 4
?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@@Z ENDP ; tinyxml2::XMLDocument::LoadFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z
_TEXT	SEGMENT
_fp$ = -20						; size = 4
_this$ = -8						; size = 4
_filename$ = 8						; size = 4
?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z PROC ; tinyxml2::XMLDocument::LoadFile, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1906
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1907
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Clear@XMLDocument@tinyxml2@@QAEXXZ ; tinyxml2::XMLDocument::Clear
; Line 1908
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb?$AA@
  00030	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?callfopen@tinyxml2@@YAPAU_iobuf@@PBD0@Z ; tinyxml2::callfopen
  00039	83 c4 08	 add	 esp, 8
  0003c	89 45 ec	 mov	 DWORD PTR _fp$[ebp], eax
; Line 1909
  0003f	83 7d ec 00	 cmp	 DWORD PTR _fp$[ebp], 0
  00043	75 18		 jne	 SHORT $LN1@LoadFile
; Line 1910
  00045	6a 00		 push	 0
  00047	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  0004a	50		 push	 eax
  0004b	6a 03		 push	 3
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 1911
  00055	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00058	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  0005b	eb 28		 jmp	 SHORT $LN2@LoadFile
$LN1@LoadFile:
; Line 1913
  0005d	8b 45 ec	 mov	 eax, DWORD PTR _fp$[ebp]
  00060	50		 push	 eax
  00061	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PAU_iobuf@@@Z ; tinyxml2::XMLDocument::LoadFile
; Line 1914
  00069	8b f4		 mov	 esi, esp
  0006b	8b 45 ec	 mov	 eax, DWORD PTR _fp$[ebp]
  0006e	50		 push	 eax
  0006f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  00075	83 c4 04	 add	 esp, 4
  00078	3b f4		 cmp	 esi, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1915
  0007f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00082	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
$LN2@LoadFile:
; Line 1916
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0008e	3b ec		 cmp	 ebp, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c2 04 00	 ret	 4
?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ENDP ; tinyxml2::XMLDocument::LoadFile
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
_len$ = 12						; size = 4
?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z PROC ; tinyxml2::XMLDocument::Parse, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 2009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2010
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Clear@XMLDocument@tinyxml2@@QAEXXZ ; tinyxml2::XMLDocument::Clear
; Line 2012
  0002b	83 7d 0c 00	 cmp	 DWORD PTR _len$[ebp], 0
  0002f	74 10		 je	 SHORT $LN4@Parse
  00031	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00035	74 0a		 je	 SHORT $LN4@Parse
  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0003d	85 c9		 test	 ecx, ecx
  0003f	75 19		 jne	 SHORT $LN5@Parse
$LN4@Parse:
; Line 2013
  00041	6a 00		 push	 0
  00043	6a 00		 push	 0
  00045	6a 0f		 push	 15			; 0000000fH
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 2014
  0004f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00052	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  00055	e9 07 01 00 00	 jmp	 $LN6@Parse
$LN5@Parse:
; Line 2016
  0005a	83 7d 0c ff	 cmp	 DWORD PTR _len$[ebp], -1
  0005e	75 0f		 jne	 SHORT $LN3@Parse
; Line 2017
  00060	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 _strlen
  00069	83 c4 04	 add	 esp, 4
  0006c	89 45 0c	 mov	 DWORD PTR _len$[ebp], eax
$LN3@Parse:
; Line 2019
  0006f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00072	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  00076	74 01		 je	 SHORT $LN2@Parse
  00078	cc		 int	 3
$LN2@Parse:
; Line 2020
  00079	8b 45 0c	 mov	 eax, DWORD PTR _len$[ebp]
  0007c	83 c0 01	 add	 eax, 1
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00085	83 c4 04	 add	 esp, 4
  00088	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0008e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00097	89 51 40	 mov	 DWORD PTR [ecx+64], edx
; Line 2021
  0009a	8b 45 0c	 mov	 eax, DWORD PTR _len$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  000a1	51		 push	 ecx
  000a2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a5	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 _memcpy
  000ae	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2022
  000b1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  000b7	8b 55 0c	 mov	 edx, DWORD PTR _len$[ebp]
  000ba	c6 04 11 00	 mov	 BYTE PTR [ecx+edx], 0
; Line 2024
  000be	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	e8 00 00 00 00	 call	 ?Parse@XMLDocument@tinyxml2@@AAEXXZ ; tinyxml2::XMLDocument::Parse
; Line 2025
  000c6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?Error@XMLDocument@tinyxml2@@QBE_NXZ ; tinyxml2::XMLDocument::Error
  000ce	0f b6 c0	 movzx	 eax, al
  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 82 00 00
	00		 je	 $LN1@Parse
; Line 2029
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000dc	e8 00 00 00 00	 call	 ?DeleteChildren@XMLNode@tinyxml2@@QAEXXZ ; tinyxml2::XMLNode::DeleteChildren
; Line 2030
  000e1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e4	83 c1 44	 add	 ecx, 68			; 00000044H
  000e7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ea	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  000ed	8b f4		 mov	 esi, esp
  000ef	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000f2	ff d0		 call	 eax
  000f4	3b f4		 cmp	 esi, esp
  000f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2031
  000fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fe	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00104	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00107	8b 90 90 00 00
	00		 mov	 edx, DWORD PTR [eax+144]
  0010d	8b f4		 mov	 esi, esp
  0010f	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00112	ff d0		 call	 eax
  00114	3b f4		 cmp	 esi, esp
  00116	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2032
  0011b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  00124	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00127	8b 90 dc 00 00
	00		 mov	 edx, DWORD PTR [eax+220]
  0012d	8b f4		 mov	 esi, esp
  0012f	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00132	ff d0		 call	 eax
  00134	3b f4		 cmp	 esi, esp
  00136	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 2033
  0013b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013e	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  00144	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00147	8b 90 28 01 00
	00		 mov	 edx, DWORD PTR [eax+296]
  0014d	8b f4		 mov	 esi, esp
  0014f	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00152	ff d0		 call	 eax
  00154	3b f4		 cmp	 esi, esp
  00156	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Parse:
; Line 2035
  0015b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0015e	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
$LN6@Parse:
; Line 2036
  00161	5f		 pop	 edi
  00162	5e		 pop	 esi
  00163	5b		 pop	 ebx
  00164	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0016a	3b ec		 cmp	 ebp, esp
  0016c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00171	8b e5		 mov	 esp, ebp
  00173	5d		 pop	 ebp
  00174	c2 08 00	 ret	 8
?Parse@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBDI@Z ENDP ; tinyxml2::XMLDocument::Parse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToDocument@XMLDocument@tinyxml2@@UBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDocument@XMLDocument@tinyxml2@@UBEPBV12@XZ PROC	; tinyxml2::XMLDocument::ToDocument, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1532
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1533
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0002c	74 01		 je	 SHORT $LN1@ToDocument
  0002e	cc		 int	 3
$LN1@ToDocument:
; Line 1534
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; Line 1535
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?ToDocument@XMLDocument@tinyxml2@@UBEPBV12@XZ ENDP	; tinyxml2::XMLDocument::ToDocument
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToDocument@XMLDocument@tinyxml2@@UAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDocument@XMLDocument@tinyxml2@@UAEPAV12@XZ PROC	; tinyxml2::XMLDocument::ToDocument, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1528
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1529
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0002c	74 01		 je	 SHORT $LN1@ToDocument
  0002e	cc		 int	 3
$LN1@ToDocument:
; Line 1530
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; Line 1531
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?ToDocument@XMLDocument@tinyxml2@@UAEPAV12@XZ ENDP	; tinyxml2::XMLDocument::ToDocument
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1XMLDocument@tinyxml2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1XMLDocument@tinyxml2@@UAE@XZ PROC			; tinyxml2::XMLDocument::~XMLDocument, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1785
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1XMLDocument@tinyxml2@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLDocument@tinyxml2@@6B@
  0004b	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
; Line 1786
  00052	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?Clear@XMLDocument@tinyxml2@@QAEXXZ ; tinyxml2::XMLDocument::Clear
; Line 1787
  0005a	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0005e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  00067	e8 00 00 00 00	 call	 ??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<44>::~MemPoolT<44>
  0006c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00070	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  00079	e8 00 00 00 00	 call	 ??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<48>::~MemPoolT<48>
  0007e	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00082	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  0008b	e8 00 00 00 00	 call	 ??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<36>::~MemPoolT<36>
  00090	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00094	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00097	83 c1 44	 add	 ecx, 68			; 00000044H
  0009a	e8 00 00 00 00	 call	 ??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<52>::~MemPoolT<52>
  0009f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ??1XMLNode@tinyxml2@@MAE@XZ ; tinyxml2::XMLNode::~XMLNode
  000ae	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b8	59		 pop	 ecx
  000b9	5f		 pop	 edi
  000ba	5e		 pop	 esi
  000bb	5b		 pop	 ebx
  000bc	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000c2	3b ec		 cmp	 ebp, esp
  000c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1XMLDocument@tinyxml2@@UAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1XMLNode@tinyxml2@@MAE@XZ ; tinyxml2::XMLNode::~XMLNode
__unwindfunclet$??1XMLDocument@tinyxml2@@UAE@XZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 44	 add	 ecx, 68			; 00000044H
  0000e	e9 00 00 00 00	 jmp	 ??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<52>::~MemPoolT<52>
__unwindfunclet$??1XMLDocument@tinyxml2@@UAE@XZ$2:
  00013	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  0001c	e9 00 00 00 00	 jmp	 ??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<36>::~MemPoolT<36>
__unwindfunclet$??1XMLDocument@tinyxml2@@UAE@XZ$3:
  00021	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  0002a	e9 00 00 00 00	 jmp	 ??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<48>::~MemPoolT<48>
__unwindfunclet$??1XMLDocument@tinyxml2@@UAE@XZ$4:
  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  00038	e9 00 00 00 00	 jmp	 ??1?$MemPoolT@$0CM@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<44>::~MemPoolT<44>
__ehhandler$??1XMLDocument@tinyxml2@@UAE@XZ:
  0003d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00041	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00044	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0004a	33 c8		 xor	 ecx, eax
  0004c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00051	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1XMLDocument@tinyxml2@@UAE@XZ
  00056	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1XMLDocument@tinyxml2@@UAE@XZ ENDP			; tinyxml2::XMLDocument::~XMLDocument
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_processEntities$ = 8					; size = 1
_whitespace$ = 12					; size = 4
??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z PROC	; tinyxml2::XMLDocument::XMLDocument, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1778
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	6a 00		 push	 0
  00044	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ??0XMLNode@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLNode::XMLNode
  0004c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00053	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00056	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLDocument@tinyxml2@@6B@
  0005c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c6 40 2c 00	 mov	 BYTE PTR [eax+44], 0
  00063	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8a 4d 08	 mov	 cl, BYTE PTR _processEntities$[ebp]
  00069	88 48 2d	 mov	 BYTE PTR [eax+45], cl
  0006c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0
  00076	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00079	8b 4d 0c	 mov	 ecx, DWORD PTR _whitespace$[ebp]
  0007c	89 48 34	 mov	 DWORD PTR [eax+52], ecx
  0007f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00082	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
  00089	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
  00093	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00096	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0
  0009d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	83 c1 44	 add	 ecx, 68			; 00000044H
  000a3	e8 00 00 00 00	 call	 ??0?$MemPoolT@$0DE@@tinyxml2@@QAE@XZ ; tinyxml2::MemPoolT<52>::MemPoolT<52>
  000a8	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000ac	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  000b5	e8 00 00 00 00	 call	 ??0?$MemPoolT@$0CE@@tinyxml2@@QAE@XZ ; tinyxml2::MemPoolT<36>::MemPoolT<36>
  000ba	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000be	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  000c7	e8 00 00 00 00	 call	 ??0?$MemPoolT@$0DA@@tinyxml2@@QAE@XZ ; tinyxml2::MemPoolT<48>::MemPoolT<48>
  000cc	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000d0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	81 c1 28 01 00
	00		 add	 ecx, 296		; 00000128H
  000d9	e8 00 00 00 00	 call	 ??0?$MemPoolT@$0CM@@tinyxml2@@QAE@XZ ; tinyxml2::MemPoolT<44>::MemPoolT<44>
; Line 1780
  000de	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000e1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e4	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; Line 1781
  000e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000ee	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fb	59		 pop	 ecx
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00105	3b ec		 cmp	 ebp, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1XMLNode@tinyxml2@@MAE@XZ ; tinyxml2::XMLNode::~XMLNode
__unwindfunclet$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 44	 add	 ecx, 68			; 00000044H
  0000e	e9 00 00 00 00	 jmp	 ??1?$MemPoolT@$0DE@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<52>::~MemPoolT<52>
__unwindfunclet$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z$2:
  00013	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  0001c	e9 00 00 00 00	 jmp	 ??1?$MemPoolT@$0CE@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<36>::~MemPoolT<36>
__unwindfunclet$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z$3:
  00021	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	81 c1 dc 00 00
	00		 add	 ecx, 220		; 000000dcH
  0002a	e9 00 00 00 00	 jmp	 ??1?$MemPoolT@$0DA@@tinyxml2@@UAE@XZ ; tinyxml2::MemPoolT<48>::~MemPoolT<48>
__ehhandler$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z:
  0002f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00033	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00036	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ENDP	; tinyxml2::XMLDocument::XMLDocument
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GXMLElement@tinyxml2@@EAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GXMLElement@tinyxml2@@EAEPAXI@Z PROC			; tinyxml2::XMLElement::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1XMLElement@tinyxml2@@EAE@XZ ; tinyxml2::XMLElement::~XMLElement
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_GXMLElement@tinyxml2@@EAEPAXI@Z ENDP			; tinyxml2::XMLElement::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DeleteAttribute@XMLElement@tinyxml2@@CAXPAVXMLAttribute@2@@Z
_TEXT	SEGMENT
_pool$ = -8						; size = 4
_attribute$ = 8						; size = 4
?DeleteAttribute@XMLElement@tinyxml2@@CAXPAVXMLAttribute@2@@Z PROC ; tinyxml2::XMLElement::DeleteAttribute, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1647
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1648
  0001e	83 7d 08 00	 cmp	 DWORD PTR _attribute$[ebp], 0
  00022	75 02		 jne	 SHORT $LN1@DeleteAttr
; Line 1649
  00024	eb 3a		 jmp	 SHORT $LN2@DeleteAttr
$LN1@DeleteAttr:
; Line 1651
  00026	8b 45 08	 mov	 eax, DWORD PTR _attribute$[ebp]
  00029	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0002c	89 4d f8	 mov	 DWORD PTR _pool$[ebp], ecx
; Line 1652
  0002f	8b f4		 mov	 esi, esp
  00031	6a 00		 push	 0
  00033	8b 45 08	 mov	 eax, DWORD PTR _attribute$[ebp]
  00036	8b 10		 mov	 edx, DWORD PTR [eax]
  00038	8b 4d 08	 mov	 ecx, DWORD PTR _attribute$[ebp]
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	ff d0		 call	 eax
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1653
  00046	8b f4		 mov	 esi, esp
  00048	8b 45 08	 mov	 eax, DWORD PTR _attribute$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _pool$[ebp]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _pool$[ebp]
  00054	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00057	ff d0		 call	 eax
  00059	3b f4		 cmp	 esi, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DeleteAttr:
; Line 1654
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
?DeleteAttribute@XMLElement@tinyxml2@@CAXPAVXMLAttribute@2@@Z ENDP ; tinyxml2::XMLElement::DeleteAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z
_TEXT	SEGMENT
tv158 = -292						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
_attrib$5 = -56						; size = 4
_prevAttribute$ = -44					; size = 4
_start$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z PROC	; tinyxml2::XMLElement::ParseAttributes, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1590
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 18 01 00
	00		 sub	 esp, 280		; 00000118H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd dc fe ff
	ff		 lea	 edi, DWORD PTR [ebp-292]
  00021	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1591
  00042	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00045	89 45 e0	 mov	 DWORD PTR _start$[ebp], eax
; Line 1592
  00048	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _prevAttribute$[ebp], 0
$LN14@ParseAttri:
; Line 1595
  0004f	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00053	0f 84 22 02 00
	00		 je	 $LN13@ParseAttri
; Line 1596
  00059	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPADPAD@Z ; tinyxml2::XMLUtil::SkipWhiteSpace
  00062	83 c4 04	 add	 esp, 4
  00065	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1597
  00068	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0006b	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0006e	85 c9		 test	 ecx, ecx
  00070	75 21		 jne	 SHORT $LN12@ParseAttri
; Line 1598
  00072	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?Name@XMLElement@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLElement::Name
  0007a	50		 push	 eax
  0007b	8b 45 e0	 mov	 eax, DWORD PTR _start$[ebp]
  0007e	50		 push	 eax
  0007f	6a 07		 push	 7
  00081	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00087	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 1599
  0008c	33 c0		 xor	 eax, eax
  0008e	e9 eb 01 00 00	 jmp	 $LN15@ParseAttri
$LN12@ParseAttri:
; Line 1603
  00093	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00096	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00099	51		 push	 ecx
  0009a	e8 00 00 00 00	 call	 ?IsNameStartChar@XMLUtil@tinyxml2@@SA_NE@Z ; tinyxml2::XMLUtil::IsNameStartChar
  0009f	83 c4 04	 add	 esp, 4
  000a2	0f b6 d0	 movzx	 edx, al
  000a5	85 d2		 test	 edx, edx
  000a7	0f 84 6d 01 00
	00		 je	 $LN11@ParseAttri
; Line 1604
  000ad	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b0	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000b3	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000b6	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b9	05 90 00 00 00	 add	 eax, 144		; 00000090H
  000be	8b 91 90 00 00
	00		 mov	 edx, DWORD PTR [ecx+144]
  000c4	8b f4		 mov	 esi, esp
  000c6	8b c8		 mov	 ecx, eax
  000c8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000cb	ff d0		 call	 eax
  000cd	3b f4		 cmp	 esi, esp
  000cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d4	83 f8 24	 cmp	 eax, 36			; 00000024H
  000d7	74 01		 je	 SHORT $LN10@ParseAttri
  000d9	cc		 int	 3
$LN10@ParseAttri:
; Line 1605
  000da	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000dd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000e0	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000e3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e6	05 90 00 00 00	 add	 eax, 144		; 00000090H
  000eb	8b 91 90 00 00
	00		 mov	 edx, DWORD PTR [ecx+144]
  000f1	8b f4		 mov	 esi, esp
  000f3	8b c8		 mov	 ecx, eax
  000f5	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f8	ff d0		 call	 eax
  000fa	3b f4		 cmp	 esi, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00101	89 85 fc fe ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  00107	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  0010d	51		 push	 ecx
  0010e	6a 24		 push	 36			; 00000024H
  00110	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00115	83 c4 08	 add	 esp, 8
  00118	89 85 f0 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  0011e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00125	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  0012c	74 13		 je	 SHORT $LN17@ParseAttri
  0012e	8b 8d f0 fe ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00134	e8 00 00 00 00	 call	 ??0XMLAttribute@tinyxml2@@AAE@XZ ; tinyxml2::XMLAttribute::XMLAttribute
  00139	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv158[ebp], eax
  0013f	eb 0a		 jmp	 SHORT $LN18@ParseAttri
$LN17@ParseAttri:
  00141	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv158[ebp], 0
$LN18@ParseAttri:
  0014b	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR tv158[ebp]
  00151	89 95 e4 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  00157	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0015e	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00164	89 45 c8	 mov	 DWORD PTR _attrib$5[ebp], eax
; Line 1606
  00167	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0016a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016d	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00173	8b 55 c8	 mov	 edx, DWORD PTR _attrib$5[ebp]
  00176	89 4a 20	 mov	 DWORD PTR [edx+32], ecx
; Line 1607
  00179	8b 45 c8	 mov	 eax, DWORD PTR _attrib$5[ebp]
  0017c	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0017f	8b 55 c8	 mov	 edx, DWORD PTR _attrib$5[ebp]
  00182	8b 01		 mov	 eax, DWORD PTR [ecx]
  00184	8b f4		 mov	 esi, esp
  00186	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  00189	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0018c	ff d2		 call	 edx
  0018e	3b f4		 cmp	 esi, esp
  00190	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1609
  00195	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00198	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0019b	e8 00 00 00 00	 call	 ?ProcessEntities@XMLDocument@tinyxml2@@QBE_NXZ ; tinyxml2::XMLDocument::ProcessEntities
  001a0	0f b6 c8	 movzx	 ecx, al
  001a3	51		 push	 ecx
  001a4	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  001a7	52		 push	 edx
  001a8	8b 4d c8	 mov	 ecx, DWORD PTR _attrib$5[ebp]
  001ab	e8 00 00 00 00	 call	 ?ParseDeep@XMLAttribute@tinyxml2@@AAEPADPAD_N@Z ; tinyxml2::XMLAttribute::ParseDeep
  001b0	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1610
  001b3	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  001b7	74 17		 je	 SHORT $LN8@ParseAttri
  001b9	6a 00		 push	 0
  001bb	8b 4d c8	 mov	 ecx, DWORD PTR _attrib$5[ebp]
  001be	e8 00 00 00 00	 call	 ?Name@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Name
  001c3	50		 push	 eax
  001c4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001c7	e8 00 00 00 00	 call	 ?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
  001cc	85 c0		 test	 eax, eax
  001ce	74 28		 je	 SHORT $LN9@ParseAttri
$LN8@ParseAttri:
; Line 1611
  001d0	8b 45 c8	 mov	 eax, DWORD PTR _attrib$5[ebp]
  001d3	50		 push	 eax
  001d4	e8 00 00 00 00	 call	 ?DeleteAttribute@XMLElement@tinyxml2@@CAXPAVXMLAttribute@2@@Z ; tinyxml2::XMLElement::DeleteAttribute
  001d9	83 c4 04	 add	 esp, 4
; Line 1612
  001dc	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  001df	50		 push	 eax
  001e0	8b 4d e0	 mov	 ecx, DWORD PTR _start$[ebp]
  001e3	51		 push	 ecx
  001e4	6a 08		 push	 8
  001e6	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  001e9	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  001ec	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 1613
  001f1	33 c0		 xor	 eax, eax
  001f3	e9 86 00 00 00	 jmp	 $LN15@ParseAttri
$LN9@ParseAttri:
; Line 1620
  001f8	83 7d d4 00	 cmp	 DWORD PTR _prevAttribute$[ebp], 0
  001fc	74 0b		 je	 SHORT $LN7@ParseAttri
; Line 1621
  001fe	8b 45 d4	 mov	 eax, DWORD PTR _prevAttribute$[ebp]
  00201	8b 4d c8	 mov	 ecx, DWORD PTR _attrib$5[ebp]
  00204	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
; Line 1623
  00207	eb 09		 jmp	 SHORT $LN6@ParseAttri
$LN7@ParseAttri:
; Line 1624
  00209	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0020c	8b 4d c8	 mov	 ecx, DWORD PTR _attrib$5[ebp]
  0020f	89 48 30	 mov	 DWORD PTR [eax+48], ecx
$LN6@ParseAttri:
; Line 1626
  00212	8b 45 c8	 mov	 eax, DWORD PTR _attrib$5[ebp]
  00215	89 45 d4	 mov	 DWORD PTR _prevAttribute$[ebp], eax
  00218	eb 5c		 jmp	 SHORT $LN5@ParseAttri
$LN11@ParseAttri:
; Line 1629
  0021a	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0021d	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00220	83 f9 3e	 cmp	 ecx, 62			; 0000003eH
  00223	75 0d		 jne	 SHORT $LN4@ParseAttri
; Line 1630
  00225	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00228	83 c0 01	 add	 eax, 1
  0022b	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1631
  0022e	eb 4b		 jmp	 SHORT $LN13@ParseAttri
  00230	eb 44		 jmp	 SHORT $LN5@ParseAttri
$LN4@ParseAttri:
; Line 1634
  00232	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00235	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00238	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  0023b	75 20		 jne	 SHORT $LN2@ParseAttri
  0023d	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00240	0f be 48 01	 movsx	 ecx, BYTE PTR [eax+1]
  00244	83 f9 3e	 cmp	 ecx, 62			; 0000003eH
  00247	75 14		 jne	 SHORT $LN2@ParseAttri
; Line 1635
  00249	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0024c	c7 40 2c 01 00
	00 00		 mov	 DWORD PTR [eax+44], 1
; Line 1636
  00253	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00256	83 c0 02	 add	 eax, 2
  00259	eb 23		 jmp	 SHORT $LN15@ParseAttri
; Line 1638
  0025b	eb 19		 jmp	 SHORT $LN5@ParseAttri
$LN2@ParseAttri:
; Line 1639
  0025d	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00260	50		 push	 eax
  00261	8b 4d e0	 mov	 ecx, DWORD PTR _start$[ebp]
  00264	51		 push	 ecx
  00265	6a 07		 push	 7
  00267	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  0026a	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0026d	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 1640
  00272	33 c0		 xor	 eax, eax
  00274	eb 08		 jmp	 SHORT $LN15@ParseAttri
$LN5@ParseAttri:
; Line 1642
  00276	e9 d4 fd ff ff	 jmp	 $LN14@ParseAttri
$LN13@ParseAttri:
; Line 1643
  0027b	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
$LN15@ParseAttri:
; Line 1644
  0027e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00281	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00288	59		 pop	 ecx
  00289	5f		 pop	 edi
  0028a	5e		 pop	 esi
  0028b	5b		 pop	 ebx
  0028c	81 c4 24 01 00
	00		 add	 esp, 292		; 00000124H
  00292	3b ec		 cmp	 ebp, esp
  00294	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00299	8b e5		 mov	 esp, ebp
  0029b	5d		 pop	 ebp
  0029c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z$0:
  00000	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00006	50		 push	 eax
  00007	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 8a d8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-296]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z ENDP	; tinyxml2::XMLElement::ParseAttributes
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z
_TEXT	SEGMENT
tv150 = -280						; size = 4
$T2 = -272						; size = 4
$T3 = -260						; size = 4
$T4 = -248						; size = 4
_attrib$ = -44						; size = 4
_last$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z PROC ; tinyxml2::XMLElement::FindOrCreateAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1543
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd e8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-280]
  00021	b9 43 00 00 00	 mov	 ecx, 67			; 00000043H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1544
  00042	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _last$[ebp], 0
; Line 1545
  00049	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _attrib$[ebp], 0
; Line 1546
  00050	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00056	89 4d d4	 mov	 DWORD PTR _attrib$[ebp], ecx
; Line 1547
  00059	eb 0f		 jmp	 SHORT $LN8@FindOrCrea
$LN7@FindOrCrea:
; Line 1548
  0005b	8b 45 d4	 mov	 eax, DWORD PTR _attrib$[ebp]
  0005e	89 45 e0	 mov	 DWORD PTR _last$[ebp], eax
  00061	8b 4d d4	 mov	 ecx, DWORD PTR _attrib$[ebp]
  00064	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00067	89 55 d4	 mov	 DWORD PTR _attrib$[ebp], edx
$LN8@FindOrCrea:
  0006a	83 7d d4 00	 cmp	 DWORD PTR _attrib$[ebp], 0
  0006e	74 25		 je	 SHORT $LN6@FindOrCrea
; Line 1549
  00070	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00075	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00078	50		 push	 eax
  00079	8b 4d d4	 mov	 ecx, DWORD PTR _attrib$[ebp]
  0007c	e8 00 00 00 00	 call	 ?Name@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Name
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008a	0f b6 c8	 movzx	 ecx, al
  0008d	85 c9		 test	 ecx, ecx
  0008f	74 02		 je	 SHORT $LN5@FindOrCrea
; Line 1550
  00091	eb 02		 jmp	 SHORT $LN6@FindOrCrea
$LN5@FindOrCrea:
; Line 1552
  00093	eb c6		 jmp	 SHORT $LN7@FindOrCrea
$LN6@FindOrCrea:
; Line 1553
  00095	83 7d d4 00	 cmp	 DWORD PTR _attrib$[ebp], 0
  00099	0f 85 0e 01 00
	00		 jne	 $LN4@FindOrCrea
; Line 1554
  0009f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a5	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000a8	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ab	05 90 00 00 00	 add	 eax, 144		; 00000090H
  000b0	8b 91 90 00 00
	00		 mov	 edx, DWORD PTR [ecx+144]
  000b6	8b f4		 mov	 esi, esp
  000b8	8b c8		 mov	 ecx, eax
  000ba	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000bd	ff d0		 call	 eax
  000bf	3b f4		 cmp	 esi, esp
  000c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c6	83 f8 24	 cmp	 eax, 36			; 00000024H
  000c9	74 01		 je	 SHORT $LN3@FindOrCrea
  000cb	cc		 int	 3
$LN3@FindOrCrea:
; Line 1555
  000cc	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d2	8b 55 ec	 mov	 edx, DWORD PTR _this$[ebp]
  000d5	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000d8	05 90 00 00 00	 add	 eax, 144		; 00000090H
  000dd	8b 91 90 00 00
	00		 mov	 edx, DWORD PTR [ecx+144]
  000e3	8b f4		 mov	 esi, esp
  000e5	8b c8		 mov	 ecx, eax
  000e7	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000ea	ff d0		 call	 eax
  000ec	3b f4		 cmp	 esi, esp
  000ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f3	89 85 08 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  000f9	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR $T4[ebp]
  000ff	51		 push	 ecx
  00100	6a 24		 push	 36			; 00000024H
  00102	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00107	83 c4 08	 add	 esp, 8
  0010a	89 85 fc fe ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00110	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00117	83 bd fc fe ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  0011e	74 13		 je	 SHORT $LN11@FindOrCrea
  00120	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00126	e8 00 00 00 00	 call	 ??0XMLAttribute@tinyxml2@@AAE@XZ ; tinyxml2::XMLAttribute::XMLAttribute
  0012b	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv150[ebp], eax
  00131	eb 0a		 jmp	 SHORT $LN12@FindOrCrea
$LN11@FindOrCrea:
  00133	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN12@FindOrCrea:
  0013d	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR tv150[ebp]
  00143	89 95 f0 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  00149	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00150	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00156	89 45 d4	 mov	 DWORD PTR _attrib$[ebp], eax
; Line 1556
  00159	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0015c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0015f	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  00165	8b 55 d4	 mov	 edx, DWORD PTR _attrib$[ebp]
  00168	89 4a 20	 mov	 DWORD PTR [edx+32], ecx
; Line 1557
  0016b	83 7d e0 00	 cmp	 DWORD PTR _last$[ebp], 0
  0016f	74 0b		 je	 SHORT $LN2@FindOrCrea
; Line 1558
  00171	8b 45 e0	 mov	 eax, DWORD PTR _last$[ebp]
  00174	8b 4d d4	 mov	 ecx, DWORD PTR _attrib$[ebp]
  00177	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
; Line 1560
  0017a	eb 09		 jmp	 SHORT $LN1@FindOrCrea
$LN2@FindOrCrea:
; Line 1561
  0017c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0017f	8b 4d d4	 mov	 ecx, DWORD PTR _attrib$[ebp]
  00182	89 48 30	 mov	 DWORD PTR [eax+48], ecx
$LN1@FindOrCrea:
; Line 1563
  00185	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00188	50		 push	 eax
  00189	8b 4d d4	 mov	 ecx, DWORD PTR _attrib$[ebp]
  0018c	e8 00 00 00 00	 call	 ?SetName@XMLAttribute@tinyxml2@@AAEXPBD@Z ; tinyxml2::XMLAttribute::SetName
; Line 1564
  00191	8b 45 d4	 mov	 eax, DWORD PTR _attrib$[ebp]
  00194	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00197	8b 55 d4	 mov	 edx, DWORD PTR _attrib$[ebp]
  0019a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0019c	8b f4		 mov	 esi, esp
  0019e	8b 4a 20	 mov	 ecx, DWORD PTR [edx+32]
  001a1	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  001a4	ff d2		 call	 edx
  001a6	3b f4		 cmp	 esi, esp
  001a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@FindOrCrea:
; Line 1566
  001ad	8b 45 d4	 mov	 eax, DWORD PTR _attrib$[ebp]
; Line 1567
  001b0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001ba	59		 pop	 ecx
  001bb	5f		 pop	 edi
  001bc	5e		 pop	 esi
  001bd	5b		 pop	 ebx
  001be	81 c4 18 01 00
	00		 add	 esp, 280		; 00000118H
  001c4	3b ec		 cmp	 ebp, esp
  001c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001cb	8b e5		 mov	 esp, ebp
  001cd	5d		 pop	 ebp
  001ce	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z$0:
  00000	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR $T4[ebp]
  00006	50		 push	 eax
  00007	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__ehhandler$?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 8a e4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-284]
  00024	33 c8		 xor	 ecx, eax
  00026	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z
  00030	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z ENDP ; tinyxml2::XMLElement::FindOrCreateAttribute
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1XMLElement@tinyxml2@@EAE@XZ
_TEXT	SEGMENT
_next$2 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1XMLElement@tinyxml2@@EAE@XZ PROC			; tinyxml2::XMLElement::~XMLElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1383
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1XMLElement@tinyxml2@@EAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLElement@tinyxml2@@6B@
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$LN2@XMLElement:
; Line 1384
  00052	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00055	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  00059	74 26		 je	 SHORT $LN3@XMLElement
; Line 1385
  0005b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00061	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00064	89 55 e0	 mov	 DWORD PTR _next$2[ebp], edx
; Line 1386
  00067	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ?DeleteAttribute@XMLElement@tinyxml2@@CAXPAVXMLAttribute@2@@Z ; tinyxml2::XMLElement::DeleteAttribute
  00073	83 c4 04	 add	 esp, 4
; Line 1387
  00076	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00079	8b 4d e0	 mov	 ecx, DWORD PTR _next$2[ebp]
  0007c	89 48 30	 mov	 DWORD PTR [eax+48], ecx
; Line 1388
  0007f	eb d1		 jmp	 SHORT $LN2@XMLElement
$LN3@XMLElement:
; Line 1389
  00081	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00088	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ??1XMLNode@tinyxml2@@MAE@XZ ; tinyxml2::XMLNode::~XMLNode
  00090	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00093	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009a	59		 pop	 ecx
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000a4	3b ec		 cmp	 ebp, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1XMLElement@tinyxml2@@EAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1XMLNode@tinyxml2@@MAE@XZ ; tinyxml2::XMLNode::~XMLNode
__ehhandler$??1XMLElement@tinyxml2@@EAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1XMLElement@tinyxml2@@EAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1XMLElement@tinyxml2@@EAE@XZ ENDP			; tinyxml2::XMLElement::~XMLElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0XMLElement@tinyxml2@@AAE@PAVXMLDocument@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_doc$ = 8						; size = 4
??0XMLElement@tinyxml2@@AAE@PAVXMLDocument@1@@Z PROC	; tinyxml2::XMLElement::XMLElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1378
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _doc$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0XMLNode@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLNode::XMLNode
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLElement@tinyxml2@@6B@
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0
; Line 1379
  0004c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
??0XMLElement@tinyxml2@@AAE@PAVXMLDocument@1@@Z ENDP	; tinyxml2::XMLElement::XMLElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ParseDeep@XMLElement@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
_strPair$ = 12						; size = 4
?ParseDeep@XMLElement@tinyxml2@@MAEPADPADPAVStrPair@2@@Z PROC ; tinyxml2::XMLElement::ParseDeep, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1661
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1663
  00023	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPADPAD@Z ; tinyxml2::XMLUtil::SkipWhiteSpace
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1668
  00032	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00035	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00038	83 f9 2f	 cmp	 ecx, 47			; 0000002fH
  0003b	75 13		 jne	 SHORT $LN4@ParseDeep
; Line 1669
  0003d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00040	c7 40 2c 02 00
	00 00		 mov	 DWORD PTR [eax+44], 2
; Line 1670
  00047	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0004a	83 c0 01	 add	 eax, 1
  0004d	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
$LN4@ParseDeep:
; Line 1673
  00050	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00053	50		 push	 eax
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0005a	e8 00 00 00 00	 call	 ?ParseName@StrPair@tinyxml2@@QAEPADPAD@Z ; tinyxml2::StrPair::ParseName
  0005f	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1674
  00062	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00068	e8 00 00 00 00	 call	 ?Empty@StrPair@tinyxml2@@QBE_NXZ ; tinyxml2::StrPair::Empty
  0006d	0f b6 c0	 movzx	 eax, al
  00070	85 c0		 test	 eax, eax
  00072	74 04		 je	 SHORT $LN3@ParseDeep
; Line 1675
  00074	33 c0		 xor	 eax, eax
  00076	eb 43		 jmp	 SHORT $LN5@ParseDeep
$LN3@ParseDeep:
; Line 1678
  00078	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?ParseAttributes@XMLElement@tinyxml2@@AAEPADPAD@Z ; tinyxml2::XMLElement::ParseAttributes
  00084	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1679
  00087	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  0008b	74 13		 je	 SHORT $LN1@ParseDeep
  0008d	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00090	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00093	85 c9		 test	 ecx, ecx
  00095	74 09		 je	 SHORT $LN1@ParseDeep
  00097	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009a	83 78 2c 00	 cmp	 DWORD PTR [eax+44], 0
  0009e	74 05		 je	 SHORT $LN2@ParseDeep
$LN1@ParseDeep:
; Line 1680
  000a0	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000a3	eb 16		 jmp	 SHORT $LN5@ParseDeep
$LN2@ParseDeep:
; Line 1683
  000a5	8b 45 0c	 mov	 eax, DWORD PTR _strPair$[ebp]
  000a8	50		 push	 eax
  000a9	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  000ac	51		 push	 ecx
  000ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	e8 00 00 00 00	 call	 ?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ; tinyxml2::XMLNode::ParseDeep
  000b5	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1684
  000b8	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
$LN5@ParseDeep:
; Line 1685
  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5b		 pop	 ebx
  000be	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000c4	3b ec		 cmp	 ebp, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 08 00	 ret	 8
?ParseDeep@XMLElement@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ENDP ; tinyxml2::XMLElement::ParseDeep
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShallowEqual@XMLElement@tinyxml2@@UBE_NPBVXMLNode@2@@Z
_TEXT	SEGMENT
_b$1 = -44						; size = 4
_a$2 = -32						; size = 4
_other$ = -20						; size = 4
_this$ = -8						; size = 4
_compare$ = 8						; size = 4
?ShallowEqual@XMLElement@tinyxml2@@UBE_NPBVXMLNode@2@@Z PROC ; tinyxml2::XMLElement::ShallowEqual, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1703
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1704
  00023	83 7d 08 00	 cmp	 DWORD PTR _compare$[ebp], 0
  00027	75 01		 jne	 SHORT $LN7@ShallowEqu
  00029	cc		 int	 3
$LN7@ShallowEqu:
; Line 1705
  0002a	8b 45 08	 mov	 eax, DWORD PTR _compare$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	8b f4		 mov	 esi, esp
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _compare$[ebp]
  00034	8b 02		 mov	 eax, DWORD PTR [edx]
  00036	ff d0		 call	 eax
  00038	3b f4		 cmp	 esi, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	89 45 ec	 mov	 DWORD PTR _other$[ebp], eax
; Line 1706
  00042	83 7d ec 00	 cmp	 DWORD PTR _other$[ebp], 0
  00046	0f 84 9e 00 00
	00		 je	 $LN6@ShallowEqu
  0004c	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?Name@XMLElement@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLElement::Name
  00059	50		 push	 eax
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _other$[ebp]
  0005d	e8 00 00 00 00	 call	 ?Name@XMLElement@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLElement::Name
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	0f b6 c0	 movzx	 eax, al
  0006e	85 c0		 test	 eax, eax
  00070	74 78		 je	 SHORT $LN6@ShallowEqu
; Line 1708
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ ; tinyxml2::XMLElement::FirstAttribute
  0007a	89 45 e0	 mov	 DWORD PTR _a$2[ebp], eax
; Line 1709
  0007d	8b 4d ec	 mov	 ecx, DWORD PTR _other$[ebp]
  00080	e8 00 00 00 00	 call	 ?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ ; tinyxml2::XMLElement::FirstAttribute
  00085	89 45 d4	 mov	 DWORD PTR _b$1[ebp], eax
$LN5@ShallowEqu:
; Line 1711
  00088	83 7d e0 00	 cmp	 DWORD PTR _a$2[ebp], 0
  0008c	74 48		 je	 SHORT $LN4@ShallowEqu
  0008e	83 7d d4 00	 cmp	 DWORD PTR _b$1[ebp], 0
  00092	74 42		 je	 SHORT $LN4@ShallowEqu
; Line 1712
  00094	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00099	8b 4d d4	 mov	 ecx, DWORD PTR _b$1[ebp]
  0009c	e8 00 00 00 00	 call	 ?Value@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Value
  000a1	50		 push	 eax
  000a2	8b 4d e0	 mov	 ecx, DWORD PTR _a$2[ebp]
  000a5	e8 00 00 00 00	 call	 ?Value@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Value
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  000b0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b3	0f b6 c0	 movzx	 eax, al
  000b6	85 c0		 test	 eax, eax
  000b8	75 04		 jne	 SHORT $LN3@ShallowEqu
; Line 1713
  000ba	32 c0		 xor	 al, al
  000bc	eb 2e		 jmp	 SHORT $LN8@ShallowEqu
$LN3@ShallowEqu:
; Line 1715
  000be	8b 4d e0	 mov	 ecx, DWORD PTR _a$2[ebp]
  000c1	e8 00 00 00 00	 call	 ?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLAttribute::Next
  000c6	89 45 e0	 mov	 DWORD PTR _a$2[ebp], eax
; Line 1716
  000c9	8b 4d d4	 mov	 ecx, DWORD PTR _b$1[ebp]
  000cc	e8 00 00 00 00	 call	 ?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLAttribute::Next
  000d1	89 45 d4	 mov	 DWORD PTR _b$1[ebp], eax
; Line 1717
  000d4	eb b2		 jmp	 SHORT $LN5@ShallowEqu
$LN4@ShallowEqu:
; Line 1718
  000d6	83 7d e0 00	 cmp	 DWORD PTR _a$2[ebp], 0
  000da	75 06		 jne	 SHORT $LN1@ShallowEqu
  000dc	83 7d d4 00	 cmp	 DWORD PTR _b$1[ebp], 0
  000e0	74 04		 je	 SHORT $LN2@ShallowEqu
$LN1@ShallowEqu:
; Line 1720
  000e2	32 c0		 xor	 al, al
  000e4	eb 06		 jmp	 SHORT $LN8@ShallowEqu
$LN2@ShallowEqu:
; Line 1722
  000e6	b0 01		 mov	 al, 1
  000e8	eb 02		 jmp	 SHORT $LN8@ShallowEqu
$LN6@ShallowEqu:
; Line 1724
  000ea	32 c0		 xor	 al, al
$LN8@ShallowEqu:
; Line 1725
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  000f5	3b ec		 cmp	 ebp, esp
  000f7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c2 04 00	 ret	 4
?ShallowEqual@XMLElement@tinyxml2@@UBE_NPBVXMLNode@2@@Z ENDP ; tinyxml2::XMLElement::ShallowEqual
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShallowClone@XMLElement@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z
_TEXT	SEGMENT
_a$1 = -32						; size = 4
_element$ = -20						; size = 4
_this$ = -8						; size = 4
_doc$ = 8						; size = 4
?ShallowClone@XMLElement@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z PROC ; tinyxml2::XMLElement::ShallowClone, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1690
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1691
  00023	83 7d 08 00	 cmp	 DWORD PTR _doc$[ebp], 0
  00027	75 09		 jne	 SHORT $LN4@ShallowClo
; Line 1692
  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002f	89 4d 08	 mov	 DWORD PTR _doc$[ebp], ecx
$LN4@ShallowClo:
; Line 1694
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _doc$[ebp]
  0003e	e8 00 00 00 00	 call	 ?NewElement@XMLDocument@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLDocument::NewElement
  00043	89 45 ec	 mov	 DWORD PTR _element$[ebp], eax
; Line 1695
  00046	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ ; tinyxml2::XMLElement::FirstAttribute
  0004e	89 45 e0	 mov	 DWORD PTR _a$1[ebp], eax
  00051	eb 0b		 jmp	 SHORT $LN3@ShallowClo
$LN2@ShallowClo:
  00053	8b 4d e0	 mov	 ecx, DWORD PTR _a$1[ebp]
  00056	e8 00 00 00 00	 call	 ?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLAttribute::Next
  0005b	89 45 e0	 mov	 DWORD PTR _a$1[ebp], eax
$LN3@ShallowClo:
  0005e	83 7d e0 00	 cmp	 DWORD PTR _a$1[ebp], 0
  00062	74 1c		 je	 SHORT $LN1@ShallowClo
; Line 1696
  00064	8b 4d e0	 mov	 ecx, DWORD PTR _a$1[ebp]
  00067	e8 00 00 00 00	 call	 ?Value@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Value
  0006c	50		 push	 eax
  0006d	8b 4d e0	 mov	 ecx, DWORD PTR _a$1[ebp]
  00070	e8 00 00 00 00	 call	 ?Name@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Name
  00075	50		 push	 eax
  00076	8b 4d ec	 mov	 ecx, DWORD PTR _element$[ebp]
  00079	e8 00 00 00 00	 call	 ?SetAttribute@XMLElement@tinyxml2@@QAEXPBD0@Z ; tinyxml2::XMLElement::SetAttribute
; Line 1697
  0007e	eb d3		 jmp	 SHORT $LN2@ShallowClo
$LN1@ShallowClo:
; Line 1698
  00080	8b 45 ec	 mov	 eax, DWORD PTR _element$[ebp]
; Line 1699
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 04 00	 ret	 4
?ShallowClone@XMLElement@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z ENDP ; tinyxml2::XMLElement::ShallowClone
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ClosingType@XMLElement@tinyxml2@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ClosingType@XMLElement@tinyxml2@@QBEHXZ PROC		; tinyxml2::XMLElement::ClosingType, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1477
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1478
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
; Line 1479
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?ClosingType@XMLElement@tinyxml2@@QBEHXZ ENDP		; tinyxml2::XMLElement::ClosingType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryFloatText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAM@Z
_TEXT	SEGMENT
tv78 = -220						; size = 4
_t$1 = -20						; size = 4
_this$ = -8						; size = 4
_fval$ = 8						; size = 4
?QueryFloatText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAM@Z PROC ; tinyxml2::XMLElement::QueryFloatText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1529
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1530
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  0002b	85 c0		 test	 eax, eax
  0002d	74 62		 je	 SHORT $LN2@QueryFloat
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00037	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  0003d	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	8b f4		 mov	 esi, esp
  00047	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv78[ebp]
  0004d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00050	ff d0		 call	 eax
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	85 c0		 test	 eax, eax
  0005b	74 34		 je	 SHORT $LN2@QueryFloat
; Line 1531
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0006c	89 45 ec	 mov	 DWORD PTR _t$1[ebp], eax
; Line 1532
  0006f	8b 45 08	 mov	 eax, DWORD PTR _fval$[ebp]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _t$1[ebp]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?ToFloat@XMLUtil@tinyxml2@@SA_NPBDPAM@Z ; tinyxml2::XMLUtil::ToFloat
  0007c	83 c4 08	 add	 esp, 8
  0007f	0f b6 d0	 movzx	 edx, al
  00082	85 d2		 test	 edx, edx
  00084	74 04		 je	 SHORT $LN1@QueryFloat
; Line 1533
  00086	33 c0		 xor	 eax, eax
  00088	eb 0c		 jmp	 SHORT $LN3@QueryFloat
$LN1@QueryFloat:
; Line 1535
  0008a	b8 12 00 00 00	 mov	 eax, 18			; 00000012H
  0008f	eb 05		 jmp	 SHORT $LN3@QueryFloat
$LN2@QueryFloat:
; Line 1537
  00091	b8 13 00 00 00	 mov	 eax, 19			; 00000013H
$LN3@QueryFloat:
; Line 1538
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
?QueryFloatText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAM@Z ENDP ; tinyxml2::XMLElement::QueryFloatText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryDoubleText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAN@Z
_TEXT	SEGMENT
tv78 = -220						; size = 4
_t$1 = -20						; size = 4
_this$ = -8						; size = 4
_dval$ = 8						; size = 4
?QueryDoubleText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAN@Z PROC ; tinyxml2::XMLElement::QueryDoubleText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1516
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1517
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  0002b	85 c0		 test	 eax, eax
  0002d	74 62		 je	 SHORT $LN2@QueryDoubl
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00037	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  0003d	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	8b f4		 mov	 esi, esp
  00047	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv78[ebp]
  0004d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00050	ff d0		 call	 eax
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	85 c0		 test	 eax, eax
  0005b	74 34		 je	 SHORT $LN2@QueryDoubl
; Line 1518
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0006c	89 45 ec	 mov	 DWORD PTR _t$1[ebp], eax
; Line 1519
  0006f	8b 45 08	 mov	 eax, DWORD PTR _dval$[ebp]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _t$1[ebp]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?ToDouble@XMLUtil@tinyxml2@@SA_NPBDPAN@Z ; tinyxml2::XMLUtil::ToDouble
  0007c	83 c4 08	 add	 esp, 8
  0007f	0f b6 d0	 movzx	 edx, al
  00082	85 d2		 test	 edx, edx
  00084	74 04		 je	 SHORT $LN1@QueryDoubl
; Line 1520
  00086	33 c0		 xor	 eax, eax
  00088	eb 0c		 jmp	 SHORT $LN3@QueryDoubl
$LN1@QueryDoubl:
; Line 1522
  0008a	b8 12 00 00 00	 mov	 eax, 18			; 00000012H
  0008f	eb 05		 jmp	 SHORT $LN3@QueryDoubl
$LN2@QueryDoubl:
; Line 1524
  00091	b8 13 00 00 00	 mov	 eax, 19			; 00000013H
$LN3@QueryDoubl:
; Line 1525
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
?QueryDoubleText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAN@Z ENDP ; tinyxml2::XMLElement::QueryDoubleText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryBoolText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PA_N@Z
_TEXT	SEGMENT
tv78 = -220						; size = 4
_t$1 = -20						; size = 4
_this$ = -8						; size = 4
_bval$ = 8						; size = 4
?QueryBoolText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PA_N@Z PROC ; tinyxml2::XMLElement::QueryBoolText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1503
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1504
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  0002b	85 c0		 test	 eax, eax
  0002d	74 62		 je	 SHORT $LN2@QueryBoolT
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00037	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  0003d	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	8b f4		 mov	 esi, esp
  00047	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv78[ebp]
  0004d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00050	ff d0		 call	 eax
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	85 c0		 test	 eax, eax
  0005b	74 34		 je	 SHORT $LN2@QueryBoolT
; Line 1505
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0006c	89 45 ec	 mov	 DWORD PTR _t$1[ebp], eax
; Line 1506
  0006f	8b 45 08	 mov	 eax, DWORD PTR _bval$[ebp]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _t$1[ebp]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?ToBool@XMLUtil@tinyxml2@@SA_NPBDPA_N@Z ; tinyxml2::XMLUtil::ToBool
  0007c	83 c4 08	 add	 esp, 8
  0007f	0f b6 d0	 movzx	 edx, al
  00082	85 d2		 test	 edx, edx
  00084	74 04		 je	 SHORT $LN1@QueryBoolT
; Line 1507
  00086	33 c0		 xor	 eax, eax
  00088	eb 0c		 jmp	 SHORT $LN3@QueryBoolT
$LN1@QueryBoolT:
; Line 1509
  0008a	b8 12 00 00 00	 mov	 eax, 18			; 00000012H
  0008f	eb 05		 jmp	 SHORT $LN3@QueryBoolT
$LN2@QueryBoolT:
; Line 1511
  00091	b8 13 00 00 00	 mov	 eax, 19			; 00000013H
$LN3@QueryBoolT:
; Line 1512
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
?QueryBoolText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PA_N@Z ENDP ; tinyxml2::XMLElement::QueryBoolText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryUnsignedText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAI@Z
_TEXT	SEGMENT
tv78 = -220						; size = 4
_t$1 = -20						; size = 4
_this$ = -8						; size = 4
_uval$ = 8						; size = 4
?QueryUnsignedText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAI@Z PROC ; tinyxml2::XMLElement::QueryUnsignedText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1490
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1491
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  0002b	85 c0		 test	 eax, eax
  0002d	74 62		 je	 SHORT $LN2@QueryUnsig
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00037	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  0003d	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	8b f4		 mov	 esi, esp
  00047	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv78[ebp]
  0004d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00050	ff d0		 call	 eax
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	85 c0		 test	 eax, eax
  0005b	74 34		 je	 SHORT $LN2@QueryUnsig
; Line 1492
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0006c	89 45 ec	 mov	 DWORD PTR _t$1[ebp], eax
; Line 1493
  0006f	8b 45 08	 mov	 eax, DWORD PTR _uval$[ebp]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _t$1[ebp]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?ToUnsigned@XMLUtil@tinyxml2@@SA_NPBDPAI@Z ; tinyxml2::XMLUtil::ToUnsigned
  0007c	83 c4 08	 add	 esp, 8
  0007f	0f b6 d0	 movzx	 edx, al
  00082	85 d2		 test	 edx, edx
  00084	74 04		 je	 SHORT $LN1@QueryUnsig
; Line 1494
  00086	33 c0		 xor	 eax, eax
  00088	eb 0c		 jmp	 SHORT $LN3@QueryUnsig
$LN1@QueryUnsig:
; Line 1496
  0008a	b8 12 00 00 00	 mov	 eax, 18			; 00000012H
  0008f	eb 05		 jmp	 SHORT $LN3@QueryUnsig
$LN2@QueryUnsig:
; Line 1498
  00091	b8 13 00 00 00	 mov	 eax, 19			; 00000013H
$LN3@QueryUnsig:
; Line 1499
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
?QueryUnsignedText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAI@Z ENDP ; tinyxml2::XMLElement::QueryUnsignedText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryIntText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAH@Z
_TEXT	SEGMENT
tv78 = -220						; size = 4
_t$1 = -20						; size = 4
_this$ = -8						; size = 4
_ival$ = 8						; size = 4
?QueryIntText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAH@Z PROC ; tinyxml2::XMLElement::QueryIntText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1477
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1478
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  0002b	85 c0		 test	 eax, eax
  0002d	74 62		 je	 SHORT $LN2@QueryIntTe
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00037	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  0003d	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	8b f4		 mov	 esi, esp
  00047	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv78[ebp]
  0004d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00050	ff d0		 call	 eax
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	85 c0		 test	 eax, eax
  0005b	74 34		 je	 SHORT $LN2@QueryIntTe
; Line 1479
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0006c	89 45 ec	 mov	 DWORD PTR _t$1[ebp], eax
; Line 1480
  0006f	8b 45 08	 mov	 eax, DWORD PTR _ival$[ebp]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _t$1[ebp]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?ToInt@XMLUtil@tinyxml2@@SA_NPBDPAH@Z ; tinyxml2::XMLUtil::ToInt
  0007c	83 c4 08	 add	 esp, 8
  0007f	0f b6 d0	 movzx	 edx, al
  00082	85 d2		 test	 edx, edx
  00084	74 04		 je	 SHORT $LN1@QueryIntTe
; Line 1481
  00086	33 c0		 xor	 eax, eax
  00088	eb 0c		 jmp	 SHORT $LN3@QueryIntTe
$LN1@QueryIntTe:
; Line 1483
  0008a	b8 12 00 00 00	 mov	 eax, 18			; 00000012H
  0008f	eb 05		 jmp	 SHORT $LN3@QueryIntTe
$LN2@QueryIntTe:
; Line 1485
  00091	b8 13 00 00 00	 mov	 eax, 19			; 00000013H
$LN3@QueryIntTe:
; Line 1486
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
?QueryIntText@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PAH@Z ENDP ; tinyxml2::XMLElement::QueryIntText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetText@XMLElement@tinyxml2@@QAEXM@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
?SetText@XMLElement@tinyxml2@@QAEXM@Z PROC		; tinyxml2::XMLElement::SetText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1461
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1463
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	51		 push	 ecx
  0003a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _v$[ebp]
  0003f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00044	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXMPADH@Z ; tinyxml2::XMLUtil::ToStr
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1464
  0004c	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00052	50		 push	 eax
  00053	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?SetText@XMLElement@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLElement::SetText
; Line 1465
  0005b	52		 push	 edx
  0005c	8b cd		 mov	 ecx, ebp
  0005e	50		 push	 eax
  0005f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetText
  00065	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006a	58		 pop	 eax
  0006b	5a		 pop	 edx
  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00072	33 cd		 xor	 ecx, ebp
  00074	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00079	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
$LN5@SetText:
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN4@SetText
$LN4@SetText:
  00094	24 ff ff ff	 DD	 -220			; ffffff24H
  00098	c8 00 00 00	 DD	 200			; 000000c8H
  0009c	00 00 00 00	 DD	 $LN3@SetText
$LN3@SetText:
  000a0	62		 DB	 98			; 00000062H
  000a1	75		 DB	 117			; 00000075H
  000a2	66		 DB	 102			; 00000066H
  000a3	00		 DB	 0
?SetText@XMLElement@tinyxml2@@QAEXM@Z ENDP		; tinyxml2::XMLElement::SetText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetText@XMLElement@tinyxml2@@QAEXN@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 8
?SetText@XMLElement@tinyxml2@@QAEXN@Z PROC		; tinyxml2::XMLElement::SetText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1469
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1471
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	83 ec 08	 sub	 esp, 8
  0003c	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _v$[ebp]
  00041	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00046	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXNPADH@Z ; tinyxml2::XMLUtil::ToStr
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1472
  0004e	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00054	50		 push	 eax
  00055	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?SetText@XMLElement@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLElement::SetText
; Line 1473
  0005d	52		 push	 edx
  0005e	8b cd		 mov	 ecx, ebp
  00060	50		 push	 eax
  00061	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetText
  00067	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006c	58		 pop	 eax
  0006d	5a		 pop	 edx
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00074	33 cd		 xor	 ecx, ebp
  00076	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007b	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  00081	3b ec		 cmp	 ebp, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 08 00	 ret	 8
  0008e	8b ff		 npad	 2
$LN5@SetText:
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN4@SetText
$LN4@SetText:
  00098	24 ff ff ff	 DD	 -220			; ffffff24H
  0009c	c8 00 00 00	 DD	 200			; 000000c8H
  000a0	00 00 00 00	 DD	 $LN3@SetText
$LN3@SetText:
  000a4	62		 DB	 98			; 00000062H
  000a5	75		 DB	 117			; 00000075H
  000a6	66		 DB	 102			; 00000066H
  000a7	00		 DB	 0
?SetText@XMLElement@tinyxml2@@QAEXN@Z ENDP		; tinyxml2::XMLElement::SetText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetText@XMLElement@tinyxml2@@QAEX_N@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 1
?SetText@XMLElement@tinyxml2@@QAEX_N@Z PROC		; tinyxml2::XMLElement::SetText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1453
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1455
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	0f b6 4d 08	 movzx	 ecx, BYTE PTR _v$[ebp]
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAX_NPADH@Z ; tinyxml2::XMLUtil::ToStr
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1456
  00046	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?SetText@XMLElement@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLElement::SetText
; Line 1457
  00055	52		 push	 edx
  00056	8b cd		 mov	 ecx, ebp
  00058	50		 push	 eax
  00059	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetText
  0005f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00064	58		 pop	 eax
  00065	5a		 pop	 edx
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006c	33 cd		 xor	 ecx, ebp
  0006e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00073	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 04 00	 ret	 4
  00086	8b ff		 npad	 2
$LN5@SetText:
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN4@SetText
$LN4@SetText:
  00090	24 ff ff ff	 DD	 -220			; ffffff24H
  00094	c8 00 00 00	 DD	 200			; 000000c8H
  00098	00 00 00 00	 DD	 $LN3@SetText
$LN3@SetText:
  0009c	62		 DB	 98			; 00000062H
  0009d	75		 DB	 117			; 00000075H
  0009e	66		 DB	 102			; 00000066H
  0009f	00		 DB	 0
?SetText@XMLElement@tinyxml2@@QAEX_N@Z ENDP		; tinyxml2::XMLElement::SetText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetText@XMLElement@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
?SetText@XMLElement@tinyxml2@@QAEXI@Z PROC		; tinyxml2::XMLElement::SetText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1445
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1447
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	8b 4d 08	 mov	 ecx, DWORD PTR _v$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXIPADH@Z ; tinyxml2::XMLUtil::ToStr
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1448
  00045	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?SetText@XMLElement@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLElement::SetText
; Line 1449
  00054	52		 push	 edx
  00055	8b cd		 mov	 ecx, ebp
  00057	50		 push	 eax
  00058	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetText
  0005e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00063	58		 pop	 eax
  00064	5a		 pop	 edx
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006b	33 cd		 xor	 ecx, ebp
  0006d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00072	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
  00085	8d 49 00	 npad	 3
$LN5@SetText:
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN4@SetText
$LN4@SetText:
  00090	24 ff ff ff	 DD	 -220			; ffffff24H
  00094	c8 00 00 00	 DD	 200			; 000000c8H
  00098	00 00 00 00	 DD	 $LN3@SetText
$LN3@SetText:
  0009c	62		 DB	 98			; 00000062H
  0009d	75		 DB	 117			; 00000075H
  0009e	66		 DB	 102			; 00000066H
  0009f	00		 DB	 0
?SetText@XMLElement@tinyxml2@@QAEXI@Z ENDP		; tinyxml2::XMLElement::SetText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetText@XMLElement@tinyxml2@@QAEXH@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
?SetText@XMLElement@tinyxml2@@QAEXH@Z PROC		; tinyxml2::XMLElement::SetText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1437
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1439
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	8b 4d 08	 mov	 ecx, DWORD PTR _v$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXHPADH@Z ; tinyxml2::XMLUtil::ToStr
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1440
  00045	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?SetText@XMLElement@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLElement::SetText
; Line 1441
  00054	52		 push	 edx
  00055	8b cd		 mov	 ecx, ebp
  00057	50		 push	 eax
  00058	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetText
  0005e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00063	58		 pop	 eax
  00064	5a		 pop	 edx
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006b	33 cd		 xor	 ecx, ebp
  0006d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00072	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
  00085	8d 49 00	 npad	 3
$LN5@SetText:
  00088	01 00 00 00	 DD	 1
  0008c	00 00 00 00	 DD	 $LN4@SetText
$LN4@SetText:
  00090	24 ff ff ff	 DD	 -220			; ffffff24H
  00094	c8 00 00 00	 DD	 200			; 000000c8H
  00098	00 00 00 00	 DD	 $LN3@SetText
$LN3@SetText:
  0009c	62		 DB	 98			; 00000062H
  0009d	75		 DB	 117			; 00000075H
  0009e	66		 DB	 102			; 00000066H
  0009f	00		 DB	 0
?SetText@XMLElement@tinyxml2@@QAEXH@Z ENDP		; tinyxml2::XMLElement::SetText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetText@XMLElement@tinyxml2@@QAEXPBD@Z
_TEXT	SEGMENT
tv78 = -220						; size = 4
_theText$1 = -20					; size = 4
_this$ = -8						; size = 4
_inText$ = 8						; size = 4
?SetText@XMLElement@tinyxml2@@QAEXPBD@Z PROC		; tinyxml2::XMLElement::SetText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1426
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1427
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
  0002b	85 c0		 test	 eax, eax
  0002d	74 45		 je	 SHORT $LN2@SetText
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
  00037	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  0003d	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	8b f4		 mov	 esi, esp
  00047	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR tv78[ebp]
  0004d	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00050	ff d0		 call	 eax
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	85 c0		 test	 eax, eax
  0005b	74 17		 je	 SHORT $LN2@SetText
; Line 1428
  0005d	6a 00		 push	 0
  0005f	8b 45 08	 mov	 eax, DWORD PTR _inText$[ebp]
  00062	50		 push	 eax
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ; tinyxml2::XMLNode::FirstChild
  0006b	8b c8		 mov	 ecx, eax
  0006d	e8 00 00 00 00	 call	 ?SetValue@XMLNode@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLNode::SetValue
; Line 1429
  00072	eb 22		 jmp	 SHORT $LN3@SetText
$LN2@SetText:
; Line 1430
  00074	8b 45 08	 mov	 eax, DWORD PTR _inText$[ebp]
  00077	50		 push	 eax
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?GetDocument@XMLNode@tinyxml2@@QAEPAVXMLDocument@2@XZ ; tinyxml2::XMLNode::GetDocument
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z ; tinyxml2::XMLDocument::NewText
  00087	89 45 ec	 mov	 DWORD PTR _theText$1[ebp], eax
; Line 1431
  0008a	8b 45 ec	 mov	 eax, DWORD PTR _theText$1[ebp]
  0008d	50		 push	 eax
  0008e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00091	e8 00 00 00 00	 call	 ?InsertFirstChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertFirstChild
$LN3@SetText:
; Line 1433
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 04 00	 ret	 4
?SetText@XMLElement@tinyxml2@@QAEXPBD@Z ENDP		; tinyxml2::XMLElement::SetText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetText@XMLElement@tinyxml2@@QBEPBDXZ
_TEXT	SEGMENT
tv78 = -208						; size = 4
_this$ = -8						; size = 4
?GetText@XMLElement@tinyxml2@@QBEPBDXZ PROC		; tinyxml2::XMLElement::GetText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1417
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1418
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  0002b	85 c0		 test	 eax, eax
  0002d	74 3f		 je	 SHORT $LN1@GetText
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00037	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv78[ebp], eax
  0003d	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	8b f4		 mov	 esi, esp
  00047	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv78[ebp]
  0004d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00050	ff d0		 call	 eax
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	85 c0		 test	 eax, eax
  0005b	74 11		 je	 SHORT $LN1@GetText
; Line 1419
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0006c	eb 02		 jmp	 SHORT $LN2@GetText
$LN1@GetText:
; Line 1421
  0006e	33 c0		 xor	 eax, eax
$LN2@GetText:
; Line 1422
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00079	3b ec		 cmp	 ebp, esp
  0007b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
?GetText@XMLElement@tinyxml2@@QBEPBDXZ ENDP		; tinyxml2::XMLElement::GetText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FindAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@PBD@Z
_TEXT	SEGMENT
_a$1 = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?FindAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@PBD@Z PROC ; tinyxml2::XMLElement::FindAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1393
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1394
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00029	89 4d ec	 mov	 DWORD PTR _a$1[ebp], ecx
  0002c	eb 09		 jmp	 SHORT $LN4@FindAttrib
$LN3@FindAttrib:
  0002e	8b 45 ec	 mov	 eax, DWORD PTR _a$1[ebp]
  00031	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00034	89 4d ec	 mov	 DWORD PTR _a$1[ebp], ecx
$LN4@FindAttrib:
  00037	83 7d ec 00	 cmp	 DWORD PTR _a$1[ebp], 0
  0003b	74 28		 je	 SHORT $LN2@FindAttrib
; Line 1395
  0003d	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00042	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00045	50		 push	 eax
  00046	8b 4d ec	 mov	 ecx, DWORD PTR _a$1[ebp]
  00049	e8 00 00 00 00	 call	 ?Name@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Name
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00054	83 c4 0c	 add	 esp, 12			; 0000000cH
  00057	0f b6 c8	 movzx	 ecx, al
  0005a	85 c9		 test	 ecx, ecx
  0005c	74 05		 je	 SHORT $LN1@FindAttrib
; Line 1396
  0005e	8b 45 ec	 mov	 eax, DWORD PTR _a$1[ebp]
  00061	eb 04		 jmp	 SHORT $LN5@FindAttrib
$LN1@FindAttrib:
; Line 1398
  00063	eb c9		 jmp	 SHORT $LN3@FindAttrib
$LN2@FindAttrib:
; Line 1399
  00065	33 c0		 xor	 eax, eax
$LN5@FindAttrib:
; Line 1400
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
?FindAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@PBD@Z ENDP ; tinyxml2::XMLElement::FindAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ PROC ; tinyxml2::XMLElement::FirstAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1354
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
; Line 1355
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?FirstAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@XZ ENDP ; tinyxml2::XMLElement::FirstAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DeleteAttribute@XMLElement@tinyxml2@@QAEXPBD@Z
_TEXT	SEGMENT
_a$1 = -32						; size = 4
_prev$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?DeleteAttribute@XMLElement@tinyxml2@@QAEXPBD@Z PROC	; tinyxml2::XMLElement::DeleteAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  00023	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _prev$[ebp], 0
; Line 1573
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00030	89 4d e0	 mov	 DWORD PTR _a$1[ebp], ecx
  00033	eb 09		 jmp	 SHORT $LN6@DeleteAttr
$LN5@DeleteAttr:
  00035	8b 45 e0	 mov	 eax, DWORD PTR _a$1[ebp]
  00038	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0003b	89 4d e0	 mov	 DWORD PTR _a$1[ebp], ecx
$LN6@DeleteAttr:
  0003e	83 7d e0 00	 cmp	 DWORD PTR _a$1[ebp], 0
  00042	74 57		 je	 SHORT $LN7@DeleteAttr
; Line 1574
  00044	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00049	8b 4d e0	 mov	 ecx, DWORD PTR _a$1[ebp]
  0004c	e8 00 00 00 00	 call	 ?Name@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Name
  00051	50		 push	 eax
  00052	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	0f b6 c8	 movzx	 ecx, al
  00061	85 c9		 test	 ecx, ecx
  00063	74 2e		 je	 SHORT $LN3@DeleteAttr
; Line 1575
  00065	83 7d ec 00	 cmp	 DWORD PTR _prev$[ebp], 0
  00069	74 0e		 je	 SHORT $LN2@DeleteAttr
; Line 1576
  0006b	8b 45 ec	 mov	 eax, DWORD PTR _prev$[ebp]
  0006e	8b 4d e0	 mov	 ecx, DWORD PTR _a$1[ebp]
  00071	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00074	89 50 1c	 mov	 DWORD PTR [eax+28], edx
; Line 1578
  00077	eb 0c		 jmp	 SHORT $LN1@DeleteAttr
$LN2@DeleteAttr:
; Line 1579
  00079	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007c	8b 4d e0	 mov	 ecx, DWORD PTR _a$1[ebp]
  0007f	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00082	89 50 30	 mov	 DWORD PTR [eax+48], edx
$LN1@DeleteAttr:
; Line 1581
  00085	8b 45 e0	 mov	 eax, DWORD PTR _a$1[ebp]
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ?DeleteAttribute@XMLElement@tinyxml2@@CAXPAVXMLAttribute@2@@Z ; tinyxml2::XMLElement::DeleteAttribute
  0008e	83 c4 04	 add	 esp, 4
; Line 1582
  00091	eb 08		 jmp	 SHORT $LN7@DeleteAttr
$LN3@DeleteAttr:
; Line 1584
  00093	8b 45 e0	 mov	 eax, DWORD PTR _a$1[ebp]
  00096	89 45 ec	 mov	 DWORD PTR _prev$[ebp], eax
; Line 1585
  00099	eb 9a		 jmp	 SHORT $LN5@DeleteAttr
$LN7@DeleteAttr:
; Line 1586
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000a4	3b ec		 cmp	 ebp, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
?DeleteAttribute@XMLElement@tinyxml2@@QAEXPBD@Z ENDP	; tinyxml2::XMLElement::DeleteAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetAttribute@XMLElement@tinyxml2@@QAEXPBD0@Z
_TEXT	SEGMENT
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?SetAttribute@XMLElement@tinyxml2@@QAEXPBD0@Z PROC	; tinyxml2::XMLElement::SetAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1317
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1318
  00023	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?FindOrCreateAttribute@XMLElement@tinyxml2@@AAEPAVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindOrCreateAttribute
  0002f	89 45 ec	 mov	 DWORD PTR _a$[ebp], eax
; Line 1319
  00032	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  00035	50		 push	 eax
  00036	8b 4d ec	 mov	 ecx, DWORD PTR _a$[ebp]
  00039	e8 00 00 00 00	 call	 ?SetAttribute@XMLAttribute@tinyxml2@@QAEXPBD@Z ; tinyxml2::XMLAttribute::SetAttribute
; Line 1320
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?SetAttribute@XMLElement@tinyxml2@@QAEXPBD0@Z ENDP	; tinyxml2::XMLElement::SetAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z
_TEXT	SEGMENT
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z PROC	; tinyxml2::XMLElement::Attribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1404
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1405
  00023	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?FindAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindAttribute
  0002f	89 45 ec	 mov	 DWORD PTR _a$[ebp], eax
; Line 1406
  00032	83 7d ec 00	 cmp	 DWORD PTR _a$[ebp], 0
  00036	75 04		 jne	 SHORT $LN3@Attribute
; Line 1407
  00038	33 c0		 xor	 eax, eax
  0003a	eb 33		 jmp	 SHORT $LN4@Attribute
$LN3@Attribute:
; Line 1409
  0003c	83 7d 0c 00	 cmp	 DWORD PTR _value$[ebp], 0
  00040	74 21		 je	 SHORT $LN1@Attribute
  00042	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00047	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d ec	 mov	 ecx, DWORD PTR _a$[ebp]
  0004e	e8 00 00 00 00	 call	 ?Value@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Value
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005c	0f b6 c8	 movzx	 ecx, al
  0005f	85 c9		 test	 ecx, ecx
  00061	74 0a		 je	 SHORT $LN2@Attribute
$LN1@Attribute:
; Line 1410
  00063	8b 4d ec	 mov	 ecx, DWORD PTR _a$[ebp]
  00066	e8 00 00 00 00	 call	 ?Value@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Value
  0006b	eb 02		 jmp	 SHORT $LN4@Attribute
$LN2@Attribute:
; Line 1412
  0006d	33 c0		 xor	 eax, eax
$LN4@Attribute:
; Line 1413
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 08 00	 ret	 8
?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ENDP	; tinyxml2::XMLElement::Attribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Accept@XMLElement@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z
_TEXT	SEGMENT
_node$1 = -20						; size = 4
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@XMLElement@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z PROC ; tinyxml2::XMLElement::Accept, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1729
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1730
  00023	83 7d 08 00	 cmp	 DWORD PTR _visitor$[ebp], 0
  00027	75 01		 jne	 SHORT $LN6@Accept
  00029	cc		 int	 3
$LN6@Accept:
; Line 1731
  0002a	8b f4		 mov	 esi, esp
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00032	51		 push	 ecx
  00033	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00036	52		 push	 edx
  00037	8b 45 08	 mov	 eax, DWORD PTR _visitor$[ebp]
  0003a	8b 10		 mov	 edx, DWORD PTR [eax]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  0003f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00042	ff d0		 call	 eax
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	0f b6 c8	 movzx	 ecx, al
  0004e	85 c9		 test	 ecx, ecx
  00050	74 43		 je	 SHORT $LN5@Accept
; Line 1732
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::FirstChild
  0005a	89 45 ec	 mov	 DWORD PTR _node$1[ebp], eax
  0005d	eb 0b		 jmp	 SHORT $LN4@Accept
$LN3@Accept:
  0005f	8b 4d ec	 mov	 ecx, DWORD PTR _node$1[ebp]
  00062	e8 00 00 00 00	 call	 ?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ ; tinyxml2::XMLNode::NextSibling
  00067	89 45 ec	 mov	 DWORD PTR _node$1[ebp], eax
$LN4@Accept:
  0006a	83 7d ec 00	 cmp	 DWORD PTR _node$1[ebp], 0
  0006e	74 25		 je	 SHORT $LN5@Accept
; Line 1733
  00070	8b f4		 mov	 esi, esp
  00072	8b 45 08	 mov	 eax, DWORD PTR _visitor$[ebp]
  00075	50		 push	 eax
  00076	8b 4d ec	 mov	 ecx, DWORD PTR _node$1[ebp]
  00079	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007b	8b 4d ec	 mov	 ecx, DWORD PTR _node$1[ebp]
  0007e	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00081	ff d0		 call	 eax
  00083	3b f4		 cmp	 esi, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	0f b6 c8	 movzx	 ecx, al
  0008d	85 c9		 test	 ecx, ecx
  0008f	75 02		 jne	 SHORT $LN1@Accept
; Line 1734
  00091	eb 02		 jmp	 SHORT $LN5@Accept
$LN1@Accept:
; Line 1736
  00093	eb ca		 jmp	 SHORT $LN3@Accept
$LN5@Accept:
; Line 1738
  00095	8b f4		 mov	 esi, esp
  00097	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009a	50		 push	 eax
  0009b	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  0009e	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a0	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  000a3	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000a6	ff d0		 call	 eax
  000a8	3b f4		 cmp	 esi, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1739
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000b8	3b ec		 cmp	 ebp, esp
  000ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 04 00	 ret	 4
?Accept@XMLElement@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ENDP ; tinyxml2::XMLElement::Accept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToElement@XMLElement@tinyxml2@@UBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToElement@XMLElement@tinyxml2@@UBEPBV12@XZ PROC	; tinyxml2::XMLElement::ToElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1160
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1161
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; Line 1162
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?ToElement@XMLElement@tinyxml2@@UBEPBV12@XZ ENDP	; tinyxml2::XMLElement::ToElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToElement@XMLElement@tinyxml2@@UAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToElement@XMLElement@tinyxml2@@UAEPAV12@XZ PROC	; tinyxml2::XMLElement::ToElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1157
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1158
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; Line 1159
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?ToElement@XMLElement@tinyxml2@@UAEPAV12@XZ ENDP	; tinyxml2::XMLElement::ToElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetName@XMLElement@tinyxml2@@QAEXPBD_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
_staticMem$ = 12					; size = 1
?SetName@XMLElement@tinyxml2@@QAEXPBD_N@Z PROC		; tinyxml2::XMLElement::SetName, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1153
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1154
  00023	0f b6 45 0c	 movzx	 eax, BYTE PTR _staticMem$[ebp]
  00027	50		 push	 eax
  00028	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  0002b	51		 push	 ecx
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?SetValue@XMLNode@tinyxml2@@QAEXPBD_N@Z ; tinyxml2::XMLNode::SetValue
; Line 1155
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?SetName@XMLElement@tinyxml2@@QAEXPBD_N@Z ENDP		; tinyxml2::XMLElement::SetName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Name@XMLElement@tinyxml2@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Name@XMLElement@tinyxml2@@QBEPBDXZ PROC		; tinyxml2::XMLElement::Name, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1149
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1150
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
; Line 1151
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?Name@XMLElement@tinyxml2@@QBEPBDXZ ENDP		; tinyxml2::XMLElement::Name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GXMLAttribute@tinyxml2@@EAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GXMLAttribute@tinyxml2@@EAEPAXI@Z PROC		; tinyxml2::XMLAttribute::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1XMLAttribute@tinyxml2@@EAE@XZ ; tinyxml2::XMLAttribute::~XMLAttribute
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_GXMLAttribute@tinyxml2@@EAEPAXI@Z ENDP		; tinyxml2::XMLAttribute::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ParseDeep@XMLAttribute@tinyxml2@@AAEPADPAD_N@Z
_TEXT	SEGMENT
tv88 = -224						; size = 4
_endTag$ = -24						; size = 2
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_p$ = 8							; size = 4
_processEntities$ = 12					; size = 1
?ParseDeep@XMLAttribute@tinyxml2@@AAEPADPAD_N@Z PROC	; tinyxml2::XMLAttribute::ParseDeep, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1252
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e0 00 00
	00		 sub	 esp, 224		; 000000e0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 20 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-224]
  00013	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1254
  0002d	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	83 c1 04	 add	 ecx, 4
  00037	e8 00 00 00 00	 call	 ?ParseName@StrPair@tinyxml2@@QAEPADPAD@Z ; tinyxml2::StrPair::ParseName
  0003c	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1255
  0003f	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00043	74 0a		 je	 SHORT $LN3@ParseDeep
  00045	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00048	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0004b	85 c9		 test	 ecx, ecx
  0004d	75 07		 jne	 SHORT $LN4@ParseDeep
$LN3@ParseDeep:
; Line 1256
  0004f	33 c0		 xor	 eax, eax
  00051	e9 a6 00 00 00	 jmp	 $LN5@ParseDeep
$LN4@ParseDeep:
; Line 1260
  00056	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPADPAD@Z ; tinyxml2::XMLUtil::SkipWhiteSpace
  0005f	83 c4 04	 add	 esp, 4
  00062	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1261
  00065	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00068	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0006b	83 f9 3d	 cmp	 ecx, 61			; 0000003dH
  0006e	74 07		 je	 SHORT $LN2@ParseDeep
; Line 1262
  00070	33 c0		 xor	 eax, eax
  00072	e9 85 00 00 00	 jmp	 $LN5@ParseDeep
$LN2@ParseDeep:
; Line 1265
  00077	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0007a	83 c0 01	 add	 eax, 1
  0007d	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1266
  00080	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPADPAD@Z ; tinyxml2::XMLUtil::SkipWhiteSpace
  00089	83 c4 04	 add	 esp, 4
  0008c	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1267
  0008f	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00092	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00095	83 f9 22	 cmp	 ecx, 34			; 00000022H
  00098	74 0f		 je	 SHORT $LN1@ParseDeep
  0009a	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0009d	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000a0	83 f9 27	 cmp	 ecx, 39			; 00000027H
  000a3	74 04		 je	 SHORT $LN1@ParseDeep
; Line 1268
  000a5	33 c0		 xor	 eax, eax
  000a7	eb 53		 jmp	 SHORT $LN5@ParseDeep
$LN1@ParseDeep:
; Line 1271
  000a9	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000ac	8a 08		 mov	 cl, BYTE PTR [eax]
  000ae	88 4d e8	 mov	 BYTE PTR _endTag$[ebp], cl
  000b1	c6 45 e9 00	 mov	 BYTE PTR _endTag$[ebp+1], 0
; Line 1272
  000b5	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000b8	83 c0 01	 add	 eax, 1
  000bb	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1274
  000be	0f b6 45 0c	 movzx	 eax, BYTE PTR _processEntities$[ebp]
  000c2	85 c0		 test	 eax, eax
  000c4	74 0c		 je	 SHORT $LN7@ParseDeep
  000c6	c7 85 20 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv88[ebp], 3
  000d0	eb 0a		 jmp	 SHORT $LN8@ParseDeep
$LN7@ParseDeep:
  000d2	c7 85 20 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv88[ebp], 2
$LN8@ParseDeep:
  000dc	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR tv88[ebp]
  000e2	51		 push	 ecx
  000e3	8d 55 e8	 lea	 edx, DWORD PTR _endTag$[ebp]
  000e6	52		 push	 edx
  000e7	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000ea	50		 push	 eax
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	83 c1 10	 add	 ecx, 16			; 00000010H
  000f1	e8 00 00 00 00	 call	 ?ParseText@StrPair@tinyxml2@@QAEPADPADPBDH@Z ; tinyxml2::StrPair::ParseText
  000f6	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1275
  000f9	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
$LN5@ParseDeep:
; Line 1276
  000fc	52		 push	 edx
  000fd	8b cd		 mov	 ecx, ebp
  000ff	50		 push	 eax
  00100	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@ParseDeep
  00106	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0010b	58		 pop	 eax
  0010c	5a		 pop	 edx
  0010d	5f		 pop	 edi
  0010e	5e		 pop	 esi
  0010f	5b		 pop	 ebx
  00110	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00113	33 cd		 xor	 ecx, ebp
  00115	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011a	81 c4 e0 00 00
	00		 add	 esp, 224		; 000000e0H
  00120	3b ec		 cmp	 ebp, esp
  00122	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00127	8b e5		 mov	 esp, ebp
  00129	5d		 pop	 ebp
  0012a	c2 08 00	 ret	 8
  0012d	8d 49 00	 npad	 3
$LN11@ParseDeep:
  00130	01 00 00 00	 DD	 1
  00134	00 00 00 00	 DD	 $LN10@ParseDeep
$LN10@ParseDeep:
  00138	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0013c	02 00 00 00	 DD	 2
  00140	00 00 00 00	 DD	 $LN9@ParseDeep
$LN9@ParseDeep:
  00144	65		 DB	 101			; 00000065H
  00145	6e		 DB	 110			; 0000006eH
  00146	64		 DB	 100			; 00000064H
  00147	54		 DB	 84			; 00000054H
  00148	61		 DB	 97			; 00000061H
  00149	67		 DB	 103			; 00000067H
  0014a	00		 DB	 0
?ParseDeep@XMLAttribute@tinyxml2@@AAEPADPAD_N@Z ENDP	; tinyxml2::XMLAttribute::ParseDeep
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetName@XMLAttribute@tinyxml2@@AAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?SetName@XMLAttribute@tinyxml2@@AAEXPBD@Z PROC		; tinyxml2::XMLAttribute::SetName, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1281
  00023	6a 00		 push	 0
  00025	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  00028	50		 push	 eax
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	83 c1 04	 add	 ecx, 4
  0002f	e8 00 00 00 00	 call	 ?SetStr@StrPair@tinyxml2@@QAEXPBDH@Z ; tinyxml2::StrPair::SetStr
; Line 1282
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?SetName@XMLAttribute@tinyxml2@@AAEXPBD@Z ENDP		; tinyxml2::XMLAttribute::SetName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1XMLAttribute@tinyxml2@@EAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1XMLAttribute@tinyxml2@@EAE@XZ PROC			; tinyxml2::XMLAttribute::~XMLAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1124
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1XMLAttribute@tinyxml2@@EAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLAttribute@tinyxml2@@6B@
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00052	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	83 c1 10	 add	 ecx, 16			; 00000010H
  00058	e8 00 00 00 00	 call	 ??1StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::~StrPair
  0005d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00064	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	83 c1 04	 add	 ecx, 4
  0006a	e8 00 00 00 00	 call	 ??1StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::~StrPair
  0006f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00072	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00079	59		 pop	 ecx
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1XMLAttribute@tinyxml2@@EAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::~StrPair
__ehhandler$??1XMLAttribute@tinyxml2@@EAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1XMLAttribute@tinyxml2@@EAE@XZ
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1XMLAttribute@tinyxml2@@EAE@XZ ENDP			; tinyxml2::XMLAttribute::~XMLAttribute
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0XMLAttribute@tinyxml2@@AAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0XMLAttribute@tinyxml2@@AAE@XZ PROC			; tinyxml2::XMLAttribute::XMLAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1123
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0XMLAttribute@tinyxml2@@AAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLAttribute@tinyxml2@@6B@
  0004b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	83 c1 04	 add	 ecx, 4
  00051	e8 00 00 00 00	 call	 ??0StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::StrPair
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	83 c1 10	 add	 ecx, 16			; 00000010H
  00063	e8 00 00 00 00	 call	 ??0StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::StrPair
  00068	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
  00072	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00075	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0
  0007c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00083	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00086	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00089	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00090	59		 pop	 ecx
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0009a	3b ec		 cmp	 ebp, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0XMLAttribute@tinyxml2@@AAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::~StrPair
__ehhandler$??0XMLAttribute@tinyxml2@@AAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0XMLAttribute@tinyxml2@@AAE@XZ
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0XMLAttribute@tinyxml2@@AAE@XZ ENDP			; tinyxml2::XMLAttribute::XMLAttribute
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetAttribute@XMLAttribute@tinyxml2@@QAEXM@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
?SetAttribute@XMLAttribute@tinyxml2@@QAEXM@Z PROC	; tinyxml2::XMLAttribute::SetAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1367
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1369
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	51		 push	 ecx
  0003a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _v$[ebp]
  0003f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00044	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXMPADH@Z ; tinyxml2::XMLUtil::ToStr
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1370
  0004c	6a 00		 push	 0
  0004e	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00054	50		 push	 eax
  00055	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	83 c1 10	 add	 ecx, 16			; 00000010H
  0005b	e8 00 00 00 00	 call	 ?SetStr@StrPair@tinyxml2@@QAEXPBDH@Z ; tinyxml2::StrPair::SetStr
; Line 1371
  00060	52		 push	 edx
  00061	8b cd		 mov	 ecx, ebp
  00063	50		 push	 eax
  00064	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetAttribu
  0006a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0006f	58		 pop	 eax
  00070	5a		 pop	 edx
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00077	33 cd		 xor	 ecx, ebp
  00079	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007e	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  00084	3b ec		 cmp	 ebp, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 04 00	 ret	 4
  00091	8d 49 00	 npad	 3
$LN5@SetAttribu:
  00094	01 00 00 00	 DD	 1
  00098	00 00 00 00	 DD	 $LN4@SetAttribu
$LN4@SetAttribu:
  0009c	24 ff ff ff	 DD	 -220			; ffffff24H
  000a0	c8 00 00 00	 DD	 200			; 000000c8H
  000a4	00 00 00 00	 DD	 $LN3@SetAttribu
$LN3@SetAttribu:
  000a8	62		 DB	 98			; 00000062H
  000a9	75		 DB	 117			; 00000075H
  000aa	66		 DB	 102			; 00000066H
  000ab	00		 DB	 0
?SetAttribute@XMLAttribute@tinyxml2@@QAEXM@Z ENDP	; tinyxml2::XMLAttribute::SetAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetAttribute@XMLAttribute@tinyxml2@@QAEXN@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 8
?SetAttribute@XMLAttribute@tinyxml2@@QAEXN@Z PROC	; tinyxml2::XMLAttribute::SetAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1360
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1362
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	83 ec 08	 sub	 esp, 8
  0003c	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _v$[ebp]
  00041	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00046	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXNPADH@Z ; tinyxml2::XMLUtil::ToStr
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1363
  0004e	6a 00		 push	 0
  00050	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00056	50		 push	 eax
  00057	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	83 c1 10	 add	 ecx, 16			; 00000010H
  0005d	e8 00 00 00 00	 call	 ?SetStr@StrPair@tinyxml2@@QAEXPBDH@Z ; tinyxml2::StrPair::SetStr
; Line 1364
  00062	52		 push	 edx
  00063	8b cd		 mov	 ecx, ebp
  00065	50		 push	 eax
  00066	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetAttribu
  0006c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00071	58		 pop	 eax
  00072	5a		 pop	 edx
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00079	33 cd		 xor	 ecx, ebp
  0007b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00080	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  00086	3b ec		 cmp	 ebp, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c2 08 00	 ret	 8
  00093	90		 npad	 1
$LN5@SetAttribu:
  00094	01 00 00 00	 DD	 1
  00098	00 00 00 00	 DD	 $LN4@SetAttribu
$LN4@SetAttribu:
  0009c	24 ff ff ff	 DD	 -220			; ffffff24H
  000a0	c8 00 00 00	 DD	 200			; 000000c8H
  000a4	00 00 00 00	 DD	 $LN3@SetAttribu
$LN3@SetAttribu:
  000a8	62		 DB	 98			; 00000062H
  000a9	75		 DB	 117			; 00000075H
  000aa	66		 DB	 102			; 00000066H
  000ab	00		 DB	 0
?SetAttribute@XMLAttribute@tinyxml2@@QAEXN@Z ENDP	; tinyxml2::XMLAttribute::SetAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetAttribute@XMLAttribute@tinyxml2@@QAEX_N@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 1
?SetAttribute@XMLAttribute@tinyxml2@@QAEX_N@Z PROC	; tinyxml2::XMLAttribute::SetAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1353
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1355
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	0f b6 4d 08	 movzx	 ecx, BYTE PTR _v$[ebp]
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAX_NPADH@Z ; tinyxml2::XMLUtil::ToStr
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1356
  00046	6a 00		 push	 0
  00048	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	83 c1 10	 add	 ecx, 16			; 00000010H
  00055	e8 00 00 00 00	 call	 ?SetStr@StrPair@tinyxml2@@QAEXPBDH@Z ; tinyxml2::StrPair::SetStr
; Line 1357
  0005a	52		 push	 edx
  0005b	8b cd		 mov	 ecx, ebp
  0005d	50		 push	 eax
  0005e	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetAttribu
  00064	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00069	58		 pop	 eax
  0006a	5a		 pop	 edx
  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	5b		 pop	 ebx
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00071	33 cd		 xor	 ecx, ebp
  00073	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00078	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 04 00	 ret	 4
  0008b	90		 npad	 1
$LN5@SetAttribu:
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN4@SetAttribu
$LN4@SetAttribu:
  00094	24 ff ff ff	 DD	 -220			; ffffff24H
  00098	c8 00 00 00	 DD	 200			; 000000c8H
  0009c	00 00 00 00	 DD	 $LN3@SetAttribu
$LN3@SetAttribu:
  000a0	62		 DB	 98			; 00000062H
  000a1	75		 DB	 117			; 00000075H
  000a2	66		 DB	 102			; 00000066H
  000a3	00		 DB	 0
?SetAttribute@XMLAttribute@tinyxml2@@QAEX_N@Z ENDP	; tinyxml2::XMLAttribute::SetAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetAttribute@XMLAttribute@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
?SetAttribute@XMLAttribute@tinyxml2@@QAEXI@Z PROC	; tinyxml2::XMLAttribute::SetAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1345
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1347
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	8b 4d 08	 mov	 ecx, DWORD PTR _v$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXIPADH@Z ; tinyxml2::XMLUtil::ToStr
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1348
  00045	6a 00		 push	 0
  00047	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	83 c1 10	 add	 ecx, 16			; 00000010H
  00054	e8 00 00 00 00	 call	 ?SetStr@StrPair@tinyxml2@@QAEXPBDH@Z ; tinyxml2::StrPair::SetStr
; Line 1349
  00059	52		 push	 edx
  0005a	8b cd		 mov	 ecx, ebp
  0005c	50		 push	 eax
  0005d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetAttribu
  00063	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00068	58		 pop	 eax
  00069	5a		 pop	 edx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00070	33 cd		 xor	 ecx, ebp
  00072	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00077	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 04 00	 ret	 4
  0008a	8b ff		 npad	 2
$LN5@SetAttribu:
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN4@SetAttribu
$LN4@SetAttribu:
  00094	24 ff ff ff	 DD	 -220			; ffffff24H
  00098	c8 00 00 00	 DD	 200			; 000000c8H
  0009c	00 00 00 00	 DD	 $LN3@SetAttribu
$LN3@SetAttribu:
  000a0	62		 DB	 98			; 00000062H
  000a1	75		 DB	 117			; 00000075H
  000a2	66		 DB	 102			; 00000066H
  000a3	00		 DB	 0
?SetAttribute@XMLAttribute@tinyxml2@@QAEXI@Z ENDP	; tinyxml2::XMLAttribute::SetAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetAttribute@XMLAttribute@tinyxml2@@QAEXH@Z
_TEXT	SEGMENT
_buf$ = -220						; size = 200
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
?SetAttribute@XMLAttribute@tinyxml2@@QAEXH@Z PROC	; tinyxml2::XMLAttribute::SetAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1337
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 60 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-416]
  00013	b9 68 00 00 00	 mov	 ecx, 104		; 00000068H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1339
  0002d	68 c8 00 00 00	 push	 200			; 000000c8H
  00032	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00038	50		 push	 eax
  00039	8b 4d 08	 mov	 ecx, DWORD PTR _v$[ebp]
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ?ToStr@XMLUtil@tinyxml2@@SAXHPADH@Z ; tinyxml2::XMLUtil::ToStr
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1340
  00045	6a 00		 push	 0
  00047	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004d	50		 push	 eax
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	83 c1 10	 add	 ecx, 16			; 00000010H
  00054	e8 00 00 00 00	 call	 ?SetStr@StrPair@tinyxml2@@QAEXPBDH@Z ; tinyxml2::StrPair::SetStr
; Line 1341
  00059	52		 push	 edx
  0005a	8b cd		 mov	 ecx, ebp
  0005c	50		 push	 eax
  0005d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetAttribu
  00063	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00068	58		 pop	 eax
  00069	5a		 pop	 edx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00070	33 cd		 xor	 ecx, ebp
  00072	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00077	81 c4 a0 01 00
	00		 add	 esp, 416		; 000001a0H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 04 00	 ret	 4
  0008a	8b ff		 npad	 2
$LN5@SetAttribu:
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN4@SetAttribu
$LN4@SetAttribu:
  00094	24 ff ff ff	 DD	 -220			; ffffff24H
  00098	c8 00 00 00	 DD	 200			; 000000c8H
  0009c	00 00 00 00	 DD	 $LN3@SetAttribu
$LN3@SetAttribu:
  000a0	62		 DB	 98			; 00000062H
  000a1	75		 DB	 117			; 00000075H
  000a2	66		 DB	 102			; 00000066H
  000a3	00		 DB	 0
?SetAttribute@XMLAttribute@tinyxml2@@QAEXH@Z ENDP	; tinyxml2::XMLAttribute::SetAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetAttribute@XMLAttribute@tinyxml2@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_v$ = 8							; size = 4
?SetAttribute@XMLAttribute@tinyxml2@@QAEXPBD@Z PROC	; tinyxml2::XMLAttribute::SetAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1331
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1332
  00023	6a 00		 push	 0
  00025	8b 45 08	 mov	 eax, DWORD PTR _v$[ebp]
  00028	50		 push	 eax
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	83 c1 10	 add	 ecx, 16			; 00000010H
  0002f	e8 00 00 00 00	 call	 ?SetStr@StrPair@tinyxml2@@QAEXPBDH@Z ; tinyxml2::StrPair::SetStr
; Line 1333
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?SetAttribute@XMLAttribute@tinyxml2@@QAEXPBD@Z ENDP	; tinyxml2::XMLAttribute::SetAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryFloatValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?QueryFloatValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAM@Z PROC ; tinyxml2::XMLAttribute::QueryFloatValue, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1313
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1314
  00023	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?Value@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Value
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?ToFloat@XMLUtil@tinyxml2@@SA_NPBDPAM@Z ; tinyxml2::XMLUtil::ToFloat
  00035	83 c4 08	 add	 esp, 8
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	74 04		 je	 SHORT $LN1@QueryFloat
; Line 1315
  0003f	33 c0		 xor	 eax, eax
  00041	eb 05		 jmp	 SHORT $LN2@QueryFloat
$LN1@QueryFloat:
; Line 1317
  00043	b8 02 00 00 00	 mov	 eax, 2
$LN2@QueryFloat:
; Line 1318
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?QueryFloatValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAM@Z ENDP ; tinyxml2::XMLAttribute::QueryFloatValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryDoubleValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?QueryDoubleValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAN@Z PROC ; tinyxml2::XMLAttribute::QueryDoubleValue, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1322
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1323
  00023	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?Value@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Value
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?ToDouble@XMLUtil@tinyxml2@@SA_NPBDPAN@Z ; tinyxml2::XMLUtil::ToDouble
  00035	83 c4 08	 add	 esp, 8
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	74 04		 je	 SHORT $LN1@QueryDoubl
; Line 1324
  0003f	33 c0		 xor	 eax, eax
  00041	eb 05		 jmp	 SHORT $LN2@QueryDoubl
$LN1@QueryDoubl:
; Line 1326
  00043	b8 02 00 00 00	 mov	 eax, 2
$LN2@QueryDoubl:
; Line 1327
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?QueryDoubleValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAN@Z ENDP ; tinyxml2::XMLAttribute::QueryDoubleValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryBoolValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PA_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?QueryBoolValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PA_N@Z PROC ; tinyxml2::XMLAttribute::QueryBoolValue, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1304
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1305
  00023	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?Value@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Value
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?ToBool@XMLUtil@tinyxml2@@SA_NPBDPA_N@Z ; tinyxml2::XMLUtil::ToBool
  00035	83 c4 08	 add	 esp, 8
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	74 04		 je	 SHORT $LN1@QueryBoolV
; Line 1306
  0003f	33 c0		 xor	 eax, eax
  00041	eb 05		 jmp	 SHORT $LN2@QueryBoolV
$LN1@QueryBoolV:
; Line 1308
  00043	b8 02 00 00 00	 mov	 eax, 2
$LN2@QueryBoolV:
; Line 1309
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?QueryBoolValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PA_N@Z ENDP ; tinyxml2::XMLAttribute::QueryBoolValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryUnsignedValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?QueryUnsignedValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAI@Z PROC ; tinyxml2::XMLAttribute::QueryUnsignedValue, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1295
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1296
  00023	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?Value@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Value
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?ToUnsigned@XMLUtil@tinyxml2@@SA_NPBDPAI@Z ; tinyxml2::XMLUtil::ToUnsigned
  00035	83 c4 08	 add	 esp, 8
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	74 04		 je	 SHORT $LN1@QueryUnsig
; Line 1297
  0003f	33 c0		 xor	 eax, eax
  00041	eb 05		 jmp	 SHORT $LN2@QueryUnsig
$LN1@QueryUnsig:
; Line 1299
  00043	b8 02 00 00 00	 mov	 eax, 2
$LN2@QueryUnsig:
; Line 1300
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?QueryUnsignedValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAI@Z ENDP ; tinyxml2::XMLAttribute::QueryUnsignedValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryIntValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?QueryIntValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAH@Z PROC ; tinyxml2::XMLAttribute::QueryIntValue, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1286
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1287
  00023	8b 45 08	 mov	 eax, DWORD PTR _value$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?Value@XMLAttribute@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLAttribute::Value
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?ToInt@XMLUtil@tinyxml2@@SA_NPBDPAH@Z ; tinyxml2::XMLUtil::ToInt
  00035	83 c4 08	 add	 esp, 8
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	74 04		 je	 SHORT $LN1@QueryIntVa
; Line 1288
  0003f	33 c0		 xor	 eax, eax
  00041	eb 05		 jmp	 SHORT $LN2@QueryIntVa
$LN1@QueryIntVa:
; Line 1290
  00043	b8 02 00 00 00	 mov	 eax, 2
$LN2@QueryIntVa:
; Line 1291
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?QueryIntValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAH@Z ENDP ; tinyxml2::XMLAttribute::QueryIntValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ PROC		; tinyxml2::XMLAttribute::Next, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1055
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1056
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
; Line 1057
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?Next@XMLAttribute@tinyxml2@@QBEPBV12@XZ ENDP		; tinyxml2::XMLAttribute::Next
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Value@XMLAttribute@tinyxml2@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Value@XMLAttribute@tinyxml2@@QBEPBDXZ PROC		; tinyxml2::XMLAttribute::Value, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1247
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1248
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 10	 add	 ecx, 16			; 00000010H
  00029	e8 00 00 00 00	 call	 ?GetStr@StrPair@tinyxml2@@QAEPBDXZ ; tinyxml2::StrPair::GetStr
; Line 1249
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?Value@XMLAttribute@tinyxml2@@QBEPBDXZ ENDP		; tinyxml2::XMLAttribute::Value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Name@XMLAttribute@tinyxml2@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Name@XMLAttribute@tinyxml2@@QBEPBDXZ PROC		; tinyxml2::XMLAttribute::Name, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1242
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1243
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 04	 add	 ecx, 4
  00029	e8 00 00 00 00	 call	 ?GetStr@StrPair@tinyxml2@@QAEPBDXZ ; tinyxml2::StrPair::GetStr
; Line 1244
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?Name@XMLAttribute@tinyxml2@@QBEPBDXZ ENDP		; tinyxml2::XMLAttribute::Name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GXMLUnknown@tinyxml2@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GXMLUnknown@tinyxml2@@MAEPAXI@Z PROC			; tinyxml2::XMLUnknown::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1XMLUnknown@tinyxml2@@MAE@XZ ; tinyxml2::XMLUnknown::~XMLUnknown
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_GXMLUnknown@tinyxml2@@MAEPAXI@Z ENDP			; tinyxml2::XMLUnknown::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ParseDeep@XMLUnknown@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
_TEXT	SEGMENT
_start$ = -20						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
___formal$ = 12						; size = 4
?ParseDeep@XMLUnknown@tinyxml2@@MAEPADPADPAVStrPair@2@@Z PROC ; tinyxml2::XMLUnknown::ParseDeep, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1205
  00023	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00026	89 45 ec	 mov	 DWORD PTR _start$[ebp], eax
; Line 1207
  00029	6a 02		 push	 2
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_01PPODPGHN@?$DO?$AA@
  00030	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00033	50		 push	 eax
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0003a	e8 00 00 00 00	 call	 ?ParseText@StrPair@tinyxml2@@QAEPADPADPBDH@Z ; tinyxml2::StrPair::ParseText
  0003f	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1208
  00042	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00046	75 13		 jne	 SHORT $LN1@ParseDeep
; Line 1209
  00048	6a 00		 push	 0
  0004a	8b 45 ec	 mov	 eax, DWORD PTR _start$[ebp]
  0004d	50		 push	 eax
  0004e	6a 0e		 push	 14			; 0000000eH
  00050	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00056	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
$LN1@ParseDeep:
; Line 1211
  0005b	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
; Line 1212
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00067	3b ec		 cmp	 ebp, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 08 00	 ret	 8
?ParseDeep@XMLUnknown@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ENDP ; tinyxml2::XMLUnknown::ParseDeep
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1XMLUnknown@tinyxml2@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1XMLUnknown@tinyxml2@@MAE@XZ PROC			; tinyxml2::XMLUnknown::~XMLUnknown, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1198
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLUnknown@tinyxml2@@6B@
; Line 1199
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1XMLNode@tinyxml2@@MAE@XZ ; tinyxml2::XMLNode::~XMLNode
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??1XMLUnknown@tinyxml2@@MAE@XZ ENDP			; tinyxml2::XMLUnknown::~XMLUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0XMLUnknown@tinyxml2@@IAE@PAVXMLDocument@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_doc$ = 8						; size = 4
??0XMLUnknown@tinyxml2@@IAE@PAVXMLDocument@1@@Z PROC	; tinyxml2::XMLUnknown::XMLUnknown, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1193
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _doc$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0XMLNode@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLNode::XMLNode
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLUnknown@tinyxml2@@6B@
; Line 1194
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0XMLUnknown@tinyxml2@@IAE@PAVXMLDocument@1@@Z ENDP	; tinyxml2::XMLUnknown::XMLUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShallowEqual@XMLUnknown@tinyxml2@@UBE_NPBVXMLNode@2@@Z
_TEXT	SEGMENT
tv88 = -220						; size = 4
_unknown$ = -20						; size = 4
_this$ = -8						; size = 4
_compare$ = 8						; size = 4
?ShallowEqual@XMLUnknown@tinyxml2@@UBE_NPBVXMLNode@2@@Z PROC ; tinyxml2::XMLUnknown::ShallowEqual, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1226
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1227
  00023	83 7d 08 00	 cmp	 DWORD PTR _compare$[ebp], 0
  00027	75 01		 jne	 SHORT $LN1@ShallowEqu
  00029	cc		 int	 3
$LN1@ShallowEqu:
; Line 1228
  0002a	8b 45 08	 mov	 eax, DWORD PTR _compare$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	8b f4		 mov	 esi, esp
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _compare$[ebp]
  00034	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00037	ff d0		 call	 eax
  00039	3b f4		 cmp	 esi, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	89 45 ec	 mov	 DWORD PTR _unknown$[ebp], eax
; Line 1229
  00043	83 7d ec 00	 cmp	 DWORD PTR _unknown$[ebp], 0
  00047	74 32		 je	 SHORT $LN4@ShallowEqu
  00049	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  0004e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  00056	50		 push	 eax
  00057	8b 4d ec	 mov	 ecx, DWORD PTR _unknown$[ebp]
  0005a	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
  00068	0f b6 c0	 movzx	 eax, al
  0006b	85 c0		 test	 eax, eax
  0006d	74 0c		 je	 SHORT $LN4@ShallowEqu
  0006f	c7 85 24 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv88[ebp], 1
  00079	eb 0a		 jmp	 SHORT $LN5@ShallowEqu
$LN4@ShallowEqu:
  0007b	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv88[ebp], 0
$LN5@ShallowEqu:
  00085	8a 85 24 ff ff
	ff		 mov	 al, BYTE PTR tv88[ebp]
; Line 1230
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
?ShallowEqual@XMLUnknown@tinyxml2@@UBE_NPBVXMLNode@2@@Z ENDP ; tinyxml2::XMLUnknown::ShallowEqual
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShallowClone@XMLUnknown@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z
_TEXT	SEGMENT
_text$ = -20						; size = 4
_this$ = -8						; size = 4
_doc$ = 8						; size = 4
?ShallowClone@XMLUnknown@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z PROC ; tinyxml2::XMLUnknown::ShallowClone, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1216
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1217
  00023	83 7d 08 00	 cmp	 DWORD PTR _doc$[ebp], 0
  00027	75 09		 jne	 SHORT $LN1@ShallowClo
; Line 1218
  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002f	89 4d 08	 mov	 DWORD PTR _doc$[ebp], ecx
$LN1@ShallowClo:
; Line 1220
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _doc$[ebp]
  0003e	e8 00 00 00 00	 call	 ?NewUnknown@XMLDocument@tinyxml2@@QAEPAVXMLUnknown@2@PBD@Z ; tinyxml2::XMLDocument::NewUnknown
  00043	89 45 ec	 mov	 DWORD PTR _text$[ebp], eax
; Line 1221
  00046	8b 45 ec	 mov	 eax, DWORD PTR _text$[ebp]
; Line 1222
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?ShallowClone@XMLUnknown@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z ENDP ; tinyxml2::XMLUnknown::ShallowClone
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Accept@XMLUnknown@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@XMLUnknown@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z PROC ; tinyxml2::XMLUnknown::Accept, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1234
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1235
  00023	83 7d 08 00	 cmp	 DWORD PTR _visitor$[ebp], 0
  00027	75 01		 jne	 SHORT $LN1@Accept
  00029	cc		 int	 3
$LN1@Accept:
; Line 1236
  0002a	8b f4		 mov	 esi, esp
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  00038	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0003b	ff d0		 call	 eax
  0003d	3b f4		 cmp	 esi, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1237
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?Accept@XMLUnknown@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ENDP ; tinyxml2::XMLUnknown::Accept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToUnknown@XMLUnknown@tinyxml2@@UBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToUnknown@XMLUnknown@tinyxml2@@UBEPBV12@XZ PROC	; tinyxml2::XMLUnknown::ToUnknown, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1016
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1017
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; Line 1018
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?ToUnknown@XMLUnknown@tinyxml2@@UBEPBV12@XZ ENDP	; tinyxml2::XMLUnknown::ToUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToUnknown@XMLUnknown@tinyxml2@@UAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToUnknown@XMLUnknown@tinyxml2@@UAEPAV12@XZ PROC	; tinyxml2::XMLUnknown::ToUnknown, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1013
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1014
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; Line 1015
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?ToUnknown@XMLUnknown@tinyxml2@@UAEPAV12@XZ ENDP	; tinyxml2::XMLUnknown::ToUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GXMLDeclaration@tinyxml2@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GXMLDeclaration@tinyxml2@@MAEPAXI@Z PROC		; tinyxml2::XMLDeclaration::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1XMLDeclaration@tinyxml2@@MAE@XZ ; tinyxml2::XMLDeclaration::~XMLDeclaration
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_GXMLDeclaration@tinyxml2@@MAEPAXI@Z ENDP		; tinyxml2::XMLDeclaration::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ParseDeep@XMLDeclaration@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
_TEXT	SEGMENT
_start$ = -20						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
___formal$ = 12						; size = 4
?ParseDeep@XMLDeclaration@tinyxml2@@MAEPADPADPAVStrPair@2@@Z PROC ; tinyxml2::XMLDeclaration::ParseDeep, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1154
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1156
  00023	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00026	89 45 ec	 mov	 DWORD PTR _start$[ebp], eax
; Line 1157
  00029	6a 02		 push	 2
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_02GOEMJPDN@?$DP?$DO?$AA@
  00030	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00033	50		 push	 eax
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0003a	e8 00 00 00 00	 call	 ?ParseText@StrPair@tinyxml2@@QAEPADPADPBDH@Z ; tinyxml2::StrPair::ParseText
  0003f	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1158
  00042	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00046	75 13		 jne	 SHORT $LN1@ParseDeep
; Line 1159
  00048	6a 00		 push	 0
  0004a	8b 45 ec	 mov	 eax, DWORD PTR _start$[ebp]
  0004d	50		 push	 eax
  0004e	6a 0d		 push	 13			; 0000000dH
  00050	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00056	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
$LN1@ParseDeep:
; Line 1161
  0005b	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
; Line 1162
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00067	3b ec		 cmp	 ebp, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 08 00	 ret	 8
?ParseDeep@XMLDeclaration@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ENDP ; tinyxml2::XMLDeclaration::ParseDeep
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1XMLDeclaration@tinyxml2@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1XMLDeclaration@tinyxml2@@MAE@XZ PROC			; tinyxml2::XMLDeclaration::~XMLDeclaration, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1148
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLDeclaration@tinyxml2@@6B@
; Line 1150
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1XMLNode@tinyxml2@@MAE@XZ ; tinyxml2::XMLNode::~XMLNode
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??1XMLDeclaration@tinyxml2@@MAE@XZ ENDP			; tinyxml2::XMLDeclaration::~XMLDeclaration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0XMLDeclaration@tinyxml2@@IAE@PAVXMLDocument@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_doc$ = 8						; size = 4
??0XMLDeclaration@tinyxml2@@IAE@PAVXMLDocument@1@@Z PROC ; tinyxml2::XMLDeclaration::XMLDeclaration, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1143
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _doc$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0XMLNode@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLNode::XMLNode
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLDeclaration@tinyxml2@@6B@
; Line 1144
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0XMLDeclaration@tinyxml2@@IAE@PAVXMLDocument@1@@Z ENDP ; tinyxml2::XMLDeclaration::XMLDeclaration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShallowEqual@XMLDeclaration@tinyxml2@@UBE_NPBVXMLNode@2@@Z
_TEXT	SEGMENT
tv88 = -220						; size = 4
_declaration$ = -20					; size = 4
_this$ = -8						; size = 4
_compare$ = 8						; size = 4
?ShallowEqual@XMLDeclaration@tinyxml2@@UBE_NPBVXMLNode@2@@Z PROC ; tinyxml2::XMLDeclaration::ShallowEqual, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1176
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1177
  00023	83 7d 08 00	 cmp	 DWORD PTR _compare$[ebp], 0
  00027	75 01		 jne	 SHORT $LN1@ShallowEqu
  00029	cc		 int	 3
$LN1@ShallowEqu:
; Line 1178
  0002a	8b 45 08	 mov	 eax, DWORD PTR _compare$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	8b f4		 mov	 esi, esp
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _compare$[ebp]
  00034	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00037	ff d0		 call	 eax
  00039	3b f4		 cmp	 esi, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	89 45 ec	 mov	 DWORD PTR _declaration$[ebp], eax
; Line 1179
  00043	83 7d ec 00	 cmp	 DWORD PTR _declaration$[ebp], 0
  00047	74 32		 je	 SHORT $LN4@ShallowEqu
  00049	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  0004e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  00056	50		 push	 eax
  00057	8b 4d ec	 mov	 ecx, DWORD PTR _declaration$[ebp]
  0005a	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
  00068	0f b6 c0	 movzx	 eax, al
  0006b	85 c0		 test	 eax, eax
  0006d	74 0c		 je	 SHORT $LN4@ShallowEqu
  0006f	c7 85 24 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv88[ebp], 1
  00079	eb 0a		 jmp	 SHORT $LN5@ShallowEqu
$LN4@ShallowEqu:
  0007b	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv88[ebp], 0
$LN5@ShallowEqu:
  00085	8a 85 24 ff ff
	ff		 mov	 al, BYTE PTR tv88[ebp]
; Line 1180
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
?ShallowEqual@XMLDeclaration@tinyxml2@@UBE_NPBVXMLNode@2@@Z ENDP ; tinyxml2::XMLDeclaration::ShallowEqual
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShallowClone@XMLDeclaration@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z
_TEXT	SEGMENT
_dec$ = -20						; size = 4
_this$ = -8						; size = 4
_doc$ = 8						; size = 4
?ShallowClone@XMLDeclaration@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z PROC ; tinyxml2::XMLDeclaration::ShallowClone, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1166
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1167
  00023	83 7d 08 00	 cmp	 DWORD PTR _doc$[ebp], 0
  00027	75 09		 jne	 SHORT $LN1@ShallowClo
; Line 1168
  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002f	89 4d 08	 mov	 DWORD PTR _doc$[ebp], ecx
$LN1@ShallowClo:
; Line 1170
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _doc$[ebp]
  0003e	e8 00 00 00 00	 call	 ?NewDeclaration@XMLDocument@tinyxml2@@QAEPAVXMLDeclaration@2@PBD@Z ; tinyxml2::XMLDocument::NewDeclaration
  00043	89 45 ec	 mov	 DWORD PTR _dec$[ebp], eax
; Line 1171
  00046	8b 45 ec	 mov	 eax, DWORD PTR _dec$[ebp]
; Line 1172
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?ShallowClone@XMLDeclaration@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z ENDP ; tinyxml2::XMLDeclaration::ShallowClone
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Accept@XMLDeclaration@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@XMLDeclaration@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z PROC ; tinyxml2::XMLDeclaration::Accept, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1185
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1186
  00023	83 7d 08 00	 cmp	 DWORD PTR _visitor$[ebp], 0
  00027	75 01		 jne	 SHORT $LN1@Accept
  00029	cc		 int	 3
$LN1@Accept:
; Line 1187
  0002a	8b f4		 mov	 esi, esp
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  00038	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0003b	ff d0		 call	 eax
  0003d	3b f4		 cmp	 esi, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1188
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?Accept@XMLDeclaration@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ENDP ; tinyxml2::XMLDeclaration::Accept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToDeclaration@XMLDeclaration@tinyxml2@@UBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDeclaration@XMLDeclaration@tinyxml2@@UBEPBV12@XZ PROC ; tinyxml2::XMLDeclaration::ToDeclaration, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 981
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 982
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; Line 983
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?ToDeclaration@XMLDeclaration@tinyxml2@@UBEPBV12@XZ ENDP ; tinyxml2::XMLDeclaration::ToDeclaration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToDeclaration@XMLDeclaration@tinyxml2@@UAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDeclaration@XMLDeclaration@tinyxml2@@UAEPAV12@XZ PROC ; tinyxml2::XMLDeclaration::ToDeclaration, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 978
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 979
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; Line 980
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?ToDeclaration@XMLDeclaration@tinyxml2@@UAEPAV12@XZ ENDP ; tinyxml2::XMLDeclaration::ToDeclaration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GXMLComment@tinyxml2@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GXMLComment@tinyxml2@@MAEPAXI@Z PROC			; tinyxml2::XMLComment::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1XMLComment@tinyxml2@@MAE@XZ ; tinyxml2::XMLComment::~XMLComment
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_GXMLComment@tinyxml2@@MAEPAXI@Z ENDP			; tinyxml2::XMLComment::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ParseDeep@XMLComment@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
_TEXT	SEGMENT
_start$ = -20						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
___formal$ = 12						; size = 4
?ParseDeep@XMLComment@tinyxml2@@MAEPADPADPAVStrPair@2@@Z PROC ; tinyxml2::XMLComment::ParseDeep, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1104
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1106
  00023	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00026	89 45 ec	 mov	 DWORD PTR _start$[ebp], eax
; Line 1107
  00029	6a 02		 push	 2
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_03PNLDJJMO@?9?9?$DO?$AA@
  00030	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00033	50		 push	 eax
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0003a	e8 00 00 00 00	 call	 ?ParseText@StrPair@tinyxml2@@QAEPADPADPBDH@Z ; tinyxml2::StrPair::ParseText
  0003f	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1108
  00042	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00046	75 13		 jne	 SHORT $LN1@ParseDeep
; Line 1109
  00048	6a 00		 push	 0
  0004a	8b 45 ec	 mov	 eax, DWORD PTR _start$[ebp]
  0004d	50		 push	 eax
  0004e	6a 0c		 push	 12			; 0000000cH
  00050	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00056	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
$LN1@ParseDeep:
; Line 1111
  0005b	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
; Line 1112
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00067	3b ec		 cmp	 ebp, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 08 00	 ret	 8
?ParseDeep@XMLComment@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ENDP ; tinyxml2::XMLComment::ParseDeep
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1XMLComment@tinyxml2@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1XMLComment@tinyxml2@@MAE@XZ PROC			; tinyxml2::XMLComment::~XMLComment, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1099
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLComment@tinyxml2@@6B@
; Line 1100
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1XMLNode@tinyxml2@@MAE@XZ ; tinyxml2::XMLNode::~XMLNode
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??1XMLComment@tinyxml2@@MAE@XZ ENDP			; tinyxml2::XMLComment::~XMLComment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0XMLComment@tinyxml2@@IAE@PAVXMLDocument@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_doc$ = 8						; size = 4
??0XMLComment@tinyxml2@@IAE@PAVXMLDocument@1@@Z PROC	; tinyxml2::XMLComment::XMLComment, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1094
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _doc$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0XMLNode@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLNode::XMLNode
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLComment@tinyxml2@@6B@
; Line 1095
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00044	3b ec		 cmp	 ebp, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
??0XMLComment@tinyxml2@@IAE@PAVXMLDocument@1@@Z ENDP	; tinyxml2::XMLComment::XMLComment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShallowEqual@XMLComment@tinyxml2@@UBE_NPBVXMLNode@2@@Z
_TEXT	SEGMENT
tv88 = -220						; size = 4
_comment$ = -20						; size = 4
_this$ = -8						; size = 4
_compare$ = 8						; size = 4
?ShallowEqual@XMLComment@tinyxml2@@UBE_NPBVXMLNode@2@@Z PROC ; tinyxml2::XMLComment::ShallowEqual, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1126
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1127
  00023	83 7d 08 00	 cmp	 DWORD PTR _compare$[ebp], 0
  00027	75 01		 jne	 SHORT $LN1@ShallowEqu
  00029	cc		 int	 3
$LN1@ShallowEqu:
; Line 1128
  0002a	8b 45 08	 mov	 eax, DWORD PTR _compare$[ebp]
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	8b f4		 mov	 esi, esp
  00031	8b 4d 08	 mov	 ecx, DWORD PTR _compare$[ebp]
  00034	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00037	ff d0		 call	 eax
  00039	3b f4		 cmp	 esi, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	89 45 ec	 mov	 DWORD PTR _comment$[ebp], eax
; Line 1129
  00043	83 7d ec 00	 cmp	 DWORD PTR _comment$[ebp], 0
  00047	74 32		 je	 SHORT $LN4@ShallowEqu
  00049	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  0004e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  00056	50		 push	 eax
  00057	8b 4d ec	 mov	 ecx, DWORD PTR _comment$[ebp]
  0005a	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
  00068	0f b6 c0	 movzx	 eax, al
  0006b	85 c0		 test	 eax, eax
  0006d	74 0c		 je	 SHORT $LN4@ShallowEqu
  0006f	c7 85 24 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv88[ebp], 1
  00079	eb 0a		 jmp	 SHORT $LN5@ShallowEqu
$LN4@ShallowEqu:
  0007b	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv88[ebp], 0
$LN5@ShallowEqu:
  00085	8a 85 24 ff ff
	ff		 mov	 al, BYTE PTR tv88[ebp]
; Line 1130
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
?ShallowEqual@XMLComment@tinyxml2@@UBE_NPBVXMLNode@2@@Z ENDP ; tinyxml2::XMLComment::ShallowEqual
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShallowClone@XMLComment@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z
_TEXT	SEGMENT
_comment$ = -20						; size = 4
_this$ = -8						; size = 4
_doc$ = 8						; size = 4
?ShallowClone@XMLComment@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z PROC ; tinyxml2::XMLComment::ShallowClone, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1116
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1117
  00023	83 7d 08 00	 cmp	 DWORD PTR _doc$[ebp], 0
  00027	75 09		 jne	 SHORT $LN1@ShallowClo
; Line 1118
  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002f	89 4d 08	 mov	 DWORD PTR _doc$[ebp], ecx
$LN1@ShallowClo:
; Line 1120
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _doc$[ebp]
  0003e	e8 00 00 00 00	 call	 ?NewComment@XMLDocument@tinyxml2@@QAEPAVXMLComment@2@PBD@Z ; tinyxml2::XMLDocument::NewComment
  00043	89 45 ec	 mov	 DWORD PTR _comment$[ebp], eax
; Line 1121
  00046	8b 45 ec	 mov	 eax, DWORD PTR _comment$[ebp]
; Line 1122
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?ShallowClone@XMLComment@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z ENDP ; tinyxml2::XMLComment::ShallowClone
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Accept@XMLComment@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@XMLComment@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z PROC ; tinyxml2::XMLComment::Accept, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1134
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1135
  00023	83 7d 08 00	 cmp	 DWORD PTR _visitor$[ebp], 0
  00027	75 01		 jne	 SHORT $LN1@Accept
  00029	cc		 int	 3
$LN1@Accept:
; Line 1136
  0002a	8b f4		 mov	 esi, esp
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  00038	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0003b	ff d0		 call	 eax
  0003d	3b f4		 cmp	 esi, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1137
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?Accept@XMLComment@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ENDP ; tinyxml2::XMLComment::Accept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToComment@XMLComment@tinyxml2@@UBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToComment@XMLComment@tinyxml2@@UBEPBV12@XZ PROC	; tinyxml2::XMLComment::ToComment, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 942
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 943
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; Line 944
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?ToComment@XMLComment@tinyxml2@@UBEPBV12@XZ ENDP	; tinyxml2::XMLComment::ToComment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToComment@XMLComment@tinyxml2@@UAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToComment@XMLComment@tinyxml2@@UAEPAV12@XZ PROC	; tinyxml2::XMLComment::ToComment, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 939
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 940
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; Line 941
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?ToComment@XMLComment@tinyxml2@@UAEPAV12@XZ ENDP	; tinyxml2::XMLComment::ToComment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GXMLText@tinyxml2@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GXMLText@tinyxml2@@MAEPAXI@Z PROC			; tinyxml2::XMLText::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1XMLText@tinyxml2@@MAE@XZ ; tinyxml2::XMLText::~XMLText
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_GXMLText@tinyxml2@@MAEPAXI@Z ENDP			; tinyxml2::XMLText::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ParseDeep@XMLText@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
_TEXT	SEGMENT
tv129 = -232						; size = 4
_flags$1 = -32						; size = 4
_start$ = -20						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
___formal$ = 12						; size = 4
?ParseDeep@XMLText@tinyxml2@@MAEPADPADPAVStrPair@2@@Z PROC ; tinyxml2::XMLText::ParseDeep, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1039
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1040
  00023	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00026	89 45 ec	 mov	 DWORD PTR _start$[ebp], eax
; Line 1041
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?CData@XMLText@tinyxml2@@QBE_NXZ ; tinyxml2::XMLText::CData
  00031	0f b6 c0	 movzx	 eax, al
  00034	85 c0		 test	 eax, eax
  00036	74 3f		 je	 SHORT $LN6@ParseDeep
; Line 1042
  00038	6a 02		 push	 2
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_03MCHNFBAC@?$FN?$FN?$DO?$AA@
  0003f	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00042	50		 push	 eax
  00043	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00049	e8 00 00 00 00	 call	 ?ParseText@StrPair@tinyxml2@@QAEPADPADPBDH@Z ; tinyxml2::StrPair::ParseText
  0004e	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1043
  00051	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00055	75 13		 jne	 SHORT $LN5@ParseDeep
; Line 1044
  00057	6a 00		 push	 0
  00059	8b 45 ec	 mov	 eax, DWORD PTR _start$[ebp]
  0005c	50		 push	 eax
  0005d	6a 0b		 push	 11			; 0000000bH
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00065	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
$LN5@ParseDeep:
; Line 1046
  0006a	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0006d	e9 9d 00 00 00	 jmp	 $LN7@ParseDeep
; Line 1048
  00072	e9 96 00 00 00	 jmp	 $LN4@ParseDeep
$LN6@ParseDeep:
; Line 1049
  00077	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007d	e8 00 00 00 00	 call	 ?ProcessEntities@XMLDocument@tinyxml2@@QBE_NXZ ; tinyxml2::XMLDocument::ProcessEntities
  00082	0f b6 c8	 movzx	 ecx, al
  00085	85 c9		 test	 ecx, ecx
  00087	74 0c		 je	 SHORT $LN9@ParseDeep
  00089	c7 85 18 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv129[ebp], 3
  00093	eb 0a		 jmp	 SHORT $LN10@ParseDeep
$LN9@ParseDeep:
  00095	c7 85 18 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv129[ebp], 2
$LN10@ParseDeep:
  0009f	8b 95 18 ff ff
	ff		 mov	 edx, DWORD PTR tv129[ebp]
  000a5	89 55 e0	 mov	 DWORD PTR _flags$1[ebp], edx
; Line 1050
  000a8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ab	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ae	e8 00 00 00 00	 call	 ?WhitespaceMode@XMLDocument@tinyxml2@@QBE?AW4Whitespace@2@XZ ; tinyxml2::XMLDocument::WhitespaceMode
  000b3	83 f8 01	 cmp	 eax, 1
  000b6	75 09		 jne	 SHORT $LN3@ParseDeep
; Line 1051
  000b8	8b 45 e0	 mov	 eax, DWORD PTR _flags$1[ebp]
  000bb	83 c8 04	 or	 eax, 4
  000be	89 45 e0	 mov	 DWORD PTR _flags$1[ebp], eax
$LN3@ParseDeep:
; Line 1054
  000c1	8b 45 e0	 mov	 eax, DWORD PTR _flags$1[ebp]
  000c4	50		 push	 eax
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_01MNNFJEPP@?$DM?$AA@
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  000cd	51		 push	 ecx
  000ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000d4	e8 00 00 00 00	 call	 ?ParseText@StrPair@tinyxml2@@QAEPADPADPBDH@Z ; tinyxml2::StrPair::ParseText
  000d9	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 1055
  000dc	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  000e0	74 12		 je	 SHORT $LN2@ParseDeep
  000e2	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000e5	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000e8	85 c9		 test	 ecx, ecx
  000ea	74 08		 je	 SHORT $LN2@ParseDeep
; Line 1056
  000ec	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000ef	83 e8 01	 sub	 eax, 1
  000f2	eb 1b		 jmp	 SHORT $LN7@ParseDeep
$LN2@ParseDeep:
; Line 1058
  000f4	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  000f8	75 13		 jne	 SHORT $LN4@ParseDeep
; Line 1059
  000fa	6a 00		 push	 0
  000fc	8b 45 ec	 mov	 eax, DWORD PTR _start$[ebp]
  000ff	50		 push	 eax
  00100	6a 0a		 push	 10			; 0000000aH
  00102	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00108	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
$LN4@ParseDeep:
; Line 1062
  0010d	33 c0		 xor	 eax, eax
$LN7@ParseDeep:
; Line 1063
  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	5b		 pop	 ebx
  00112	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  00118	3b ec		 cmp	 ebp, esp
  0011a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c2 08 00	 ret	 8
?ParseDeep@XMLText@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ENDP ; tinyxml2::XMLText::ParseDeep
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1XMLText@tinyxml2@@MAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1XMLText@tinyxml2@@MAE@XZ PROC			; tinyxml2::XMLText::~XMLText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 922
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLText@tinyxml2@@6B@
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??1XMLNode@tinyxml2@@MAE@XZ ; tinyxml2::XMLNode::~XMLNode
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??1XMLText@tinyxml2@@MAE@XZ ENDP			; tinyxml2::XMLText::~XMLText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0XMLText@tinyxml2@@IAE@PAVXMLDocument@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_doc$ = 8						; size = 4
??0XMLText@tinyxml2@@IAE@PAVXMLDocument@1@@Z PROC	; tinyxml2::XMLText::XMLText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 921
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _doc$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0XMLNode@tinyxml2@@IAE@PAVXMLDocument@1@@Z ; tinyxml2::XMLNode::XMLNode
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLText@tinyxml2@@6B@
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	c6 40 2c 00	 mov	 BYTE PTR [eax+44], 0
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??0XMLText@tinyxml2@@IAE@PAVXMLDocument@1@@Z ENDP	; tinyxml2::XMLText::XMLText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShallowEqual@XMLText@tinyxml2@@UBE_NPBVXMLNode@2@@Z
_TEXT	SEGMENT
tv87 = -220						; size = 4
_text$ = -20						; size = 4
_this$ = -8						; size = 4
_compare$ = 8						; size = 4
?ShallowEqual@XMLText@tinyxml2@@UBE_NPBVXMLNode@2@@Z PROC ; tinyxml2::XMLText::ShallowEqual, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1078
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1079
  00023	8b 45 08	 mov	 eax, DWORD PTR _compare$[ebp]
  00026	8b 10		 mov	 edx, DWORD PTR [eax]
  00028	8b f4		 mov	 esi, esp
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _compare$[ebp]
  0002d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00030	ff d0		 call	 eax
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	89 45 ec	 mov	 DWORD PTR _text$[ebp], eax
; Line 1080
  0003c	83 7d ec 00	 cmp	 DWORD PTR _text$[ebp], 0
  00040	74 32		 je	 SHORT $LN3@ShallowEqu
  00042	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0004f	50		 push	 eax
  00050	8b 4d ec	 mov	 ecx, DWORD PTR _text$[ebp]
  00053	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	0f b6 c0	 movzx	 eax, al
  00064	85 c0		 test	 eax, eax
  00066	74 0c		 je	 SHORT $LN3@ShallowEqu
  00068	c7 85 24 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv87[ebp], 1
  00072	eb 0a		 jmp	 SHORT $LN4@ShallowEqu
$LN3@ShallowEqu:
  00074	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv87[ebp], 0
$LN4@ShallowEqu:
  0007e	8a 85 24 ff ff
	ff		 mov	 al, BYTE PTR tv87[ebp]
; Line 1081
  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx
  00087	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0008d	3b ec		 cmp	 ebp, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 04 00	 ret	 4
?ShallowEqual@XMLText@tinyxml2@@UBE_NPBVXMLNode@2@@Z ENDP ; tinyxml2::XMLText::ShallowEqual
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShallowClone@XMLText@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z
_TEXT	SEGMENT
_text$ = -20						; size = 4
_this$ = -8						; size = 4
_doc$ = 8						; size = 4
?ShallowClone@XMLText@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z PROC ; tinyxml2::XMLText::ShallowClone, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1067
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1068
  00023	83 7d 08 00	 cmp	 DWORD PTR _doc$[ebp], 0
  00027	75 09		 jne	 SHORT $LN1@ShallowClo
; Line 1069
  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002f	89 4d 08	 mov	 DWORD PTR _doc$[ebp], ecx
$LN1@ShallowClo:
; Line 1071
  00032	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR _doc$[ebp]
  0003e	e8 00 00 00 00	 call	 ?NewText@XMLDocument@tinyxml2@@QAEPAVXMLText@2@PBD@Z ; tinyxml2::XMLDocument::NewText
  00043	89 45 ec	 mov	 DWORD PTR _text$[ebp], eax
; Line 1072
  00046	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?CData@XMLText@tinyxml2@@QBE_NXZ ; tinyxml2::XMLText::CData
  0004e	0f b6 c0	 movzx	 eax, al
  00051	50		 push	 eax
  00052	8b 4d ec	 mov	 ecx, DWORD PTR _text$[ebp]
  00055	e8 00 00 00 00	 call	 ?SetCData@XMLText@tinyxml2@@QAEX_N@Z ; tinyxml2::XMLText::SetCData
; Line 1073
  0005a	8b 45 ec	 mov	 eax, DWORD PTR _text$[ebp]
; Line 1074
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
?ShallowClone@XMLText@tinyxml2@@UBEPAVXMLNode@2@PAVXMLDocument@2@@Z ENDP ; tinyxml2::XMLText::ShallowClone
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CData@XMLText@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?CData@XMLText@tinyxml2@@QBE_NXZ PROC			; tinyxml2::XMLText::CData, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 913
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 914
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8a 40 2c	 mov	 al, BYTE PTR [eax+44]
; Line 915
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?CData@XMLText@tinyxml2@@QBE_NXZ ENDP			; tinyxml2::XMLText::CData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCData@XMLText@tinyxml2@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_isCData$ = 8						; size = 1
?SetCData@XMLText@tinyxml2@@QAEX_N@Z PROC		; tinyxml2::XMLText::SetCData, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 909
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 910
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8a 4d 08	 mov	 cl, BYTE PTR _isCData$[ebp]
  00029	88 48 2c	 mov	 BYTE PTR [eax+44], cl
; Line 911
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?SetCData@XMLText@tinyxml2@@QAEX_N@Z ENDP		; tinyxml2::XMLText::SetCData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToText@XMLText@tinyxml2@@UBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToText@XMLText@tinyxml2@@UBEPBV12@XZ PROC		; tinyxml2::XMLText::ToText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 904
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 905
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; Line 906
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?ToText@XMLText@tinyxml2@@UBEPBV12@XZ ENDP		; tinyxml2::XMLText::ToText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToText@XMLText@tinyxml2@@UAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToText@XMLText@tinyxml2@@UAEPAV12@XZ PROC		; tinyxml2::XMLText::ToText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 901
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 902
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; Line 903
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?ToText@XMLText@tinyxml2@@UAEPAV12@XZ ENDP		; tinyxml2::XMLText::ToText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Accept@XMLText@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@XMLText@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z PROC	; tinyxml2::XMLText::Accept, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1085
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1086
  00023	83 7d 08 00	 cmp	 DWORD PTR _visitor$[ebp], 0
  00027	75 01		 jne	 SHORT $LN1@Accept
  00029	cc		 int	 3
$LN1@Accept:
; Line 1087
  0002a	8b f4		 mov	 esi, esp
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	8b 4d 08	 mov	 ecx, DWORD PTR _visitor$[ebp]
  00038	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0003b	ff d0		 call	 eax
  0003d	3b f4		 cmp	 esi, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1088
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?Accept@XMLText@tinyxml2@@UBE_NPAVXMLVisitor@2@@Z ENDP	; tinyxml2::XMLText::Accept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GXMLNode@tinyxml2@@MAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GXMLNode@tinyxml2@@MAEPAXI@Z PROC			; tinyxml2::XMLNode::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1XMLNode@tinyxml2@@MAE@XZ ; tinyxml2::XMLNode::~XMLNode
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_GXMLNode@tinyxml2@@MAEPAXI@Z ENDP			; tinyxml2::XMLNode::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InsertChildPreamble@XMLNode@tinyxml2@@ABEXPAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_insertThis$ = 8					; size = 4
?InsertChildPreamble@XMLNode@tinyxml2@@ABEXPAV12@@Z PROC ; tinyxml2::XMLNode::InsertChildPreamble, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1027
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1028
  00023	83 7d 08 00	 cmp	 DWORD PTR _insertThis$[ebp], 0
  00027	75 01		 jne	 SHORT $LN4@InsertChil
  00029	cc		 int	 3
$LN4@InsertChil:
; Line 1029
  0002a	8b 45 08	 mov	 eax, DWORD PTR _insertThis$[ebp]
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00033	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00036	74 01		 je	 SHORT $LN3@InsertChil
  00038	cc		 int	 3
$LN3@InsertChil:
; Line 1031
  00039	8b 45 08	 mov	 eax, DWORD PTR _insertThis$[ebp]
  0003c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00040	74 11		 je	 SHORT $LN2@InsertChil
; Line 1032
  00042	8b 45 08	 mov	 eax, DWORD PTR _insertThis$[ebp]
  00045	50		 push	 eax
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _insertThis$[ebp]
  00049	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0004c	e8 00 00 00 00	 call	 ?Unlink@XMLNode@tinyxml2@@AAEXPAV12@@Z ; tinyxml2::XMLNode::Unlink
; Line 1033
  00051	eb 1c		 jmp	 SHORT $LN5@InsertChil
$LN2@InsertChil:
; Line 1034
  00053	8b 45 08	 mov	 eax, DWORD PTR _insertThis$[ebp]
  00056	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00059	8b 55 08	 mov	 edx, DWORD PTR _insertThis$[ebp]
  0005c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0005e	8b f4		 mov	 esi, esp
  00060	8b 4a 28	 mov	 ecx, DWORD PTR [edx+40]
  00063	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00066	ff d2		 call	 edx
  00068	3b f4		 cmp	 esi, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@InsertChil:
; Line 1035
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00078	3b ec		 cmp	 ebp, esp
  0007a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
?InsertChildPreamble@XMLNode@tinyxml2@@ABEXPAV12@@Z ENDP ; tinyxml2::XMLNode::InsertChildPreamble
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DeleteNode@XMLNode@tinyxml2@@CAXPAV12@@Z
_TEXT	SEGMENT
_pool$ = -8						; size = 4
_node$ = 8						; size = 4
?DeleteNode@XMLNode@tinyxml2@@CAXPAV12@@Z PROC		; tinyxml2::XMLNode::DeleteNode, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 1017
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1018
  0001e	83 7d 08 00	 cmp	 DWORD PTR _node$[ebp], 0
  00022	75 02		 jne	 SHORT $LN1@DeleteNode
; Line 1019
  00024	eb 3b		 jmp	 SHORT $LN2@DeleteNode
$LN1@DeleteNode:
; Line 1021
  00026	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  00029	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0002c	89 4d f8	 mov	 DWORD PTR _pool$[ebp], ecx
; Line 1022
  0002f	8b f4		 mov	 esi, esp
  00031	6a 00		 push	 0
  00033	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  00036	8b 10		 mov	 edx, DWORD PTR [eax]
  00038	8b 4d 08	 mov	 ecx, DWORD PTR _node$[ebp]
  0003b	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0003e	ff d0		 call	 eax
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1023
  00047	8b f4		 mov	 esi, esp
  00049	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _pool$[ebp]
  00050	8b 11		 mov	 edx, DWORD PTR [ecx]
  00052	8b 4d f8	 mov	 ecx, DWORD PTR _pool$[ebp]
  00055	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00058	ff d0		 call	 eax
  0005a	3b f4		 cmp	 esi, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@DeleteNode:
; Line 1024
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
?DeleteNode@XMLNode@tinyxml2@@CAXPAV12@@Z ENDP		; tinyxml2::XMLNode::DeleteNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Unlink@XMLNode@tinyxml2@@AAEXPAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_child$ = 8						; size = 4
?Unlink@XMLNode@tinyxml2@@AAEXPAV12@@Z PROC		; tinyxml2::XMLNode::Unlink, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 754
  00023	83 7d 08 00	 cmp	 DWORD PTR _child$[ebp], 0
  00027	75 01		 jne	 SHORT $LN7@Unlink
  00029	cc		 int	 3
$LN7@Unlink:
; Line 755
  0002a	8b 45 08	 mov	 eax, DWORD PTR _child$[ebp]
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00033	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00036	74 01		 je	 SHORT $LN6@Unlink
  00038	cc		 int	 3
$LN6@Unlink:
; Line 756
  00039	8b 45 08	 mov	 eax, DWORD PTR _child$[ebp]
  0003c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003f	3b 4d f8	 cmp	 ecx, DWORD PTR _this$[ebp]
  00042	74 01		 je	 SHORT $LN5@Unlink
  00044	cc		 int	 3
$LN5@Unlink:
; Line 757
  00045	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _child$[ebp]
  0004b	3b 48 18	 cmp	 ecx, DWORD PTR [eax+24]
  0004e	75 0f		 jne	 SHORT $LN4@Unlink
; Line 758
  00050	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00056	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00059	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  0005c	89 42 18	 mov	 DWORD PTR [edx+24], eax
$LN4@Unlink:
; Line 760
  0005f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 4d 08	 mov	 ecx, DWORD PTR _child$[ebp]
  00065	3b 48 1c	 cmp	 ecx, DWORD PTR [eax+28]
  00068	75 0f		 jne	 SHORT $LN3@Unlink
; Line 761
  0006a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00070	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00073	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00076	89 42 1c	 mov	 DWORD PTR [edx+28], eax
$LN3@Unlink:
; Line 764
  00079	8b 45 08	 mov	 eax, DWORD PTR _child$[ebp]
  0007c	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00080	74 0f		 je	 SHORT $LN2@Unlink
; Line 765
  00082	8b 45 08	 mov	 eax, DWORD PTR _child$[ebp]
  00085	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00088	8b 55 08	 mov	 edx, DWORD PTR _child$[ebp]
  0008b	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0008e	89 41 24	 mov	 DWORD PTR [ecx+36], eax
$LN2@Unlink:
; Line 767
  00091	8b 45 08	 mov	 eax, DWORD PTR _child$[ebp]
  00094	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  00098	74 0f		 je	 SHORT $LN1@Unlink
; Line 768
  0009a	8b 45 08	 mov	 eax, DWORD PTR _child$[ebp]
  0009d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000a0	8b 55 08	 mov	 edx, DWORD PTR _child$[ebp]
  000a3	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000a6	89 41 20	 mov	 DWORD PTR [ecx+32], eax
$LN1@Unlink:
; Line 770
  000a9	8b 45 08	 mov	 eax, DWORD PTR _child$[ebp]
  000ac	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 771
  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?Unlink@XMLNode@tinyxml2@@AAEXPAV12@@Z ENDP		; tinyxml2::XMLNode::Unlink
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
_TEXT	SEGMENT
$T2 = -296						; size = 4
_mismatch$3 = -89					; size = 1
_ele$4 = -80						; size = 4
_decl$5 = -68						; size = 4
_endTag$6 = -56						; size = 12
_node$7 = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_parentEnd$ = 12					; size = 4
?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z PROC ; tinyxml2::XMLNode::ParseDeep, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 930
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd d4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-300]
  00021	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
$LN17@ParseDeep:
; Line 948
  00045	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00049	0f 84 70 02 00
	00		 je	 $LN16@ParseDeep
  0004f	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00052	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00055	85 c9		 test	 ecx, ecx
  00057	0f 84 62 02 00
	00		 je	 $LN16@ParseDeep
; Line 949
  0005d	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _node$7[ebp], 0
; Line 951
  00064	8d 45 dc	 lea	 eax, DWORD PTR _node$7[ebp]
  00067	50		 push	 eax
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0006b	51		 push	 ecx
  0006c	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  0006f	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00072	e8 00 00 00 00	 call	 ?Identify@XMLDocument@tinyxml2@@QAEPADPADPAPAVXMLNode@2@@Z ; tinyxml2::XMLDocument::Identify
  00077	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 952
  0007a	83 7d dc 00	 cmp	 DWORD PTR _node$7[ebp], 0
  0007e	75 05		 jne	 SHORT $LN15@ParseDeep
; Line 953
  00080	e9 3a 02 00 00	 jmp	 $LN16@ParseDeep
$LN15@ParseDeep:
; Line 956
  00085	6a 0c		 push	 12			; 0000000cH
  00087	8d 4d c8	 lea	 ecx, DWORD PTR _endTag$6[ebp]
  0008a	e8 00 00 00 00	 call	 ?__autoclassinit2@StrPair@tinyxml2@@QAEXI@Z
  0008f	8d 4d c8	 lea	 ecx, DWORD PTR _endTag$6[ebp]
  00092	e8 00 00 00 00	 call	 ??0StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::StrPair
  00097	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 957
  0009e	8b f4		 mov	 esi, esp
  000a0	8d 45 c8	 lea	 eax, DWORD PTR _endTag$6[ebp]
  000a3	50		 push	 eax
  000a4	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  000a7	51		 push	 ecx
  000a8	8b 55 dc	 mov	 edx, DWORD PTR _node$7[ebp]
  000ab	8b 02		 mov	 eax, DWORD PTR [edx]
  000ad	8b 4d dc	 mov	 ecx, DWORD PTR _node$7[ebp]
  000b0	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  000b3	ff d2		 call	 edx
  000b5	3b f4		 cmp	 esi, esp
  000b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bc	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 958
  000bf	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  000c3	75 43		 jne	 SHORT $LN14@ParseDeep
; Line 959
  000c5	8b 45 dc	 mov	 eax, DWORD PTR _node$7[ebp]
  000c8	50		 push	 eax
  000c9	e8 00 00 00 00	 call	 ?DeleteNode@XMLNode@tinyxml2@@CAXPAV12@@Z ; tinyxml2::XMLNode::DeleteNode
  000ce	83 c4 04	 add	 esp, 4
; Line 960
  000d1	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000d7	e8 00 00 00 00	 call	 ?Error@XMLDocument@tinyxml2@@QBE_NXZ ; tinyxml2::XMLDocument::Error
  000dc	0f b6 c8	 movzx	 ecx, al
  000df	85 c9		 test	 ecx, ecx
  000e1	75 11		 jne	 SHORT $LN13@ParseDeep
; Line 961
  000e3	6a 00		 push	 0
  000e5	6a 00		 push	 0
  000e7	6a 11		 push	 17			; 00000011H
  000e9	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000ec	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ef	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
$LN13@ParseDeep:
; Line 963
  000f4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fb	8d 4d c8	 lea	 ecx, DWORD PTR _endTag$6[ebp]
  000fe	e8 00 00 00 00	 call	 ??1StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::~StrPair
  00103	e9 b7 01 00 00	 jmp	 $LN16@ParseDeep
$LN14@ParseDeep:
; Line 966
  00108	8b 45 dc	 mov	 eax, DWORD PTR _node$7[ebp]
  0010b	8b 10		 mov	 edx, DWORD PTR [eax]
  0010d	8b f4		 mov	 esi, esp
  0010f	8b 4d dc	 mov	 ecx, DWORD PTR _node$7[ebp]
  00112	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00115	ff d0		 call	 eax
  00117	3b f4		 cmp	 esi, esp
  00119	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011e	89 45 bc	 mov	 DWORD PTR _decl$5[ebp], eax
; Line 967
  00121	83 7d bc 00	 cmp	 DWORD PTR _decl$5[ebp], 0
  00125	74 4a		 je	 SHORT $LN12@ParseDeep
; Line 970
  00127	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0012a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0012d	e8 00 00 00 00	 call	 ?NoChildren@XMLNode@tinyxml2@@QBE_NXZ ; tinyxml2::XMLNode::NoChildren
  00132	0f b6 c8	 movzx	 ecx, al
  00135	85 c9		 test	 ecx, ecx
  00137	75 38		 jne	 SHORT $LN12@ParseDeep
; Line 971
  00139	6a 00		 push	 0
  0013b	8b 4d bc	 mov	 ecx, DWORD PTR _decl$5[ebp]
  0013e	e8 00 00 00 00	 call	 ?Value@XMLNode@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLNode::Value
  00143	50		 push	 eax
  00144	6a 0d		 push	 13			; 0000000dH
  00146	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00149	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0014c	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 972
  00151	8b 45 bc	 mov	 eax, DWORD PTR _decl$5[ebp]
  00154	50		 push	 eax
  00155	e8 00 00 00 00	 call	 ?DeleteNode@XMLNode@tinyxml2@@CAXPAV12@@Z ; tinyxml2::XMLNode::DeleteNode
  0015a	83 c4 04	 add	 esp, 4
; Line 973
  0015d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00164	8d 4d c8	 lea	 ecx, DWORD PTR _endTag$6[ebp]
  00167	e8 00 00 00 00	 call	 ??1StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::~StrPair
  0016c	e9 4e 01 00 00	 jmp	 $LN16@ParseDeep
$LN12@ParseDeep:
; Line 977
  00171	8b 45 dc	 mov	 eax, DWORD PTR _node$7[ebp]
  00174	8b 10		 mov	 edx, DWORD PTR [eax]
  00176	8b f4		 mov	 esi, esp
  00178	8b 4d dc	 mov	 ecx, DWORD PTR _node$7[ebp]
  0017b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0017e	ff d0		 call	 eax
  00180	3b f4		 cmp	 esi, esp
  00182	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00187	89 45 b0	 mov	 DWORD PTR _ele$4[ebp], eax
; Line 978
  0018a	83 7d b0 00	 cmp	 DWORD PTR _ele$4[ebp], 0
  0018e	0f 84 0b 01 00
	00		 je	 $LN10@ParseDeep
; Line 980
  00194	8b 4d b0	 mov	 ecx, DWORD PTR _ele$4[ebp]
  00197	e8 00 00 00 00	 call	 ?ClosingType@XMLElement@tinyxml2@@QBEHXZ ; tinyxml2::XMLElement::ClosingType
  0019c	83 f8 02	 cmp	 eax, 2
  0019f	75 60		 jne	 SHORT $LN9@ParseDeep
; Line 981
  001a1	83 7d 0c 00	 cmp	 DWORD PTR _parentEnd$[ebp], 0
  001a5	74 0f		 je	 SHORT $LN8@ParseDeep
; Line 982
  001a7	8b 45 0c	 mov	 eax, DWORD PTR _parentEnd$[ebp]
  001aa	50		 push	 eax
  001ab	8b 4d b0	 mov	 ecx, DWORD PTR _ele$4[ebp]
  001ae	83 c1 0c	 add	 ecx, 12			; 0000000cH
  001b1	e8 00 00 00 00	 call	 ?TransferTo@StrPair@tinyxml2@@QAEXPAV12@@Z ; tinyxml2::StrPair::TransferTo
$LN8@ParseDeep:
; Line 984
  001b6	8b 45 dc	 mov	 eax, DWORD PTR _node$7[ebp]
  001b9	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  001bc	8b 55 dc	 mov	 edx, DWORD PTR _node$7[ebp]
  001bf	8b 01		 mov	 eax, DWORD PTR [ecx]
  001c1	8b f4		 mov	 esi, esp
  001c3	8b 4a 28	 mov	 ecx, DWORD PTR [edx+40]
  001c6	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  001c9	ff d2		 call	 edx
  001cb	3b f4		 cmp	 esi, esp
  001cd	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 985
  001d2	8b 45 dc	 mov	 eax, DWORD PTR _node$7[ebp]
  001d5	50		 push	 eax
  001d6	e8 00 00 00 00	 call	 ?DeleteNode@XMLNode@tinyxml2@@CAXPAV12@@Z ; tinyxml2::XMLNode::DeleteNode
  001db	83 c4 04	 add	 esp, 4
; Line 986
  001de	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  001e1	89 85 d8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  001e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001ee	8d 4d c8	 lea	 ecx, DWORD PTR _endTag$6[ebp]
  001f1	e8 00 00 00 00	 call	 ??1StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::~StrPair
  001f6	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  001fc	e9 c0 00 00 00	 jmp	 $LN18@ParseDeep
$LN9@ParseDeep:
; Line 991
  00201	c6 45 a7 00	 mov	 BYTE PTR _mismatch$3[ebp], 0
; Line 992
  00205	8d 4d c8	 lea	 ecx, DWORD PTR _endTag$6[ebp]
  00208	e8 00 00 00 00	 call	 ?Empty@StrPair@tinyxml2@@QBE_NXZ ; tinyxml2::StrPair::Empty
  0020d	0f b6 c0	 movzx	 eax, al
  00210	85 c0		 test	 eax, eax
  00212	74 12		 je	 SHORT $LN7@ParseDeep
; Line 993
  00214	8b 4d b0	 mov	 ecx, DWORD PTR _ele$4[ebp]
  00217	e8 00 00 00 00	 call	 ?ClosingType@XMLElement@tinyxml2@@QBEHXZ ; tinyxml2::XMLElement::ClosingType
  0021c	85 c0		 test	 eax, eax
  0021e	75 04		 jne	 SHORT $LN6@ParseDeep
; Line 994
  00220	c6 45 a7 01	 mov	 BYTE PTR _mismatch$3[ebp], 1
$LN6@ParseDeep:
; Line 997
  00224	eb 3c		 jmp	 SHORT $LN5@ParseDeep
$LN7@ParseDeep:
; Line 998
  00226	8b 4d b0	 mov	 ecx, DWORD PTR _ele$4[ebp]
  00229	e8 00 00 00 00	 call	 ?ClosingType@XMLElement@tinyxml2@@QBEHXZ ; tinyxml2::XMLElement::ClosingType
  0022e	85 c0		 test	 eax, eax
  00230	74 06		 je	 SHORT $LN4@ParseDeep
; Line 999
  00232	c6 45 a7 01	 mov	 BYTE PTR _mismatch$3[ebp], 1
  00236	eb 2a		 jmp	 SHORT $LN5@ParseDeep
$LN4@ParseDeep:
; Line 1001
  00238	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  0023d	8b 4d b0	 mov	 ecx, DWORD PTR _ele$4[ebp]
  00240	e8 00 00 00 00	 call	 ?Name@XMLElement@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLElement::Name
  00245	50		 push	 eax
  00246	8d 4d c8	 lea	 ecx, DWORD PTR _endTag$6[ebp]
  00249	e8 00 00 00 00	 call	 ?GetStr@StrPair@tinyxml2@@QAEPBDXZ ; tinyxml2::StrPair::GetStr
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00254	83 c4 0c	 add	 esp, 12			; 0000000cH
  00257	0f b6 c0	 movzx	 eax, al
  0025a	85 c0		 test	 eax, eax
  0025c	75 04		 jne	 SHORT $LN5@ParseDeep
; Line 1002
  0025e	c6 45 a7 01	 mov	 BYTE PTR _mismatch$3[ebp], 1
$LN5@ParseDeep:
; Line 1005
  00262	0f b6 45 a7	 movzx	 eax, BYTE PTR _mismatch$3[ebp]
  00266	85 c0		 test	 eax, eax
  00268	74 35		 je	 SHORT $LN10@ParseDeep
; Line 1006
  0026a	6a 00		 push	 0
  0026c	8b 4d b0	 mov	 ecx, DWORD PTR _ele$4[ebp]
  0026f	e8 00 00 00 00	 call	 ?Name@XMLElement@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLElement::Name
  00274	50		 push	 eax
  00275	6a 10		 push	 16			; 00000010H
  00277	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0027a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0027d	e8 00 00 00 00	 call	 ?SetError@XMLDocument@tinyxml2@@QAEXW4XMLError@2@PBD1@Z ; tinyxml2::XMLDocument::SetError
; Line 1007
  00282	8b 45 dc	 mov	 eax, DWORD PTR _node$7[ebp]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ?DeleteNode@XMLNode@tinyxml2@@CAXPAV12@@Z ; tinyxml2::XMLNode::DeleteNode
  0028b	83 c4 04	 add	 esp, 4
; Line 1008
  0028e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00295	8d 4d c8	 lea	 ecx, DWORD PTR _endTag$6[ebp]
  00298	e8 00 00 00 00	 call	 ??1StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::~StrPair
  0029d	eb 20		 jmp	 SHORT $LN16@ParseDeep
$LN10@ParseDeep:
; Line 1011
  0029f	8b 45 dc	 mov	 eax, DWORD PTR _node$7[ebp]
  002a2	50		 push	 eax
  002a3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a6	e8 00 00 00 00	 call	 ?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertEndChild
; Line 1012
  002ab	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  002b2	8d 4d c8	 lea	 ecx, DWORD PTR _endTag$6[ebp]
  002b5	e8 00 00 00 00	 call	 ??1StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::~StrPair
  002ba	e9 86 fd ff ff	 jmp	 $LN17@ParseDeep
$LN16@ParseDeep:
; Line 1013
  002bf	33 c0		 xor	 eax, eax
$LN18@ParseDeep:
; Line 1014
  002c1	52		 push	 edx
  002c2	8b cd		 mov	 ecx, ebp
  002c4	50		 push	 eax
  002c5	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN25@ParseDeep
  002cb	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  002d0	58		 pop	 eax
  002d1	5a		 pop	 edx
  002d2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002dc	59		 pop	 ecx
  002dd	5f		 pop	 edi
  002de	5e		 pop	 esi
  002df	5b		 pop	 ebx
  002e0	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002e3	33 cd		 xor	 ecx, ebp
  002e5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002ea	81 c4 2c 01 00
	00		 add	 esp, 300		; 0000012cH
  002f0	3b ec		 cmp	 ebp, esp
  002f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002f7	8b e5		 mov	 esp, ebp
  002f9	5d		 pop	 ebp
  002fa	c2 08 00	 ret	 8
  002fd	8d 49 00	 npad	 3
$LN25@ParseDeep:
  00300	02 00 00 00	 DD	 2
  00304	00 00 00 00	 DD	 $LN24@ParseDeep
$LN24@ParseDeep:
  00308	dc ff ff ff	 DD	 -36			; ffffffdcH
  0030c	04 00 00 00	 DD	 4
  00310	00 00 00 00	 DD	 $LN21@ParseDeep
  00314	c8 ff ff ff	 DD	 -56			; ffffffc8H
  00318	0c 00 00 00	 DD	 12			; 0000000cH
  0031c	00 00 00 00	 DD	 $LN22@ParseDeep
$LN22@ParseDeep:
  00320	65		 DB	 101			; 00000065H
  00321	6e		 DB	 110			; 0000006eH
  00322	64		 DB	 100			; 00000064H
  00323	54		 DB	 84			; 00000054H
  00324	61		 DB	 97			; 00000061H
  00325	67		 DB	 103			; 00000067H
  00326	00		 DB	 0
$LN21@ParseDeep:
  00327	6e		 DB	 110			; 0000006eH
  00328	6f		 DB	 111			; 0000006fH
  00329	64		 DB	 100			; 00000064H
  0032a	65		 DB	 101			; 00000065H
  0032b	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z$0:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR _endTag$6[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::~StrPair
__ehhandler$?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a d0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-304]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ParseDeep@XMLNode@tinyxml2@@MAEPADPADPAVStrPair@2@@Z ENDP ; tinyxml2::XMLNode::ParseDeep
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1XMLNode@tinyxml2@@MAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1XMLNode@tinyxml2@@MAE@XZ PROC			; tinyxml2::XMLNode::~XMLNode, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 712
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1XMLNode@tinyxml2@@MAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLNode@tinyxml2@@6B@
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 713
  00052	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?DeleteChildren@XMLNode@tinyxml2@@QAEXXZ ; tinyxml2::XMLNode::DeleteChildren
; Line 714
  0005a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00061	74 0f		 je	 SHORT $LN2@XMLNode
; Line 715
  00063	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00066	50		 push	 eax
  00067	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0006d	e8 00 00 00 00	 call	 ?Unlink@XMLNode@tinyxml2@@AAEXPAV12@@Z ; tinyxml2::XMLNode::Unlink
$LN2@XMLNode:
; Line 717
  00072	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00079	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0007f	e8 00 00 00 00	 call	 ??1StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::~StrPair
  00084	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00087	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008e	59		 pop	 ecx
  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx
  00092	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00098	3b ec		 cmp	 ebp, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1XMLNode@tinyxml2@@MAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::~StrPair
__ehhandler$??1XMLNode@tinyxml2@@MAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1XMLNode@tinyxml2@@MAE@XZ
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1XMLNode@tinyxml2@@MAE@XZ ENDP			; tinyxml2::XMLNode::~XMLNode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0XMLNode@tinyxml2@@IAE@PAVXMLDocument@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_doc$ = 8						; size = 4
??0XMLNode@tinyxml2@@IAE@PAVXMLDocument@1@@Z PROC	; tinyxml2::XMLNode::XMLNode, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 707
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLNode@tinyxml2@@6B@
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _doc$[ebp]
  00032	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00045	e8 00 00 00 00	 call	 ??0StrPair@tinyxml2@@QAE@XZ ; tinyxml2::StrPair::StrPair
  0004a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
  0005e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00061	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0
  00068	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0
  00072	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00075	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0
; Line 708
  0007c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00088	3b ec		 cmp	 ebp, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 04 00	 ret	 4
??0XMLNode@tinyxml2@@IAE@PAVXMLDocument@1@@Z ENDP	; tinyxml2::XMLNode::XMLNode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DeleteChild@XMLNode@tinyxml2@@QAEXPAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_node$ = 8						; size = 4
?DeleteChild@XMLNode@tinyxml2@@QAEXPAV12@@Z PROC	; tinyxml2::XMLNode::DeleteChild, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 775
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 776
  00023	83 7d 08 00	 cmp	 DWORD PTR _node$[ebp], 0
  00027	75 01		 jne	 SHORT $LN3@DeleteChil
  00029	cc		 int	 3
$LN3@DeleteChil:
; Line 777
  0002a	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00033	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00036	74 01		 je	 SHORT $LN2@DeleteChil
  00038	cc		 int	 3
$LN2@DeleteChil:
; Line 778
  00039	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  0003c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003f	3b 4d f8	 cmp	 ecx, DWORD PTR _this$[ebp]
  00042	74 01		 je	 SHORT $LN1@DeleteChil
  00044	cc		 int	 3
$LN1@DeleteChil:
; Line 779
  00045	8b 45 08	 mov	 eax, DWORD PTR _node$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?DeleteNode@XMLNode@tinyxml2@@CAXPAV12@@Z ; tinyxml2::XMLNode::DeleteNode
  0004e	83 c4 04	 add	 esp, 4
; Line 780
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?DeleteChild@XMLNode@tinyxml2@@QAEXPAV12@@Z ENDP	; tinyxml2::XMLNode::DeleteChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DeleteChildren@XMLNode@tinyxml2@@QAEXXZ
_TEXT	SEGMENT
_node$1 = -20						; size = 4
_this$ = -8						; size = 4
?DeleteChildren@XMLNode@tinyxml2@@QAEXXZ PROC		; tinyxml2::XMLNode::DeleteChildren, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 739
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
$LN4@DeleteChil:
; Line 740
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0002a	74 3f		 je	 SHORT $LN3@DeleteChil
; Line 741
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00033	75 01		 jne	 SHORT $LN2@DeleteChil
  00035	cc		 int	 3
$LN2@DeleteChil:
; Line 742
  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00042	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00045	74 01		 je	 SHORT $LN1@DeleteChil
  00047	cc		 int	 3
$LN1@DeleteChil:
; Line 743
  00048	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0004e	89 4d ec	 mov	 DWORD PTR _node$1[ebp], ecx
; Line 744
  00051	8b 45 ec	 mov	 eax, DWORD PTR _node$1[ebp]
  00054	50		 push	 eax
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?Unlink@XMLNode@tinyxml2@@AAEXPAV12@@Z ; tinyxml2::XMLNode::Unlink
; Line 746
  0005d	8b 45 ec	 mov	 eax, DWORD PTR _node$1[ebp]
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?DeleteNode@XMLNode@tinyxml2@@CAXPAV12@@Z ; tinyxml2::XMLNode::DeleteNode
  00066	83 c4 04	 add	 esp, 4
; Line 747
  00069	eb b8		 jmp	 SHORT $LN4@DeleteChil
$LN3@DeleteChil:
; Line 748
  0006b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
  00075	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
; Line 749
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00088	3b ec		 cmp	 ebp, esp
  0008a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
?DeleteChildren@XMLNode@tinyxml2@@QAEXXZ ENDP		; tinyxml2::XMLNode::DeleteChildren
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InsertAfterChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_afterThis$ = 8						; size = 4
_addThis$ = 12						; size = 4
?InsertAfterChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@0@Z PROC ; tinyxml2::XMLNode::InsertAfterChild, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 845
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 846
  00023	83 7d 0c 00	 cmp	 DWORD PTR _addThis$[ebp], 0
  00027	75 01		 jne	 SHORT $LN7@InsertAfte
  00029	cc		 int	 3
$LN7@InsertAfte:
; Line 847
  0002a	8b 45 0c	 mov	 eax, DWORD PTR _addThis$[ebp]
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00033	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00036	74 09		 je	 SHORT $LN6@InsertAfte
; Line 848
  00038	33 c0		 xor	 eax, eax
  0003a	75 01		 jne	 SHORT $LN5@InsertAfte
  0003c	cc		 int	 3
$LN5@InsertAfte:
; Line 849
  0003d	33 c0		 xor	 eax, eax
  0003f	eb 74		 jmp	 SHORT $LN8@InsertAfte
$LN6@InsertAfte:
; Line 852
  00041	83 7d 08 00	 cmp	 DWORD PTR _afterThis$[ebp], 0
  00045	75 01		 jne	 SHORT $LN4@InsertAfte
  00047	cc		 int	 3
$LN4@InsertAfte:
; Line 854
  00048	8b 45 08	 mov	 eax, DWORD PTR _afterThis$[ebp]
  0004b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0004e	3b 4d f8	 cmp	 ecx, DWORD PTR _this$[ebp]
  00051	74 09		 je	 SHORT $LN3@InsertAfte
; Line 855
  00053	33 c0		 xor	 eax, eax
  00055	75 01		 jne	 SHORT $LN2@InsertAfte
  00057	cc		 int	 3
$LN2@InsertAfte:
; Line 856
  00058	33 c0		 xor	 eax, eax
  0005a	eb 59		 jmp	 SHORT $LN8@InsertAfte
$LN3@InsertAfte:
; Line 859
  0005c	8b 45 08	 mov	 eax, DWORD PTR _afterThis$[ebp]
  0005f	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  00063	75 0e		 jne	 SHORT $LN1@InsertAfte
; Line 861
  00065	8b 45 0c	 mov	 eax, DWORD PTR _addThis$[ebp]
  00068	50		 push	 eax
  00069	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ; tinyxml2::XMLNode::InsertEndChild
  00071	eb 42		 jmp	 SHORT $LN8@InsertAfte
$LN1@InsertAfte:
; Line 863
  00073	8b 45 0c	 mov	 eax, DWORD PTR _addThis$[ebp]
  00076	50		 push	 eax
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ?InsertChildPreamble@XMLNode@tinyxml2@@ABEXPAV12@@Z ; tinyxml2::XMLNode::InsertChildPreamble
; Line 864
  0007f	8b 45 0c	 mov	 eax, DWORD PTR _addThis$[ebp]
  00082	8b 4d 08	 mov	 ecx, DWORD PTR _afterThis$[ebp]
  00085	89 48 20	 mov	 DWORD PTR [eax+32], ecx
; Line 865
  00088	8b 45 0c	 mov	 eax, DWORD PTR _addThis$[ebp]
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR _afterThis$[ebp]
  0008e	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00091	89 50 24	 mov	 DWORD PTR [eax+36], edx
; Line 866
  00094	8b 45 08	 mov	 eax, DWORD PTR _afterThis$[ebp]
  00097	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0009a	8b 55 0c	 mov	 edx, DWORD PTR _addThis$[ebp]
  0009d	89 51 20	 mov	 DWORD PTR [ecx+32], edx
; Line 867
  000a0	8b 45 08	 mov	 eax, DWORD PTR _afterThis$[ebp]
  000a3	8b 4d 0c	 mov	 ecx, DWORD PTR _addThis$[ebp]
  000a6	89 48 24	 mov	 DWORD PTR [eax+36], ecx
; Line 868
  000a9	8b 45 0c	 mov	 eax, DWORD PTR _addThis$[ebp]
  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 869
  000b2	8b 45 0c	 mov	 eax, DWORD PTR _addThis$[ebp]
$LN8@InsertAfte:
; Line 870
  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5b		 pop	 ebx
  000b8	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000be	3b ec		 cmp	 ebp, esp
  000c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c2 08 00	 ret	 8
?InsertAfterChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@0@Z ENDP ; tinyxml2::XMLNode::InsertAfterChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InsertFirstChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_addThis$ = 8						; size = 4
?InsertFirstChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z PROC ; tinyxml2::XMLNode::InsertFirstChild, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 814
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 815
  00023	83 7d 08 00	 cmp	 DWORD PTR _addThis$[ebp], 0
  00027	75 01		 jne	 SHORT $LN8@InsertFirs
  00029	cc		 int	 3
$LN8@InsertFirs:
; Line 816
  0002a	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00033	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00036	74 0c		 je	 SHORT $LN7@InsertFirs
; Line 817
  00038	33 c0		 xor	 eax, eax
  0003a	75 01		 jne	 SHORT $LN6@InsertFirs
  0003c	cc		 int	 3
$LN6@InsertFirs:
; Line 818
  0003d	33 c0		 xor	 eax, eax
  0003f	e9 95 00 00 00	 jmp	 $LN9@InsertFirs
$LN7@InsertFirs:
; Line 820
  00044	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  00047	50		 push	 eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?InsertChildPreamble@XMLNode@tinyxml2@@ABEXPAV12@@Z ; tinyxml2::XMLNode::InsertChildPreamble
; Line 822
  00050	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00057	74 44		 je	 SHORT $LN5@InsertFirs
; Line 823
  00059	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00060	75 01		 jne	 SHORT $LN4@InsertFirs
  00062	cc		 int	 3
$LN4@InsertFirs:
; Line 824
  00063	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00069	83 79 20 00	 cmp	 DWORD PTR [ecx+32], 0
  0006d	74 01		 je	 SHORT $LN3@InsertFirs
  0006f	cc		 int	 3
$LN3@InsertFirs:
; Line 826
  00070	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00076	8b 55 08	 mov	 edx, DWORD PTR _addThis$[ebp]
  00079	89 51 20	 mov	 DWORD PTR [ecx+32], edx
; Line 827
  0007c	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  0007f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00085	89 50 24	 mov	 DWORD PTR [eax+36], edx
; Line 828
  00088	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR _addThis$[ebp]
  0008e	89 48 18	 mov	 DWORD PTR [eax+24], ecx
; Line 830
  00091	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  00094	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0
; Line 832
  0009b	eb 30		 jmp	 SHORT $LN2@InsertFirs
$LN5@InsertFirs:
; Line 833
  0009d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a0	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  000a4	74 01		 je	 SHORT $LN1@InsertFirs
  000a6	cc		 int	 3
$LN1@InsertFirs:
; Line 834
  000a7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	8b 4d 08	 mov	 ecx, DWORD PTR _addThis$[ebp]
  000ad	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
  000b0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000b3	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  000b6	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 836
  000b9	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  000bc	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0
; Line 837
  000c3	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  000c6	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0
$LN2@InsertFirs:
; Line 839
  000cd	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  000d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 840
  000d6	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
$LN9@InsertFirs:
; Line 841
  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	5b		 pop	 ebx
  000dc	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000e2	3b ec		 cmp	 ebp, esp
  000e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 04 00	 ret	 4
?InsertFirstChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ENDP ; tinyxml2::XMLNode::InsertFirstChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_addThis$ = 8						; size = 4
?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z PROC ; tinyxml2::XMLNode::InsertEndChild, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 784
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 785
  00023	83 7d 08 00	 cmp	 DWORD PTR _addThis$[ebp], 0
  00027	75 01		 jne	 SHORT $LN8@InsertEndC
  00029	cc		 int	 3
$LN8@InsertEndC:
; Line 786
  0002a	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00033	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00036	74 0c		 je	 SHORT $LN7@InsertEndC
; Line 787
  00038	33 c0		 xor	 eax, eax
  0003a	75 01		 jne	 SHORT $LN6@InsertEndC
  0003c	cc		 int	 3
$LN6@InsertEndC:
; Line 788
  0003d	33 c0		 xor	 eax, eax
  0003f	e9 95 00 00 00	 jmp	 $LN9@InsertEndC
$LN7@InsertEndC:
; Line 790
  00044	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  00047	50		 push	 eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?InsertChildPreamble@XMLNode@tinyxml2@@ABEXPAV12@@Z ; tinyxml2::XMLNode::InsertChildPreamble
; Line 792
  00050	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  00057	74 44		 je	 SHORT $LN5@InsertEndC
; Line 793
  00059	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  00060	75 01		 jne	 SHORT $LN4@InsertEndC
  00062	cc		 int	 3
$LN4@InsertEndC:
; Line 794
  00063	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00069	83 79 24 00	 cmp	 DWORD PTR [ecx+36], 0
  0006d	74 01		 je	 SHORT $LN3@InsertEndC
  0006f	cc		 int	 3
$LN3@InsertEndC:
; Line 795
  00070	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00076	8b 55 08	 mov	 edx, DWORD PTR _addThis$[ebp]
  00079	89 51 24	 mov	 DWORD PTR [ecx+36], edx
; Line 796
  0007c	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  0007f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00085	89 50 20	 mov	 DWORD PTR [eax+32], edx
; Line 797
  00088	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR _addThis$[ebp]
  0008e	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
; Line 799
  00091	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  00094	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0
; Line 801
  0009b	eb 30		 jmp	 SHORT $LN2@InsertEndC
$LN5@InsertEndC:
; Line 802
  0009d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a0	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  000a4	74 01		 je	 SHORT $LN1@InsertEndC
  000a6	cc		 int	 3
$LN1@InsertEndC:
; Line 803
  000a7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	8b 4d 08	 mov	 ecx, DWORD PTR _addThis$[ebp]
  000ad	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
  000b0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000b3	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  000b6	89 42 18	 mov	 DWORD PTR [edx+24], eax
; Line 805
  000b9	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  000bc	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0
; Line 806
  000c3	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  000c6	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0
$LN2@InsertEndC:
; Line 808
  000cd	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
  000d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 809
  000d6	8b 45 08	 mov	 eax, DWORD PTR _addThis$[ebp]
$LN9@InsertEndC:
; Line 810
  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	5b		 pop	 ebx
  000dc	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000e2	3b ec		 cmp	 ebp, esp
  000e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 04 00	 ret	 4
?InsertEndChild@XMLNode@tinyxml2@@QAEPAV12@PAV12@@Z ENDP ; tinyxml2::XMLNode::InsertEndChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NextSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z
_TEXT	SEGMENT
_element$1 = -32					; size = 4
_node$2 = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?NextSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z PROC ; tinyxml2::XMLNode::NextSiblingElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 904
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 905
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00029	89 4d ec	 mov	 DWORD PTR _node$2[ebp], ecx
  0002c	eb 09		 jmp	 SHORT $LN5@NextSiblin
$LN4@NextSiblin:
  0002e	8b 45 ec	 mov	 eax, DWORD PTR _node$2[ebp]
  00031	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00034	89 4d ec	 mov	 DWORD PTR _node$2[ebp], ecx
$LN5@NextSiblin:
  00037	83 7d ec 00	 cmp	 DWORD PTR _node$2[ebp], 0
  0003b	74 4c		 je	 SHORT $LN3@NextSiblin
; Line 906
  0003d	8b 45 ec	 mov	 eax, DWORD PTR _node$2[ebp]
  00040	8b 10		 mov	 edx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 4d ec	 mov	 ecx, DWORD PTR _node$2[ebp]
  00047	8b 02		 mov	 eax, DWORD PTR [edx]
  00049	ff d0		 call	 eax
  0004b	3b f4		 cmp	 esi, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	89 45 e0	 mov	 DWORD PTR _element$1[ebp], eax
; Line 908
  00055	83 7d e0 00	 cmp	 DWORD PTR _element$1[ebp], 0
  00059	74 2c		 je	 SHORT $LN2@NextSiblin
  0005b	83 7d 08 00	 cmp	 DWORD PTR _name$[ebp], 0
  0005f	74 21		 je	 SHORT $LN1@NextSiblin
  00061	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00066	8b 4d e0	 mov	 ecx, DWORD PTR _element$1[ebp]
  00069	e8 00 00 00 00	 call	 ?Name@XMLElement@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLElement::Name
  0006e	50		 push	 eax
  0006f	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007b	0f b6 c8	 movzx	 ecx, al
  0007e	85 c9		 test	 ecx, ecx
  00080	74 05		 je	 SHORT $LN2@NextSiblin
$LN1@NextSiblin:
; Line 909
  00082	8b 45 e0	 mov	 eax, DWORD PTR _element$1[ebp]
  00085	eb 04		 jmp	 SHORT $LN6@NextSiblin
$LN2@NextSiblin:
; Line 911
  00087	eb a5		 jmp	 SHORT $LN4@NextSiblin
$LN3@NextSiblin:
; Line 912
  00089	33 c0		 xor	 eax, eax
$LN6@NextSiblin:
; Line 913
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
?NextSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ENDP ; tinyxml2::XMLNode::NextSiblingElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ PROC		; tinyxml2::XMLNode::NextSibling, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 757
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 758
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
; Line 759
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?NextSibling@XMLNode@tinyxml2@@QBEPBV12@XZ ENDP		; tinyxml2::XMLNode::NextSibling
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PreviousSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z
_TEXT	SEGMENT
_element$1 = -32					; size = 4
_node$2 = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?PreviousSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z PROC ; tinyxml2::XMLNode::PreviousSiblingElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 917
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 918
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00029	89 4d ec	 mov	 DWORD PTR _node$2[ebp], ecx
  0002c	eb 09		 jmp	 SHORT $LN5@PreviousSi
$LN4@PreviousSi:
  0002e	8b 45 ec	 mov	 eax, DWORD PTR _node$2[ebp]
  00031	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00034	89 4d ec	 mov	 DWORD PTR _node$2[ebp], ecx
$LN5@PreviousSi:
  00037	83 7d ec 00	 cmp	 DWORD PTR _node$2[ebp], 0
  0003b	74 4c		 je	 SHORT $LN3@PreviousSi
; Line 919
  0003d	8b 45 ec	 mov	 eax, DWORD PTR _node$2[ebp]
  00040	8b 10		 mov	 edx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 4d ec	 mov	 ecx, DWORD PTR _node$2[ebp]
  00047	8b 02		 mov	 eax, DWORD PTR [edx]
  00049	ff d0		 call	 eax
  0004b	3b f4		 cmp	 esi, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	89 45 e0	 mov	 DWORD PTR _element$1[ebp], eax
; Line 921
  00055	83 7d e0 00	 cmp	 DWORD PTR _element$1[ebp], 0
  00059	74 2c		 je	 SHORT $LN2@PreviousSi
  0005b	83 7d 08 00	 cmp	 DWORD PTR _name$[ebp], 0
  0005f	74 21		 je	 SHORT $LN1@PreviousSi
  00061	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00066	8b 4d e0	 mov	 ecx, DWORD PTR _element$1[ebp]
  00069	e8 00 00 00 00	 call	 ?Name@XMLElement@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLElement::Name
  0006e	50		 push	 eax
  0006f	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007b	0f b6 c8	 movzx	 ecx, al
  0007e	85 c9		 test	 ecx, ecx
  00080	74 05		 je	 SHORT $LN2@PreviousSi
$LN1@PreviousSi:
; Line 922
  00082	8b 45 e0	 mov	 eax, DWORD PTR _element$1[ebp]
  00085	eb 04		 jmp	 SHORT $LN6@PreviousSi
$LN2@PreviousSi:
; Line 924
  00087	eb a5		 jmp	 SHORT $LN4@PreviousSi
$LN3@PreviousSi:
; Line 925
  00089	33 c0		 xor	 eax, eax
$LN6@PreviousSi:
; Line 926
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
?PreviousSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ENDP ; tinyxml2::XMLNode::PreviousSiblingElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LastChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z
_TEXT	SEGMENT
_element$1 = -32					; size = 4
_node$2 = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?LastChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z PROC ; tinyxml2::XMLNode::LastChildElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 890
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 891
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00029	89 4d ec	 mov	 DWORD PTR _node$2[ebp], ecx
  0002c	eb 09		 jmp	 SHORT $LN6@LastChildE
$LN5@LastChildE:
  0002e	8b 45 ec	 mov	 eax, DWORD PTR _node$2[ebp]
  00031	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00034	89 4d ec	 mov	 DWORD PTR _node$2[ebp], ecx
$LN6@LastChildE:
  00037	83 7d ec 00	 cmp	 DWORD PTR _node$2[ebp], 0
  0003b	74 4c		 je	 SHORT $LN4@LastChildE
; Line 892
  0003d	8b 45 ec	 mov	 eax, DWORD PTR _node$2[ebp]
  00040	8b 10		 mov	 edx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 4d ec	 mov	 ecx, DWORD PTR _node$2[ebp]
  00047	8b 02		 mov	 eax, DWORD PTR [edx]
  00049	ff d0		 call	 eax
  0004b	3b f4		 cmp	 esi, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	89 45 e0	 mov	 DWORD PTR _element$1[ebp], eax
; Line 893
  00055	83 7d e0 00	 cmp	 DWORD PTR _element$1[ebp], 0
  00059	74 2c		 je	 SHORT $LN3@LastChildE
; Line 894
  0005b	83 7d 08 00	 cmp	 DWORD PTR _name$[ebp], 0
  0005f	74 21		 je	 SHORT $LN1@LastChildE
  00061	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00066	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d e0	 mov	 ecx, DWORD PTR _element$1[ebp]
  0006d	e8 00 00 00 00	 call	 ?Name@XMLElement@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLElement::Name
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007b	0f b6 c8	 movzx	 ecx, al
  0007e	85 c9		 test	 ecx, ecx
  00080	74 05		 je	 SHORT $LN3@LastChildE
$LN1@LastChildE:
; Line 895
  00082	8b 45 e0	 mov	 eax, DWORD PTR _element$1[ebp]
  00085	eb 04		 jmp	 SHORT $LN7@LastChildE
$LN3@LastChildE:
; Line 898
  00087	eb a5		 jmp	 SHORT $LN5@LastChildE
$LN4@LastChildE:
; Line 899
  00089	33 c0		 xor	 eax, eax
$LN7@LastChildE:
; Line 900
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
?LastChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ENDP ; tinyxml2::XMLNode::LastChildElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z
_TEXT	SEGMENT
_element$1 = -32					; size = 4
_node$2 = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z PROC ; tinyxml2::XMLNode::FirstChildElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 876
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 877
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00029	89 4d ec	 mov	 DWORD PTR _node$2[ebp], ecx
  0002c	eb 09		 jmp	 SHORT $LN6@FirstChild
$LN5@FirstChild:
  0002e	8b 45 ec	 mov	 eax, DWORD PTR _node$2[ebp]
  00031	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00034	89 4d ec	 mov	 DWORD PTR _node$2[ebp], ecx
$LN6@FirstChild:
  00037	83 7d ec 00	 cmp	 DWORD PTR _node$2[ebp], 0
  0003b	74 4c		 je	 SHORT $LN4@FirstChild
; Line 878
  0003d	8b 45 ec	 mov	 eax, DWORD PTR _node$2[ebp]
  00040	8b 10		 mov	 edx, DWORD PTR [eax]
  00042	8b f4		 mov	 esi, esp
  00044	8b 4d ec	 mov	 ecx, DWORD PTR _node$2[ebp]
  00047	8b 02		 mov	 eax, DWORD PTR [edx]
  00049	ff d0		 call	 eax
  0004b	3b f4		 cmp	 esi, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	89 45 e0	 mov	 DWORD PTR _element$1[ebp], eax
; Line 879
  00055	83 7d e0 00	 cmp	 DWORD PTR _element$1[ebp], 0
  00059	74 2c		 je	 SHORT $LN3@FirstChild
; Line 880
  0005b	83 7d 08 00	 cmp	 DWORD PTR _name$[ebp], 0
  0005f	74 21		 je	 SHORT $LN1@FirstChild
  00061	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00066	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d e0	 mov	 ecx, DWORD PTR _element$1[ebp]
  0006d	e8 00 00 00 00	 call	 ?Name@XMLElement@tinyxml2@@QBEPBDXZ ; tinyxml2::XMLElement::Name
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007b	0f b6 c8	 movzx	 ecx, al
  0007e	85 c9		 test	 ecx, ecx
  00080	74 05		 je	 SHORT $LN3@FirstChild
$LN1@FirstChild:
; Line 881
  00082	8b 45 e0	 mov	 eax, DWORD PTR _element$1[ebp]
  00085	eb 04		 jmp	 SHORT $LN7@FirstChild
$LN3@FirstChild:
; Line 884
  00087	eb a5		 jmp	 SHORT $LN5@FirstChild
$LN4@FirstChild:
; Line 885
  00089	33 c0		 xor	 eax, eax
$LN7@FirstChild:
; Line 886
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 04 00	 ret	 4
?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ENDP ; tinyxml2::XMLNode::FirstChildElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ PROC		; tinyxml2::XMLNode::FirstChild, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 709
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 710
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
; Line 711
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?FirstChild@XMLNode@tinyxml2@@QAEPAV12@XZ ENDP		; tinyxml2::XMLNode::FirstChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ PROC		; tinyxml2::XMLNode::FirstChild, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 705
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 706
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
; Line 707
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?FirstChild@XMLNode@tinyxml2@@QBEPBV12@XZ ENDP		; tinyxml2::XMLNode::FirstChild
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NoChildren@XMLNode@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?NoChildren@XMLNode@tinyxml2@@QBE_NXZ PROC		; tinyxml2::XMLNode::NoChildren, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 700
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 701
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0002a	75 0c		 jne	 SHORT $LN3@NoChildren
  0002c	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00036	eb 0a		 jmp	 SHORT $LN4@NoChildren
$LN3@NoChildren:
  00038	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN4@NoChildren:
  00042	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv66[ebp]
; Line 702
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?NoChildren@XMLNode@tinyxml2@@QBE_NXZ ENDP		; tinyxml2::XMLNode::NoChildren
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Parent@XMLNode@tinyxml2@@QBEPBV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Parent@XMLNode@tinyxml2@@QBEPBV12@XZ PROC		; tinyxml2::XMLNode::Parent, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 691
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 692
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
; Line 693
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?Parent@XMLNode@tinyxml2@@QBEPBV12@XZ ENDP		; tinyxml2::XMLNode::Parent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetValue@XMLNode@tinyxml2@@QAEXPBD_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
_staticMem$ = 12					; size = 1
?SetValue@XMLNode@tinyxml2@@QAEXPBD_N@Z PROC		; tinyxml2::XMLNode::SetValue, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 729
  00023	0f b6 45 0c	 movzx	 eax, BYTE PTR _staticMem$[ebp]
  00027	85 c0		 test	 eax, eax
  00029	74 11		 je	 SHORT $LN2@SetValue
; Line 730
  0002b	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00035	e8 00 00 00 00	 call	 ?SetInternedStr@StrPair@tinyxml2@@QAEXPBD@Z ; tinyxml2::StrPair::SetInternedStr
; Line 732
  0003a	eb 11		 jmp	 SHORT $LN3@SetValue
$LN2@SetValue:
; Line 733
  0003c	6a 00		 push	 0
  0003e	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  00041	50		 push	 eax
  00042	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00048	e8 00 00 00 00	 call	 ?SetStr@StrPair@tinyxml2@@QAEXPBDH@Z ; tinyxml2::StrPair::SetStr
$LN3@SetValue:
; Line 735
  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00056	3b ec		 cmp	 ebp, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 08 00	 ret	 8
?SetValue@XMLNode@tinyxml2@@QAEXPBD_N@Z ENDP		; tinyxml2::XMLNode::SetValue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Value@XMLNode@tinyxml2@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Value@XMLNode@tinyxml2@@QBEPBDXZ PROC			; tinyxml2::XMLNode::Value, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 722
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 10		 mov	 edx, DWORD PTR [eax]
  00028	8b f4		 mov	 esi, esp
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00030	ff d0		 call	 eax
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	85 c0		 test	 eax, eax
  0003b	74 04		 je	 SHORT $LN1@Value
; Line 723
  0003d	33 c0		 xor	 eax, eax
  0003f	eb 0b		 jmp	 SHORT $LN2@Value
$LN1@Value:
; Line 724
  00041	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00047	e8 00 00 00 00	 call	 ?GetStr@StrPair@tinyxml2@@QAEPBDXZ ; tinyxml2::StrPair::GetStr
$LN2@Value:
; Line 725
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?Value@XMLNode@tinyxml2@@QBEPBDXZ ENDP			; tinyxml2::XMLNode::Value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToUnknown@XMLNode@tinyxml2@@UBEPBVXMLUnknown@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToUnknown@XMLNode@tinyxml2@@UBEPBVXMLUnknown@2@XZ PROC	; tinyxml2::XMLNode::ToUnknown, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 670
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 671
  00023	33 c0		 xor	 eax, eax
; Line 672
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ToUnknown@XMLNode@tinyxml2@@UBEPBVXMLUnknown@2@XZ ENDP	; tinyxml2::XMLNode::ToUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToDeclaration@XMLNode@tinyxml2@@UBEPBVXMLDeclaration@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDeclaration@XMLNode@tinyxml2@@UBEPBVXMLDeclaration@2@XZ PROC ; tinyxml2::XMLNode::ToDeclaration, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 667
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 668
  00023	33 c0		 xor	 eax, eax
; Line 669
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ToDeclaration@XMLNode@tinyxml2@@UBEPBVXMLDeclaration@2@XZ ENDP ; tinyxml2::XMLNode::ToDeclaration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToDocument@XMLNode@tinyxml2@@UBEPBVXMLDocument@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDocument@XMLNode@tinyxml2@@UBEPBVXMLDocument@2@XZ PROC ; tinyxml2::XMLNode::ToDocument, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 664
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 665
  00023	33 c0		 xor	 eax, eax
; Line 666
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ToDocument@XMLNode@tinyxml2@@UBEPBVXMLDocument@2@XZ ENDP ; tinyxml2::XMLNode::ToDocument
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToComment@XMLNode@tinyxml2@@UBEPBVXMLComment@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToComment@XMLNode@tinyxml2@@UBEPBVXMLComment@2@XZ PROC	; tinyxml2::XMLNode::ToComment, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 661
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 662
  00023	33 c0		 xor	 eax, eax
; Line 663
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ToComment@XMLNode@tinyxml2@@UBEPBVXMLComment@2@XZ ENDP	; tinyxml2::XMLNode::ToComment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToText@XMLNode@tinyxml2@@UBEPBVXMLText@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToText@XMLNode@tinyxml2@@UBEPBVXMLText@2@XZ PROC	; tinyxml2::XMLNode::ToText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 658
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 659
  00023	33 c0		 xor	 eax, eax
; Line 660
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ToText@XMLNode@tinyxml2@@UBEPBVXMLText@2@XZ ENDP	; tinyxml2::XMLNode::ToText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToElement@XMLNode@tinyxml2@@UBEPBVXMLElement@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToElement@XMLNode@tinyxml2@@UBEPBVXMLElement@2@XZ PROC	; tinyxml2::XMLNode::ToElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 655
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 656
  00023	33 c0		 xor	 eax, eax
; Line 657
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ToElement@XMLNode@tinyxml2@@UBEPBVXMLElement@2@XZ ENDP	; tinyxml2::XMLNode::ToElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToUnknown@XMLNode@tinyxml2@@UAEPAVXMLUnknown@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToUnknown@XMLNode@tinyxml2@@UAEPAVXMLUnknown@2@XZ PROC	; tinyxml2::XMLNode::ToUnknown, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 651
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 652
  00023	33 c0		 xor	 eax, eax
; Line 653
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ToUnknown@XMLNode@tinyxml2@@UAEPAVXMLUnknown@2@XZ ENDP	; tinyxml2::XMLNode::ToUnknown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToDeclaration@XMLNode@tinyxml2@@UAEPAVXMLDeclaration@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDeclaration@XMLNode@tinyxml2@@UAEPAVXMLDeclaration@2@XZ PROC ; tinyxml2::XMLNode::ToDeclaration, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 647
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 648
  00023	33 c0		 xor	 eax, eax
; Line 649
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ToDeclaration@XMLNode@tinyxml2@@UAEPAVXMLDeclaration@2@XZ ENDP ; tinyxml2::XMLNode::ToDeclaration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToDocument@XMLNode@tinyxml2@@UAEPAVXMLDocument@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDocument@XMLNode@tinyxml2@@UAEPAVXMLDocument@2@XZ PROC ; tinyxml2::XMLNode::ToDocument, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 643
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 644
  00023	33 c0		 xor	 eax, eax
; Line 645
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ToDocument@XMLNode@tinyxml2@@UAEPAVXMLDocument@2@XZ ENDP ; tinyxml2::XMLNode::ToDocument
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToComment@XMLNode@tinyxml2@@UAEPAVXMLComment@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToComment@XMLNode@tinyxml2@@UAEPAVXMLComment@2@XZ PROC	; tinyxml2::XMLNode::ToComment, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 639
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 640
  00023	33 c0		 xor	 eax, eax
; Line 641
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ToComment@XMLNode@tinyxml2@@UAEPAVXMLComment@2@XZ ENDP	; tinyxml2::XMLNode::ToComment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToText@XMLNode@tinyxml2@@UAEPAVXMLText@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToText@XMLNode@tinyxml2@@UAEPAVXMLText@2@XZ PROC	; tinyxml2::XMLNode::ToText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 635
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 636
  00023	33 c0		 xor	 eax, eax
; Line 637
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ToText@XMLNode@tinyxml2@@UAEPAVXMLText@2@XZ ENDP	; tinyxml2::XMLNode::ToText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToElement@XMLNode@tinyxml2@@UAEPAVXMLElement@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToElement@XMLNode@tinyxml2@@UAEPAVXMLElement@2@XZ PROC	; tinyxml2::XMLNode::ToElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 631
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  00023	33 c0		 xor	 eax, eax
; Line 633
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ToElement@XMLNode@tinyxml2@@UAEPAVXMLElement@2@XZ ENDP	; tinyxml2::XMLNode::ToElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetDocument@XMLNode@tinyxml2@@QAEPAVXMLDocument@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetDocument@XMLNode@tinyxml2@@QAEPAVXMLDocument@2@XZ PROC ; tinyxml2::XMLNode::GetDocument, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 625
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 626
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	75 01		 jne	 SHORT $LN1@GetDocumen
  0002c	cc		 int	 3
$LN1@GetDocumen:
; Line 627
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; Line 628
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?GetDocument@XMLNode@tinyxml2@@QAEPAVXMLDocument@2@XZ ENDP ; tinyxml2::XMLNode::GetDocument
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToDouble@XMLUtil@tinyxml2@@SA_NPBDPAN@Z
_TEXT	SEGMENT
_str$ = 8						; size = 4
_value$ = 12						; size = 4
?ToDouble@XMLUtil@tinyxml2@@SA_NPBDPAN@Z PROC		; tinyxml2::XMLUtil::ToDouble, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 603
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 604
  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  00023	50		 push	 eax
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_03DLDNIBIK@?$CFlf?$AA@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  0002c	51		 push	 ecx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sscanf_s
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	83 f8 01	 cmp	 eax, 1
  00040	75 04		 jne	 SHORT $LN1@ToDouble
; Line 605
  00042	b0 01		 mov	 al, 1
  00044	eb 02		 jmp	 SHORT $LN2@ToDouble
$LN1@ToDouble:
; Line 607
  00046	32 c0		 xor	 al, al
$LN2@ToDouble:
; Line 608
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?ToDouble@XMLUtil@tinyxml2@@SA_NPBDPAN@Z ENDP		; tinyxml2::XMLUtil::ToDouble
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToFloat@XMLUtil@tinyxml2@@SA_NPBDPAM@Z
_TEXT	SEGMENT
_str$ = 8						; size = 4
_value$ = 12						; size = 4
?ToFloat@XMLUtil@tinyxml2@@SA_NPBDPAM@Z PROC		; tinyxml2::XMLUtil::ToFloat, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 595
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 596
  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  00023	50		 push	 eax
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_02NJPGOMH@?$CFf?$AA@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  0002c	51		 push	 ecx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sscanf_s
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	83 f8 01	 cmp	 eax, 1
  00040	75 04		 jne	 SHORT $LN1@ToFloat
; Line 597
  00042	b0 01		 mov	 al, 1
  00044	eb 02		 jmp	 SHORT $LN2@ToFloat
$LN1@ToFloat:
; Line 599
  00046	32 c0		 xor	 al, al
$LN2@ToFloat:
; Line 600
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?ToFloat@XMLUtil@tinyxml2@@SA_NPBDPAM@Z ENDP		; tinyxml2::XMLUtil::ToFloat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToBool@XMLUtil@tinyxml2@@SA_NPBDPA_N@Z
_TEXT	SEGMENT
tv70 = -209						; size = 1
_ival$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_str$ = 8						; size = 4
_value$ = 12						; size = 4
?ToBool@XMLUtil@tinyxml2@@SA_NPBDPA_N@Z PROC		; tinyxml2::XMLUtil::ToBool, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 576
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-212]
  00012	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 577
  00028	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _ival$[ebp], 0
; Line 578
  0002f	8d 45 f4	 lea	 eax, DWORD PTR _ival$[ebp]
  00032	50		 push	 eax
  00033	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  00036	51		 push	 ecx
  00037	e8 00 00 00 00	 call	 ?ToInt@XMLUtil@tinyxml2@@SA_NPBDPAH@Z ; tinyxml2::XMLUtil::ToInt
  0003c	83 c4 08	 add	 esp, 8
  0003f	0f b6 d0	 movzx	 edx, al
  00042	85 d2		 test	 edx, edx
  00044	74 25		 je	 SHORT $LN4@ToBool
; Line 579
  00046	83 7d f4 00	 cmp	 DWORD PTR _ival$[ebp], 0
  0004a	75 09		 jne	 SHORT $LN7@ToBool
  0004c	c6 85 2f ff ff
	ff 00		 mov	 BYTE PTR tv70[ebp], 0
  00053	eb 07		 jmp	 SHORT $LN8@ToBool
$LN7@ToBool:
  00055	c6 85 2f ff ff
	ff 01		 mov	 BYTE PTR tv70[ebp], 1
$LN8@ToBool:
  0005c	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  0005f	8a 8d 2f ff ff
	ff		 mov	 cl, BYTE PTR tv70[ebp]
  00065	88 08		 mov	 BYTE PTR [eax], cl
; Line 580
  00067	b0 01		 mov	 al, 1
  00069	eb 52		 jmp	 SHORT $LN5@ToBool
$LN4@ToBool:
; Line 582
  0006b	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_04LOAJBDKD@true?$AA@
  00075	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  0007e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00081	0f b6 c8	 movzx	 ecx, al
  00084	85 c9		 test	 ecx, ecx
  00086	74 0c		 je	 SHORT $LN3@ToBool
; Line 583
  00088	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  0008b	c6 00 01	 mov	 BYTE PTR [eax], 1
; Line 584
  0008e	b0 01		 mov	 al, 1
  00090	eb 2b		 jmp	 SHORT $LN5@ToBool
  00092	eb 27		 jmp	 SHORT $LN2@ToBool
$LN3@ToBool:
; Line 586
  00094	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_05LAPONLG@false?$AA@
  0009e	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ; tinyxml2::XMLUtil::StringEqual
  000a7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000aa	0f b6 c8	 movzx	 ecx, al
  000ad	85 c9		 test	 ecx, ecx
  000af	74 0a		 je	 SHORT $LN2@ToBool
; Line 587
  000b1	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  000b4	c6 00 00	 mov	 BYTE PTR [eax], 0
; Line 588
  000b7	b0 01		 mov	 al, 1
  000b9	eb 02		 jmp	 SHORT $LN5@ToBool
$LN2@ToBool:
; Line 590
  000bb	32 c0		 xor	 al, al
$LN5@ToBool:
; Line 591
  000bd	52		 push	 edx
  000be	8b cd		 mov	 ecx, ebp
  000c0	50		 push	 eax
  000c1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@ToBool
  000c7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000cc	58		 pop	 eax
  000cd	5a		 pop	 edx
  000ce	5f		 pop	 edi
  000cf	5e		 pop	 esi
  000d0	5b		 pop	 ebx
  000d1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d4	33 cd		 xor	 ecx, ebp
  000d6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000db	81 c4 d4 00 00
	00		 add	 esp, 212		; 000000d4H
  000e1	3b ec		 cmp	 ebp, esp
  000e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e8	8b e5		 mov	 esp, ebp
  000ea	5d		 pop	 ebp
  000eb	c3		 ret	 0
$LN11@ToBool:
  000ec	01 00 00 00	 DD	 1
  000f0	00 00 00 00	 DD	 $LN10@ToBool
$LN10@ToBool:
  000f4	f4 ff ff ff	 DD	 -12			; fffffff4H
  000f8	04 00 00 00	 DD	 4
  000fc	00 00 00 00	 DD	 $LN9@ToBool
$LN9@ToBool:
  00100	69		 DB	 105			; 00000069H
  00101	76		 DB	 118			; 00000076H
  00102	61		 DB	 97			; 00000061H
  00103	6c		 DB	 108			; 0000006cH
  00104	00		 DB	 0
?ToBool@XMLUtil@tinyxml2@@SA_NPBDPA_N@Z ENDP		; tinyxml2::XMLUtil::ToBool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToUnsigned@XMLUtil@tinyxml2@@SA_NPBDPAI@Z
_TEXT	SEGMENT
_str$ = 8						; size = 4
_value$ = 12						; size = 4
?ToUnsigned@XMLUtil@tinyxml2@@SA_NPBDPAI@Z PROC		; tinyxml2::XMLUtil::ToUnsigned, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 568
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 569
  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  00023	50		 push	 eax
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_02GMHACPFF@?$CFu?$AA@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  0002c	51		 push	 ecx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sscanf_s
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	83 f8 01	 cmp	 eax, 1
  00040	75 04		 jne	 SHORT $LN1@ToUnsigned
; Line 570
  00042	b0 01		 mov	 al, 1
  00044	eb 02		 jmp	 SHORT $LN2@ToUnsigned
$LN1@ToUnsigned:
; Line 572
  00046	32 c0		 xor	 al, al
$LN2@ToUnsigned:
; Line 573
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?ToUnsigned@XMLUtil@tinyxml2@@SA_NPBDPAI@Z ENDP		; tinyxml2::XMLUtil::ToUnsigned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToInt@XMLUtil@tinyxml2@@SA_NPBDPAH@Z
_TEXT	SEGMENT
_str$ = 8						; size = 4
_value$ = 12						; size = 4
?ToInt@XMLUtil@tinyxml2@@SA_NPBDPAH@Z PROC		; tinyxml2::XMLUtil::ToInt, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 560
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 561
  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  00023	50		 push	 eax
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  0002c	51		 push	 ecx
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sscanf_s
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	83 f8 01	 cmp	 eax, 1
  00040	75 04		 jne	 SHORT $LN1@ToInt
; Line 562
  00042	b0 01		 mov	 al, 1
  00044	eb 02		 jmp	 SHORT $LN2@ToInt
$LN1@ToInt:
; Line 564
  00046	32 c0		 xor	 al, al
$LN2@ToInt:
; Line 565
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?ToInt@XMLUtil@tinyxml2@@SA_NPBDPAH@Z ENDP		; tinyxml2::XMLUtil::ToInt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToStr@XMLUtil@tinyxml2@@SAXNPADH@Z
_TEXT	SEGMENT
_v$ = 8							; size = 8
_buffer$ = 16						; size = 4
_bufferSize$ = 20					; size = 4
?ToStr@XMLUtil@tinyxml2@@SAXNPADH@Z PROC		; tinyxml2::XMLUtil::ToStr, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 554
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 555
  0001e	83 ec 08	 sub	 esp, 8
  00021	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR _v$[ebp]
  00026	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_05CEKCMKAN@?$CF?417g?$AA@
  00030	8b 45 14	 mov	 eax, DWORD PTR _bufferSize$[ebp]
  00033	50		 push	 eax
  00034	8b 4d 10	 mov	 ecx, DWORD PTR _buffer$[ebp]
  00037	51		 push	 ecx
  00038	e8 00 00 00 00	 call	 ?TIXML_SNPRINTF@@YAHPADIPBDZZ ; TIXML_SNPRINTF
  0003d	83 c4 14	 add	 esp, 20			; 00000014H
; Line 556
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?ToStr@XMLUtil@tinyxml2@@SAXNPADH@Z ENDP		; tinyxml2::XMLUtil::ToStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToStr@XMLUtil@tinyxml2@@SAXMPADH@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
_buffer$ = 12						; size = 4
_bufferSize$ = 16					; size = 4
?ToStr@XMLUtil@tinyxml2@@SAXMPADH@Z PROC		; tinyxml2::XMLUtil::ToStr, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 548
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 549
  0001e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _v$[ebp]
  00023	83 ec 08	 sub	 esp, 8
  00026	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_04HANFDJND@?$CF?48g?$AA@
  00030	8b 45 10	 mov	 eax, DWORD PTR _bufferSize$[ebp]
  00033	50		 push	 eax
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR _buffer$[ebp]
  00037	51		 push	 ecx
  00038	e8 00 00 00 00	 call	 ?TIXML_SNPRINTF@@YAHPADIPBDZZ ; TIXML_SNPRINTF
  0003d	83 c4 14	 add	 esp, 20			; 00000014H
; Line 550
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?ToStr@XMLUtil@tinyxml2@@SAXMPADH@Z ENDP		; tinyxml2::XMLUtil::ToStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToStr@XMLUtil@tinyxml2@@SAX_NPADH@Z
_TEXT	SEGMENT
tv67 = -196						; size = 4
_v$ = 8							; size = 1
_buffer$ = 12						; size = 4
_bufferSize$ = 16					; size = 4
?ToStr@XMLUtil@tinyxml2@@SAX_NPADH@Z PROC		; tinyxml2::XMLUtil::ToStr, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 539
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 540
  0001e	0f b6 45 08	 movzx	 eax, BYTE PTR _v$[ebp]
  00022	85 c0		 test	 eax, eax
  00024	74 0c		 je	 SHORT $LN3@ToStr
  00026	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv67[ebp], 1
  00030	eb 0a		 jmp	 SHORT $LN4@ToStr
$LN3@ToStr:
  00032	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv67[ebp], 0
$LN4@ToStr:
  0003c	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv67[ebp]
  00042	51		 push	 ecx
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
  00048	8b 55 10	 mov	 edx, DWORD PTR _bufferSize$[ebp]
  0004b	52		 push	 edx
  0004c	8b 45 0c	 mov	 eax, DWORD PTR _buffer$[ebp]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?TIXML_SNPRINTF@@YAHPADIPBDZZ ; TIXML_SNPRINTF
  00055	83 c4 10	 add	 esp, 16			; 00000010H
; Line 541
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
?ToStr@XMLUtil@tinyxml2@@SAX_NPADH@Z ENDP		; tinyxml2::XMLUtil::ToStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToStr@XMLUtil@tinyxml2@@SAXIPADH@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
_buffer$ = 12						; size = 4
_bufferSize$ = 16					; size = 4
?ToStr@XMLUtil@tinyxml2@@SAXIPADH@Z PROC		; tinyxml2::XMLUtil::ToStr, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 533
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 534
  0001e	8b 45 08	 mov	 eax, DWORD PTR _v$[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_02GMHACPFF@?$CFu?$AA@
  00027	8b 4d 10	 mov	 ecx, DWORD PTR _bufferSize$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 0c	 mov	 edx, DWORD PTR _buffer$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ?TIXML_SNPRINTF@@YAHPADIPBDZZ ; TIXML_SNPRINTF
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 535
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?ToStr@XMLUtil@tinyxml2@@SAXIPADH@Z ENDP		; tinyxml2::XMLUtil::ToStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ToStr@XMLUtil@tinyxml2@@SAXHPADH@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
_buffer$ = 12						; size = 4
_bufferSize$ = 16					; size = 4
?ToStr@XMLUtil@tinyxml2@@SAXHPADH@Z PROC		; tinyxml2::XMLUtil::ToStr, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 527
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 528
  0001e	8b 45 08	 mov	 eax, DWORD PTR _v$[ebp]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
  00027	8b 4d 10	 mov	 ecx, DWORD PTR _bufferSize$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 0c	 mov	 edx, DWORD PTR _buffer$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ?TIXML_SNPRINTF@@YAHPADIPBDZZ ; TIXML_SNPRINTF
  00034	83 c4 10	 add	 esp, 16			; 00000010H
; Line 529
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?ToStr@XMLUtil@tinyxml2@@SAXHPADH@Z ENDP		; tinyxml2::XMLUtil::ToStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ConvertUTF32ToUTF8@XMLUtil@tinyxml2@@SAXKPADPAH@Z
_TEXT	SEGMENT
tv69 = -256						; size = 4
_FIRST_BYTE_MARK$ = -56					; size = 28
_BYTE_MARK$ = -20					; size = 4
_BYTE_MASK$ = -8					; size = 4
_input$ = 8						; size = 4
_output$ = 12						; size = 4
_length$ = 16						; size = 4
?ConvertUTF32ToUTF8@XMLUtil@tinyxml2@@SAXKPADPAH@Z PROC	; tinyxml2::XMLUtil::ConvertUTF32ToUTF8, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 382
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 00 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-256]
  00012	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 383
  0001e	c7 45 f8 bf 00
	00 00		 mov	 DWORD PTR _BYTE_MASK$[ebp], 191 ; 000000bfH
; Line 384
  00025	c7 45 ec 80 00
	00 00		 mov	 DWORD PTR _BYTE_MARK$[ebp], 128 ; 00000080H
; Line 385
  0002c	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _FIRST_BYTE_MARK$[ebp], 0
  00033	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _FIRST_BYTE_MARK$[ebp+4], 0
  0003a	c7 45 d0 c0 00
	00 00		 mov	 DWORD PTR _FIRST_BYTE_MARK$[ebp+8], 192 ; 000000c0H
  00041	c7 45 d4 e0 00
	00 00		 mov	 DWORD PTR _FIRST_BYTE_MARK$[ebp+12], 224 ; 000000e0H
  00048	c7 45 d8 f0 00
	00 00		 mov	 DWORD PTR _FIRST_BYTE_MARK$[ebp+16], 240 ; 000000f0H
  0004f	c7 45 dc f8 00
	00 00		 mov	 DWORD PTR _FIRST_BYTE_MARK$[ebp+20], 248 ; 000000f8H
  00056	c7 45 e0 fc 00
	00 00		 mov	 DWORD PTR _FIRST_BYTE_MARK$[ebp+24], 252 ; 000000fcH
; Line 387
  0005d	81 7d 08 80 00
	00 00		 cmp	 DWORD PTR _input$[ebp], 128 ; 00000080H
  00064	73 0b		 jae	 SHORT $LN16@ConvertUTF
; Line 388
  00066	8b 45 10	 mov	 eax, DWORD PTR _length$[ebp]
  00069	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
  0006f	eb 4a		 jmp	 SHORT $LN15@ConvertUTF
$LN16@ConvertUTF:
; Line 390
  00071	81 7d 08 00 08
	00 00		 cmp	 DWORD PTR _input$[ebp], 2048 ; 00000800H
  00078	73 0b		 jae	 SHORT $LN14@ConvertUTF
; Line 391
  0007a	8b 45 10	 mov	 eax, DWORD PTR _length$[ebp]
  0007d	c7 00 02 00 00
	00		 mov	 DWORD PTR [eax], 2
  00083	eb 36		 jmp	 SHORT $LN15@ConvertUTF
$LN14@ConvertUTF:
; Line 393
  00085	81 7d 08 00 00
	01 00		 cmp	 DWORD PTR _input$[ebp], 65536 ; 00010000H
  0008c	73 0b		 jae	 SHORT $LN12@ConvertUTF
; Line 394
  0008e	8b 45 10	 mov	 eax, DWORD PTR _length$[ebp]
  00091	c7 00 03 00 00
	00		 mov	 DWORD PTR [eax], 3
  00097	eb 22		 jmp	 SHORT $LN15@ConvertUTF
$LN12@ConvertUTF:
; Line 396
  00099	81 7d 08 00 00
	20 00		 cmp	 DWORD PTR _input$[ebp], 2097152 ; 00200000H
  000a0	73 0b		 jae	 SHORT $LN10@ConvertUTF
; Line 397
  000a2	8b 45 10	 mov	 eax, DWORD PTR _length$[ebp]
  000a5	c7 00 04 00 00
	00		 mov	 DWORD PTR [eax], 4
; Line 399
  000ab	eb 0e		 jmp	 SHORT $LN15@ConvertUTF
$LN10@ConvertUTF:
; Line 400
  000ad	8b 45 10	 mov	 eax, DWORD PTR _length$[ebp]
  000b0	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 401
  000b6	e9 cc 00 00 00	 jmp	 $LN17@ConvertUTF
$LN15@ConvertUTF:
; Line 404
  000bb	8b 45 10	 mov	 eax, DWORD PTR _length$[ebp]
  000be	8b 4d 0c	 mov	 ecx, DWORD PTR _output$[ebp]
  000c1	03 08		 add	 ecx, DWORD PTR [eax]
  000c3	89 4d 0c	 mov	 DWORD PTR _output$[ebp], ecx
; Line 407
  000c6	8b 45 10	 mov	 eax, DWORD PTR _length$[ebp]
  000c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cb	89 8d 00 ff ff
	ff		 mov	 DWORD PTR tv69[ebp], ecx
  000d1	8b 95 00 ff ff
	ff		 mov	 edx, DWORD PTR tv69[ebp]
  000d7	83 ea 01	 sub	 edx, 1
  000da	89 95 00 ff ff
	ff		 mov	 DWORD PTR tv69[ebp], edx
  000e0	83 bd 00 ff ff
	ff 03		 cmp	 DWORD PTR tv69[ebp], 3
  000e7	0f 87 95 00 00
	00		 ja	 $LN2@ConvertUTF
  000ed	8b 85 00 ff ff
	ff		 mov	 eax, DWORD PTR tv69[ebp]
  000f3	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN22@ConvertUTF[eax*4]
$LN6@ConvertUTF:
; Line 409
  000fa	8b 45 0c	 mov	 eax, DWORD PTR _output$[ebp]
  000fd	83 e8 01	 sub	 eax, 1
  00100	89 45 0c	 mov	 DWORD PTR _output$[ebp], eax
; Line 410
  00103	8b 45 08	 mov	 eax, DWORD PTR _input$[ebp]
  00106	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  0010b	25 bf 00 00 00	 and	 eax, 191		; 000000bfH
  00110	8b 4d 0c	 mov	 ecx, DWORD PTR _output$[ebp]
  00113	88 01		 mov	 BYTE PTR [ecx], al
; Line 411
  00115	8b 45 08	 mov	 eax, DWORD PTR _input$[ebp]
  00118	c1 e8 06	 shr	 eax, 6
  0011b	89 45 08	 mov	 DWORD PTR _input$[ebp], eax
$LN5@ConvertUTF:
; Line 413
  0011e	8b 45 0c	 mov	 eax, DWORD PTR _output$[ebp]
  00121	83 e8 01	 sub	 eax, 1
  00124	89 45 0c	 mov	 DWORD PTR _output$[ebp], eax
; Line 414
  00127	8b 45 08	 mov	 eax, DWORD PTR _input$[ebp]
  0012a	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  0012f	25 bf 00 00 00	 and	 eax, 191		; 000000bfH
  00134	8b 4d 0c	 mov	 ecx, DWORD PTR _output$[ebp]
  00137	88 01		 mov	 BYTE PTR [ecx], al
; Line 415
  00139	8b 45 08	 mov	 eax, DWORD PTR _input$[ebp]
  0013c	c1 e8 06	 shr	 eax, 6
  0013f	89 45 08	 mov	 DWORD PTR _input$[ebp], eax
$LN4@ConvertUTF:
; Line 417
  00142	8b 45 0c	 mov	 eax, DWORD PTR _output$[ebp]
  00145	83 e8 01	 sub	 eax, 1
  00148	89 45 0c	 mov	 DWORD PTR _output$[ebp], eax
; Line 418
  0014b	8b 45 08	 mov	 eax, DWORD PTR _input$[ebp]
  0014e	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  00153	25 bf 00 00 00	 and	 eax, 191		; 000000bfH
  00158	8b 4d 0c	 mov	 ecx, DWORD PTR _output$[ebp]
  0015b	88 01		 mov	 BYTE PTR [ecx], al
; Line 419
  0015d	8b 45 08	 mov	 eax, DWORD PTR _input$[ebp]
  00160	c1 e8 06	 shr	 eax, 6
  00163	89 45 08	 mov	 DWORD PTR _input$[ebp], eax
$LN3@ConvertUTF:
; Line 421
  00166	8b 45 0c	 mov	 eax, DWORD PTR _output$[ebp]
  00169	83 e8 01	 sub	 eax, 1
  0016c	89 45 0c	 mov	 DWORD PTR _output$[ebp], eax
; Line 422
  0016f	8b 45 10	 mov	 eax, DWORD PTR _length$[ebp]
  00172	8b 08		 mov	 ecx, DWORD PTR [eax]
  00174	8b 55 08	 mov	 edx, DWORD PTR _input$[ebp]
  00177	0b 54 8d c8	 or	 edx, DWORD PTR _FIRST_BYTE_MARK$[ebp+ecx*4]
  0017b	8b 45 0c	 mov	 eax, DWORD PTR _output$[ebp]
  0017e	88 10		 mov	 BYTE PTR [eax], dl
; Line 423
  00180	eb 05		 jmp	 SHORT $LN17@ConvertUTF
$LN2@ConvertUTF:
; Line 425
  00182	33 c0		 xor	 eax, eax
  00184	75 01		 jne	 SHORT $LN17@ConvertUTF
  00186	cc		 int	 3
$LN17@ConvertUTF:
; Line 427
  00187	52		 push	 edx
  00188	8b cd		 mov	 ecx, ebp
  0018a	50		 push	 eax
  0018b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN21@ConvertUTF
  00191	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00196	58		 pop	 eax
  00197	5a		 pop	 edx
  00198	5f		 pop	 edi
  00199	5e		 pop	 esi
  0019a	5b		 pop	 ebx
  0019b	8b e5		 mov	 esp, ebp
  0019d	5d		 pop	 ebp
  0019e	c3		 ret	 0
  0019f	90		 npad	 1
$LN21@ConvertUTF:
  001a0	01 00 00 00	 DD	 1
  001a4	00 00 00 00	 DD	 $LN20@ConvertUTF
$LN20@ConvertUTF:
  001a8	c8 ff ff ff	 DD	 -56			; ffffffc8H
  001ac	1c 00 00 00	 DD	 28			; 0000001cH
  001b0	00 00 00 00	 DD	 $LN19@ConvertUTF
$LN19@ConvertUTF:
  001b4	46		 DB	 70			; 00000046H
  001b5	49		 DB	 73			; 00000049H
  001b6	52		 DB	 82			; 00000052H
  001b7	53		 DB	 83			; 00000053H
  001b8	54		 DB	 84			; 00000054H
  001b9	5f		 DB	 95			; 0000005fH
  001ba	42		 DB	 66			; 00000042H
  001bb	59		 DB	 89			; 00000059H
  001bc	54		 DB	 84			; 00000054H
  001bd	45		 DB	 69			; 00000045H
  001be	5f		 DB	 95			; 0000005fH
  001bf	4d		 DB	 77			; 0000004dH
  001c0	41		 DB	 65			; 00000041H
  001c1	52		 DB	 82			; 00000052H
  001c2	4b		 DB	 75			; 0000004bH
  001c3	00		 DB	 0
$LN22@ConvertUTF:
  001c4	00 00 00 00	 DD	 $LN3@ConvertUTF
  001c8	00 00 00 00	 DD	 $LN4@ConvertUTF
  001cc	00 00 00 00	 DD	 $LN5@ConvertUTF
  001d0	00 00 00 00	 DD	 $LN6@ConvertUTF
?ConvertUTF32ToUTF8@XMLUtil@tinyxml2@@SAXKPADPAH@Z ENDP	; tinyxml2::XMLUtil::ConvertUTF32ToUTF8
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCharacterRef@XMLUtil@tinyxml2@@SAPBDPBDPADPAH@Z
_TEXT	SEGMENT
tv181 = -304						; size = 4
tv176 = -304						; size = 4
tv146 = -304						; size = 4
tv141 = -304						; size = 4
_digitScaled$1 = -104					; size = 4
_digit$2 = -92						; size = 4
_q$3 = -80						; size = 4
_digitScaled$4 = -68					; size = 4
_digit$5 = -56						; size = 4
_q$6 = -44						; size = 4
_mult$7 = -32						; size = 4
_delta$8 = -20						; size = 4
_ucs$9 = -8						; size = 4
_p$ = 8							; size = 4
_value$ = 12						; size = 4
_length$ = 16						; size = 4
?GetCharacterRef@XMLUtil@tinyxml2@@SAPBDPBDPADPAH@Z PROC ; tinyxml2::XMLUtil::GetCharacterRef, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 431
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 30 01 00
	00		 sub	 esp, 304		; 00000130H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd d0 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-304]
  00012	b9 4c 00 00 00	 mov	 ecx, 76			; 0000004cH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 433
  0001e	8b 45 10	 mov	 eax, DWORD PTR _length$[ebp]
  00021	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 435
  00027	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0002a	0f be 48 01	 movsx	 ecx, BYTE PTR [eax+1]
  0002e	83 f9 23	 cmp	 ecx, 35			; 00000023H
  00031	0f 85 21 03 00
	00		 jne	 $LN30@GetCharact
  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	0f be 48 02	 movsx	 ecx, BYTE PTR [eax+2]
  0003e	85 c9		 test	 ecx, ecx
  00040	0f 84 12 03 00
	00		 je	 $LN30@GetCharact
; Line 436
  00046	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ucs$9[ebp], 0
; Line 437
  0004d	b8 01 00 00 00	 mov	 eax, 1
  00052	85 c0		 test	 eax, eax
  00054	75 01		 jne	 SHORT $LN29@GetCharact
  00056	cc		 int	 3
$LN29@GetCharact:
; Line 438
  00057	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _delta$8[ebp], 0
; Line 439
  0005e	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _mult$7[ebp], 1
; Line 442
  00065	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00068	0f be 48 02	 movsx	 ecx, BYTE PTR [eax+2]
  0006c	83 f9 78	 cmp	 ecx, 120		; 00000078H
  0006f	0f 85 8d 01 00
	00		 jne	 $LN28@GetCharact
; Line 444
  00075	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00078	83 c0 03	 add	 eax, 3
  0007b	89 45 d4	 mov	 DWORD PTR _q$6[ebp], eax
; Line 445
  0007e	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  00081	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00084	85 c9		 test	 ecx, ecx
  00086	75 07		 jne	 SHORT $LN27@GetCharact
; Line 446
  00088	33 c0		 xor	 eax, eax
  0008a	e9 cf 02 00 00	 jmp	 $LN31@GetCharact
$LN27@GetCharact:
; Line 449
  0008f	8b f4		 mov	 esi, esp
  00091	6a 3b		 push	 59			; 0000003bH
  00093	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  00096	50		 push	 eax
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  0009d	83 c4 08	 add	 esp, 8
  000a0	3b f4		 cmp	 esi, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a7	89 45 d4	 mov	 DWORD PTR _q$6[ebp], eax
; Line 451
  000aa	83 7d d4 00	 cmp	 DWORD PTR _q$6[ebp], 0
  000ae	75 07		 jne	 SHORT $LN26@GetCharact
; Line 452
  000b0	33 c0		 xor	 eax, eax
  000b2	e9 a7 02 00 00	 jmp	 $LN31@GetCharact
$LN26@GetCharact:
; Line 454
  000b7	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  000ba	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000bd	83 f9 3b	 cmp	 ecx, 59			; 0000003bH
  000c0	74 01		 je	 SHORT $LN25@GetCharact
  000c2	cc		 int	 3
$LN25@GetCharact:
; Line 456
  000c3	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  000c6	2b 45 08	 sub	 eax, DWORD PTR _p$[ebp]
  000c9	89 45 ec	 mov	 DWORD PTR _delta$8[ebp], eax
; Line 457
  000cc	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  000cf	83 e8 01	 sub	 eax, 1
  000d2	89 45 d4	 mov	 DWORD PTR _q$6[ebp], eax
$LN24@GetCharact:
; Line 459
  000d5	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  000d8	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000db	83 f9 78	 cmp	 ecx, 120		; 00000078H
  000de	0f 84 19 01 00
	00		 je	 $LN23@GetCharact
; Line 460
  000e4	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _digit$5[ebp], 0
; Line 462
  000eb	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  000ee	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000f1	83 f9 30	 cmp	 ecx, 48			; 00000030H
  000f4	7c 19		 jl	 SHORT $LN22@GetCharact
  000f6	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  000f9	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000fc	83 f9 39	 cmp	 ecx, 57			; 00000039H
  000ff	7f 0e		 jg	 SHORT $LN22@GetCharact
; Line 463
  00101	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  00104	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00107	83 e9 30	 sub	 ecx, 48			; 00000030H
  0010a	89 4d c8	 mov	 DWORD PTR _digit$5[ebp], ecx
  0010d	eb 4f		 jmp	 SHORT $LN21@GetCharact
$LN22@GetCharact:
; Line 465
  0010f	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  00112	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00115	83 f9 61	 cmp	 ecx, 97			; 00000061H
  00118	7c 19		 jl	 SHORT $LN20@GetCharact
  0011a	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  0011d	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00120	83 f9 66	 cmp	 ecx, 102		; 00000066H
  00123	7f 0e		 jg	 SHORT $LN20@GetCharact
; Line 466
  00125	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  00128	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0012b	83 e9 57	 sub	 ecx, 87			; 00000057H
  0012e	89 4d c8	 mov	 DWORD PTR _digit$5[ebp], ecx
  00131	eb 2b		 jmp	 SHORT $LN21@GetCharact
$LN20@GetCharact:
; Line 468
  00133	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  00136	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00139	83 f9 41	 cmp	 ecx, 65			; 00000041H
  0013c	7c 19		 jl	 SHORT $LN18@GetCharact
  0013e	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  00141	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00144	83 f9 46	 cmp	 ecx, 70			; 00000046H
  00147	7f 0e		 jg	 SHORT $LN18@GetCharact
; Line 469
  00149	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  0014c	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0014f	83 e9 37	 sub	 ecx, 55			; 00000037H
  00152	89 4d c8	 mov	 DWORD PTR _digit$5[ebp], ecx
; Line 471
  00155	eb 07		 jmp	 SHORT $LN21@GetCharact
$LN18@GetCharact:
; Line 472
  00157	33 c0		 xor	 eax, eax
  00159	e9 00 02 00 00	 jmp	 $LN31@GetCharact
$LN21@GetCharact:
; Line 474
  0015e	83 7d c8 00	 cmp	 DWORD PTR _digit$5[ebp], 0
  00162	72 12		 jb	 SHORT $LN33@GetCharact
  00164	83 7d c8 10	 cmp	 DWORD PTR _digit$5[ebp], 16 ; 00000010H
  00168	73 0c		 jae	 SHORT $LN33@GetCharact
  0016a	c7 85 d0 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv141[ebp], 1
  00174	eb 0a		 jmp	 SHORT $LN34@GetCharact
$LN33@GetCharact:
  00176	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv141[ebp], 0
$LN34@GetCharact:
  00180	83 bd d0 fe ff
	ff 00		 cmp	 DWORD PTR tv141[ebp], 0
  00187	75 01		 jne	 SHORT $LN16@GetCharact
  00189	cc		 int	 3
$LN16@GetCharact:
; Line 475
  0018a	83 7d c8 00	 cmp	 DWORD PTR _digit$5[ebp], 0
  0018e	74 19		 je	 SHORT $LN35@GetCharact
  00190	83 c8 ff	 or	 eax, -1
  00193	33 d2		 xor	 edx, edx
  00195	f7 75 c8	 div	 DWORD PTR _digit$5[ebp]
  00198	39 45 e0	 cmp	 DWORD PTR _mult$7[ebp], eax
  0019b	76 0c		 jbe	 SHORT $LN35@GetCharact
  0019d	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv146[ebp], 0
  001a7	eb 0a		 jmp	 SHORT $LN36@GetCharact
$LN35@GetCharact:
  001a9	c7 85 d0 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv146[ebp], 1
$LN36@GetCharact:
  001b3	83 bd d0 fe ff
	ff 00		 cmp	 DWORD PTR tv146[ebp], 0
  001ba	75 01		 jne	 SHORT $LN15@GetCharact
  001bc	cc		 int	 3
$LN15@GetCharact:
; Line 476
  001bd	8b 45 e0	 mov	 eax, DWORD PTR _mult$7[ebp]
  001c0	0f af 45 c8	 imul	 eax, DWORD PTR _digit$5[ebp]
  001c4	89 45 bc	 mov	 DWORD PTR _digitScaled$4[ebp], eax
; Line 477
  001c7	83 c8 ff	 or	 eax, -1
  001ca	2b 45 bc	 sub	 eax, DWORD PTR _digitScaled$4[ebp]
  001cd	39 45 f8	 cmp	 DWORD PTR _ucs$9[ebp], eax
  001d0	76 01		 jbe	 SHORT $LN14@GetCharact
  001d2	cc		 int	 3
$LN14@GetCharact:
; Line 478
  001d3	8b 45 f8	 mov	 eax, DWORD PTR _ucs$9[ebp]
  001d6	03 45 bc	 add	 eax, DWORD PTR _digitScaled$4[ebp]
  001d9	89 45 f8	 mov	 DWORD PTR _ucs$9[ebp], eax
; Line 479
  001dc	81 7d e0 ff ff
	ff 0f		 cmp	 DWORD PTR _mult$7[ebp], 268435455 ; 0fffffffH
  001e3	76 01		 jbe	 SHORT $LN13@GetCharact
  001e5	cc		 int	 3
$LN13@GetCharact:
; Line 480
  001e6	8b 45 e0	 mov	 eax, DWORD PTR _mult$7[ebp]
  001e9	c1 e0 04	 shl	 eax, 4
  001ec	89 45 e0	 mov	 DWORD PTR _mult$7[ebp], eax
; Line 481
  001ef	8b 45 d4	 mov	 eax, DWORD PTR _q$6[ebp]
  001f2	83 e8 01	 sub	 eax, 1
  001f5	89 45 d4	 mov	 DWORD PTR _q$6[ebp], eax
; Line 482
  001f8	e9 d8 fe ff ff	 jmp	 $LN24@GetCharact
$LN23@GetCharact:
; Line 484
  001fd	e9 36 01 00 00	 jmp	 $LN12@GetCharact
$LN28@GetCharact:
; Line 486
  00202	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00205	83 c0 02	 add	 eax, 2
  00208	89 45 b0	 mov	 DWORD PTR _q$3[ebp], eax
; Line 487
  0020b	8b 45 b0	 mov	 eax, DWORD PTR _q$3[ebp]
  0020e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00211	85 c9		 test	 ecx, ecx
  00213	75 07		 jne	 SHORT $LN11@GetCharact
; Line 488
  00215	33 c0		 xor	 eax, eax
  00217	e9 42 01 00 00	 jmp	 $LN31@GetCharact
$LN11@GetCharact:
; Line 491
  0021c	8b f4		 mov	 esi, esp
  0021e	6a 3b		 push	 59			; 0000003bH
  00220	8b 45 b0	 mov	 eax, DWORD PTR _q$3[ebp]
  00223	50		 push	 eax
  00224	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  0022a	83 c4 08	 add	 esp, 8
  0022d	3b f4		 cmp	 esi, esp
  0022f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00234	89 45 b0	 mov	 DWORD PTR _q$3[ebp], eax
; Line 493
  00237	83 7d b0 00	 cmp	 DWORD PTR _q$3[ebp], 0
  0023b	75 07		 jne	 SHORT $LN10@GetCharact
; Line 494
  0023d	33 c0		 xor	 eax, eax
  0023f	e9 1a 01 00 00	 jmp	 $LN31@GetCharact
$LN10@GetCharact:
; Line 496
  00244	8b 45 b0	 mov	 eax, DWORD PTR _q$3[ebp]
  00247	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0024a	83 f9 3b	 cmp	 ecx, 59			; 0000003bH
  0024d	74 01		 je	 SHORT $LN9@GetCharact
  0024f	cc		 int	 3
$LN9@GetCharact:
; Line 498
  00250	8b 45 b0	 mov	 eax, DWORD PTR _q$3[ebp]
  00253	2b 45 08	 sub	 eax, DWORD PTR _p$[ebp]
  00256	89 45 ec	 mov	 DWORD PTR _delta$8[ebp], eax
; Line 499
  00259	8b 45 b0	 mov	 eax, DWORD PTR _q$3[ebp]
  0025c	83 e8 01	 sub	 eax, 1
  0025f	89 45 b0	 mov	 DWORD PTR _q$3[ebp], eax
$LN8@GetCharact:
; Line 501
  00262	8b 45 b0	 mov	 eax, DWORD PTR _q$3[ebp]
  00265	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00268	83 f9 23	 cmp	 ecx, 35			; 00000023H
  0026b	0f 84 c7 00 00
	00		 je	 $LN12@GetCharact
; Line 502
  00271	8b 45 b0	 mov	 eax, DWORD PTR _q$3[ebp]
  00274	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00277	83 f9 30	 cmp	 ecx, 48			; 00000030H
  0027a	0f 8c 95 00 00
	00		 jl	 $LN6@GetCharact
  00280	8b 45 b0	 mov	 eax, DWORD PTR _q$3[ebp]
  00283	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00286	83 f9 39	 cmp	 ecx, 57			; 00000039H
  00289	0f 8f 86 00 00
	00		 jg	 $LN6@GetCharact
; Line 503
  0028f	8b 45 b0	 mov	 eax, DWORD PTR _q$3[ebp]
  00292	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00295	83 e9 30	 sub	 ecx, 48			; 00000030H
  00298	89 4d a4	 mov	 DWORD PTR _digit$2[ebp], ecx
; Line 504
  0029b	83 7d a4 0a	 cmp	 DWORD PTR _digit$2[ebp], 10 ; 0000000aH
  0029f	73 0c		 jae	 SHORT $LN37@GetCharact
  002a1	c7 85 d0 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv176[ebp], 1
  002ab	eb 0a		 jmp	 SHORT $LN38@GetCharact
$LN37@GetCharact:
  002ad	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv176[ebp], 0
$LN38@GetCharact:
  002b7	83 bd d0 fe ff
	ff 00		 cmp	 DWORD PTR tv176[ebp], 0
  002be	75 01		 jne	 SHORT $LN5@GetCharact
  002c0	cc		 int	 3
$LN5@GetCharact:
; Line 505
  002c1	83 7d a4 00	 cmp	 DWORD PTR _digit$2[ebp], 0
  002c5	74 19		 je	 SHORT $LN39@GetCharact
  002c7	83 c8 ff	 or	 eax, -1
  002ca	33 d2		 xor	 edx, edx
  002cc	f7 75 a4	 div	 DWORD PTR _digit$2[ebp]
  002cf	39 45 e0	 cmp	 DWORD PTR _mult$7[ebp], eax
  002d2	76 0c		 jbe	 SHORT $LN39@GetCharact
  002d4	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv181[ebp], 0
  002de	eb 0a		 jmp	 SHORT $LN40@GetCharact
$LN39@GetCharact:
  002e0	c7 85 d0 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv181[ebp], 1
$LN40@GetCharact:
  002ea	83 bd d0 fe ff
	ff 00		 cmp	 DWORD PTR tv181[ebp], 0
  002f1	75 01		 jne	 SHORT $LN4@GetCharact
  002f3	cc		 int	 3
$LN4@GetCharact:
; Line 506
  002f4	8b 45 e0	 mov	 eax, DWORD PTR _mult$7[ebp]
  002f7	0f af 45 a4	 imul	 eax, DWORD PTR _digit$2[ebp]
  002fb	89 45 98	 mov	 DWORD PTR _digitScaled$1[ebp], eax
; Line 507
  002fe	83 c8 ff	 or	 eax, -1
  00301	2b 45 98	 sub	 eax, DWORD PTR _digitScaled$1[ebp]
  00304	39 45 f8	 cmp	 DWORD PTR _ucs$9[ebp], eax
  00307	76 01		 jbe	 SHORT $LN3@GetCharact
  00309	cc		 int	 3
$LN3@GetCharact:
; Line 508
  0030a	8b 45 f8	 mov	 eax, DWORD PTR _ucs$9[ebp]
  0030d	03 45 98	 add	 eax, DWORD PTR _digitScaled$1[ebp]
  00310	89 45 f8	 mov	 DWORD PTR _ucs$9[ebp], eax
; Line 510
  00313	eb 04		 jmp	 SHORT $LN2@GetCharact
$LN6@GetCharact:
; Line 511
  00315	33 c0		 xor	 eax, eax
  00317	eb 45		 jmp	 SHORT $LN31@GetCharact
$LN2@GetCharact:
; Line 513
  00319	81 7d e0 99 99
	99 19		 cmp	 DWORD PTR _mult$7[ebp], 429496729 ; 19999999H
  00320	76 01		 jbe	 SHORT $LN1@GetCharact
  00322	cc		 int	 3
$LN1@GetCharact:
; Line 514
  00323	6b 45 e0 0a	 imul	 eax, DWORD PTR _mult$7[ebp], 10
  00327	89 45 e0	 mov	 DWORD PTR _mult$7[ebp], eax
; Line 515
  0032a	8b 45 b0	 mov	 eax, DWORD PTR _q$3[ebp]
  0032d	83 e8 01	 sub	 eax, 1
  00330	89 45 b0	 mov	 DWORD PTR _q$3[ebp], eax
; Line 516
  00333	e9 2a ff ff ff	 jmp	 $LN8@GetCharact
$LN12@GetCharact:
; Line 519
  00338	8b 45 10	 mov	 eax, DWORD PTR _length$[ebp]
  0033b	50		 push	 eax
  0033c	8b 4d 0c	 mov	 ecx, DWORD PTR _value$[ebp]
  0033f	51		 push	 ecx
  00340	8b 55 f8	 mov	 edx, DWORD PTR _ucs$9[ebp]
  00343	52		 push	 edx
  00344	e8 00 00 00 00	 call	 ?ConvertUTF32ToUTF8@XMLUtil@tinyxml2@@SAXKPADPAH@Z ; tinyxml2::XMLUtil::ConvertUTF32ToUTF8
  00349	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 520
  0034c	8b 45 ec	 mov	 eax, DWORD PTR _delta$8[ebp]
  0034f	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00352	8d 44 01 01	 lea	 eax, DWORD PTR [ecx+eax+1]
  00356	eb 06		 jmp	 SHORT $LN31@GetCharact
$LN30@GetCharact:
; Line 522
  00358	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0035b	83 c0 01	 add	 eax, 1
$LN31@GetCharact:
; Line 523
  0035e	5f		 pop	 edi
  0035f	5e		 pop	 esi
  00360	5b		 pop	 ebx
  00361	81 c4 30 01 00
	00		 add	 esp, 304		; 00000130H
  00367	3b ec		 cmp	 ebp, esp
  00369	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036e	8b e5		 mov	 esp, ebp
  00370	5d		 pop	 ebp
  00371	c3		 ret	 0
?GetCharacterRef@XMLUtil@tinyxml2@@SAPBDPBDPADPAH@Z ENDP ; tinyxml2::XMLUtil::GetCharacterRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReadBOM@XMLUtil@tinyxml2@@SAPBDPBDPA_N@Z
_TEXT	SEGMENT
_pu$ = -8						; size = 4
_p$ = 8							; size = 4
_bom$ = 12						; size = 4
?ReadBOM@XMLUtil@tinyxml2@@SAPBDPBDPA_N@Z PROC		; tinyxml2::XMLUtil::ReadBOM, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 364
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 365
  0001e	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00022	75 01		 jne	 SHORT $LN4@ReadBOM
  00024	cc		 int	 3
$LN4@ReadBOM:
; Line 366
  00025	83 7d 0c 00	 cmp	 DWORD PTR _bom$[ebp], 0
  00029	75 01		 jne	 SHORT $LN3@ReadBOM
  0002b	cc		 int	 3
$LN3@ReadBOM:
; Line 367
  0002c	8b 45 0c	 mov	 eax, DWORD PTR _bom$[ebp]
  0002f	c6 00 00	 mov	 BYTE PTR [eax], 0
; Line 368
  00032	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00035	89 45 f8	 mov	 DWORD PTR _pu$[ebp], eax
; Line 372
  00038	8b 45 f8	 mov	 eax, DWORD PTR _pu$[ebp]
  0003b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0003e	81 f9 ef 00 00
	00		 cmp	 ecx, 239		; 000000efH
  00044	75 2d		 jne	 SHORT $LN2@ReadBOM
  00046	8b 45 f8	 mov	 eax, DWORD PTR _pu$[ebp]
  00049	0f b6 48 01	 movzx	 ecx, BYTE PTR [eax+1]
  0004d	81 f9 bb 00 00
	00		 cmp	 ecx, 187		; 000000bbH
  00053	75 1e		 jne	 SHORT $LN2@ReadBOM
  00055	8b 45 f8	 mov	 eax, DWORD PTR _pu$[ebp]
  00058	0f b6 48 02	 movzx	 ecx, BYTE PTR [eax+2]
  0005c	81 f9 bf 00 00
	00		 cmp	 ecx, 191		; 000000bfH
  00062	75 0f		 jne	 SHORT $LN2@ReadBOM
; Line 373
  00064	8b 45 0c	 mov	 eax, DWORD PTR _bom$[ebp]
  00067	c6 00 01	 mov	 BYTE PTR [eax], 1
; Line 374
  0006a	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0006d	83 c0 03	 add	 eax, 3
  00070	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
$LN2@ReadBOM:
; Line 376
  00073	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00077	75 01		 jne	 SHORT $LN1@ReadBOM
  00079	cc		 int	 3
$LN1@ReadBOM:
; Line 377
  0007a	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
; Line 378
  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
?ReadBOM@XMLUtil@tinyxml2@@SAPBDPBDPA_N@Z ENDP		; tinyxml2::XMLUtil::ReadBOM
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsUTF8Continuation@XMLUtil@tinyxml2@@SA_ND@Z
_TEXT	SEGMENT
tv67 = -196						; size = 4
_p$ = 8							; size = 1
?IsUTF8Continuation@XMLUtil@tinyxml2@@SA_ND@Z PROC	; tinyxml2::XMLUtil::IsUTF8Continuation, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 562
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 563
  0001e	0f be 45 08	 movsx	 eax, BYTE PTR _p$[ebp]
  00022	25 80 00 00 00	 and	 eax, 128		; 00000080H
  00027	74 0c		 je	 SHORT $LN3@IsUTF8Cont
  00029	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv67[ebp], 1
  00033	eb 0a		 jmp	 SHORT $LN4@IsUTF8Cont
$LN3@IsUTF8Cont:
  00035	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv67[ebp], 0
$LN4@IsUTF8Cont:
  0003f	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv67[ebp]
; Line 564
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?IsUTF8Continuation@XMLUtil@tinyxml2@@SA_ND@Z ENDP	; tinyxml2::XMLUtil::IsUTF8Continuation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z
_TEXT	SEGMENT
tv70 = -196						; size = 4
_p$ = 8							; size = 4
_q$ = 12						; size = 4
_nChar$ = 16						; size = 4
?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z PROC		; tinyxml2::XMLUtil::StringEqual, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 555
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 556
  0001e	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00021	3b 45 0c	 cmp	 eax, DWORD PTR _q$[ebp]
  00024	75 04		 jne	 SHORT $LN1@StringEqua
; Line 557
  00026	b0 01		 mov	 al, 1
  00028	eb 3e		 jmp	 SHORT $LN2@StringEqua
$LN1@StringEqua:
; Line 559
  0002a	8b f4		 mov	 esi, esp
  0002c	8b 45 10	 mov	 eax, DWORD PTR _nChar$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 0c	 mov	 ecx, DWORD PTR _q$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00037	52		 push	 edx
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	85 c0		 test	 eax, eax
  0004a	75 0c		 jne	 SHORT $LN4@StringEqua
  0004c	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv70[ebp], 1
  00056	eb 0a		 jmp	 SHORT $LN5@StringEqua
$LN4@StringEqua:
  00058	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN5@StringEqua:
  00062	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv70[ebp]
$LN2@StringEqua:
; Line 560
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx
  0006b	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
?StringEqual@XMLUtil@tinyxml2@@SA_NPBD0H@Z ENDP		; tinyxml2::XMLUtil::StringEqual
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsNameChar@XMLUtil@tinyxml2@@SA_NE@Z
_TEXT	SEGMENT
tv76 = -196						; size = 4
_ch$ = 8						; size = 1
?IsNameChar@XMLUtil@tinyxml2@@SA_NE@Z PROC		; tinyxml2::XMLUtil::IsNameChar, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 548
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 552
  0001e	0f b6 45 08	 movzx	 eax, BYTE PTR _ch$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ?IsNameStartChar@XMLUtil@tinyxml2@@SA_NE@Z ; tinyxml2::XMLUtil::IsNameStartChar
  00028	83 c4 04	 add	 esp, 4
  0002b	0f b6 c8	 movzx	 ecx, al
  0002e	85 c9		 test	 ecx, ecx
  00030	75 39		 jne	 SHORT $LN3@IsNameChar
  00032	0f b6 55 08	 movzx	 edx, BYTE PTR _ch$[ebp]
  00036	8b f4		 mov	 esi, esp
  00038	52		 push	 edx
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__isdigit
  0003f	83 c4 04	 add	 esp, 4
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	85 c0		 test	 eax, eax
  0004b	75 1e		 jne	 SHORT $LN3@IsNameChar
  0004d	0f b6 45 08	 movzx	 eax, BYTE PTR _ch$[ebp]
  00051	83 f8 2e	 cmp	 eax, 46			; 0000002eH
  00054	74 15		 je	 SHORT $LN3@IsNameChar
  00056	0f b6 4d 08	 movzx	 ecx, BYTE PTR _ch$[ebp]
  0005a	83 f9 2d	 cmp	 ecx, 45			; 0000002dH
  0005d	74 0c		 je	 SHORT $LN3@IsNameChar
  0005f	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
  00069	eb 0a		 jmp	 SHORT $LN4@IsNameChar
$LN3@IsNameChar:
  0006b	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv76[ebp], 1
$LN4@IsNameChar:
  00075	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv76[ebp]
; Line 553
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00084	3b ec		 cmp	 ebp, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
?IsNameChar@XMLUtil@tinyxml2@@SA_NE@Z ENDP		; tinyxml2::XMLUtil::IsNameChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsNameStartChar@XMLUtil@tinyxml2@@SA_NE@Z
_TEXT	SEGMENT
tv74 = -196						; size = 4
_ch$ = 8						; size = 1
?IsNameStartChar@XMLUtil@tinyxml2@@SA_NE@Z PROC		; tinyxml2::XMLUtil::IsNameStartChar, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 537
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 538
  0001e	0f b6 45 08	 movzx	 eax, BYTE PTR _ch$[ebp]
  00022	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  00027	7c 04		 jl	 SHORT $LN2@IsNameStar
; Line 540
  00029	b0 01		 mov	 al, 1
  0002b	eb 4d		 jmp	 SHORT $LN3@IsNameStar
$LN2@IsNameStar:
; Line 542
  0002d	0f b6 45 08	 movzx	 eax, BYTE PTR _ch$[ebp]
  00031	8b f4		 mov	 esi, esp
  00033	50		 push	 eax
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__isalpha
  0003a	83 c4 04	 add	 esp, 4
  0003d	3b f4		 cmp	 esi, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	85 c0		 test	 eax, eax
  00046	74 04		 je	 SHORT $LN1@IsNameStar
; Line 543
  00048	b0 01		 mov	 al, 1
  0004a	eb 2e		 jmp	 SHORT $LN3@IsNameStar
$LN1@IsNameStar:
; Line 545
  0004c	0f b6 45 08	 movzx	 eax, BYTE PTR _ch$[ebp]
  00050	83 f8 3a	 cmp	 eax, 58			; 0000003aH
  00053	74 15		 je	 SHORT $LN5@IsNameStar
  00055	0f b6 4d 08	 movzx	 ecx, BYTE PTR _ch$[ebp]
  00059	83 f9 5f	 cmp	 ecx, 95			; 0000005fH
  0005c	74 0c		 je	 SHORT $LN5@IsNameStar
  0005e	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
  00068	eb 0a		 jmp	 SHORT $LN6@IsNameStar
$LN5@IsNameStar:
  0006a	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv74[ebp], 1
$LN6@IsNameStar:
  00074	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv74[ebp]
$LN3@IsNameStar:
; Line 546
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
?IsNameStartChar@XMLUtil@tinyxml2@@SA_NE@Z ENDP		; tinyxml2::XMLUtil::IsNameStartChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsWhiteSpace@XMLUtil@tinyxml2@@SA_ND@Z
_TEXT	SEGMENT
tv72 = -196						; size = 4
_p$ = 8							; size = 1
?IsWhiteSpace@XMLUtil@tinyxml2@@SA_ND@Z PROC		; tinyxml2::XMLUtil::IsWhiteSpace, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 533
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 534
  0001e	0f b6 45 08	 movzx	 eax, BYTE PTR _p$[ebp]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ?IsUTF8Continuation@XMLUtil@tinyxml2@@SA_ND@Z ; tinyxml2::XMLUtil::IsUTF8Continuation
  00028	83 c4 04	 add	 esp, 4
  0002b	0f b6 c8	 movzx	 ecx, al
  0002e	85 c9		 test	 ecx, ecx
  00030	75 27		 jne	 SHORT $LN3@IsWhiteSpa
  00032	0f b6 55 08	 movzx	 edx, BYTE PTR _p$[ebp]
  00036	8b f4		 mov	 esi, esp
  00038	52		 push	 edx
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__isspace
  0003f	83 c4 04	 add	 esp, 4
  00042	3b f4		 cmp	 esi, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	85 c0		 test	 eax, eax
  0004b	74 0c		 je	 SHORT $LN3@IsWhiteSpa
  0004d	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv72[ebp], 1
  00057	eb 0a		 jmp	 SHORT $LN4@IsWhiteSpa
$LN3@IsWhiteSpa:
  00059	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv72[ebp], 0
$LN4@IsWhiteSpa:
  00063	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv72[ebp]
; Line 535
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
  0006c	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00072	3b ec		 cmp	 ebp, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
?IsWhiteSpace@XMLUtil@tinyxml2@@SA_ND@Z ENDP		; tinyxml2::XMLUtil::IsWhiteSpace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPADPAD@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPADPAD@Z PROC	; tinyxml2::XMLUtil::SkipWhiteSpace, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 527
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 528
  0001e	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPBDPBD@Z ; tinyxml2::XMLUtil::SkipWhiteSpace
  00027	83 c4 04	 add	 esp, 4
; Line 529
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPADPAD@Z ENDP	; tinyxml2::XMLUtil::SkipWhiteSpace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPBDPBD@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPBDPBD@Z PROC	; tinyxml2::XMLUtil::SkipWhiteSpace, COMDAT
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 519
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 520
  0001e	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00022	75 01		 jne	 SHORT $LN3@SkipWhiteS
  00024	cc		 int	 3
$LN3@SkipWhiteS:
; Line 521
  00025	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00028	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0002b	51		 push	 ecx
  0002c	e8 00 00 00 00	 call	 ?IsWhiteSpace@XMLUtil@tinyxml2@@SA_ND@Z ; tinyxml2::XMLUtil::IsWhiteSpace
  00031	83 c4 04	 add	 esp, 4
  00034	0f b6 d0	 movzx	 edx, al
  00037	85 d2		 test	 edx, edx
  00039	74 0b		 je	 SHORT $LN2@SkipWhiteS
; Line 522
  0003b	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003e	83 c0 01	 add	 eax, 1
  00041	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 523
  00044	eb df		 jmp	 SHORT $LN3@SkipWhiteS
$LN2@SkipWhiteS:
; Line 524
  00046	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  0004a	75 01		 jne	 SHORT $LN1@SkipWhiteS
  0004c	cc		 int	 3
$LN1@SkipWhiteS:
; Line 525
  0004d	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
; Line 526
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPBDPBD@Z ENDP	; tinyxml2::XMLUtil::SkipWhiteSpace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GXMLVisitor@tinyxml2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GXMLVisitor@tinyxml2@@UAEPAXI@Z PROC			; tinyxml2::XMLVisitor::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1XMLVisitor@tinyxml2@@UAE@XZ ; tinyxml2::XMLVisitor::~XMLVisitor
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_GXMLVisitor@tinyxml2@@UAEPAXI@Z ENDP			; tinyxml2::XMLVisitor::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0XMLVisitor@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0XMLVisitor@tinyxml2@@QAE@XZ PROC			; tinyxml2::XMLVisitor::XMLVisitor, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLVisitor@tinyxml2@@6B@
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??0XMLVisitor@tinyxml2@@QAE@XZ ENDP			; tinyxml2::XMLVisitor::XMLVisitor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLUnknown@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLUnknown@2@@Z PROC ; tinyxml2::XMLVisitor::Visit, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 481
  00023	b0 01		 mov	 al, 1
; Line 482
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLUnknown@2@@Z ENDP ; tinyxml2::XMLVisitor::Visit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLComment@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLComment@2@@Z PROC ; tinyxml2::XMLVisitor::Visit, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 476
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 477
  00023	b0 01		 mov	 al, 1
; Line 478
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLComment@2@@Z ENDP ; tinyxml2::XMLVisitor::Visit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLText@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLText@2@@Z PROC	; tinyxml2::XMLVisitor::Visit, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 472
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 473
  00023	b0 01		 mov	 al, 1
; Line 474
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLText@2@@Z ENDP	; tinyxml2::XMLVisitor::Visit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z PROC ; tinyxml2::XMLVisitor::Visit, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 468
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 469
  00023	b0 01		 mov	 al, 1
; Line 470
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?Visit@XMLVisitor@tinyxml2@@UAE_NABVXMLDeclaration@2@@Z ENDP ; tinyxml2::XMLVisitor::Visit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@@Z PROC ; tinyxml2::XMLVisitor::VisitExit, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 463
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 464
  00023	b0 01		 mov	 al, 1
; Line 465
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@@Z ENDP ; tinyxml2::XMLVisitor::VisitExit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z PROC ; tinyxml2::XMLVisitor::VisitEnter, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 459
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 460
  00023	b0 01		 mov	 al, 1
; Line 461
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLElement@2@PBVXMLAttribute@2@@Z ENDP ; tinyxml2::XMLVisitor::VisitEnter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z PROC ; tinyxml2::XMLVisitor::VisitExit, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 454
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 455
  00023	b0 01		 mov	 al, 1
; Line 456
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?VisitExit@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z ENDP ; tinyxml2::XMLVisitor::VisitExit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z PROC ; tinyxml2::XMLVisitor::VisitEnter, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 450
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 451
  00023	b0 01		 mov	 al, 1
; Line 452
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?VisitEnter@XMLVisitor@tinyxml2@@UAE_NABVXMLDocument@2@@Z ENDP ; tinyxml2::XMLVisitor::VisitEnter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1XMLVisitor@tinyxml2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1XMLVisitor@tinyxml2@@UAE@XZ PROC			; tinyxml2::XMLVisitor::~XMLVisitor, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 447
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7XMLVisitor@tinyxml2@@6B@
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1XMLVisitor@tinyxml2@@UAE@XZ ENDP			; tinyxml2::XMLVisitor::~XMLVisitor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GMemPool@tinyxml2@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GMemPool@tinyxml2@@UAEPAXI@Z PROC			; tinyxml2::MemPool::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1MemPool@tinyxml2@@UAE@XZ ; tinyxml2::MemPool::~MemPool
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_GMemPool@tinyxml2@@UAEPAXI@Z ENDP			; tinyxml2::MemPool::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1MemPool@tinyxml2@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1MemPool@tinyxml2@@UAE@XZ PROC			; tinyxml2::MemPool::~MemPool, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 301
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7MemPool@tinyxml2@@6B@
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1MemPool@tinyxml2@@UAE@XZ ENDP			; tinyxml2::MemPool::~MemPool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0MemPool@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0MemPool@tinyxml2@@QAE@XZ PROC			; tinyxml2::MemPool::MemPool, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 300
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7MemPool@tinyxml2@@6B@
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??0MemPool@tinyxml2@@QAE@XZ ENDP			; tinyxml2::MemPool::MemPool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@StrPair@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@StrPair@tinyxml2@@QAEXI@Z PROC	; tinyxml2::StrPair::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00026	50		 push	 eax
  00027	6a 00		 push	 0
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?__autoclassinit2@StrPair@tinyxml2@@QAEXI@Z ENDP	; tinyxml2::StrPair::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CollapseWhitespace@StrPair@tinyxml2@@AAEXXZ
_TEXT	SEGMENT
_q$1 = -32						; size = 4
_p$2 = -20						; size = 4
_this$ = -8						; size = 4
?CollapseWhitespace@StrPair@tinyxml2@@AAEXXZ PROC	; tinyxml2::StrPair::CollapseWhitespace, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 232
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 234
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	81 e1 00 02 00
	00		 and	 ecx, 512		; 00000200H
  0002e	74 01		 je	 SHORT $LN6@CollapseWh
  00030	cc		 int	 3
$LN6@CollapseWh:
; Line 236
  00031	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00037	51		 push	 ecx
  00038	e8 00 00 00 00	 call	 ?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPADPAD@Z ; tinyxml2::XMLUtil::SkipWhiteSpace
  0003d	83 c4 04	 add	 esp, 4
  00040	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00043	89 42 04	 mov	 DWORD PTR [edx+4], eax
; Line 238
  00046	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004c	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  0004f	85 d2		 test	 edx, edx
  00051	0f 84 80 00 00
	00		 je	 $LN7@CollapseWh
; Line 239
  00057	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0005d	89 4d ec	 mov	 DWORD PTR _p$2[ebp], ecx
; Line 240
  00060	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00066	89 4d e0	 mov	 DWORD PTR _q$1[ebp], ecx
$LN4@CollapseWh:
; Line 242
  00069	8b 45 ec	 mov	 eax, DWORD PTR _p$2[ebp]
  0006c	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0006f	85 c9		 test	 ecx, ecx
  00071	74 5e		 je	 SHORT $LN3@CollapseWh
; Line 243
  00073	8b 45 ec	 mov	 eax, DWORD PTR _p$2[ebp]
  00076	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 ?IsWhiteSpace@XMLUtil@tinyxml2@@SA_ND@Z ; tinyxml2::XMLUtil::IsWhiteSpace
  0007f	83 c4 04	 add	 esp, 4
  00082	0f b6 d0	 movzx	 edx, al
  00085	85 d2		 test	 edx, edx
  00087	74 2a		 je	 SHORT $LN2@CollapseWh
; Line 244
  00089	8b 45 ec	 mov	 eax, DWORD PTR _p$2[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?SkipWhiteSpace@XMLUtil@tinyxml2@@SAPADPAD@Z ; tinyxml2::XMLUtil::SkipWhiteSpace
  00092	83 c4 04	 add	 esp, 4
  00095	89 45 ec	 mov	 DWORD PTR _p$2[ebp], eax
; Line 245
  00098	8b 45 ec	 mov	 eax, DWORD PTR _p$2[ebp]
  0009b	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0009e	85 c9		 test	 ecx, ecx
  000a0	75 02		 jne	 SHORT $LN1@CollapseWh
; Line 246
  000a2	eb 2d		 jmp	 SHORT $LN3@CollapseWh
$LN1@CollapseWh:
; Line 248
  000a4	8b 45 e0	 mov	 eax, DWORD PTR _q$1[ebp]
  000a7	c6 00 20	 mov	 BYTE PTR [eax], 32	; 00000020H
; Line 249
  000aa	8b 45 e0	 mov	 eax, DWORD PTR _q$1[ebp]
  000ad	83 c0 01	 add	 eax, 1
  000b0	89 45 e0	 mov	 DWORD PTR _q$1[ebp], eax
$LN2@CollapseWh:
; Line 251
  000b3	8b 45 e0	 mov	 eax, DWORD PTR _q$1[ebp]
  000b6	8b 4d ec	 mov	 ecx, DWORD PTR _p$2[ebp]
  000b9	8a 11		 mov	 dl, BYTE PTR [ecx]
  000bb	88 10		 mov	 BYTE PTR [eax], dl
; Line 252
  000bd	8b 45 e0	 mov	 eax, DWORD PTR _q$1[ebp]
  000c0	83 c0 01	 add	 eax, 1
  000c3	89 45 e0	 mov	 DWORD PTR _q$1[ebp], eax
; Line 253
  000c6	8b 45 ec	 mov	 eax, DWORD PTR _p$2[ebp]
  000c9	83 c0 01	 add	 eax, 1
  000cc	89 45 ec	 mov	 DWORD PTR _p$2[ebp], eax
; Line 254
  000cf	eb 98		 jmp	 SHORT $LN4@CollapseWh
$LN3@CollapseWh:
; Line 255
  000d1	8b 45 e0	 mov	 eax, DWORD PTR _q$1[ebp]
  000d4	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN7@CollapseWh:
; Line 257
  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
  000da	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000e0	3b ec		 cmp	 ebp, esp
  000e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c3		 ret	 0
?CollapseWhitespace@StrPair@tinyxml2@@AAEXXZ ENDP	; tinyxml2::StrPair::CollapseWhitespace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Reset@StrPair@tinyxml2@@AAEXXZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
?Reset@StrPair@tinyxml2@@AAEXXZ PROC			; tinyxml2::StrPair::Reset, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 168
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 169
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	81 e1 00 02 00
	00		 and	 ecx, 512		; 00000200H
  0002e	74 1b		 je	 SHORT $LN1@Reset
; Line 170
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00036	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  0003c	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00042	52		 push	 edx
  00043	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00048	83 c4 04	 add	 esp, 4
$LN1@Reset:
; Line 172
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 173
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 174
  0005e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00061	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 175
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx
  0006b	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
?Reset@StrPair@tinyxml2@@AAEXXZ ENDP			; tinyxml2::StrPair::Reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?TransferTo@StrPair@tinyxml2@@QAEXPAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_other$ = 8						; size = 4
?TransferTo@StrPair@tinyxml2@@QAEXPAV12@@Z PROC		; tinyxml2::StrPair::TransferTo, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 145
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 146
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	3b 45 08	 cmp	 eax, DWORD PTR _other$[ebp]
  00029	75 02		 jne	 SHORT $LN4@TransferTo
; Line 147
  0002b	eb 64		 jmp	 SHORT $LN5@TransferTo
$LN4@TransferTo:
; Line 152
  0002d	8b 45 08	 mov	 eax, DWORD PTR _other$[ebp]
  00030	83 38 00	 cmp	 DWORD PTR [eax], 0
  00033	74 01		 je	 SHORT $LN3@TransferTo
  00035	cc		 int	 3
$LN3@TransferTo:
; Line 153
  00036	8b 45 08	 mov	 eax, DWORD PTR _other$[ebp]
  00039	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0003d	74 01		 je	 SHORT $LN2@TransferTo
  0003f	cc		 int	 3
$LN2@TransferTo:
; Line 154
  00040	8b 45 08	 mov	 eax, DWORD PTR _other$[ebp]
  00043	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00047	74 01		 je	 SHORT $LN1@TransferTo
  00049	cc		 int	 3
$LN1@TransferTo:
; Line 156
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR _other$[ebp]
  0004d	e8 00 00 00 00	 call	 ?Reset@StrPair@tinyxml2@@AAEXXZ ; tinyxml2::StrPair::Reset
; Line 158
  00052	8b 45 08	 mov	 eax, DWORD PTR _other$[ebp]
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005a	89 10		 mov	 DWORD PTR [eax], edx
; Line 159
  0005c	8b 45 08	 mov	 eax, DWORD PTR _other$[ebp]
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00065	89 50 04	 mov	 DWORD PTR [eax+4], edx
; Line 160
  00068	8b 45 08	 mov	 eax, DWORD PTR _other$[ebp]
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00071	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 162
  00074	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00077	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 163
  0007d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00080	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 164
  00087	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008a	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
$LN5@TransferTo:
; Line 165
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0009a	3b ec		 cmp	 ebp, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c2 04 00	 ret	 4
?TransferTo@StrPair@tinyxml2@@QAEXPAV12@@Z ENDP		; tinyxml2::StrPair::TransferTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ParseName@StrPair@tinyxml2@@QAEPADPAD@Z
_TEXT	SEGMENT
_start$ = -20						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?ParseName@StrPair@tinyxml2@@QAEPADPAD@Z PROC		; tinyxml2::StrPair::ParseName, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 212
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 213
  00023	83 7d 08 00	 cmp	 DWORD PTR _p$[ebp], 0
  00027	74 0a		 je	 SHORT $LN4@ParseName
  00029	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0002c	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0002f	85 c9		 test	 ecx, ecx
  00031	75 04		 jne	 SHORT $LN5@ParseName
$LN4@ParseName:
; Line 214
  00033	33 c0		 xor	 eax, eax
  00035	eb 69		 jmp	 SHORT $LN6@ParseName
$LN5@ParseName:
; Line 216
  00037	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0003a	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 ?IsNameStartChar@XMLUtil@tinyxml2@@SA_NE@Z ; tinyxml2::XMLUtil::IsNameStartChar
  00043	83 c4 04	 add	 esp, 4
  00046	0f b6 d0	 movzx	 edx, al
  00049	85 d2		 test	 edx, edx
  0004b	75 04		 jne	 SHORT $LN3@ParseName
; Line 217
  0004d	33 c0		 xor	 eax, eax
  0004f	eb 4f		 jmp	 SHORT $LN6@ParseName
$LN3@ParseName:
; Line 220
  00051	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00054	89 45 ec	 mov	 DWORD PTR _start$[ebp], eax
; Line 221
  00057	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0005a	83 c0 01	 add	 eax, 1
  0005d	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
$LN2@ParseName:
; Line 222
  00060	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00063	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00066	85 c9		 test	 ecx, ecx
  00068	74 21		 je	 SHORT $LN1@ParseName
  0006a	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0006d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ?IsNameChar@XMLUtil@tinyxml2@@SA_NE@Z ; tinyxml2::XMLUtil::IsNameChar
  00076	83 c4 04	 add	 esp, 4
  00079	0f b6 d0	 movzx	 edx, al
  0007c	85 d2		 test	 edx, edx
  0007e	74 0b		 je	 SHORT $LN1@ParseName
; Line 223
  00080	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00083	83 c0 01	 add	 eax, 1
  00086	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 224
  00089	eb d5		 jmp	 SHORT $LN2@ParseName
$LN1@ParseName:
; Line 226
  0008b	6a 00		 push	 0
  0008d	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00090	50		 push	 eax
  00091	8b 4d ec	 mov	 ecx, DWORD PTR _start$[ebp]
  00094	51		 push	 ecx
  00095	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ?Set@StrPair@tinyxml2@@QAEXPAD0H@Z ; tinyxml2::StrPair::Set
; Line 227
  0009d	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
$LN6@ParseName:
; Line 228
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000a9	3b ec		 cmp	 ebp, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
?ParseName@StrPair@tinyxml2@@QAEPADPAD@Z ENDP		; tinyxml2::StrPair::ParseName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ParseText@StrPair@tinyxml2@@QAEPADPADPBDH@Z
_TEXT	SEGMENT
tv67 = -244						; size = 4
_length$ = -44						; size = 4
_endChar$ = -29						; size = 1
_start$ = -20						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
_endTag$ = 12						; size = 4
_strFlags$ = 16						; size = 4
?ParseText@StrPair@tinyxml2@@QAEPADPADPBDH@Z PROC	; tinyxml2::StrPair::ParseText, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 192
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f4 00 00
	00		 sub	 esp, 244		; 000000f4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00013	b9 3d 00 00 00	 mov	 ecx, 61			; 0000003dH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 193
  00023	83 7d 0c 00	 cmp	 DWORD PTR _endTag$[ebp], 0
  00027	74 16		 je	 SHORT $LN7@ParseText
  00029	8b 45 0c	 mov	 eax, DWORD PTR _endTag$[ebp]
  0002c	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0002f	85 c9		 test	 ecx, ecx
  00031	74 0c		 je	 SHORT $LN7@ParseText
  00033	c7 85 0c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv67[ebp], 1
  0003d	eb 0a		 jmp	 SHORT $LN8@ParseText
$LN7@ParseText:
  0003f	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv67[ebp], 0
$LN8@ParseText:
  00049	83 bd 0c ff ff
	ff 00		 cmp	 DWORD PTR tv67[ebp], 0
  00050	75 01		 jne	 SHORT $LN4@ParseText
  00052	cc		 int	 3
$LN4@ParseText:
; Line 195
  00053	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00056	89 45 ec	 mov	 DWORD PTR _start$[ebp], eax
; Line 196
  00059	8b 45 0c	 mov	 eax, DWORD PTR _endTag$[ebp]
  0005c	8a 08		 mov	 cl, BYTE PTR [eax]
  0005e	88 4d e3	 mov	 BYTE PTR _endChar$[ebp], cl
; Line 197
  00061	8b 45 0c	 mov	 eax, DWORD PTR _endTag$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 _strlen
  0006a	83 c4 04	 add	 esp, 4
  0006d	89 45 d4	 mov	 DWORD PTR _length$[ebp], eax
$LN3@ParseText:
; Line 200
  00070	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00073	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00076	85 c9		 test	 ecx, ecx
  00078	74 57		 je	 SHORT $LN2@ParseText
; Line 201
  0007a	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0007d	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00080	0f be 55 e3	 movsx	 edx, BYTE PTR _endChar$[ebp]
  00084	3b ca		 cmp	 ecx, edx
  00086	75 3e		 jne	 SHORT $LN1@ParseText
  00088	8b f4		 mov	 esi, esp
  0008a	8b 45 d4	 mov	 eax, DWORD PTR _length$[ebp]
  0008d	50		 push	 eax
  0008e	8b 4d 0c	 mov	 ecx, DWORD PTR _endTag$[ebp]
  00091	51		 push	 ecx
  00092	8b 55 08	 mov	 edx, DWORD PTR _p$[ebp]
  00095	52		 push	 edx
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009f	3b f4		 cmp	 esi, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	85 c0		 test	 eax, eax
  000a8	75 1c		 jne	 SHORT $LN1@ParseText
; Line 202
  000aa	8b 45 10	 mov	 eax, DWORD PTR _strFlags$[ebp]
  000ad	50		 push	 eax
  000ae	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  000b1	51		 push	 ecx
  000b2	8b 55 ec	 mov	 edx, DWORD PTR _start$[ebp]
  000b5	52		 push	 edx
  000b6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	e8 00 00 00 00	 call	 ?Set@StrPair@tinyxml2@@QAEXPAD0H@Z ; tinyxml2::StrPair::Set
; Line 203
  000be	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000c1	03 45 d4	 add	 eax, DWORD PTR _length$[ebp]
  000c4	eb 0d		 jmp	 SHORT $LN5@ParseText
$LN1@ParseText:
; Line 205
  000c6	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  000c9	83 c0 01	 add	 eax, 1
  000cc	89 45 08	 mov	 DWORD PTR _p$[ebp], eax
; Line 206
  000cf	eb 9f		 jmp	 SHORT $LN3@ParseText
$LN2@ParseText:
; Line 207
  000d1	33 c0		 xor	 eax, eax
$LN5@ParseText:
; Line 208
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000dc	3b ec		 cmp	 ebp, esp
  000de	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 0c 00	 ret	 12			; 0000000cH
?ParseText@StrPair@tinyxml2@@QAEPADPADPBDH@Z ENDP	; tinyxml2::StrPair::ParseText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetStr@StrPair@tinyxml2@@QAEXPBDH@Z
_TEXT	SEGMENT
$T1 = -224						; size = 4
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_str$ = 8						; size = 4
_flags$ = 12						; size = 4
?SetStr@StrPair@tinyxml2@@QAEXPBDH@Z PROC		; tinyxml2::StrPair::SetStr, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 179
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 180
  00023	83 7d 08 00	 cmp	 DWORD PTR _str$[ebp], 0
  00027	75 01		 jne	 SHORT $LN2@SetStr
  00029	cc		 int	 3
$LN2@SetStr:
; Line 181
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?Reset@StrPair@tinyxml2@@AAEXXZ ; tinyxml2::StrPair::Reset
; Line 182
  00032	8b 45 08	 mov	 eax, DWORD PTR _str$[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 _strlen
  0003b	83 c4 04	 add	 esp, 4
  0003e	89 45 ec	 mov	 DWORD PTR _len$[ebp], eax
; Line 183
  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00048	74 01		 je	 SHORT $LN1@SetStr
  0004a	cc		 int	 3
$LN1@SetStr:
; Line 184
  0004b	8b 45 ec	 mov	 eax, DWORD PTR _len$[ebp]
  0004e	83 c0 01	 add	 eax, 1
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00057	83 c4 04	 add	 esp, 4
  0005a	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00060	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00069	89 51 04	 mov	 DWORD PTR [ecx+4], edx
; Line 185
  0006c	8b 45 ec	 mov	 eax, DWORD PTR _len$[ebp]
  0006f	83 c0 01	 add	 eax, 1
  00072	50		 push	 eax
  00073	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  00076	51		 push	 ecx
  00077	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 _memcpy
  00083	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 186
  00086	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00089	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008c	03 4d ec	 add	 ecx, DWORD PTR _len$[ebp]
  0008f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00092	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 187
  00095	8b 45 0c	 mov	 eax, DWORD PTR _flags$[ebp]
  00098	0d 00 02 00 00	 or	 eax, 512		; 00000200H
  0009d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	89 01		 mov	 DWORD PTR [ecx], eax
; Line 188
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	5b		 pop	 ebx
  000a5	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000ab	3b ec		 cmp	 ebp, esp
  000ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c2 08 00	 ret	 8
?SetStr@StrPair@tinyxml2@@QAEXPBDH@Z ENDP		; tinyxml2::StrPair::SetStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetInternedStr@StrPair@tinyxml2@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
?SetInternedStr@StrPair@tinyxml2@@QAEXPBD@Z PROC	; tinyxml2::StrPair::SetInternedStr, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 148
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 149
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Reset@StrPair@tinyxml2@@AAEXXZ ; tinyxml2::StrPair::Reset
; Line 150
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _str$[ebp]
  00031	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; Line 151
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
?SetInternedStr@StrPair@tinyxml2@@QAEXPBD@Z ENDP	; tinyxml2::StrPair::SetInternedStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Empty@StrPair@tinyxml2@@QBE_NXZ
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
?Empty@StrPair@tinyxml2@@QBE_NXZ PROC			; tinyxml2::StrPair::Empty, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 144
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 145
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0002c	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0002f	75 0c		 jne	 SHORT $LN3@Empty
  00031	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv67[ebp], 1
  0003b	eb 0a		 jmp	 SHORT $LN4@Empty
$LN3@Empty:
  0003d	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv67[ebp], 0
$LN4@Empty:
  00047	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv67[ebp]
; Line 146
  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
?Empty@StrPair@tinyxml2@@QBE_NXZ ENDP			; tinyxml2::StrPair::Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetStr@StrPair@tinyxml2@@QAEPBDXZ
_TEXT	SEGMENT
tv156 = -328						; size = 4
_entity$1 = -128					; size = 4
_i$2 = -116						; size = 4
_entityFound$3 = -101					; size = 1
_adjusted$4 = -92					; size = 4
_len$5 = -80						; size = 4
_buf$6 = -68						; size = 10
_buflen$7 = -48						; size = 4
_q$8 = -36						; size = 4
_p$9 = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?GetStr@StrPair@tinyxml2@@QAEPBDXZ PROC			; tinyxml2::StrPair::GetStr, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 261
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 48 01 00
	00		 sub	 esp, 328		; 00000148H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd b8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-328]
  00013	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 262
  0002d	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00034	75 01		 jne	 SHORT $LN29@GetStr
  00036	cc		 int	 3
$LN29@GetStr:
; Line 263
  00037	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0003e	75 01		 jne	 SHORT $LN28@GetStr
  00040	cc		 int	 3
$LN28@GetStr:
; Line 264
  00041	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b 08		 mov	 ecx, DWORD PTR [eax]
  00046	81 e1 00 01 00
	00		 and	 ecx, 256		; 00000100H
  0004c	0f 84 b6 02 00
	00		 je	 $LN27@GetStr
; Line 265
  00052	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00058	c6 01 00	 mov	 BYTE PTR [ecx], 0
; Line 266
  0005b	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00060	81 f1 00 01 00
	00		 xor	 ecx, 256		; 00000100H
  00066	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00069	89 0a		 mov	 DWORD PTR [edx], ecx
; Line 268
  0006b	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00071	0f 84 6f 02 00
	00		 je	 $LN26@GetStr
; Line 269
  00077	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007d	89 4d e8	 mov	 DWORD PTR _p$9[ebp], ecx
; Line 270
  00080	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00086	89 4d dc	 mov	 DWORD PTR _q$8[ebp], ecx
$LN25@GetStr:
; Line 272
  00089	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	8b 4d e8	 mov	 ecx, DWORD PTR _p$9[ebp]
  0008f	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00092	0f 83 48 02 00
	00		 jae	 $LN24@GetStr
; Line 273
  00098	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0009b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009d	83 e1 02	 and	 ecx, 2
  000a0	74 3f		 je	 SHORT $LN23@GetStr
  000a2	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  000a5	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000a8	83 f9 0d	 cmp	 ecx, 13			; 0000000dH
  000ab	75 34		 jne	 SHORT $LN23@GetStr
; Line 277
  000ad	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  000b0	0f be 48 01	 movsx	 ecx, BYTE PTR [eax+1]
  000b4	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  000b7	75 0b		 jne	 SHORT $LN22@GetStr
; Line 278
  000b9	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  000bc	83 c0 02	 add	 eax, 2
  000bf	89 45 e8	 mov	 DWORD PTR _p$9[ebp], eax
; Line 280
  000c2	eb 09		 jmp	 SHORT $LN21@GetStr
$LN22@GetStr:
; Line 281
  000c4	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  000c7	83 c0 01	 add	 eax, 1
  000ca	89 45 e8	 mov	 DWORD PTR _p$9[ebp], eax
$LN21@GetStr:
; Line 283
  000cd	8b 45 dc	 mov	 eax, DWORD PTR _q$8[ebp]
  000d0	c6 00 0a	 mov	 BYTE PTR [eax], 10	; 0000000aH
  000d3	8b 4d dc	 mov	 ecx, DWORD PTR _q$8[ebp]
  000d6	83 c1 01	 add	 ecx, 1
  000d9	89 4d dc	 mov	 DWORD PTR _q$8[ebp], ecx
  000dc	e9 fa 01 00 00	 jmp	 $LN20@GetStr
$LN23@GetStr:
; Line 285
  000e1	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e6	83 e1 02	 and	 ecx, 2
  000e9	74 3f		 je	 SHORT $LN19@GetStr
  000eb	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  000ee	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000f1	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  000f4	75 34		 jne	 SHORT $LN19@GetStr
; Line 286
  000f6	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  000f9	0f be 48 01	 movsx	 ecx, BYTE PTR [eax+1]
  000fd	83 f9 0d	 cmp	 ecx, 13			; 0000000dH
  00100	75 0b		 jne	 SHORT $LN18@GetStr
; Line 287
  00102	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  00105	83 c0 02	 add	 eax, 2
  00108	89 45 e8	 mov	 DWORD PTR _p$9[ebp], eax
; Line 289
  0010b	eb 09		 jmp	 SHORT $LN17@GetStr
$LN18@GetStr:
; Line 290
  0010d	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  00110	83 c0 01	 add	 eax, 1
  00113	89 45 e8	 mov	 DWORD PTR _p$9[ebp], eax
$LN17@GetStr:
; Line 292
  00116	8b 45 dc	 mov	 eax, DWORD PTR _q$8[ebp]
  00119	c6 00 0a	 mov	 BYTE PTR [eax], 10	; 0000000aH
  0011c	8b 4d dc	 mov	 ecx, DWORD PTR _q$8[ebp]
  0011f	83 c1 01	 add	 ecx, 1
  00122	89 4d dc	 mov	 DWORD PTR _q$8[ebp], ecx
  00125	e9 b1 01 00 00	 jmp	 $LN20@GetStr
$LN19@GetStr:
; Line 294
  0012a	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0012d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012f	83 e1 01	 and	 ecx, 1
  00132	0f 84 87 01 00
	00		 je	 $LN15@GetStr
  00138	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  0013b	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0013e	83 f9 26	 cmp	 ecx, 38			; 00000026H
  00141	0f 85 78 01 00
	00		 jne	 $LN15@GetStr
; Line 300
  00147	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  0014a	0f be 48 01	 movsx	 ecx, BYTE PTR [eax+1]
  0014e	83 f9 23	 cmp	 ecx, 35			; 00000023H
  00151	0f 85 b8 00 00
	00		 jne	 $LN14@GetStr
; Line 301
  00157	c7 45 d0 0a 00
	00 00		 mov	 DWORD PTR _buflen$7[ebp], 10 ; 0000000aH
; Line 302
  0015e	c6 45 bc 00	 mov	 BYTE PTR _buf$6[ebp], 0
  00162	33 c0		 xor	 eax, eax
  00164	89 45 bd	 mov	 DWORD PTR _buf$6[ebp+1], eax
  00167	89 45 c1	 mov	 DWORD PTR _buf$6[ebp+5], eax
  0016a	88 45 c5	 mov	 BYTE PTR _buf$6[ebp+9], al
; Line 303
  0016d	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _len$5[ebp], 0
; Line 304
  00174	8d 45 b0	 lea	 eax, DWORD PTR _len$5[ebp]
  00177	50		 push	 eax
  00178	8d 4d bc	 lea	 ecx, DWORD PTR _buf$6[ebp]
  0017b	51		 push	 ecx
  0017c	8b 55 e8	 mov	 edx, DWORD PTR _p$9[ebp]
  0017f	52		 push	 edx
  00180	e8 00 00 00 00	 call	 ?GetCharacterRef@XMLUtil@tinyxml2@@SAPBDPBDPADPAH@Z ; tinyxml2::XMLUtil::GetCharacterRef
  00185	83 c4 0c	 add	 esp, 12			; 0000000cH
  00188	89 45 a4	 mov	 DWORD PTR _adjusted$4[ebp], eax
; Line 305
  0018b	83 7d a4 00	 cmp	 DWORD PTR _adjusted$4[ebp], 0
  0018f	75 1e		 jne	 SHORT $LN13@GetStr
; Line 306
  00191	8b 45 dc	 mov	 eax, DWORD PTR _q$8[ebp]
  00194	8b 4d e8	 mov	 ecx, DWORD PTR _p$9[ebp]
  00197	8a 11		 mov	 dl, BYTE PTR [ecx]
  00199	88 10		 mov	 BYTE PTR [eax], dl
; Line 307
  0019b	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  0019e	83 c0 01	 add	 eax, 1
  001a1	89 45 e8	 mov	 DWORD PTR _p$9[ebp], eax
; Line 308
  001a4	8b 45 dc	 mov	 eax, DWORD PTR _q$8[ebp]
  001a7	83 c0 01	 add	 eax, 1
  001aa	89 45 dc	 mov	 DWORD PTR _q$8[ebp], eax
; Line 310
  001ad	eb 5b		 jmp	 SHORT $LN12@GetStr
$LN13@GetStr:
; Line 311
  001af	83 7d b0 00	 cmp	 DWORD PTR _len$5[ebp], 0
  001b3	7c 12		 jl	 SHORT $LN32@GetStr
  001b5	83 7d b0 0a	 cmp	 DWORD PTR _len$5[ebp], 10 ; 0000000aH
  001b9	7f 0c		 jg	 SHORT $LN32@GetStr
  001bb	c7 85 b8 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv156[ebp], 1
  001c5	eb 0a		 jmp	 SHORT $LN33@GetStr
$LN32@GetStr:
  001c7	c7 85 b8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv156[ebp], 0
$LN33@GetStr:
  001d1	83 bd b8 fe ff
	ff 00		 cmp	 DWORD PTR tv156[ebp], 0
  001d8	75 01		 jne	 SHORT $LN11@GetStr
  001da	cc		 int	 3
$LN11@GetStr:
; Line 312
  001db	8b 45 dc	 mov	 eax, DWORD PTR _q$8[ebp]
  001de	03 45 b0	 add	 eax, DWORD PTR _len$5[ebp]
  001e1	3b 45 a4	 cmp	 eax, DWORD PTR _adjusted$4[ebp]
  001e4	76 01		 jbe	 SHORT $LN10@GetStr
  001e6	cc		 int	 3
$LN10@GetStr:
; Line 313
  001e7	8b 45 a4	 mov	 eax, DWORD PTR _adjusted$4[ebp]
  001ea	89 45 e8	 mov	 DWORD PTR _p$9[ebp], eax
; Line 314
  001ed	8b 45 b0	 mov	 eax, DWORD PTR _len$5[ebp]
  001f0	50		 push	 eax
  001f1	8d 4d bc	 lea	 ecx, DWORD PTR _buf$6[ebp]
  001f4	51		 push	 ecx
  001f5	8b 55 dc	 mov	 edx, DWORD PTR _q$8[ebp]
  001f8	52		 push	 edx
  001f9	e8 00 00 00 00	 call	 _memcpy
  001fe	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 315
  00201	8b 45 dc	 mov	 eax, DWORD PTR _q$8[ebp]
  00204	03 45 b0	 add	 eax, DWORD PTR _len$5[ebp]
  00207	89 45 dc	 mov	 DWORD PTR _q$8[ebp], eax
$LN12@GetStr:
; Line 318
  0020a	e9 ae 00 00 00	 jmp	 $LN9@GetStr
$LN14@GetStr:
; Line 319
  0020f	c6 45 9b 00	 mov	 BYTE PTR _entityFound$3[ebp], 0
; Line 320
  00213	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  0021a	eb 09		 jmp	 SHORT $LN8@GetStr
$LN7@GetStr:
  0021c	8b 45 8c	 mov	 eax, DWORD PTR _i$2[ebp]
  0021f	83 c0 01	 add	 eax, 1
  00222	89 45 8c	 mov	 DWORD PTR _i$2[ebp], eax
$LN8@GetStr:
  00225	83 7d 8c 05	 cmp	 DWORD PTR _i$2[ebp], 5
  00229	7d 78		 jge	 SHORT $LN6@GetStr
; Line 321
  0022b	6b 45 8c 0c	 imul	 eax, DWORD PTR _i$2[ebp], 12
  0022f	05 00 00 00 00	 add	 eax, OFFSET _entities
  00234	89 45 80	 mov	 DWORD PTR _entity$1[ebp], eax
; Line 323
  00237	8b f4		 mov	 esi, esp
  00239	8b 45 80	 mov	 eax, DWORD PTR _entity$1[ebp]
  0023c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0023f	51		 push	 ecx
  00240	8b 55 80	 mov	 edx, DWORD PTR _entity$1[ebp]
  00243	8b 02		 mov	 eax, DWORD PTR [edx]
  00245	50		 push	 eax
  00246	8b 4d e8	 mov	 ecx, DWORD PTR _p$9[ebp]
  00249	83 c1 01	 add	 ecx, 1
  0024c	51		 push	 ecx
  0024d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  00253	83 c4 0c	 add	 esp, 12			; 0000000cH
  00256	3b f4		 cmp	 esi, esp
  00258	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0025d	85 c0		 test	 eax, eax
  0025f	75 3d		 jne	 SHORT $LN5@GetStr
  00261	8b 45 80	 mov	 eax, DWORD PTR _entity$1[ebp]
  00264	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00267	8b 55 e8	 mov	 edx, DWORD PTR _p$9[ebp]
  0026a	0f be 44 0a 01	 movsx	 eax, BYTE PTR [edx+ecx+1]
  0026f	83 f8 3b	 cmp	 eax, 59			; 0000003bH
  00272	75 2a		 jne	 SHORT $LN5@GetStr
; Line 325
  00274	8b 45 dc	 mov	 eax, DWORD PTR _q$8[ebp]
  00277	8b 4d 80	 mov	 ecx, DWORD PTR _entity$1[ebp]
  0027a	8a 51 08	 mov	 dl, BYTE PTR [ecx+8]
  0027d	88 10		 mov	 BYTE PTR [eax], dl
; Line 326
  0027f	8b 45 dc	 mov	 eax, DWORD PTR _q$8[ebp]
  00282	83 c0 01	 add	 eax, 1
  00285	89 45 dc	 mov	 DWORD PTR _q$8[ebp], eax
; Line 327
  00288	8b 45 80	 mov	 eax, DWORD PTR _entity$1[ebp]
  0028b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0028e	8b 55 e8	 mov	 edx, DWORD PTR _p$9[ebp]
  00291	8d 44 0a 02	 lea	 eax, DWORD PTR [edx+ecx+2]
  00295	89 45 e8	 mov	 DWORD PTR _p$9[ebp], eax
; Line 328
  00298	c6 45 9b 01	 mov	 BYTE PTR _entityFound$3[ebp], 1
; Line 329
  0029c	eb 05		 jmp	 SHORT $LN6@GetStr
$LN5@GetStr:
; Line 331
  0029e	e9 79 ff ff ff	 jmp	 $LN7@GetStr
$LN6@GetStr:
; Line 332
  002a3	0f b6 45 9b	 movzx	 eax, BYTE PTR _entityFound$3[ebp]
  002a7	85 c0		 test	 eax, eax
  002a9	75 12		 jne	 SHORT $LN9@GetStr
; Line 334
  002ab	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  002ae	83 c0 01	 add	 eax, 1
  002b1	89 45 e8	 mov	 DWORD PTR _p$9[ebp], eax
; Line 335
  002b4	8b 45 dc	 mov	 eax, DWORD PTR _q$8[ebp]
  002b7	83 c0 01	 add	 eax, 1
  002ba	89 45 dc	 mov	 DWORD PTR _q$8[ebp], eax
$LN9@GetStr:
; Line 339
  002bd	eb 1c		 jmp	 SHORT $LN20@GetStr
$LN15@GetStr:
; Line 340
  002bf	8b 45 dc	 mov	 eax, DWORD PTR _q$8[ebp]
  002c2	8b 4d e8	 mov	 ecx, DWORD PTR _p$9[ebp]
  002c5	8a 11		 mov	 dl, BYTE PTR [ecx]
  002c7	88 10		 mov	 BYTE PTR [eax], dl
; Line 341
  002c9	8b 45 e8	 mov	 eax, DWORD PTR _p$9[ebp]
  002cc	83 c0 01	 add	 eax, 1
  002cf	89 45 e8	 mov	 DWORD PTR _p$9[ebp], eax
; Line 342
  002d2	8b 45 dc	 mov	 eax, DWORD PTR _q$8[ebp]
  002d5	83 c0 01	 add	 eax, 1
  002d8	89 45 dc	 mov	 DWORD PTR _q$8[ebp], eax
$LN20@GetStr:
; Line 344
  002db	e9 a9 fd ff ff	 jmp	 $LN25@GetStr
$LN24@GetStr:
; Line 345
  002e0	8b 45 dc	 mov	 eax, DWORD PTR _q$8[ebp]
  002e3	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN26@GetStr:
; Line 349
  002e6	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  002e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  002eb	83 e1 04	 and	 ecx, 4
  002ee	74 08		 je	 SHORT $LN2@GetStr
; Line 350
  002f0	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  002f3	e8 00 00 00 00	 call	 ?CollapseWhitespace@StrPair@tinyxml2@@AAEXXZ ; tinyxml2::StrPair::CollapseWhitespace
$LN2@GetStr:
; Line 352
  002f8	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  002fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  002fd	81 e1 00 02 00
	00		 and	 ecx, 512		; 00000200H
  00303	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00306	89 0a		 mov	 DWORD PTR [edx], ecx
$LN27@GetStr:
; Line 354
  00308	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0030b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0030f	75 01		 jne	 SHORT $LN1@GetStr
  00311	cc		 int	 3
$LN1@GetStr:
; Line 355
  00312	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00315	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; Line 356
  00318	52		 push	 edx
  00319	8b cd		 mov	 ecx, ebp
  0031b	50		 push	 eax
  0031c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN37@GetStr
  00322	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00327	58		 pop	 eax
  00328	5a		 pop	 edx
  00329	5f		 pop	 edi
  0032a	5e		 pop	 esi
  0032b	5b		 pop	 ebx
  0032c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0032f	33 cd		 xor	 ecx, ebp
  00331	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00336	81 c4 48 01 00
	00		 add	 esp, 328		; 00000148H
  0033c	3b ec		 cmp	 ebp, esp
  0033e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00343	8b e5		 mov	 esp, ebp
  00345	5d		 pop	 ebp
  00346	c3		 ret	 0
  00347	90		 npad	 1
$LN37@GetStr:
  00348	02 00 00 00	 DD	 2
  0034c	00 00 00 00	 DD	 $LN36@GetStr
$LN36@GetStr:
  00350	bc ff ff ff	 DD	 -68			; ffffffbcH
  00354	0a 00 00 00	 DD	 10			; 0000000aH
  00358	00 00 00 00	 DD	 $LN34@GetStr
  0035c	b0 ff ff ff	 DD	 -80			; ffffffb0H
  00360	04 00 00 00	 DD	 4
  00364	00 00 00 00	 DD	 $LN35@GetStr
$LN35@GetStr:
  00368	6c		 DB	 108			; 0000006cH
  00369	65		 DB	 101			; 00000065H
  0036a	6e		 DB	 110			; 0000006eH
  0036b	00		 DB	 0
$LN34@GetStr:
  0036c	62		 DB	 98			; 00000062H
  0036d	75		 DB	 117			; 00000075H
  0036e	66		 DB	 102			; 00000066H
  0036f	00		 DB	 0
?GetStr@StrPair@tinyxml2@@QAEPBDXZ ENDP			; tinyxml2::StrPair::GetStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Set@StrPair@tinyxml2@@QAEXPAD0H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
_flags$ = 16						; size = 4
?Set@StrPair@tinyxml2@@QAEXPAD0H@Z PROC			; tinyxml2::StrPair::Set, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 135
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 136
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Reset@StrPair@tinyxml2@@AAEXXZ ; tinyxml2::StrPair::Reset
; Line 137
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _start$[ebp]
  00031	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; Line 138
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 4d 0c	 mov	 ecx, DWORD PTR _end$[ebp]
  0003a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 139
  0003d	8b 45 10	 mov	 eax, DWORD PTR _flags$[ebp]
  00040	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  00045	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	89 01		 mov	 DWORD PTR [ecx], eax
; Line 140
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 0c 00	 ret	 12			; 0000000cH
?Set@StrPair@tinyxml2@@QAEXPAD0H@Z ENDP			; tinyxml2::StrPair::Set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1StrPair@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1StrPair@tinyxml2@@QAE@XZ PROC			; tinyxml2::StrPair::~StrPair, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.cpp
; Line 139
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 140
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?Reset@StrPair@tinyxml2@@AAEXXZ ; tinyxml2::StrPair::Reset
; Line 141
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1StrPair@tinyxml2@@QAE@XZ ENDP			; tinyxml2::StrPair::~StrPair
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StrPair@tinyxml2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0StrPair@tinyxml2@@QAE@XZ PROC			; tinyxml2::StrPair::StrPair, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 132
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  00040	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
??0StrPair@tinyxml2@@QAE@XZ ENDP			; tinyxml2::StrPair::StrPair
_TEXT	ENDS
END
