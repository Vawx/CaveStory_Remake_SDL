; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\Cavestory\Cavestory\Cavestory\Level.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?value@?$integral_constant@I$07@std@@2IB	; std::integral_constant<unsigned int,8>::value
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?value@?$integral_constant@I$03@std@@2IB	; std::integral_constant<unsigned int,4>::value
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?value@?$integral_constant@I$01@std@@2IB	; std::integral_constant<unsigned int,2>::value
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?value@?$integral_constant@_N$0A@@std@@2_NB	; std::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@I$00@std@@2IB	; std::integral_constant<unsigned int,1>::value
PUBLIC	?value@?$integral_constant@_N$00@std@@2_NB	; std::integral_constant<bool,1>::value
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?value@?$_Maximum@$S@std@@2IB			; std::_Maximum<>::value
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?value@?$integral_constant@I$0A@@std@@2IB	; std::integral_constant<unsigned int,0>::value
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 00H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@std@@2IB DD 00H	; std::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?value@?$_Maximum@$S@std@@2IB
CONST	SEGMENT
?value@?$_Maximum@$S@std@@2IB DD 00H			; std::_Maximum<>::value
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
CONST	SEGMENT
_SPRITE_SCALE DD 040000000r			; 2
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@std@@2_NB DB 01H	; std::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$00@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$00@std@@2IB DD 01H		; std::integral_constant<unsigned int,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@std@@2_NB DB 00H	; std::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 09H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$01@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$01@std@@2IB DD 02H		; std::integral_constant<unsigned int,2>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$03@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$03@std@@2IB DD 04H		; std::integral_constant<unsigned int,4>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$07@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$07@std@@2IB DD 08H		; std::integral_constant<unsigned int,8>::value
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
PUBLIC	_hypot
PUBLIC	_ceilf
PUBLIC	_fabsf
PUBLIC	?ceil@@YAMM@Z					; ceil
PUBLIC	?fabs@@YAMM@Z					; fabs
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?compare@?$char_traits@D@std@@SAHPBD0I@Z	; std::char_traits<char>::compare
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?find@?$char_traits@D@std@@SAPBDPBDIABD@Z	; std::char_traits<char>::find
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?eq@?$char_traits@D@std@@SA_NABD0@Z		; std::char_traits<char>::eq
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ ; std::allocator<char>::select_on_container_copy_construction
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?stoi@std@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAIH@Z ; std::stoi
PUBLIC	??0Vector2@@QAE@XZ				; Vector2::Vector2
PUBLIC	??0Vector2@@QAE@HH@Z				; Vector2::Vector2
PUBLIC	?Zero@Vector2@@SA?AU1@XZ			; Vector2::Zero
PUBLIC	??0_Ignore@std@@QAE@XZ				; std::_Ignore::_Ignore
PUBLIC	??0CaveRectangle@@QAE@HHHH@Z			; CaveRectangle::CaveRectangle
PUBLIC	??1CaveRectangle@@QAE@XZ			; CaveRectangle::~CaveRectangle
PUBLIC	?GetLeft@CaveRectangle@@QBEHXZ			; CaveRectangle::GetLeft
PUBLIC	?GetRight@CaveRectangle@@QBEHXZ			; CaveRectangle::GetRight
PUBLIC	?GetTop@CaveRectangle@@QBEHXZ			; CaveRectangle::GetTop
PUBLIC	?GetBottom@CaveRectangle@@QBEHXZ		; CaveRectangle::GetBottom
PUBLIC	?CollidesWith@CaveRectangle@@QBE_NABV1@@Z	; CaveRectangle::CollidesWith
PUBLIC	??_GCaveRectangle@@QAEPAXI@Z			; CaveRectangle::`scalar deleting destructor'
PUBLIC	?__autoclassinit2@Tile@@QAEXI@Z			; Tile::__autoclassinit2
PUBLIC	??0CaveSlope@@QAE@UVector2@@0@Z			; CaveSlope::CaveSlope
PUBLIC	?CollidesWith@CaveSlope@@QBE_NABVCaveRectangle@@@Z ; CaveSlope::CollidesWith
PUBLIC	??0TileSet@@QAE@XZ				; TileSet::TileSet
PUBLIC	??0TileSet@@QAE@PAUSDL_Texture@@H@Z		; TileSet::TileSet
PUBLIC	??0Level@@QAE@XZ				; Level::Level
PUBLIC	??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z ; Level::Level
PUBLIC	??1Level@@QAE@XZ				; Level::~Level
PUBLIC	?Tick@Level@@QAEXM@Z				; Level::Tick
PUBLIC	?Draw@Level@@QAEXAAVGraphics@@@Z		; Level::Draw
PUBLIC	?DrawCollision@Level@@QAEXAAVGraphics@@@Z	; Level::DrawCollision
PUBLIC	?CheckTileCollision@Level@@QAE?AV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@ABVCaveRectangle@@@Z ; Level::CheckTileCollision
PUBLIC	?CheckSlopeCollision@Level@@QAE?AV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@ABVCaveRectangle@@@Z ; Level::CheckSlopeCollision
PUBLIC	??0?$allocator@USDL_Rect@@@std@@QAE@XZ		; std::allocator<SDL_Rect>::allocator<SDL_Rect>
PUBLIC	?deallocate@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@I@Z ; std::allocator<SDL_Rect>::deallocate
PUBLIC	?allocate@?$allocator@USDL_Rect@@@std@@QAEPAUSDL_Rect@@I@Z ; std::allocator<SDL_Rect>::allocate
PUBLIC	?construct@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@ABU3@@Z ; std::allocator<SDL_Rect>::construct
PUBLIC	?max_size@?$allocator@USDL_Rect@@@std@@QBEIXZ	; std::allocator<SDL_Rect>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAIABV?$allocator@USDL_Rect@@@2@@Z ; std::allocator_traits<std::allocator<SDL_Rect> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::_Wrap_alloc<std::allocator<SDL_Rect> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEPAUSDL_Rect@@I@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@I@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@USDL_Rect@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<SDL_Rect> >::_Vector_val<std::_Simple_types<SDL_Rect> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@USDL_Rect@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<SDL_Rect> >::~_Vector_val<std::_Simple_types<SDL_Rect> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::~_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Getal
PUBLIC	??0?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::vector<SDL_Rect,std::allocator<SDL_Rect> >
PUBLIC	??1?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::~vector<SDL_Rect,std::allocator<SDL_Rect> >
PUBLIC	?capacity@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::capacity
PUBLIC	?_Unused_capacity@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Unused_capacity
PUBLIC	?size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::size
PUBLIC	?max_size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::max_size
PUBLIC	??A?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAEAAUSDL_Rect@@I@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::operator[]
PUBLIC	?push_back@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAEXABUSDL_Rect@@@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::push_back
PUBLIC	?_Destroy@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXPAUSDL_Rect@@0@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Destroy
PUBLIC	?_Grow_to@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEII@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Grow_to
PUBLIC	?_Inside@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBE_NPBUSDL_Rect@@@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Inside
PUBLIC	?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Reallocate
PUBLIC	?_Reserve@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Reserve
PUBLIC	?_Tidy@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Tidy
PUBLIC	?_Xlen@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Orphan_range
PUBLIC	??0?$allocator@VTile@@@std@@QAE@XZ		; std::allocator<Tile>::allocator<Tile>
PUBLIC	?deallocate@?$allocator@VTile@@@std@@QAEXPAVTile@@I@Z ; std::allocator<Tile>::deallocate
PUBLIC	?allocate@?$allocator@VTile@@@std@@QAEPAVTile@@I@Z ; std::allocator<Tile>::allocate
PUBLIC	?construct@?$allocator@VTile@@@std@@QAEXPAVTile@@ABV3@@Z ; std::allocator<Tile>::construct
PUBLIC	?max_size@?$allocator@VTile@@@std@@QBEIXZ	; std::allocator<Tile>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAIABV?$allocator@VTile@@@2@@Z ; std::allocator_traits<std::allocator<Tile> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<Tile> >::_Wrap_alloc<std::allocator<Tile> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEPAVTile@@I@Z ; std::_Wrap_alloc<std::allocator<Tile> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@I@Z ; std::_Wrap_alloc<std::allocator<Tile> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<Tile> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@VTile@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Tile> >::_Vector_val<std::_Simple_types<Tile> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@VTile@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Tile> >::~_Vector_val<std::_Simple_types<Tile> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::~_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Getal
PUBLIC	??0?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ ; std::vector<Tile,std::allocator<Tile> >::vector<Tile,std::allocator<Tile> >
PUBLIC	??1?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ ; std::vector<Tile,std::allocator<Tile> >::~vector<Tile,std::allocator<Tile> >
PUBLIC	?capacity@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::capacity
PUBLIC	?_Unused_capacity@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::_Unused_capacity
PUBLIC	?size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::size
PUBLIC	?max_size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::max_size
PUBLIC	?at@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAEAAVTile@@I@Z ; std::vector<Tile,std::allocator<Tile> >::at
PUBLIC	?push_back@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAEXABVTile@@@Z ; std::vector<Tile,std::allocator<Tile> >::push_back
PUBLIC	?_Destroy@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXPAVTile@@0@Z ; std::vector<Tile,std::allocator<Tile> >::_Destroy
PUBLIC	?_Grow_to@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEII@Z ; std::vector<Tile,std::allocator<Tile> >::_Grow_to
PUBLIC	?_Inside@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBE_NPBVTile@@@Z ; std::vector<Tile,std::allocator<Tile> >::_Inside
PUBLIC	?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z ; std::vector<Tile,std::allocator<Tile> >::_Reallocate
PUBLIC	?_Reserve@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z ; std::vector<Tile,std::allocator<Tile> >::_Reserve
PUBLIC	?_Tidy@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXXZ ; std::vector<Tile,std::allocator<Tile> >::_Tidy
PUBLIC	?_Xlen@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXXZ ; std::vector<Tile,std::allocator<Tile> >::_Xlen
PUBLIC	?_Xran@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXXZ ; std::vector<Tile,std::allocator<Tile> >::_Xran
PUBLIC	?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z ; std::vector<Tile,std::allocator<Tile> >::_Orphan_range
PUBLIC	??0?$allocator@UTileSet@@@std@@QAE@XZ		; std::allocator<TileSet>::allocator<TileSet>
PUBLIC	?deallocate@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@I@Z ; std::allocator<TileSet>::deallocate
PUBLIC	?allocate@?$allocator@UTileSet@@@std@@QAEPAUTileSet@@I@Z ; std::allocator<TileSet>::allocate
PUBLIC	?max_size@?$allocator@UTileSet@@@std@@QBEIXZ	; std::allocator<TileSet>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAIABV?$allocator@UTileSet@@@2@@Z ; std::allocator_traits<std::allocator<TileSet> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<TileSet> >::_Wrap_alloc<std::allocator<TileSet> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEPAUTileSet@@I@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@I@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<TileSet> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UTileSet@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<TileSet> >::_Vector_val<std::_Simple_types<TileSet> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@UTileSet@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<TileSet> >::~_Vector_val<std::_Simple_types<TileSet> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::~_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Getal
PUBLIC	??0?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ ; std::vector<TileSet,std::allocator<TileSet> >::vector<TileSet,std::allocator<TileSet> >
PUBLIC	?push_back@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEX$$QAUTileSet@@@Z ; std::vector<TileSet,std::allocator<TileSet> >::push_back
PUBLIC	??1?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ ; std::vector<TileSet,std::allocator<TileSet> >::~vector<TileSet,std::allocator<TileSet> >
PUBLIC	?capacity@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::capacity
PUBLIC	?_Unused_capacity@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::_Unused_capacity
PUBLIC	?size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::size
PUBLIC	?max_size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::max_size
PUBLIC	?at@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEAAUTileSet@@I@Z ; std::vector<TileSet,std::allocator<TileSet> >::at
PUBLIC	??A?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEAAUTileSet@@I@Z ; std::vector<TileSet,std::allocator<TileSet> >::operator[]
PUBLIC	?_Destroy@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXPAUTileSet@@0@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Destroy
PUBLIC	?_Grow_to@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEII@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Grow_to
PUBLIC	?_Inside@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBE_NPBUTileSet@@@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Inside
PUBLIC	?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Reallocate
PUBLIC	?_Reserve@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Reserve
PUBLIC	?_Tidy@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXXZ ; std::vector<TileSet,std::allocator<TileSet> >::_Tidy
PUBLIC	?_Xlen@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXXZ ; std::vector<TileSet,std::allocator<TileSet> >::_Xlen
PUBLIC	?_Xran@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXXZ ; std::vector<TileSet,std::allocator<TileSet> >::_Xran
PUBLIC	?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Orphan_range
PUBLIC	??0?$allocator@VCaveRectangle@@@std@@QAE@XZ	; std::allocator<CaveRectangle>::allocator<CaveRectangle>
PUBLIC	?deallocate@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@I@Z ; std::allocator<CaveRectangle>::deallocate
PUBLIC	?allocate@?$allocator@VCaveRectangle@@@std@@QAEPAVCaveRectangle@@I@Z ; std::allocator<CaveRectangle>::allocate
PUBLIC	?construct@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@ABV3@@Z ; std::allocator<CaveRectangle>::construct
PUBLIC	?max_size@?$allocator@VCaveRectangle@@@std@@QBEIXZ ; std::allocator<CaveRectangle>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAIABV?$allocator@VCaveRectangle@@@2@@Z ; std::allocator_traits<std::allocator<CaveRectangle> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::_Wrap_alloc<std::allocator<CaveRectangle> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEPAVCaveRectangle@@I@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@I@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CaveRectangle> >::_Vector_val<std::_Simple_types<CaveRectangle> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CaveRectangle> >::~_Vector_val<std::_Simple_types<CaveRectangle> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::~_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
PUBLIC	??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::vector<CaveRectangle,std::allocator<CaveRectangle> >
PUBLIC	??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::vector<CaveRectangle,std::allocator<CaveRectangle> >
PUBLIC	?_Assign_rv@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Assign_rv
PUBLIC	?push_back@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEX$$QAVCaveRectangle@@@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::push_back
PUBLIC	??1?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::~vector<CaveRectangle,std::allocator<CaveRectangle> >
PUBLIC	?capacity@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::capacity
PUBLIC	?_Unused_capacity@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Unused_capacity
PUBLIC	?size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::size
PUBLIC	?max_size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::max_size
PUBLIC	?at@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEAAVCaveRectangle@@I@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::at
PUBLIC	??A?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEAAVCaveRectangle@@I@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::operator[]
PUBLIC	?push_back@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXABVCaveRectangle@@@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::push_back
PUBLIC	?_Destroy@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXPAVCaveRectangle@@0@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Destroy
PUBLIC	?_Grow_to@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEII@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Grow_to
PUBLIC	?_Inside@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBE_NPBVCaveRectangle@@@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Inside
PUBLIC	?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Reallocate
PUBLIC	?_Reserve@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Reserve
PUBLIC	?_Tidy@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Tidy
PUBLIC	?_Xlen@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Xlen
PUBLIC	?_Xran@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Xran
PUBLIC	?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Orphan_range
PUBLIC	?__autoclassinit2@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXI@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::__autoclassinit2
PUBLIC	??0?$allocator@VCaveSlope@@@std@@QAE@XZ		; std::allocator<CaveSlope>::allocator<CaveSlope>
PUBLIC	?deallocate@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@I@Z ; std::allocator<CaveSlope>::deallocate
PUBLIC	?allocate@?$allocator@VCaveSlope@@@std@@QAEPAVCaveSlope@@I@Z ; std::allocator<CaveSlope>::allocate
PUBLIC	?construct@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@ABV3@@Z ; std::allocator<CaveSlope>::construct
PUBLIC	?max_size@?$allocator@VCaveSlope@@@std@@QBEIXZ	; std::allocator<CaveSlope>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAIABV?$allocator@VCaveSlope@@@2@@Z ; std::allocator_traits<std::allocator<CaveSlope> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<CaveSlope> >::_Wrap_alloc<std::allocator<CaveSlope> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEPAVCaveSlope@@I@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@I@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<CaveSlope> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@VCaveSlope@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CaveSlope> >::_Vector_val<std::_Simple_types<CaveSlope> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@VCaveSlope@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CaveSlope> >::~_Vector_val<std::_Simple_types<CaveSlope> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::~_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
PUBLIC	??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::vector<CaveSlope,std::allocator<CaveSlope> >
PUBLIC	??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::vector<CaveSlope,std::allocator<CaveSlope> >
PUBLIC	?_Assign_rv@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Assign_rv
PUBLIC	?push_back@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEX$$QAVCaveSlope@@@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::push_back
PUBLIC	??1?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::~vector<CaveSlope,std::allocator<CaveSlope> >
PUBLIC	?capacity@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::capacity
PUBLIC	?_Unused_capacity@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Unused_capacity
PUBLIC	?size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::size
PUBLIC	?max_size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::max_size
PUBLIC	?at@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEAAVCaveSlope@@I@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::at
PUBLIC	?push_back@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEXABVCaveSlope@@@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::push_back
PUBLIC	?_Destroy@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXPAVCaveSlope@@0@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Destroy
PUBLIC	?_Grow_to@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEII@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Grow_to
PUBLIC	?_Inside@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBE_NPBVCaveSlope@@@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Inside
PUBLIC	?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Reallocate
PUBLIC	?_Reserve@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Reserve
PUBLIC	?_Tidy@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Tidy
PUBLIC	?_Xlen@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Xlen
PUBLIC	?_Xran@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Xran
PUBLIC	?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Orphan_range
PUBLIC	?__autoclassinit2@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEXI@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::__autoclassinit2
PUBLIC	?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z ; Level::LoadMap
PUBLIC	?StoreBackgroundLocations@Level@@AAEXXZ		; Level::StoreBackgroundLocations
PUBLIC	?GetTileSetPosition@Level@@AAE?AUVector2@@UTileSet@@H@Z ; Level::GetTileSetPosition
PUBLIC	?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
PUBLIC	?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
PUBLIC	?IntAttribute@XMLElement@tinyxml2@@QBEHPBD@Z	; tinyxml2::XMLElement::IntAttribute
PUBLIC	?FloatAttribute@XMLElement@tinyxml2@@QBEMPBD@Z	; tinyxml2::XMLElement::FloatAttribute
PUBLIC	?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute
PUBLIC	?QueryFloatAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAM@Z ; tinyxml2::XMLElement::QueryFloatAttribute
PUBLIC	?__autoclassinit2@XMLDocument@tinyxml2@@QAEXI@Z	; tinyxml2::XMLDocument::__autoclassinit2
PUBLIC	?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z ; CaveUtiltity::Split
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
PUBLIC	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
PUBLIC	?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAIABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
PUBLIC	?_Unused_capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unused_capacity
PUBLIC	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
PUBLIC	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
PUBLIC	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
PUBLIC	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
PUBLIC	?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
PUBLIC	?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside
PUBLIC	?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate
PUBLIC	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
PUBLIC	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
PUBLIC	?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xran
PUBLIC	?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
PUBLIC	?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::__autoclassinit2
PUBLIC	??$min@H@std@@YAABHABH0@Z			; std::min<int>
PUBLIC	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2
PUBLIC	??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$allocator@UVector2@@@std@@QAE@XZ		; std::allocator<Vector2>::allocator<Vector2>
PUBLIC	?deallocate@?$allocator@UVector2@@@std@@QAEXPAUVector2@@I@Z ; std::allocator<Vector2>::deallocate
PUBLIC	?allocate@?$allocator@UVector2@@@std@@QAEPAUVector2@@I@Z ; std::allocator<Vector2>::allocate
PUBLIC	?max_size@?$allocator@UVector2@@@std@@QBEIXZ	; std::allocator<Vector2>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAIABV?$allocator@UVector2@@@2@@Z ; std::allocator_traits<std::allocator<Vector2> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<Vector2> >::_Wrap_alloc<std::allocator<Vector2> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEPAUVector2@@I@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@I@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<Vector2> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UVector2@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Vector2> >::_Vector_val<std::_Simple_types<Vector2> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@UVector2@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Vector2> >::~_Vector_val<std::_Simple_types<Vector2> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::~_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Getal
PUBLIC	??0?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAE@XZ ; std::vector<Vector2,std::allocator<Vector2> >::vector<Vector2,std::allocator<Vector2> >
PUBLIC	?push_back@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEX$$QAUVector2@@@Z ; std::vector<Vector2,std::allocator<Vector2> >::push_back
PUBLIC	??1?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAE@XZ ; std::vector<Vector2,std::allocator<Vector2> >::~vector<Vector2,std::allocator<Vector2> >
PUBLIC	?capacity@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::capacity
PUBLIC	?_Unused_capacity@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::_Unused_capacity
PUBLIC	?size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::size
PUBLIC	?max_size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::max_size
PUBLIC	?at@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEAAUVector2@@I@Z ; std::vector<Vector2,std::allocator<Vector2> >::at
PUBLIC	?_Destroy@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXPAUVector2@@0@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Destroy
PUBLIC	?_Grow_to@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEII@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Grow_to
PUBLIC	?_Inside@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBE_NPBUVector2@@@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Inside
PUBLIC	?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Reallocate
PUBLIC	?_Reserve@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Reserve
PUBLIC	?_Tidy@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXXZ ; std::vector<Vector2,std::allocator<Vector2> >::_Tidy
PUBLIC	?_Xlen@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXXZ ; std::vector<Vector2,std::allocator<Vector2> >::_Xlen
PUBLIC	?_Xran@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXXZ ; std::vector<Vector2,std::allocator<Vector2> >::_Xran
PUBLIC	?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Orphan_range
PUBLIC	?__autoclassinit2@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEXI@Z ; std::vector<Vector2,std::allocator<Vector2> >::__autoclassinit2
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$fpos@H@std@@QAE@_J@Z			; std::fpos<int>::fpos<int>
PUBLIC	??B?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::operator __int64
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$addressof@$$CBUSDL_Rect@@@std@@YAPBUSDL_Rect@@ABU1@@Z ; std::addressof<SDL_Rect const >
PUBLIC	??$construct@USDL_Rect@@AAU1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect &>
PUBLIC	??$construct@USDL_Rect@@ABU1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@ABU2@@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect const &>
PUBLIC	??$addressof@$$CBVTile@@@std@@YAPBVTile@@ABV1@@Z ; std::addressof<Tile const >
PUBLIC	??$construct@VTile@@AAV1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@AAV2@@Z ; std::_Wrap_alloc<std::allocator<Tile> >::construct<Tile,Tile &>
PUBLIC	??$construct@VTile@@ABV1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@ABV2@@Z ; std::_Wrap_alloc<std::allocator<Tile> >::construct<Tile,Tile const &>
PUBLIC	??$addressof@UTileSet@@@std@@YAPAUTileSet@@AAU1@@Z ; std::addressof<TileSet>
PUBLIC	??$forward@UTileSet@@@std@@YA$$QAUTileSet@@AAU1@@Z ; std::forward<TileSet>
PUBLIC	??$construct@UTileSet@@U1@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::construct<TileSet,TileSet>
PUBLIC	??$forward@V?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YA$$QAV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@0@AAV10@@Z ; std::forward<std::vector<CaveRectangle,std::allocator<CaveRectangle> > >
PUBLIC	??$addressof@VCaveRectangle@@@std@@YAPAVCaveRectangle@@AAV1@@Z ; std::addressof<CaveRectangle>
PUBLIC	??$forward@VCaveRectangle@@@std@@YA$$QAVCaveRectangle@@AAV1@@Z ; std::forward<CaveRectangle>
PUBLIC	??$construct@VCaveRectangle@@V1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle>
PUBLIC	??$addressof@$$CBVCaveRectangle@@@std@@YAPBVCaveRectangle@@ABV1@@Z ; std::addressof<CaveRectangle const >
PUBLIC	??$construct@VCaveRectangle@@AAV1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle &>
PUBLIC	??$construct@VCaveRectangle@@ABV1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@ABV2@@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle const &>
PUBLIC	??$forward@V?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YA$$QAV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@0@AAV10@@Z ; std::forward<std::vector<CaveSlope,std::allocator<CaveSlope> > >
PUBLIC	??$addressof@VCaveSlope@@@std@@YAPAVCaveSlope@@AAV1@@Z ; std::addressof<CaveSlope>
PUBLIC	??$forward@VCaveSlope@@@std@@YA$$QAVCaveSlope@@AAV1@@Z ; std::forward<CaveSlope>
PUBLIC	??$construct@VCaveSlope@@V1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope>
PUBLIC	??$addressof@$$CBVCaveSlope@@@std@@YAPBVCaveSlope@@ABV1@@Z ; std::addressof<CaveSlope const >
PUBLIC	??$construct@VCaveSlope@@AAV1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@AAV2@@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope &>
PUBLIC	??$construct@VCaveSlope@@ABV1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@ABV2@@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope const &>
PUBLIC	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$addressof@UVector2@@@std@@YAPAUVector2@@AAU1@@Z ; std::addressof<Vector2>
PUBLIC	??$forward@UVector2@@@std@@YA$$QAUVector2@@AAU1@@Z ; std::forward<Vector2>
PUBLIC	??$construct@UVector2@@U1@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::construct<Vector2,Vector2>
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAXPAUSDL_Rect@@0AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<SDL_Rect> > >
PUBLIC	??$_Umove@PAUSDL_Rect@@@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEPAUSDL_Rect@@PAU2@00@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Umove<SDL_Rect *>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAXPAVTile@@0AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Tile> > >
PUBLIC	??$_Umove@PAVTile@@@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEPAVTile@@PAV2@00@Z ; std::vector<Tile,std::allocator<Tile> >::_Umove<Tile *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAXPAUTileSet@@0AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<TileSet> > >
PUBLIC	??$_Umove@PAUTileSet@@@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEPAUTileSet@@PAU2@00@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Umove<TileSet *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAXPAVCaveRectangle@@0AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveRectangle> > >
PUBLIC	??$_Umove@PAVCaveRectangle@@@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEPAVCaveRectangle@@PAV2@00@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Umove<CaveRectangle *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAXPAVCaveSlope@@0AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveSlope> > >
PUBLIC	??$_Umove@PAVCaveSlope@@@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEPAVCaveSlope@@PAV2@00@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Umove<CaveSlope *>
PUBLIC	??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAXPAUVector2@@0AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Vector2> > >
PUBLIC	??$_Umove@PAUVector2@@@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEPAUVector2@@PAU2@00@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Umove<Vector2 *>
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$_Allocate@USDL_Rect@@@std@@YAPAUSDL_Rect@@IPAU1@@Z ; std::_Allocate<SDL_Rect>
PUBLIC	??$_Allocate@VTile@@@std@@YAPAVTile@@IPAV1@@Z	; std::_Allocate<Tile>
PUBLIC	??$_Allocate@UTileSet@@@std@@YAPAUTileSet@@IPAU1@@Z ; std::_Allocate<TileSet>
PUBLIC	??$_Allocate@VCaveRectangle@@@std@@YAPAVCaveRectangle@@IPAV1@@Z ; std::_Allocate<CaveRectangle>
PUBLIC	??$_Allocate@VCaveSlope@@@std@@YAPAVCaveSlope@@IPAV1@@Z ; std::_Allocate<CaveSlope>
PUBLIC	??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Allocate@UVector2@@@std@@YAPAUVector2@@IPAU1@@Z ; std::_Allocate<Vector2>
PUBLIC	??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z	; std::_Debug_lt<int const &,int const &>
PUBLIC	??$forward@AAUSDL_Rect@@@std@@YAAAUSDL_Rect@@AAU1@@Z ; std::forward<SDL_Rect &>
PUBLIC	??$construct@USDL_Rect@@AAU1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@AAU3@@Z ; std::allocator_traits<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect &>
PUBLIC	??$forward@ABUSDL_Rect@@@std@@YAABUSDL_Rect@@ABU1@@Z ; std::forward<SDL_Rect const &>
PUBLIC	??$construct@USDL_Rect@@ABU1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@ABU3@@Z ; std::allocator_traits<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect const &>
PUBLIC	??$forward@AAVTile@@@std@@YAAAVTile@@AAV1@@Z	; std::forward<Tile &>
PUBLIC	??$construct@VTile@@AAV1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@AAV3@@Z ; std::allocator_traits<std::allocator<Tile> >::construct<Tile,Tile &>
PUBLIC	??$forward@ABVTile@@@std@@YAABVTile@@ABV1@@Z	; std::forward<Tile const &>
PUBLIC	??$construct@VTile@@ABV1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@ABV3@@Z ; std::allocator_traits<std::allocator<Tile> >::construct<Tile,Tile const &>
PUBLIC	??$construct@UTileSet@@U1@@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAXAAV?$allocator@UTileSet@@@1@PAUTileSet@@$$QAU3@@Z ; std::allocator_traits<std::allocator<TileSet> >::construct<TileSet,TileSet>
PUBLIC	??$construct@VCaveRectangle@@V1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@$$QAV3@@Z ; std::allocator_traits<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle>
PUBLIC	??$forward@AAVCaveRectangle@@@std@@YAAAVCaveRectangle@@AAV1@@Z ; std::forward<CaveRectangle &>
PUBLIC	??$construct@VCaveRectangle@@AAV1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@AAV3@@Z ; std::allocator_traits<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle &>
PUBLIC	??$forward@ABVCaveRectangle@@@std@@YAABVCaveRectangle@@ABV1@@Z ; std::forward<CaveRectangle const &>
PUBLIC	??$construct@VCaveRectangle@@ABV1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@ABV3@@Z ; std::allocator_traits<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle const &>
PUBLIC	??$construct@VCaveSlope@@V1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@$$QAV3@@Z ; std::allocator_traits<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope>
PUBLIC	??$forward@AAVCaveSlope@@@std@@YAAAVCaveSlope@@AAV1@@Z ; std::forward<CaveSlope &>
PUBLIC	??$construct@VCaveSlope@@AAV1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@AAV3@@Z ; std::allocator_traits<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope &>
PUBLIC	??$forward@ABVCaveSlope@@@std@@YAABVCaveSlope@@ABV1@@Z ; std::forward<CaveSlope const &>
PUBLIC	??$construct@VCaveSlope@@ABV1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@ABV3@@Z ; std::allocator_traits<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope const &>
PUBLIC	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$construct@UVector2@@U1@@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAXAAV?$allocator@UVector2@@@1@PAUVector2@@$$QAU3@@Z ; std::allocator_traits<std::allocator<Vector2> >::construct<Vector2,Vector2>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$_Ptr_cat@USDL_Rect@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUSDL_Rect@@0@Z ; std::_Ptr_cat<SDL_Rect,SDL_Rect>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAXPAUSDL_Rect@@0AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<SDL_Rect> > >
PUBLIC	??$_Uninitialized_move@PAUSDL_Rect@@PAU1@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z ; std::_Uninitialized_move<SDL_Rect *,SDL_Rect *,std::_Wrap_alloc<std::allocator<SDL_Rect> > >
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Ptr_cat@VTile@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVTile@@0@Z ; std::_Ptr_cat<Tile,Tile>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAXPAVTile@@0AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Tile> > >
PUBLIC	??$_Uninitialized_move@PAVTile@@PAV1@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z ; std::_Uninitialized_move<Tile *,Tile *,std::_Wrap_alloc<std::allocator<Tile> > >
PUBLIC	??$_Ptr_cat@UTileSet@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUTileSet@@0@Z ; std::_Ptr_cat<TileSet,TileSet>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAXPAUTileSet@@0AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<TileSet> > >
PUBLIC	??$_Uninitialized_move@PAUTileSet@@PAU1@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z ; std::_Uninitialized_move<TileSet *,TileSet *,std::_Wrap_alloc<std::allocator<TileSet> > >
PUBLIC	??$_Ptr_cat@VCaveRectangle@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVCaveRectangle@@0@Z ; std::_Ptr_cat<CaveRectangle,CaveRectangle>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAXPAVCaveRectangle@@0AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveRectangle> > >
PUBLIC	??$_Uninitialized_move@PAVCaveRectangle@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z ; std::_Uninitialized_move<CaveRectangle *,CaveRectangle *,std::_Wrap_alloc<std::allocator<CaveRectangle> > >
PUBLIC	??$_Ptr_cat@VCaveSlope@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVCaveSlope@@0@Z ; std::_Ptr_cat<CaveSlope,CaveSlope>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAXPAVCaveSlope@@0AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveSlope> > >
PUBLIC	??$_Uninitialized_move@PAVCaveSlope@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z ; std::_Uninitialized_move<CaveSlope *,CaveSlope *,std::_Wrap_alloc<std::allocator<CaveSlope> > >
PUBLIC	??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Ptr_cat@UVector2@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUVector2@@0@Z ; std::_Ptr_cat<Vector2,Vector2>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAXPAUVector2@@0AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Vector2> > >
PUBLIC	??$_Uninitialized_move@PAUVector2@@PAU1@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z ; std::_Uninitialized_move<Vector2 *,Vector2 *,std::_Wrap_alloc<std::allocator<Vector2> > >
PUBLIC	??$forward@ABH@std@@YAABHABH@Z			; std::forward<int const &>
PUBLIC	??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z ; std::_Debug_lt_pred<std::less<void>,int const &,int const &>
PUBLIC	??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z ; std::allocator<SDL_Rect>::construct<SDL_Rect,SDL_Rect &>
PUBLIC	??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z ; std::allocator<Tile>::construct<Tile,Tile &>
PUBLIC	??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z ; std::allocator<TileSet>::construct<TileSet,TileSet>
PUBLIC	??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z ; std::allocator<CaveRectangle>::construct<CaveRectangle,CaveRectangle>
PUBLIC	??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z ; std::allocator<CaveRectangle>::construct<CaveRectangle,CaveRectangle &>
PUBLIC	??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z ; std::allocator<CaveSlope>::construct<CaveSlope,CaveSlope>
PUBLIC	??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z ; std::allocator<CaveSlope>::construct<CaveSlope,CaveSlope &>
PUBLIC	??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z ; std::allocator<Vector2>::construct<Vector2,Vector2>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@USDL_Rect@@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::destroy<SDL_Rect>
PUBLIC	??$_Unchecked@PAUSDL_Rect@@@std@@YAPAUSDL_Rect@@PAU1@@Z ; std::_Unchecked<SDL_Rect *>
PUBLIC	??$_Uninit_move@PAUSDL_Rect@@PAU1@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z ; std::_Uninit_move<SDL_Rect *,SDL_Rect *,std::_Wrap_alloc<std::allocator<SDL_Rect> > >
PUBLIC	??$_Rechecked@PAUSDL_Rect@@PAU1@@std@@YAAAPAUSDL_Rect@@AAPAU1@PAU1@@Z ; std::_Rechecked<SDL_Rect *,SDL_Rect *>
PUBLIC	??$destroy@VTile@@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@@Z ; std::_Wrap_alloc<std::allocator<Tile> >::destroy<Tile>
PUBLIC	??$_Unchecked@PAVTile@@@std@@YAPAVTile@@PAV1@@Z	; std::_Unchecked<Tile *>
PUBLIC	??$_Uninit_move@PAVTile@@PAV1@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z ; std::_Uninit_move<Tile *,Tile *,std::_Wrap_alloc<std::allocator<Tile> > >
PUBLIC	??$_Rechecked@PAVTile@@PAV1@@std@@YAAAPAVTile@@AAPAV1@PAV1@@Z ; std::_Rechecked<Tile *,Tile *>
PUBLIC	??$destroy@UTileSet@@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::destroy<TileSet>
PUBLIC	??$_Unchecked@PAUTileSet@@@std@@YAPAUTileSet@@PAU1@@Z ; std::_Unchecked<TileSet *>
PUBLIC	??$_Uninit_move@PAUTileSet@@PAU1@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z ; std::_Uninit_move<TileSet *,TileSet *,std::_Wrap_alloc<std::allocator<TileSet> > >
PUBLIC	??$_Rechecked@PAUTileSet@@PAU1@@std@@YAAAPAUTileSet@@AAPAU1@PAU1@@Z ; std::_Rechecked<TileSet *,TileSet *>
PUBLIC	??$destroy@VCaveRectangle@@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::destroy<CaveRectangle>
PUBLIC	??$_Unchecked@PAVCaveRectangle@@@std@@YAPAVCaveRectangle@@PAV1@@Z ; std::_Unchecked<CaveRectangle *>
PUBLIC	??$_Uninit_move@PAVCaveRectangle@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z ; std::_Uninit_move<CaveRectangle *,CaveRectangle *,std::_Wrap_alloc<std::allocator<CaveRectangle> > >
PUBLIC	??$_Rechecked@PAVCaveRectangle@@PAV1@@std@@YAAAPAVCaveRectangle@@AAPAV1@PAV1@@Z ; std::_Rechecked<CaveRectangle *,CaveRectangle *>
PUBLIC	??$destroy@VCaveSlope@@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::destroy<CaveSlope>
PUBLIC	??$_Unchecked@PAVCaveSlope@@@std@@YAPAVCaveSlope@@PAV1@@Z ; std::_Unchecked<CaveSlope *>
PUBLIC	??$_Uninit_move@PAVCaveSlope@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z ; std::_Uninit_move<CaveSlope *,CaveSlope *,std::_Wrap_alloc<std::allocator<CaveSlope> > >
PUBLIC	??$_Rechecked@PAVCaveSlope@@PAV1@@std@@YAAAPAVCaveSlope@@AAPAV1@PAV1@@Z ; std::_Rechecked<CaveSlope *,CaveSlope *>
PUBLIC	??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Rechecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$destroy@UVector2@@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::destroy<Vector2>
PUBLIC	??$_Unchecked@PAUVector2@@@std@@YAPAUVector2@@PAU1@@Z ; std::_Unchecked<Vector2 *>
PUBLIC	??$_Uninit_move@PAUVector2@@PAU1@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z ; std::_Uninit_move<Vector2 *,Vector2 *,std::_Wrap_alloc<std::allocator<Vector2> > >
PUBLIC	??$_Rechecked@PAUVector2@@PAU1@@std@@YAAAPAUVector2@@AAPAU1@PAU1@@Z ; std::_Rechecked<Vector2 *,Vector2 *>
PUBLIC	??$?RABHABH@?$less@X@std@@QBE_NABH0@Z		; std::less<void>::operator()<int const &,int const &>
PUBLIC	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@USDL_Rect@@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@@Z ; std::allocator_traits<std::allocator<SDL_Rect> >::destroy<SDL_Rect>
PUBLIC	??$_Val_type@PAUSDL_Rect@@@std@@YAPAUSDL_Rect@@PAU1@@Z ; std::_Val_type<SDL_Rect *>
PUBLIC	??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<SDL_Rect *,SDL_Rect *,std::allocator<SDL_Rect>,SDL_Rect>
PUBLIC	??$destroy@VTile@@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@@Z ; std::allocator_traits<std::allocator<Tile> >::destroy<Tile>
PUBLIC	??$_Val_type@PAVTile@@@std@@YAPAVTile@@PAV1@@Z	; std::_Val_type<Tile *>
PUBLIC	??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Tile *,Tile *,std::allocator<Tile>,Tile>
PUBLIC	??$destroy@UTileSet@@@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAXAAV?$allocator@UTileSet@@@1@PAUTileSet@@@Z ; std::allocator_traits<std::allocator<TileSet> >::destroy<TileSet>
PUBLIC	??$_Val_type@PAUTileSet@@@std@@YAPAUTileSet@@PAU1@@Z ; std::_Val_type<TileSet *>
PUBLIC	??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<TileSet *,TileSet *,std::allocator<TileSet>,TileSet>
PUBLIC	??$destroy@VCaveRectangle@@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@@Z ; std::allocator_traits<std::allocator<CaveRectangle> >::destroy<CaveRectangle>
PUBLIC	??$_Val_type@PAVCaveRectangle@@@std@@YAPAVCaveRectangle@@PAV1@@Z ; std::_Val_type<CaveRectangle *>
PUBLIC	??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CaveRectangle *,CaveRectangle *,std::allocator<CaveRectangle>,CaveRectangle>
PUBLIC	??$destroy@VCaveSlope@@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@@Z ; std::allocator_traits<std::allocator<CaveSlope> >::destroy<CaveSlope>
PUBLIC	??$_Val_type@PAVCaveSlope@@@std@@YAPAVCaveSlope@@PAV1@@Z ; std::_Val_type<CaveSlope *>
PUBLIC	??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CaveSlope *,CaveSlope *,std::allocator<CaveSlope>,CaveSlope>
PUBLIC	??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@UVector2@@@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAXAAV?$allocator@UVector2@@@1@PAUVector2@@@Z ; std::allocator_traits<std::allocator<Vector2> >::destroy<Vector2>
PUBLIC	??$_Val_type@PAUVector2@@@std@@YAPAUVector2@@PAU1@@Z ; std::_Val_type<Vector2 *>
PUBLIC	??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Vector2 *,Vector2 *,std::allocator<Vector2>,Vector2>
PUBLIC	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@USDL_Rect@@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@@Z ; std::allocator<SDL_Rect>::destroy<SDL_Rect>
PUBLIC	??$_Debug_range@PAUSDL_Rect@@@std@@YAXPAUSDL_Rect@@0PB_WI@Z ; std::_Debug_range<SDL_Rect *>
PUBLIC	??$_Debug_pointer@USDL_Rect@@@std@@YAXPAUSDL_Rect@@PB_WI@Z ; std::_Debug_pointer<SDL_Rect>
PUBLIC	??$construct@USDL_Rect@@U1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect>
PUBLIC	??$destroy@VTile@@@?$allocator@VTile@@@std@@QAEXPAVTile@@@Z ; std::allocator<Tile>::destroy<Tile>
PUBLIC	??$_Debug_range@PAVTile@@@std@@YAXPAVTile@@0PB_WI@Z ; std::_Debug_range<Tile *>
PUBLIC	??$_Debug_pointer@VTile@@@std@@YAXPAVTile@@PB_WI@Z ; std::_Debug_pointer<Tile>
PUBLIC	??$construct@VTile@@V1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<Tile> >::construct<Tile,Tile>
PUBLIC	??$destroy@UTileSet@@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@@Z ; std::allocator<TileSet>::destroy<TileSet>
PUBLIC	??$_Debug_range@PAUTileSet@@@std@@YAXPAUTileSet@@0PB_WI@Z ; std::_Debug_range<TileSet *>
PUBLIC	??$_Debug_pointer@UTileSet@@@std@@YAXPAUTileSet@@PB_WI@Z ; std::_Debug_pointer<TileSet>
PUBLIC	??$destroy@VCaveRectangle@@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@@Z ; std::allocator<CaveRectangle>::destroy<CaveRectangle>
PUBLIC	??$_Debug_range@PAVCaveRectangle@@@std@@YAXPAVCaveRectangle@@0PB_WI@Z ; std::_Debug_range<CaveRectangle *>
PUBLIC	??$_Debug_pointer@VCaveRectangle@@@std@@YAXPAVCaveRectangle@@PB_WI@Z ; std::_Debug_pointer<CaveRectangle>
PUBLIC	??$destroy@VCaveSlope@@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@@Z ; std::allocator<CaveSlope>::destroy<CaveSlope>
PUBLIC	??$_Debug_range@PAVCaveSlope@@@std@@YAXPAVCaveSlope@@0PB_WI@Z ; std::_Debug_range<CaveSlope *>
PUBLIC	??$_Debug_pointer@VCaveSlope@@@std@@YAXPAVCaveSlope@@PB_WI@Z ; std::_Debug_pointer<CaveSlope>
PUBLIC	??$_Debug_range@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0PB_WI@Z ; std::_Debug_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Debug_pointer@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PB_WI@Z ; std::_Debug_pointer<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@UVector2@@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@@Z ; std::allocator<Vector2>::destroy<Vector2>
PUBLIC	??$_Debug_range@PAUVector2@@@std@@YAXPAUVector2@@0PB_WI@Z ; std::_Debug_range<Vector2 *>
PUBLIC	??$_Debug_pointer@UVector2@@@std@@YAXPAUVector2@@PB_WI@Z ; std::_Debug_pointer<Vector2>
PUBLIC	??$_Iter_cat@PAUSDL_Rect@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUSDL_Rect@@@Z ; std::_Iter_cat<SDL_Rect *>
PUBLIC	??$_Debug_range2@PAUSDL_Rect@@@std@@YAXPAUSDL_Rect@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<SDL_Rect *>
PUBLIC	??$forward@USDL_Rect@@@std@@YA$$QAUSDL_Rect@@AAU1@@Z ; std::forward<SDL_Rect>
PUBLIC	??$construct@USDL_Rect@@U1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@$$QAU3@@Z ; std::allocator_traits<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect>
PUBLIC	??$_Iter_cat@PAVTile@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVTile@@@Z ; std::_Iter_cat<Tile *>
PUBLIC	??$_Debug_range2@PAVTile@@@std@@YAXPAVTile@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<Tile *>
PUBLIC	??$forward@VTile@@@std@@YA$$QAVTile@@AAV1@@Z	; std::forward<Tile>
PUBLIC	??$construct@VTile@@V1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@$$QAV3@@Z ; std::allocator_traits<std::allocator<Tile> >::construct<Tile,Tile>
PUBLIC	??$_Iter_cat@PAUTileSet@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUTileSet@@@Z ; std::_Iter_cat<TileSet *>
PUBLIC	??$_Debug_range2@PAUTileSet@@@std@@YAXPAUTileSet@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<TileSet *>
PUBLIC	??$_Iter_cat@PAVCaveRectangle@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCaveRectangle@@@Z ; std::_Iter_cat<CaveRectangle *>
PUBLIC	??$_Debug_range2@PAVCaveRectangle@@@std@@YAXPAVCaveRectangle@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<CaveRectangle *>
PUBLIC	??$_Iter_cat@PAVCaveSlope@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCaveSlope@@@Z ; std::_Iter_cat<CaveSlope *>
PUBLIC	??$_Debug_range2@PAVCaveSlope@@@std@@YAXPAVCaveSlope@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<CaveSlope *>
PUBLIC	??$_Iter_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Iter_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Debug_range2@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Iter_cat@PAUVector2@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUVector2@@@Z ; std::_Iter_cat<Vector2 *>
PUBLIC	??$_Debug_range2@PAUVector2@@@std@@YAXPAUVector2@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<Vector2 *>
PUBLIC	??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z ; std::allocator<SDL_Rect>::construct<SDL_Rect,SDL_Rect>
PUBLIC	??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z ; std::allocator<Tile>::construct<Tile,Tile>
PUBLIC	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	??_C@_0BG@HGEDEDEC@invalid?5stoi?5argument?$AA@	; `string'
PUBLIC	??_C@_0BL@MFFNMGGC@stoi?5argument?5out?5of?5range?$AA@ ; `string'
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_0BP@HNOCAMCO@Content?1Backgrounds?1bkBlue?4png?$AA@ ; `string'
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_C@_04EJIAFMB@?4tmx?$AA@			; `string'
PUBLIC	??_C@_0BA@DBLIHGAP@Content?1Levels?1?$AA@	; `string'
PUBLIC	??_C@_03HBNNNHNM@map?$AA@			; `string'
PUBLIC	??_C@_05IGKADHGO@width?$AA@			; `string'
PUBLIC	??_C@_06LNLHEAAG@height?$AA@			; `string'
PUBLIC	??_C@_09IFEADKBA@tilewidth?$AA@			; `string'
PUBLIC	??_C@_0L@KAJPMDA@tileheight?$AA@		; `string'
PUBLIC	??_C@_07POMIDLJN@tileset?$AA@			; `string'
PUBLIC	??_C@_05NGOMGBBD@image?$AA@			; `string'
PUBLIC	??_C@_06OEKOLKIL@source?$AA@			; `string'
PUBLIC	??_C@_08ODFOMBDL@firstgid?$AA@			; `string'
PUBLIC	??_C@_05NAHLDCCJ@layer?$AA@			; `string'
PUBLIC	??_C@_04PJOLNDGD@data?$AA@			; `string'
PUBLIC	??_C@_04CKOGFLMC@tile?$AA@			; `string'
PUBLIC	??_C@_03DONNLBFF@gid?$AA@			; `string'
PUBLIC	??_C@_0M@MIIFFOHH@objectgroup?$AA@		; `string'
PUBLIC	??_C@_04MEMAJGDJ@name?$AA@			; `string'
PUBLIC	??_C@_09EOCCEAAK@Collision?$AA@			; `string'
PUBLIC	??_C@_06IEOJBDIK@object?$AA@			; `string'
PUBLIC	??_C@_01FJMABOPO@x?$AA@				; `string'
PUBLIC	??_C@_01EANLCPLP@y?$AA@				; `string'
PUBLIC	??_C@_05LHNLKOKO@Slope?$AA@			; `string'
PUBLIC	??_C@_08MAIKLLAG@polyline?$AA@			; `string'
PUBLIC	??_C@_06GPGIDCJA@points?$AA@			; `string'
PUBLIC	??_C@_1IO@JLPDPDPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1IM@COBDDANL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	??_C@_1KC@FFCHHFHE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAS?$AAD?$AAL?$AA_?$AAR?$AAe?$AAc?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1JO@IKNBIAPH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAT?$AAi?$AAl?$AAe?$AAS?$AAe?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@ ; `string'
PUBLIC	??_C@_1LC@DHGFLIFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAa?$AAv?$AAe?$AAR?$AAe?$AAc?$AAt?$AAa?$AAn?$AAg?$AAl?$AAe?$AA?0@ ; `string'
PUBLIC	??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1JC@OFJFDCCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@42800000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___errno:PROC
EXTRN	_SDL_CreateTextureFromSurface:PROC
EXTRN	_SDL_QueryTexture:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	_fabs:PROC
EXTRN	__imp__ceil:PROC
EXTRN	__imp___hypot:PROC
EXTRN	__imp__strtol:PROC
EXTRN	__imp__memchr:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__memmove:PROC
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_??0_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ:PROC
EXTRN	__imp_?_Orphan_all@_Container_base12@std@@QAEXXZ:PROC
EXTRN	__imp_?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xinvalid_argument@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	__imp_??0id@locale@std@@QAE@I@Z:PROC
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	__imp_?_Syserror_map@std@@YAPBDH@Z:PROC
EXTRN	__imp_?_Winerror_map@std@@YAPBDH@Z:PROC
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:PROC
EXTRN	__imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	?LoadImage@Graphics@@QAEPAUSDL_Surface@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; Graphics::LoadImage
EXTRN	?BlitSurface@Graphics@@QAEXPAUSDL_Texture@@PAUSDL_Rect@@1@Z:PROC ; Graphics::BlitSurface
EXTRN	?DrawTexture@Graphics@@QAEXAAVCaveRectangle@@@Z:PROC ; Graphics::DrawTexture
EXTRN	?GetRenderer@Graphics@@QBEPAUSDL_Renderer@@XZ:PROC ; Graphics::GetRenderer
EXTRN	??0Tile@@QAE@PAUSDL_Texture@@UVector2@@11@Z:PROC ; Tile::Tile
EXTRN	?Draw@Tile@@QAEXAAVGraphics@@@Z:PROC		; Tile::Draw
EXTRN	?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z:PROC ; tinyxml2::XMLNode::FirstChildElement
EXTRN	?NextSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z:PROC ; tinyxml2::XMLNode::NextSiblingElement
EXTRN	?QueryIntValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAH@Z:PROC ; tinyxml2::XMLAttribute::QueryIntValue
EXTRN	?QueryFloatValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAM@Z:PROC ; tinyxml2::XMLAttribute::QueryFloatValue
EXTRN	?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z:PROC ; tinyxml2::XMLElement::Attribute
EXTRN	?FindAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@PBD@Z:PROC ; tinyxml2::XMLElement::FindAttribute
EXTRN	??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z:PROC ; tinyxml2::XMLDocument::XMLDocument
EXTRN	??1XMLDocument@tinyxml2@@UAE@XZ:PROC		; tinyxml2::XMLDocument::~XMLDocument
EXTRN	?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z:PROC ; tinyxml2::XMLDocument::LoadFile
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftol2_sse:PROC
EXTRN	_memset:PROC
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
_BSS	SEGMENT
_ignore	DB	01H DUP (?)
__Tuple_alloc DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@42800000
CONST	SEGMENT
__real@42800000 DD 042800000r			; 64
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	FLAT:??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	FLAT:??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$alloc'
	DB	'ator@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	068H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@OFJFDCCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JC@OFJFDCCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H, 'g'
	DB	00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT
??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ DB 'invalid v'
	DB	'ector<T> subscript', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@DHGFLIFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAa?$AAv?$AAe?$AAR?$AAe?$AAc?$AAt?$AAa?$AAn?$AAg?$AAl?$AAe?$AA?0@
CONST	SEGMENT
??_C@_1LC@DHGFLIFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAa?$AAv?$AAe?$AAR?$AAe?$AAc?$AAt?$AAa?$AAn?$AAg?$AAl?$AAe?$AA?0@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'C', 00H, 'a', 00H
	DB	'v', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H, ',', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H
	DB	'>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '[', 00H, ']', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@IKNBIAPH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAT?$AAi?$AAl?$AAe?$AAS?$AAe?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@
CONST	SEGMENT
??_C@_1JO@IKNBIAPH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAT?$AAi?$AAl?$AAe?$AAS?$AAe?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'T', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 'T', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	'S', 00H, 'e', 00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1KC@FFCHHFHE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAS?$AAD?$AAL?$AA_?$AAR?$AAe?$AAc?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1KC@FFCHHFHE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAS?$AAD?$AAL?$AA_?$AAR?$AAe?$AAc?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'S', 00H
	DB	'D', 00H, 'L', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a'
	DB	00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 'S', 00H, 'D', 00H, 'L', 00H
	DB	'_', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 't', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '['
	DB	00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@COBDDANL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@COBDDANL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@JLPDPDPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@JLPDPDPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06GPGIDCJA@points?$AA@
CONST	SEGMENT
??_C@_06GPGIDCJA@points?$AA@ DB 'points', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MAIKLLAG@polyline?$AA@
CONST	SEGMENT
??_C@_08MAIKLLAG@polyline?$AA@ DB 'polyline', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LHNLKOKO@Slope?$AA@
CONST	SEGMENT
??_C@_05LHNLKOKO@Slope?$AA@ DB 'Slope', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EANLCPLP@y?$AA@
CONST	SEGMENT
??_C@_01EANLCPLP@y?$AA@ DB 'y', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01FJMABOPO@x?$AA@
CONST	SEGMENT
??_C@_01FJMABOPO@x?$AA@ DB 'x', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06IEOJBDIK@object?$AA@
CONST	SEGMENT
??_C@_06IEOJBDIK@object?$AA@ DB 'object', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09EOCCEAAK@Collision?$AA@
CONST	SEGMENT
??_C@_09EOCCEAAK@Collision?$AA@ DB 'Collision', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04MEMAJGDJ@name?$AA@
CONST	SEGMENT
??_C@_04MEMAJGDJ@name?$AA@ DB 'name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MIIFFOHH@objectgroup?$AA@
CONST	SEGMENT
??_C@_0M@MIIFFOHH@objectgroup?$AA@ DB 'objectgroup', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03DONNLBFF@gid?$AA@
CONST	SEGMENT
??_C@_03DONNLBFF@gid?$AA@ DB 'gid', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04CKOGFLMC@tile?$AA@
CONST	SEGMENT
??_C@_04CKOGFLMC@tile?$AA@ DB 'tile', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PJOLNDGD@data?$AA@
CONST	SEGMENT
??_C@_04PJOLNDGD@data?$AA@ DB 'data', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NAHLDCCJ@layer?$AA@
CONST	SEGMENT
??_C@_05NAHLDCCJ@layer?$AA@ DB 'layer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08ODFOMBDL@firstgid?$AA@
CONST	SEGMENT
??_C@_08ODFOMBDL@firstgid?$AA@ DB 'firstgid', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06OEKOLKIL@source?$AA@
CONST	SEGMENT
??_C@_06OEKOLKIL@source?$AA@ DB 'source', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NGOMGBBD@image?$AA@
CONST	SEGMENT
??_C@_05NGOMGBBD@image?$AA@ DB 'image', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07POMIDLJN@tileset?$AA@
CONST	SEGMENT
??_C@_07POMIDLJN@tileset?$AA@ DB 'tileset', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KAJPMDA@tileheight?$AA@
CONST	SEGMENT
??_C@_0L@KAJPMDA@tileheight?$AA@ DB 'tileheight', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09IFEADKBA@tilewidth?$AA@
CONST	SEGMENT
??_C@_09IFEADKBA@tilewidth?$AA@ DB 'tilewidth', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LNLHEAAG@height?$AA@
CONST	SEGMENT
??_C@_06LNLHEAAG@height?$AA@ DB 'height', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IGKADHGO@width?$AA@
CONST	SEGMENT
??_C@_05IGKADHGO@width?$AA@ DB 'width', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03HBNNNHNM@map?$AA@
CONST	SEGMENT
??_C@_03HBNNNHNM@map?$AA@ DB 'map', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DBLIHGAP@Content?1Levels?1?$AA@
CONST	SEGMENT
??_C@_0BA@DBLIHGAP@Content?1Levels?1?$AA@ DB 'Content/Levels/', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04EJIAFMB@?4tmx?$AA@
CONST	SEGMENT
??_C@_04EJIAFMB@?4tmx?$AA@ DB '.tmx', 00H		; `string'
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	058H
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	068H
CONST	ENDS
;	COMDAT ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BP@HNOCAMCO@Content?1Backgrounds?1bkBlue?4png?$AA@
CONST	SEGMENT
??_C@_0BP@HNOCAMCO@Content?1Backgrounds?1bkBlue?4png?$AA@ DB 'Content/Bac'
	DB	'kgrounds/bkBlue.png', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MFFNMGGC@stoi?5argument?5out?5of?5range?$AA@
CONST	SEGMENT
??_C@_0BL@MFFNMGGC@stoi?5argument?5out?5of?5range?$AA@ DB 'stoi argument '
	DB	'out of range', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HGEDEDEC@invalid?5stoi?5argument?$AA@
CONST	SEGMENT
??_C@_0BG@HGEDEDEC@invalid?5stoi?5argument?$AA@ DB 'invalid stoi argument'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z$0
__ehfuncinfo$??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z$0
__ehfuncinfo$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z$0
__ehfuncinfo$??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z$0
__ehfuncinfo$??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z$0
__ehfuncinfo$??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z$0
__ehfuncinfo$??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z$0
__ehfuncinfo$??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z$0
__ehfuncinfo$??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0
__tryblocktable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3
__unwindtable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1
__ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z$1
__ehfuncinfo$?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z DD 019930522H
	DD	010H
	DD	FLAT:__unwindtable$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$6
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$8
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$9
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$10
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$14
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$15
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CheckSlopeCollision@Level@@QAE?AV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@ABVCaveRectangle@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckSlopeCollision@Level@@QAE?AV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@ABVCaveRectangle@@@Z$0
__ehfuncinfo$?CheckSlopeCollision@Level@@QAE?AV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@ABVCaveRectangle@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckSlopeCollision@Level@@QAE?AV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@ABVCaveRectangle@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CheckTileCollision@Level@@QAE?AV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@ABVCaveRectangle@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckTileCollision@Level@@QAE?AV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@ABVCaveRectangle@@@Z$0
__ehfuncinfo$?CheckTileCollision@Level@@QAE?AV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@ABVCaveRectangle@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckTileCollision@Level@@QAE?AV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@ABVCaveRectangle@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$6
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0Level@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0Level@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0Level@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Level@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Level@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0Level@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0Level@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0Level@@QAE@XZ$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
_ignore$initializer$ DD FLAT:??__Eignore@std@@YAXXZ
CRT$XCU	ENDS
CRT$XCU	SEGMENT
__Tuple_alloc$initializer$ DD FLAT:??__E_Tuple_alloc@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odsp /RTCsu /ZI
;	COMDAT ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	e9 00 00 00 00	 jmp	 ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z PROC ; std::allocator<Tile>::construct<Tile,Tile>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 1c		 push	 28			; 0000001cH
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 29		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@VTile@@@std@@YA$$QAVTile@@AAV1@@Z ; std::forward<Tile>
  0006f	83 c4 04	 add	 esp, 4
  00072	b9 07 00 00 00	 mov	 ecx, 7
  00077	8b f0		 mov	 esi, eax
  00079	8b bd 20 ff ff
	ff		 mov	 edi, DWORD PTR $T3[ebp]
  0007f	f3 a5		 rep movsd
  00081	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00087	89 95 0c ff ff
	ff		 mov	 DWORD PTR tv74[ebp], edx
  0008d	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  0008f	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  00099	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR tv74[ebp]
  0009f	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  000a5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b6	59		 pop	 ecx
  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
  000ba	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000c0	3b ec		 cmp	 ebp, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z ENDP ; std::allocator<Tile>::construct<Tile,Tile>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z PROC ; std::allocator<SDL_Rect>::construct<SDL_Rect,SDL_Rect>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 10		 push	 16			; 00000010H
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 36		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@USDL_Rect@@@std@@YA$$QAUSDL_Rect@@AAU1@@Z ; std::forward<SDL_Rect>
  0006f	83 c4 04	 add	 esp, 4
  00072	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00078	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007a	89 0a		 mov	 DWORD PTR [edx], ecx
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00082	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00085	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00088	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0008b	89 42 0c	 mov	 DWORD PTR [edx+12], eax
  0008e	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00094	89 8d 0c ff ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  0009a	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  0009c	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  000a6	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR tv74[ebp]
  000ac	89 95 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  000b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c3	59		 pop	 ecx
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
  000c7	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000cd	3b ec		 cmp	 ebp, esp
  000cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z ENDP ; std::allocator<SDL_Rect>::construct<SDL_Rect,SDL_Rect>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range2@PAUVector2@@@std@@YAXPAUVector2@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAUVector2@@@std@@YAXPAUVector2@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<Vector2 *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 571
  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00024	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  00026	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ??$_Debug_pointer@UVector2@@@std@@YAXPAUVector2@@PB_WI@Z ; std::_Debug_pointer<Vector2>
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  0003a	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  00041	51		 push	 ecx
  00042	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ??$_Debug_pointer@UVector2@@@std@@YAXPAUVector2@@PB_WI@Z ; std::_Debug_pointer<Vector2>
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  0004e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00051	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00054	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  00056	8b f4		 mov	 esi, esp
  00058	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0005f	51		 push	 ecx
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
??$_Debug_range2@PAUVector2@@@std@@YAXPAUVector2@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<Vector2 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Iter_cat@PAUVector2@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUVector2@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUVector2@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUVector2@@@Z PROC ; std::_Iter_cat<Vector2 *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 407
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00021	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00024	88 08		 mov	 BYTE PTR [eax], cl
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00029	52		 push	 edx
  0002a	8b cd		 mov	 ecx, ebp
  0002c	50		 push	 eax
  0002d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00033	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00038	58		 pop	 eax
  00039	5a		 pop	 edx
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
  00041	8d 49 00	 npad	 3
$LN5@Iter_cat:
  00044	01 00 00 00	 DD	 1
  00048	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  0004c	fb ff ff ff	 DD	 -5			; fffffffbH
  00050	01 00 00 00	 DD	 1
  00054	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00058	5f		 DB	 95			; 0000005fH
  00059	43		 DB	 67			; 00000043H
  0005a	61		 DB	 97			; 00000061H
  0005b	74		 DB	 116			; 00000074H
  0005c	00		 DB	 0
??$_Iter_cat@PAUVector2@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUVector2@@@Z ENDP ; std::_Iter_cat<Vector2 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range2@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 571
  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00024	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  00026	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ??$_Debug_pointer@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PB_WI@Z ; std::_Debug_pointer<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  0003a	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  00041	51		 push	 ecx
  00042	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ??$_Debug_pointer@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PB_WI@Z ; std::_Debug_pointer<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  0004e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00051	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00054	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  00056	8b f4		 mov	 esi, esp
  00058	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0005f	51		 push	 ecx
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
??$_Debug_range2@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Iter_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Iter_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 407
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00021	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00024	88 08		 mov	 BYTE PTR [eax], cl
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00029	52		 push	 edx
  0002a	8b cd		 mov	 ecx, ebp
  0002c	50		 push	 eax
  0002d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00033	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00038	58		 pop	 eax
  00039	5a		 pop	 edx
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
  00041	8d 49 00	 npad	 3
$LN5@Iter_cat:
  00044	01 00 00 00	 DD	 1
  00048	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  0004c	fb ff ff ff	 DD	 -5			; fffffffbH
  00050	01 00 00 00	 DD	 1
  00054	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00058	5f		 DB	 95			; 0000005fH
  00059	43		 DB	 67			; 00000043H
  0005a	61		 DB	 97			; 00000061H
  0005b	74		 DB	 116			; 00000074H
  0005c	00		 DB	 0
??$_Iter_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Iter_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range2@PAVCaveSlope@@@std@@YAXPAVCaveSlope@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAVCaveSlope@@@std@@YAXPAVCaveSlope@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<CaveSlope *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 571
  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00024	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  00026	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ??$_Debug_pointer@VCaveSlope@@@std@@YAXPAVCaveSlope@@PB_WI@Z ; std::_Debug_pointer<CaveSlope>
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  0003a	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  00041	51		 push	 ecx
  00042	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ??$_Debug_pointer@VCaveSlope@@@std@@YAXPAVCaveSlope@@PB_WI@Z ; std::_Debug_pointer<CaveSlope>
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  0004e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00051	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00054	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  00056	8b f4		 mov	 esi, esp
  00058	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0005f	51		 push	 ecx
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
??$_Debug_range2@PAVCaveSlope@@@std@@YAXPAVCaveSlope@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<CaveSlope *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Iter_cat@PAVCaveSlope@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCaveSlope@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAVCaveSlope@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCaveSlope@@@Z PROC ; std::_Iter_cat<CaveSlope *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 407
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00021	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00024	88 08		 mov	 BYTE PTR [eax], cl
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00029	52		 push	 edx
  0002a	8b cd		 mov	 ecx, ebp
  0002c	50		 push	 eax
  0002d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00033	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00038	58		 pop	 eax
  00039	5a		 pop	 edx
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
  00041	8d 49 00	 npad	 3
$LN5@Iter_cat:
  00044	01 00 00 00	 DD	 1
  00048	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  0004c	fb ff ff ff	 DD	 -5			; fffffffbH
  00050	01 00 00 00	 DD	 1
  00054	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00058	5f		 DB	 95			; 0000005fH
  00059	43		 DB	 67			; 00000043H
  0005a	61		 DB	 97			; 00000061H
  0005b	74		 DB	 116			; 00000074H
  0005c	00		 DB	 0
??$_Iter_cat@PAVCaveSlope@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCaveSlope@@@Z ENDP ; std::_Iter_cat<CaveSlope *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range2@PAVCaveRectangle@@@std@@YAXPAVCaveRectangle@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAVCaveRectangle@@@std@@YAXPAVCaveRectangle@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<CaveRectangle *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 571
  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00024	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  00026	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ??$_Debug_pointer@VCaveRectangle@@@std@@YAXPAVCaveRectangle@@PB_WI@Z ; std::_Debug_pointer<CaveRectangle>
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  0003a	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  00041	51		 push	 ecx
  00042	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ??$_Debug_pointer@VCaveRectangle@@@std@@YAXPAVCaveRectangle@@PB_WI@Z ; std::_Debug_pointer<CaveRectangle>
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  0004e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00051	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00054	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  00056	8b f4		 mov	 esi, esp
  00058	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0005f	51		 push	 ecx
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
??$_Debug_range2@PAVCaveRectangle@@@std@@YAXPAVCaveRectangle@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<CaveRectangle *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Iter_cat@PAVCaveRectangle@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCaveRectangle@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAVCaveRectangle@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCaveRectangle@@@Z PROC ; std::_Iter_cat<CaveRectangle *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 407
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00021	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00024	88 08		 mov	 BYTE PTR [eax], cl
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00029	52		 push	 edx
  0002a	8b cd		 mov	 ecx, ebp
  0002c	50		 push	 eax
  0002d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00033	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00038	58		 pop	 eax
  00039	5a		 pop	 edx
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
  00041	8d 49 00	 npad	 3
$LN5@Iter_cat:
  00044	01 00 00 00	 DD	 1
  00048	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  0004c	fb ff ff ff	 DD	 -5			; fffffffbH
  00050	01 00 00 00	 DD	 1
  00054	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00058	5f		 DB	 95			; 0000005fH
  00059	43		 DB	 67			; 00000043H
  0005a	61		 DB	 97			; 00000061H
  0005b	74		 DB	 116			; 00000074H
  0005c	00		 DB	 0
??$_Iter_cat@PAVCaveRectangle@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCaveRectangle@@@Z ENDP ; std::_Iter_cat<CaveRectangle *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range2@PAUTileSet@@@std@@YAXPAUTileSet@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAUTileSet@@@std@@YAXPAUTileSet@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<TileSet *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 571
  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00024	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  00026	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ??$_Debug_pointer@UTileSet@@@std@@YAXPAUTileSet@@PB_WI@Z ; std::_Debug_pointer<TileSet>
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  0003a	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  00041	51		 push	 ecx
  00042	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ??$_Debug_pointer@UTileSet@@@std@@YAXPAUTileSet@@PB_WI@Z ; std::_Debug_pointer<TileSet>
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  0004e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00051	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00054	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  00056	8b f4		 mov	 esi, esp
  00058	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0005f	51		 push	 ecx
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
??$_Debug_range2@PAUTileSet@@@std@@YAXPAUTileSet@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<TileSet *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Iter_cat@PAUTileSet@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUTileSet@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUTileSet@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUTileSet@@@Z PROC ; std::_Iter_cat<TileSet *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 407
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00021	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00024	88 08		 mov	 BYTE PTR [eax], cl
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00029	52		 push	 edx
  0002a	8b cd		 mov	 ecx, ebp
  0002c	50		 push	 eax
  0002d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00033	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00038	58		 pop	 eax
  00039	5a		 pop	 edx
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
  00041	8d 49 00	 npad	 3
$LN5@Iter_cat:
  00044	01 00 00 00	 DD	 1
  00048	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  0004c	fb ff ff ff	 DD	 -5			; fffffffbH
  00050	01 00 00 00	 DD	 1
  00054	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00058	5f		 DB	 95			; 0000005fH
  00059	43		 DB	 67			; 00000043H
  0005a	61		 DB	 97			; 00000061H
  0005b	74		 DB	 116			; 00000074H
  0005c	00		 DB	 0
??$_Iter_cat@PAUTileSet@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUTileSet@@@Z ENDP ; std::_Iter_cat<TileSet *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VTile@@V1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@$$QAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VTile@@V1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@$$QAV3@@Z PROC ; std::allocator_traits<std::allocator<Tile> >::construct<Tile,Tile>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@VTile@@@std@@YA$$QAVTile@@AAV1@@Z ; std::forward<Tile>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@VTile@@V1@@?$allocator@VTile@@@std@@QAEXPAVTile@@$$QAV2@@Z ; std::allocator<Tile>::construct<Tile,Tile>
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@VTile@@V1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@$$QAV3@@Z ENDP ; std::allocator_traits<std::allocator<Tile> >::construct<Tile,Tile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@VTile@@@std@@YA$$QAVTile@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@VTile@@@std@@YA$$QAVTile@@AAV1@@Z PROC	; std::forward<Tile>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@VTile@@@std@@YA$$QAVTile@@AAV1@@Z ENDP	; std::forward<Tile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range2@PAVTile@@@std@@YAXPAVTile@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAVTile@@@std@@YAXPAVTile@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<Tile *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 571
  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00024	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  00026	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ??$_Debug_pointer@VTile@@@std@@YAXPAVTile@@PB_WI@Z ; std::_Debug_pointer<Tile>
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  0003a	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  00041	51		 push	 ecx
  00042	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ??$_Debug_pointer@VTile@@@std@@YAXPAVTile@@PB_WI@Z ; std::_Debug_pointer<Tile>
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  0004e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00051	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00054	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  00056	8b f4		 mov	 esi, esp
  00058	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0005f	51		 push	 ecx
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
??$_Debug_range2@PAVTile@@@std@@YAXPAVTile@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<Tile *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Iter_cat@PAVTile@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVTile@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAVTile@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVTile@@@Z PROC ; std::_Iter_cat<Tile *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 407
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00021	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00024	88 08		 mov	 BYTE PTR [eax], cl
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00029	52		 push	 edx
  0002a	8b cd		 mov	 ecx, ebp
  0002c	50		 push	 eax
  0002d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00033	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00038	58		 pop	 eax
  00039	5a		 pop	 edx
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
  00041	8d 49 00	 npad	 3
$LN5@Iter_cat:
  00044	01 00 00 00	 DD	 1
  00048	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  0004c	fb ff ff ff	 DD	 -5			; fffffffbH
  00050	01 00 00 00	 DD	 1
  00054	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00058	5f		 DB	 95			; 0000005fH
  00059	43		 DB	 67			; 00000043H
  0005a	61		 DB	 97			; 00000061H
  0005b	74		 DB	 116			; 00000074H
  0005c	00		 DB	 0
??$_Iter_cat@PAVTile@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVTile@@@Z ENDP ; std::_Iter_cat<Tile *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@USDL_Rect@@U1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@USDL_Rect@@U1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@USDL_Rect@@@std@@YA$$QAUSDL_Rect@@AAU1@@Z ; std::forward<SDL_Rect>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@USDL_Rect@@U1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z ; std::allocator<SDL_Rect>::construct<SDL_Rect,SDL_Rect>
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@USDL_Rect@@U1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@USDL_Rect@@@std@@YA$$QAUSDL_Rect@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@USDL_Rect@@@std@@YA$$QAUSDL_Rect@@AAU1@@Z PROC ; std::forward<SDL_Rect>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@USDL_Rect@@@std@@YA$$QAUSDL_Rect@@AAU1@@Z ENDP ; std::forward<SDL_Rect>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range2@PAUSDL_Rect@@@std@@YAXPAUSDL_Rect@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAUSDL_Rect@@@std@@YAXPAUSDL_Rect@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<SDL_Rect *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 571
  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00024	74 4f		 je	 SHORT $LN3@Debug_rang
; Line 573
  00026	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ??$_Debug_pointer@USDL_Rect@@@std@@YAXPAUSDL_Rect@@PB_WI@Z ; std::_Debug_pointer<SDL_Rect>
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 574
  0003a	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  00041	51		 push	 ecx
  00042	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ??$_Debug_pointer@USDL_Rect@@@std@@YAXPAUSDL_Rect@@PB_WI@Z ; std::_Debug_pointer<SDL_Rect>
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 575
  0004e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00051	3b 45 08	 cmp	 eax, DWORD PTR __First$[ebp]
  00054	73 1f		 jae	 SHORT $LN3@Debug_rang
; Line 576
  00056	8b f4		 mov	 esi, esp
  00058	8b 45 14	 mov	 eax, DWORD PTR __Line$[ebp]
  0005b	50		 push	 eax
  0005c	8b 4d 10	 mov	 ecx, DWORD PTR __File$[ebp]
  0005f	51		 push	 ecx
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006e	3b f4		 cmp	 esi, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
  00078	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0007e	3b ec		 cmp	 ebp, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
??$_Debug_range2@PAUSDL_Rect@@@std@@YAXPAUSDL_Rect@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<SDL_Rect *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Iter_cat@PAUSDL_Rect@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUSDL_Rect@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUSDL_Rect@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUSDL_Rect@@@Z PROC ; std::_Iter_cat<SDL_Rect *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 407
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00021	8a 4d fb	 mov	 cl, BYTE PTR __Cat$[ebp]
  00024	88 08		 mov	 BYTE PTR [eax], cl
  00026	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
  00029	52		 push	 edx
  0002a	8b cd		 mov	 ecx, ebp
  0002c	50		 push	 eax
  0002d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Iter_cat
  00033	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00038	58		 pop	 eax
  00039	5a		 pop	 edx
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
  00041	8d 49 00	 npad	 3
$LN5@Iter_cat:
  00044	01 00 00 00	 DD	 1
  00048	00 00 00 00	 DD	 $LN4@Iter_cat
$LN4@Iter_cat:
  0004c	fb ff ff ff	 DD	 -5			; fffffffbH
  00050	01 00 00 00	 DD	 1
  00054	00 00 00 00	 DD	 $LN3@Iter_cat
$LN3@Iter_cat:
  00058	5f		 DB	 95			; 0000005fH
  00059	43		 DB	 67			; 00000043H
  0005a	61		 DB	 97			; 00000061H
  0005b	74		 DB	 116			; 00000074H
  0005c	00		 DB	 0
??$_Iter_cat@PAUSDL_Rect@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUSDL_Rect@@@Z ENDP ; std::_Iter_cat<SDL_Rect *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_pointer@UVector2@@@std@@YAXPAUVector2@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@UVector2@@@std@@YAXPAUVector2@@PB_WI@Z PROC ; std::_Debug_pointer<Vector2>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 553
  0001e	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00022	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  00024	8b f4		 mov	 esi, esp
  00026	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??$_Debug_pointer@UVector2@@@std@@YAXPAUVector2@@PB_WI@Z ENDP ; std::_Debug_pointer<Vector2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range@PAUVector2@@@std@@YAXPAUVector2@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAUVector2@@@std@@YAXPAUVector2@@0PB_WI@Z PROC ; std::_Debug_range<Vector2 *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 584
  0001e	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  00021	50		 push	 eax
  00022	8d 8d 3b ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ??$_Iter_cat@PAUVector2@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUVector2@@@Z ; std::_Iter_cat<Vector2 *>
  0002e	83 c4 08	 add	 esp, 8
  00031	8a 10		 mov	 dl, BYTE PTR [eax]
  00033	0f b6 c2	 movzx	 eax, dl
  00036	50		 push	 eax
  00037	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0003a	51		 push	 ecx
  0003b	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  0003e	52		 push	 edx
  0003f	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00042	50		 push	 eax
  00043	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Debug_range2@PAUVector2@@@std@@YAXPAUVector2@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<Vector2 *>
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??$_Debug_range@PAUVector2@@@std@@YAXPAUVector2@@0PB_WI@Z ENDP ; std::_Debug_range<Vector2 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@UVector2@@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UVector2@@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@@Z PROC ; std::allocator<Vector2>::destroy<Vector2>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??$destroy@UVector2@@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@@Z ENDP ; std::allocator<Vector2>::destroy<Vector2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_pointer@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PB_WI@Z PROC ; std::_Debug_pointer<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 553
  0001e	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00022	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  00024	8b f4		 mov	 esi, esp
  00026	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??$_Debug_pointer@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PB_WI@Z ENDP ; std::_Debug_pointer<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0PB_WI@Z PROC ; std::_Debug_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 584
  0001e	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  00021	50		 push	 eax
  00022	8d 8d 3b ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ??$_Iter_cat@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Iter_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  0002e	83 c4 08	 add	 esp, 8
  00031	8a 10		 mov	 dl, BYTE PTR [eax]
  00033	0f b6 c2	 movzx	 eax, dl
  00036	50		 push	 eax
  00037	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0003a	51		 push	 ecx
  0003b	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  0003e	52		 push	 edx
  0003f	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00042	50		 push	 eax
  00043	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Debug_range2@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??$_Debug_range@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0PB_WI@Z ENDP ; std::_Debug_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_pointer@VCaveSlope@@@std@@YAXPAVCaveSlope@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@VCaveSlope@@@std@@YAXPAVCaveSlope@@PB_WI@Z PROC ; std::_Debug_pointer<CaveSlope>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 553
  0001e	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00022	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  00024	8b f4		 mov	 esi, esp
  00026	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??$_Debug_pointer@VCaveSlope@@@std@@YAXPAVCaveSlope@@PB_WI@Z ENDP ; std::_Debug_pointer<CaveSlope>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range@PAVCaveSlope@@@std@@YAXPAVCaveSlope@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAVCaveSlope@@@std@@YAXPAVCaveSlope@@0PB_WI@Z PROC ; std::_Debug_range<CaveSlope *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 584
  0001e	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  00021	50		 push	 eax
  00022	8d 8d 3b ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ??$_Iter_cat@PAVCaveSlope@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCaveSlope@@@Z ; std::_Iter_cat<CaveSlope *>
  0002e	83 c4 08	 add	 esp, 8
  00031	8a 10		 mov	 dl, BYTE PTR [eax]
  00033	0f b6 c2	 movzx	 eax, dl
  00036	50		 push	 eax
  00037	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0003a	51		 push	 ecx
  0003b	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  0003e	52		 push	 edx
  0003f	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00042	50		 push	 eax
  00043	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Debug_range2@PAVCaveSlope@@@std@@YAXPAVCaveSlope@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<CaveSlope *>
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??$_Debug_range@PAVCaveSlope@@@std@@YAXPAVCaveSlope@@0PB_WI@Z ENDP ; std::_Debug_range<CaveSlope *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@VCaveSlope@@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@VCaveSlope@@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@@Z PROC ; std::allocator<CaveSlope>::destroy<CaveSlope>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??$destroy@VCaveSlope@@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@@Z ENDP ; std::allocator<CaveSlope>::destroy<CaveSlope>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_pointer@VCaveRectangle@@@std@@YAXPAVCaveRectangle@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@VCaveRectangle@@@std@@YAXPAVCaveRectangle@@PB_WI@Z PROC ; std::_Debug_pointer<CaveRectangle>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 553
  0001e	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00022	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  00024	8b f4		 mov	 esi, esp
  00026	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??$_Debug_pointer@VCaveRectangle@@@std@@YAXPAVCaveRectangle@@PB_WI@Z ENDP ; std::_Debug_pointer<CaveRectangle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range@PAVCaveRectangle@@@std@@YAXPAVCaveRectangle@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAVCaveRectangle@@@std@@YAXPAVCaveRectangle@@0PB_WI@Z PROC ; std::_Debug_range<CaveRectangle *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 584
  0001e	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  00021	50		 push	 eax
  00022	8d 8d 3b ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ??$_Iter_cat@PAVCaveRectangle@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVCaveRectangle@@@Z ; std::_Iter_cat<CaveRectangle *>
  0002e	83 c4 08	 add	 esp, 8
  00031	8a 10		 mov	 dl, BYTE PTR [eax]
  00033	0f b6 c2	 movzx	 eax, dl
  00036	50		 push	 eax
  00037	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0003a	51		 push	 ecx
  0003b	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  0003e	52		 push	 edx
  0003f	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00042	50		 push	 eax
  00043	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Debug_range2@PAVCaveRectangle@@@std@@YAXPAVCaveRectangle@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<CaveRectangle *>
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??$_Debug_range@PAVCaveRectangle@@@std@@YAXPAVCaveRectangle@@0PB_WI@Z ENDP ; std::_Debug_range<CaveRectangle *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@VCaveRectangle@@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@VCaveRectangle@@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@@Z PROC ; std::allocator<CaveRectangle>::destroy<CaveRectangle>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 607
  00023	6a 00		 push	 0
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00028	e8 00 00 00 00	 call	 ??_GCaveRectangle@@QAEPAXI@Z
; Line 608
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
??$destroy@VCaveRectangle@@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@@Z ENDP ; std::allocator<CaveRectangle>::destroy<CaveRectangle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_pointer@UTileSet@@@std@@YAXPAUTileSet@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@UTileSet@@@std@@YAXPAUTileSet@@PB_WI@Z PROC ; std::_Debug_pointer<TileSet>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 553
  0001e	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00022	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  00024	8b f4		 mov	 esi, esp
  00026	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??$_Debug_pointer@UTileSet@@@std@@YAXPAUTileSet@@PB_WI@Z ENDP ; std::_Debug_pointer<TileSet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range@PAUTileSet@@@std@@YAXPAUTileSet@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAUTileSet@@@std@@YAXPAUTileSet@@0PB_WI@Z PROC ; std::_Debug_range<TileSet *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 584
  0001e	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  00021	50		 push	 eax
  00022	8d 8d 3b ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ??$_Iter_cat@PAUTileSet@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUTileSet@@@Z ; std::_Iter_cat<TileSet *>
  0002e	83 c4 08	 add	 esp, 8
  00031	8a 10		 mov	 dl, BYTE PTR [eax]
  00033	0f b6 c2	 movzx	 eax, dl
  00036	50		 push	 eax
  00037	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0003a	51		 push	 ecx
  0003b	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  0003e	52		 push	 edx
  0003f	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00042	50		 push	 eax
  00043	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Debug_range2@PAUTileSet@@@std@@YAXPAUTileSet@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<TileSet *>
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??$_Debug_range@PAUTileSet@@@std@@YAXPAUTileSet@@0PB_WI@Z ENDP ; std::_Debug_range<TileSet *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@UTileSet@@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UTileSet@@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@@Z PROC ; std::allocator<TileSet>::destroy<TileSet>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??$destroy@UTileSet@@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@@Z ENDP ; std::allocator<TileSet>::destroy<TileSet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VTile@@V1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@$$QAV2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VTile@@V1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@$$QAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<Tile> >::construct<Tile,Tile>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@VTile@@@std@@YA$$QAVTile@@AAV1@@Z ; std::forward<Tile>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@VTile@@V1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@$$QAV3@@Z ; std::allocator_traits<std::allocator<Tile> >::construct<Tile,Tile>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@VTile@@V1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@$$QAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Tile> >::construct<Tile,Tile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_pointer@VTile@@@std@@YAXPAVTile@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@VTile@@@std@@YAXPAVTile@@PB_WI@Z PROC	; std::_Debug_pointer<Tile>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 553
  0001e	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00022	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  00024	8b f4		 mov	 esi, esp
  00026	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??$_Debug_pointer@VTile@@@std@@YAXPAVTile@@PB_WI@Z ENDP	; std::_Debug_pointer<Tile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range@PAVTile@@@std@@YAXPAVTile@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAVTile@@@std@@YAXPAVTile@@0PB_WI@Z PROC ; std::_Debug_range<Tile *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 584
  0001e	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  00021	50		 push	 eax
  00022	8d 8d 3b ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ??$_Iter_cat@PAVTile@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAVTile@@@Z ; std::_Iter_cat<Tile *>
  0002e	83 c4 08	 add	 esp, 8
  00031	8a 10		 mov	 dl, BYTE PTR [eax]
  00033	0f b6 c2	 movzx	 eax, dl
  00036	50		 push	 eax
  00037	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0003a	51		 push	 ecx
  0003b	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  0003e	52		 push	 edx
  0003f	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00042	50		 push	 eax
  00043	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Debug_range2@PAVTile@@@std@@YAXPAVTile@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<Tile *>
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??$_Debug_range@PAVTile@@@std@@YAXPAVTile@@0PB_WI@Z ENDP ; std::_Debug_range<Tile *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@VTile@@@?$allocator@VTile@@@std@@QAEXPAVTile@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@VTile@@@?$allocator@VTile@@@std@@QAEXPAVTile@@@Z PROC ; std::allocator<Tile>::destroy<Tile>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??$destroy@VTile@@@?$allocator@VTile@@@std@@QAEXPAVTile@@@Z ENDP ; std::allocator<Tile>::destroy<Tile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@USDL_Rect@@U1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@USDL_Rect@@U1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@USDL_Rect@@@std@@YA$$QAUSDL_Rect@@AAU1@@Z ; std::forward<SDL_Rect>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@USDL_Rect@@U1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@$$QAU3@@Z ; std::allocator_traits<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@USDL_Rect@@U1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_pointer@USDL_Rect@@@std@@YAXPAUSDL_Rect@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@USDL_Rect@@@std@@YAXPAUSDL_Rect@@PB_WI@Z PROC ; std::_Debug_pointer<SDL_Rect>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 553
  0001e	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00022	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 554
  00024	8b f4		 mov	 esi, esp
  00026	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??$_Debug_pointer@USDL_Rect@@@std@@YAXPAUSDL_Rect@@PB_WI@Z ENDP ; std::_Debug_pointer<SDL_Rect>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_range@PAUSDL_Rect@@@std@@YAXPAUSDL_Rect@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAUSDL_Rect@@@std@@YAXPAUSDL_Rect@@0PB_WI@Z PROC ; std::_Debug_range<SDL_Rect *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 584
  0001e	8d 45 08	 lea	 eax, DWORD PTR __First$[ebp]
  00021	50		 push	 eax
  00022	8d 8d 3b ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ??$_Iter_cat@PAUSDL_Rect@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUSDL_Rect@@@Z ; std::_Iter_cat<SDL_Rect *>
  0002e	83 c4 08	 add	 esp, 8
  00031	8a 10		 mov	 dl, BYTE PTR [eax]
  00033	0f b6 c2	 movzx	 eax, dl
  00036	50		 push	 eax
  00037	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  0003a	51		 push	 ecx
  0003b	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  0003e	52		 push	 edx
  0003f	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00042	50		 push	 eax
  00043	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ??$_Debug_range2@PAUSDL_Rect@@@std@@YAXPAUSDL_Rect@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<SDL_Rect *>
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
; Line 585
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
??$_Debug_range@PAUSDL_Rect@@@std@@YAXPAUSDL_Rect@@0PB_WI@Z ENDP ; std::_Debug_range<SDL_Rect *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@USDL_Rect@@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@USDL_Rect@@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@@Z PROC ; std::allocator<SDL_Rect>::destroy<SDL_Rect>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??$destroy@USDL_Rect@@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@@Z ENDP ; std::allocator<SDL_Rect>::destroy<SDL_Rect>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 607
  00023	6a 00		 push	 0
  00025	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00028	e8 00 00 00 00	 call	 ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
; Line 608
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Vector2 *,Vector2 *,std::allocator<Vector2>,Vector2>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 438
  00041	68 b6 01 00 00	 push	 438			; 000001b6H
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0004b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??$_Debug_range@PAUVector2@@@std@@YAXPAUVector2@@0PB_WI@Z ; std::_Debug_range<Vector2 *>
  00058	83 c4 10	 add	 esp, 16			; 00000010H
; Line 439
  0005b	68 b7 01 00 00	 push	 439			; 000001b7H
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00065	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@UVector2@@@std@@YAXPAUVector2@@PB_WI@Z ; std::_Debug_pointer<Vector2>
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 440
  00071	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00074	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
; Line 442
  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
  0007e	eb 12		 jmp	 SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
  00080	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00083	83 c0 08	 add	 eax, 8
  00086	89 45 10	 mov	 DWORD PTR __Dest$[ebp], eax
  00089	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0008c	83 c1 08	 add	 ecx, 8
  0008f	89 4d 08	 mov	 DWORD PTR __First$[ebp], ecx
$LN6@Uninit_mov:
  00092	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00095	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00098	74 12		 je	 SHORT $LN4@Uninit_mov
; Line 444
  0009a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  000a1	51		 push	 ecx
  000a2	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000a5	e8 00 00 00 00	 call	 ??$construct@UVector2@@U1@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::construct<Vector2,Vector2>
  000aa	eb d4		 jmp	 SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
  000ac	eb 30		 jmp	 SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
  000ae	eb 09		 jmp	 SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
  000b0	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000b3	83 c0 08	 add	 eax, 8
  000b6	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
  000b9	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000bc	3b 45 10	 cmp	 eax, DWORD PTR __Dest$[ebp]
  000bf	74 0e		 je	 SHORT $LN1@Uninit_mov
; Line 447
  000c1	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000c4	50		 push	 eax
  000c5	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000c8	e8 00 00 00 00	 call	 ??$destroy@UVector2@@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::destroy<Vector2>
  000cd	eb e1		 jmp	 SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
  000cf	6a 00		 push	 0
  000d1	6a 00		 push	 0
  000d3	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 449
  000d8	b8 00 00 00 00	 mov	 eax, $LN13@Uninit_mov
  000dd	c3		 ret	 0
$LN10@Uninit_mov:
  000de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000e5	eb 07		 jmp	 SHORT __tryend$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
  000e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
  000ee	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fb	59		 pop	 ecx
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00105	3b ec		 cmp	 ebp, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 20 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-224]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Vector2 *,Vector2 *,std::allocator<Vector2>,Vector2>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Val_type@PAUVector2@@@std@@YAPAUVector2@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUVector2@@@std@@YAPAUVector2@@PAU1@@Z PROC ; std::_Val_type<Vector2 *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 646
  0001e	33 c0		 xor	 eax, eax
; Line 647
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Val_type@PAUVector2@@@std@@YAPAUVector2@@PAU1@@Z ENDP ; std::_Val_type<Vector2 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@UVector2@@@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAXAAV?$allocator@UVector2@@@1@PAUVector2@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UVector2@@@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAXAAV?$allocator@UVector2@@@1@PAUVector2@@@Z PROC ; std::allocator_traits<std::allocator<Vector2> >::destroy<Vector2>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 730
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$destroy@UVector2@@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@@Z ; std::allocator<Vector2>::destroy<Vector2>
; Line 731
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$destroy@UVector2@@@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAXAAV?$allocator@UVector2@@@1@PAUVector2@@@Z ENDP ; std::allocator_traits<std::allocator<Vector2> >::destroy<Vector2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 438
  00041	68 b6 01 00 00	 push	 438			; 000001b6H
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0004b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??$_Debug_range@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0PB_WI@Z ; std::_Debug_range<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  00058	83 c4 10	 add	 esp, 16			; 00000010H
; Line 439
  0005b	68 b7 01 00 00	 push	 439			; 000001b7H
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00065	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PB_WI@Z ; std::_Debug_pointer<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 440
  00071	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00074	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
; Line 442
  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
  0007e	eb 12		 jmp	 SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
  00080	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00083	83 c0 1c	 add	 eax, 28			; 0000001cH
  00086	89 45 10	 mov	 DWORD PTR __Dest$[ebp], eax
  00089	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0008c	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0008f	89 4d 08	 mov	 DWORD PTR __First$[ebp], ecx
$LN6@Uninit_mov:
  00092	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00095	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00098	74 12		 je	 SHORT $LN4@Uninit_mov
; Line 444
  0009a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  000a1	51		 push	 ecx
  000a2	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000a5	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  000aa	eb d4		 jmp	 SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
  000ac	eb 30		 jmp	 SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
  000ae	eb 09		 jmp	 SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
  000b0	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000b3	83 c0 1c	 add	 eax, 28			; 0000001cH
  000b6	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
  000b9	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000bc	3b 45 10	 cmp	 eax, DWORD PTR __Dest$[ebp]
  000bf	74 0e		 je	 SHORT $LN1@Uninit_mov
; Line 447
  000c1	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000c4	50		 push	 eax
  000c5	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000c8	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  000cd	eb e1		 jmp	 SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
  000cf	6a 00		 push	 0
  000d1	6a 00		 push	 0
  000d3	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 449
  000d8	b8 00 00 00 00	 mov	 eax, $LN13@Uninit_mov
  000dd	c3		 ret	 0
$LN10@Uninit_mov:
  000de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000e5	eb 07		 jmp	 SHORT __tryend$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
  000e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
  000ee	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fb	59		 pop	 ecx
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00105	3b ec		 cmp	 ebp, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 20 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-224]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z PROC ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 646
  0001e	33 c0		 xor	 eax, eax
; Line 647
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ENDP ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<CaveSlope *,CaveSlope *,std::allocator<CaveSlope>,CaveSlope>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 438
  00041	68 b6 01 00 00	 push	 438			; 000001b6H
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0004b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??$_Debug_range@PAVCaveSlope@@@std@@YAXPAVCaveSlope@@0PB_WI@Z ; std::_Debug_range<CaveSlope *>
  00058	83 c4 10	 add	 esp, 16			; 00000010H
; Line 439
  0005b	68 b7 01 00 00	 push	 439			; 000001b7H
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00065	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@VCaveSlope@@@std@@YAXPAVCaveSlope@@PB_WI@Z ; std::_Debug_pointer<CaveSlope>
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 440
  00071	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00074	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
; Line 442
  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
  0007e	eb 12		 jmp	 SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
  00080	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00083	83 c0 14	 add	 eax, 20			; 00000014H
  00086	89 45 10	 mov	 DWORD PTR __Dest$[ebp], eax
  00089	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0008c	83 c1 14	 add	 ecx, 20			; 00000014H
  0008f	89 4d 08	 mov	 DWORD PTR __First$[ebp], ecx
$LN6@Uninit_mov:
  00092	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00095	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00098	74 12		 je	 SHORT $LN4@Uninit_mov
; Line 444
  0009a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  000a1	51		 push	 ecx
  000a2	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000a5	e8 00 00 00 00	 call	 ??$construct@VCaveSlope@@V1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope>
  000aa	eb d4		 jmp	 SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
  000ac	eb 30		 jmp	 SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
  000ae	eb 09		 jmp	 SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
  000b0	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000b3	83 c0 14	 add	 eax, 20			; 00000014H
  000b6	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
  000b9	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000bc	3b 45 10	 cmp	 eax, DWORD PTR __Dest$[ebp]
  000bf	74 0e		 je	 SHORT $LN1@Uninit_mov
; Line 447
  000c1	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000c4	50		 push	 eax
  000c5	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000c8	e8 00 00 00 00	 call	 ??$destroy@VCaveSlope@@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::destroy<CaveSlope>
  000cd	eb e1		 jmp	 SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
  000cf	6a 00		 push	 0
  000d1	6a 00		 push	 0
  000d3	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 449
  000d8	b8 00 00 00 00	 mov	 eax, $LN13@Uninit_mov
  000dd	c3		 ret	 0
$LN10@Uninit_mov:
  000de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000e5	eb 07		 jmp	 SHORT __tryend$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
  000e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
  000ee	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fb	59		 pop	 ecx
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00105	3b ec		 cmp	 ebp, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 20 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-224]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<CaveSlope *,CaveSlope *,std::allocator<CaveSlope>,CaveSlope>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Val_type@PAVCaveSlope@@@std@@YAPAVCaveSlope@@PAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAVCaveSlope@@@std@@YAPAVCaveSlope@@PAV1@@Z PROC ; std::_Val_type<CaveSlope *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 646
  0001e	33 c0		 xor	 eax, eax
; Line 647
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Val_type@PAVCaveSlope@@@std@@YAPAVCaveSlope@@PAV1@@Z ENDP ; std::_Val_type<CaveSlope *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@VCaveSlope@@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@VCaveSlope@@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@@Z PROC ; std::allocator_traits<std::allocator<CaveSlope> >::destroy<CaveSlope>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 730
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$destroy@VCaveSlope@@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@@Z ; std::allocator<CaveSlope>::destroy<CaveSlope>
; Line 731
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$destroy@VCaveSlope@@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@@Z ENDP ; std::allocator_traits<std::allocator<CaveSlope> >::destroy<CaveSlope>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<CaveRectangle *,CaveRectangle *,std::allocator<CaveRectangle>,CaveRectangle>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 438
  00041	68 b6 01 00 00	 push	 438			; 000001b6H
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0004b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??$_Debug_range@PAVCaveRectangle@@@std@@YAXPAVCaveRectangle@@0PB_WI@Z ; std::_Debug_range<CaveRectangle *>
  00058	83 c4 10	 add	 esp, 16			; 00000010H
; Line 439
  0005b	68 b7 01 00 00	 push	 439			; 000001b7H
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00065	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@VCaveRectangle@@@std@@YAXPAVCaveRectangle@@PB_WI@Z ; std::_Debug_pointer<CaveRectangle>
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 440
  00071	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00074	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
; Line 442
  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
  0007e	eb 12		 jmp	 SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
  00080	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00083	83 c0 10	 add	 eax, 16			; 00000010H
  00086	89 45 10	 mov	 DWORD PTR __Dest$[ebp], eax
  00089	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0008c	83 c1 10	 add	 ecx, 16			; 00000010H
  0008f	89 4d 08	 mov	 DWORD PTR __First$[ebp], ecx
$LN6@Uninit_mov:
  00092	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00095	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00098	74 12		 je	 SHORT $LN4@Uninit_mov
; Line 444
  0009a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  000a1	51		 push	 ecx
  000a2	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000a5	e8 00 00 00 00	 call	 ??$construct@VCaveRectangle@@V1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle>
  000aa	eb d4		 jmp	 SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
  000ac	eb 30		 jmp	 SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
  000ae	eb 09		 jmp	 SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
  000b0	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000b3	83 c0 10	 add	 eax, 16			; 00000010H
  000b6	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
  000b9	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000bc	3b 45 10	 cmp	 eax, DWORD PTR __Dest$[ebp]
  000bf	74 0e		 je	 SHORT $LN1@Uninit_mov
; Line 447
  000c1	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000c4	50		 push	 eax
  000c5	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000c8	e8 00 00 00 00	 call	 ??$destroy@VCaveRectangle@@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::destroy<CaveRectangle>
  000cd	eb e1		 jmp	 SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
  000cf	6a 00		 push	 0
  000d1	6a 00		 push	 0
  000d3	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 449
  000d8	b8 00 00 00 00	 mov	 eax, $LN13@Uninit_mov
  000dd	c3		 ret	 0
$LN10@Uninit_mov:
  000de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000e5	eb 07		 jmp	 SHORT __tryend$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
  000e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
  000ee	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fb	59		 pop	 ecx
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00105	3b ec		 cmp	 ebp, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 20 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-224]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<CaveRectangle *,CaveRectangle *,std::allocator<CaveRectangle>,CaveRectangle>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Val_type@PAVCaveRectangle@@@std@@YAPAVCaveRectangle@@PAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAVCaveRectangle@@@std@@YAPAVCaveRectangle@@PAV1@@Z PROC ; std::_Val_type<CaveRectangle *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 646
  0001e	33 c0		 xor	 eax, eax
; Line 647
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Val_type@PAVCaveRectangle@@@std@@YAPAVCaveRectangle@@PAV1@@Z ENDP ; std::_Val_type<CaveRectangle *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@VCaveRectangle@@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@VCaveRectangle@@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@@Z PROC ; std::allocator_traits<std::allocator<CaveRectangle> >::destroy<CaveRectangle>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 730
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$destroy@VCaveRectangle@@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@@Z ; std::allocator<CaveRectangle>::destroy<CaveRectangle>
; Line 731
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$destroy@VCaveRectangle@@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@@Z ENDP ; std::allocator_traits<std::allocator<CaveRectangle> >::destroy<CaveRectangle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<TileSet *,TileSet *,std::allocator<TileSet>,TileSet>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 438
  00041	68 b6 01 00 00	 push	 438			; 000001b6H
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0004b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??$_Debug_range@PAUTileSet@@@std@@YAXPAUTileSet@@0PB_WI@Z ; std::_Debug_range<TileSet *>
  00058	83 c4 10	 add	 esp, 16			; 00000010H
; Line 439
  0005b	68 b7 01 00 00	 push	 439			; 000001b7H
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00065	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@UTileSet@@@std@@YAXPAUTileSet@@PB_WI@Z ; std::_Debug_pointer<TileSet>
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 440
  00071	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00074	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
; Line 442
  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
  0007e	eb 12		 jmp	 SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
  00080	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00083	83 c0 08	 add	 eax, 8
  00086	89 45 10	 mov	 DWORD PTR __Dest$[ebp], eax
  00089	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0008c	83 c1 08	 add	 ecx, 8
  0008f	89 4d 08	 mov	 DWORD PTR __First$[ebp], ecx
$LN6@Uninit_mov:
  00092	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00095	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00098	74 12		 je	 SHORT $LN4@Uninit_mov
; Line 444
  0009a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  000a1	51		 push	 ecx
  000a2	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000a5	e8 00 00 00 00	 call	 ??$construct@UTileSet@@U1@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::construct<TileSet,TileSet>
  000aa	eb d4		 jmp	 SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
  000ac	eb 30		 jmp	 SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
  000ae	eb 09		 jmp	 SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
  000b0	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000b3	83 c0 08	 add	 eax, 8
  000b6	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
  000b9	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000bc	3b 45 10	 cmp	 eax, DWORD PTR __Dest$[ebp]
  000bf	74 0e		 je	 SHORT $LN1@Uninit_mov
; Line 447
  000c1	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000c4	50		 push	 eax
  000c5	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000c8	e8 00 00 00 00	 call	 ??$destroy@UTileSet@@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::destroy<TileSet>
  000cd	eb e1		 jmp	 SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
  000cf	6a 00		 push	 0
  000d1	6a 00		 push	 0
  000d3	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 449
  000d8	b8 00 00 00 00	 mov	 eax, $LN13@Uninit_mov
  000dd	c3		 ret	 0
$LN10@Uninit_mov:
  000de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000e5	eb 07		 jmp	 SHORT __tryend$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
  000e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
  000ee	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fb	59		 pop	 ecx
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00105	3b ec		 cmp	 ebp, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 20 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-224]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<TileSet *,TileSet *,std::allocator<TileSet>,TileSet>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Val_type@PAUTileSet@@@std@@YAPAUTileSet@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUTileSet@@@std@@YAPAUTileSet@@PAU1@@Z PROC ; std::_Val_type<TileSet *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 646
  0001e	33 c0		 xor	 eax, eax
; Line 647
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Val_type@PAUTileSet@@@std@@YAPAUTileSet@@PAU1@@Z ENDP ; std::_Val_type<TileSet *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@UTileSet@@@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAXAAV?$allocator@UTileSet@@@1@PAUTileSet@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UTileSet@@@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAXAAV?$allocator@UTileSet@@@1@PAUTileSet@@@Z PROC ; std::allocator_traits<std::allocator<TileSet> >::destroy<TileSet>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 730
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$destroy@UTileSet@@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@@Z ; std::allocator<TileSet>::destroy<TileSet>
; Line 731
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$destroy@UTileSet@@@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAXAAV?$allocator@UTileSet@@@1@PAUTileSet@@@Z ENDP ; std::allocator_traits<std::allocator<TileSet> >::destroy<TileSet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Tile *,Tile *,std::allocator<Tile>,Tile>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 438
  00041	68 b6 01 00 00	 push	 438			; 000001b6H
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0004b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??$_Debug_range@PAVTile@@@std@@YAXPAVTile@@0PB_WI@Z ; std::_Debug_range<Tile *>
  00058	83 c4 10	 add	 esp, 16			; 00000010H
; Line 439
  0005b	68 b7 01 00 00	 push	 439			; 000001b7H
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00065	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@VTile@@@std@@YAXPAVTile@@PB_WI@Z ; std::_Debug_pointer<Tile>
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 440
  00071	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00074	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
; Line 442
  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
  0007e	eb 12		 jmp	 SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
  00080	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00083	83 c0 1c	 add	 eax, 28			; 0000001cH
  00086	89 45 10	 mov	 DWORD PTR __Dest$[ebp], eax
  00089	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0008c	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0008f	89 4d 08	 mov	 DWORD PTR __First$[ebp], ecx
$LN6@Uninit_mov:
  00092	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00095	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00098	74 12		 je	 SHORT $LN4@Uninit_mov
; Line 444
  0009a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  000a1	51		 push	 ecx
  000a2	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000a5	e8 00 00 00 00	 call	 ??$construct@VTile@@V1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<Tile> >::construct<Tile,Tile>
  000aa	eb d4		 jmp	 SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
  000ac	eb 30		 jmp	 SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
  000ae	eb 09		 jmp	 SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
  000b0	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000b3	83 c0 1c	 add	 eax, 28			; 0000001cH
  000b6	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
  000b9	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000bc	3b 45 10	 cmp	 eax, DWORD PTR __Dest$[ebp]
  000bf	74 0e		 je	 SHORT $LN1@Uninit_mov
; Line 447
  000c1	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000c4	50		 push	 eax
  000c5	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000c8	e8 00 00 00 00	 call	 ??$destroy@VTile@@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@@Z ; std::_Wrap_alloc<std::allocator<Tile> >::destroy<Tile>
  000cd	eb e1		 jmp	 SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
  000cf	6a 00		 push	 0
  000d1	6a 00		 push	 0
  000d3	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 449
  000d8	b8 00 00 00 00	 mov	 eax, $LN13@Uninit_mov
  000dd	c3		 ret	 0
$LN10@Uninit_mov:
  000de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000e5	eb 07		 jmp	 SHORT __tryend$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
  000e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
  000ee	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fb	59		 pop	 ecx
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00105	3b ec		 cmp	 ebp, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 20 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-224]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Tile *,Tile *,std::allocator<Tile>,Tile>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Val_type@PAVTile@@@std@@YAPAVTile@@PAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAVTile@@@std@@YAPAVTile@@PAV1@@Z PROC	; std::_Val_type<Tile *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 646
  0001e	33 c0		 xor	 eax, eax
; Line 647
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Val_type@PAVTile@@@std@@YAPAVTile@@PAV1@@Z ENDP	; std::_Val_type<Tile *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@VTile@@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@VTile@@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@@Z PROC ; std::allocator_traits<std::allocator<Tile> >::destroy<Tile>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 730
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$destroy@VTile@@@?$allocator@VTile@@@std@@QAEXPAVTile@@@Z ; std::allocator<Tile>::destroy<Tile>
; Line 731
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$destroy@VTile@@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@@Z ENDP ; std::allocator_traits<std::allocator<Tile> >::destroy<Tile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<SDL_Rect *,SDL_Rect *,std::allocator<SDL_Rect>,SDL_Rect>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 438
  00041	68 b6 01 00 00	 push	 438			; 000001b6H
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0004b	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??$_Debug_range@PAUSDL_Rect@@@std@@YAXPAUSDL_Rect@@0PB_WI@Z ; std::_Debug_range<SDL_Rect *>
  00058	83 c4 10	 add	 esp, 16			; 00000010H
; Line 439
  0005b	68 b7 01 00 00	 push	 439			; 000001b7H
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@HFHPAKCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00065	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ??$_Debug_pointer@USDL_Rect@@@std@@YAXPAUSDL_Rect@@PB_WI@Z ; std::_Debug_pointer<SDL_Rect>
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 440
  00071	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00074	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
; Line 442
  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
  0007e	eb 12		 jmp	 SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
  00080	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00083	83 c0 10	 add	 eax, 16			; 00000010H
  00086	89 45 10	 mov	 DWORD PTR __Dest$[ebp], eax
  00089	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0008c	83 c1 10	 add	 ecx, 16			; 00000010H
  0008f	89 4d 08	 mov	 DWORD PTR __First$[ebp], ecx
$LN6@Uninit_mov:
  00092	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00095	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00098	74 12		 je	 SHORT $LN4@Uninit_mov
; Line 444
  0009a	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  000a1	51		 push	 ecx
  000a2	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000a5	e8 00 00 00 00	 call	 ??$construct@USDL_Rect@@U1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect>
  000aa	eb d4		 jmp	 SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
  000ac	eb 30		 jmp	 SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
  000ae	eb 09		 jmp	 SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
  000b0	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000b3	83 c0 10	 add	 eax, 16			; 00000010H
  000b6	89 45 e8	 mov	 DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
  000b9	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000bc	3b 45 10	 cmp	 eax, DWORD PTR __Dest$[ebp]
  000bf	74 0e		 je	 SHORT $LN1@Uninit_mov
; Line 447
  000c1	8b 45 e8	 mov	 eax, DWORD PTR __Next$[ebp]
  000c4	50		 push	 eax
  000c5	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  000c8	e8 00 00 00 00	 call	 ??$destroy@USDL_Rect@@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::destroy<SDL_Rect>
  000cd	eb e1		 jmp	 SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
  000cf	6a 00		 push	 0
  000d1	6a 00		 push	 0
  000d3	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 449
  000d8	b8 00 00 00 00	 mov	 eax, $LN13@Uninit_mov
  000dd	c3		 ret	 0
$LN10@Uninit_mov:
  000de	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000e5	eb 07		 jmp	 SHORT __tryend$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
  000e7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
  000ee	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fb	59		 pop	 ecx
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5b		 pop	 ebx
  000ff	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00105	3b ec		 cmp	 ebp, esp
  00107	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 20 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-224]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<SDL_Rect *,SDL_Rect *,std::allocator<SDL_Rect>,SDL_Rect>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Val_type@PAUSDL_Rect@@@std@@YAPAUSDL_Rect@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUSDL_Rect@@@std@@YAPAUSDL_Rect@@PAU1@@Z PROC ; std::_Val_type<SDL_Rect *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 646
  0001e	33 c0		 xor	 eax, eax
; Line 647
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	5b		 pop	 ebx
  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Val_type@PAUSDL_Rect@@@std@@YAPAUSDL_Rect@@PAU1@@Z ENDP ; std::_Val_type<SDL_Rect *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@USDL_Rect@@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@USDL_Rect@@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@@Z PROC ; std::allocator_traits<std::allocator<SDL_Rect> >::destroy<SDL_Rect>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 730
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$destroy@USDL_Rect@@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@@Z ; std::allocator<SDL_Rect>::destroy<SDL_Rect>
; Line 731
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$destroy@USDL_Rect@@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@@Z ENDP ; std::allocator_traits<std::allocator<SDL_Rect> >::destroy<SDL_Rect>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 730
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Line 731
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?RABHABH@?$less@X@std@@QBE_NABH0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_this$ = -8						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?RABHABH@?$less@X@std@@QBE_NABH0@Z PROC		; std::less<void>::operator()<int const &,int const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 263
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 268
  00023	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00026	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00029	8b 10		 mov	 edx, DWORD PTR [eax]
  0002b	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0002d	7d 0c		 jge	 SHORT $LN3@operator
  0002f	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv65[ebp], 1
  00039	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003b	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv65[ebp], 0
$LN4@operator:
  00045	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv65[ebp]
; Line 269
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
??$?RABHABH@?$less@X@std@@QBE_NABH0@Z ENDP		; std::less<void>::operator()<int const &,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Rechecked@PAUVector2@@PAU1@@std@@YAAAPAUVector2@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUVector2@@PAU1@@std@@YAAAPAUVector2@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<Vector2 *,Vector2 *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 289
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00024	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  00026	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_Rechecked@PAUVector2@@PAU1@@std@@YAAAPAUVector2@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<Vector2 *,Vector2 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAUVector2@@PAU1@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAUVector2@@PAU1@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z PROC ; std::_Uninit_move<Vector2 *,Vector2 *,std::_Wrap_alloc<std::allocator<Vector2> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 484
  0001e	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@UVector2@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUVector2@@0@Z ; std::_Ptr_cat<Vector2,Vector2>
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Val_type@PAUVector2@@@std@@YAPAUVector2@@PAU1@@Z ; std::_Val_type<Vector2 *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00050	52		 push	 edx
  00051	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUVector2@@PAU1@V?$allocator@UVector2@@@std@@U1@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Vector2 *,Vector2 *,std::allocator<Vector2>,Vector2>
  0005e	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
??$_Uninit_move@PAUVector2@@PAU1@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z ENDP ; std::_Uninit_move<Vector2 *,Vector2 *,std::_Wrap_alloc<std::allocator<Vector2> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unchecked@PAUVector2@@@std@@YAPAUVector2@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUVector2@@@std@@YAPAUVector2@@PAU1@@Z PROC ; std::_Unchecked<Vector2 *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 281
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unchecked@PAUVector2@@@std@@YAPAUVector2@@PAU1@@Z ENDP ; std::_Unchecked<Vector2 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@UVector2@@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UVector2@@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@@Z PROC ; std::_Wrap_alloc<std::allocator<Vector2> >::destroy<Vector2>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$destroy@UVector2@@@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAXAAV?$allocator@UVector2@@@1@PAUVector2@@@Z ; std::allocator_traits<std::allocator<Vector2> >::destroy<Vector2>
  00030	83 c4 08	 add	 esp, 8
; Line 880
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??$destroy@UVector2@@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@@Z ENDP ; std::_Wrap_alloc<std::allocator<Vector2> >::destroy<Vector2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Rechecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 289
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00024	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  00026	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_Rechecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z PROC ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 484
  0001e	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00050	52		 push	 edx
  00051	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0005e	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ENDP ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z PROC ; std::_Unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 281
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ENDP ; std::_Unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Rechecked@PAVCaveSlope@@PAV1@@std@@YAAAPAVCaveSlope@@AAPAV1@PAV1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAVCaveSlope@@PAV1@@std@@YAAAPAVCaveSlope@@AAPAV1@PAV1@@Z PROC ; std::_Rechecked<CaveSlope *,CaveSlope *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 289
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00024	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  00026	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_Rechecked@PAVCaveSlope@@PAV1@@std@@YAAAPAVCaveSlope@@AAPAV1@PAV1@@Z ENDP ; std::_Rechecked<CaveSlope *,CaveSlope *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAVCaveSlope@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAVCaveSlope@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z PROC ; std::_Uninit_move<CaveSlope *,CaveSlope *,std::_Wrap_alloc<std::allocator<CaveSlope> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 484
  0001e	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@VCaveSlope@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVCaveSlope@@0@Z ; std::_Ptr_cat<CaveSlope,CaveSlope>
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Val_type@PAVCaveSlope@@@std@@YAPAVCaveSlope@@PAV1@@Z ; std::_Val_type<CaveSlope *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00050	52		 push	 edx
  00051	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVCaveSlope@@PAV1@V?$allocator@VCaveSlope@@@std@@V1@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CaveSlope *,CaveSlope *,std::allocator<CaveSlope>,CaveSlope>
  0005e	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
??$_Uninit_move@PAVCaveSlope@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z ENDP ; std::_Uninit_move<CaveSlope *,CaveSlope *,std::_Wrap_alloc<std::allocator<CaveSlope> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unchecked@PAVCaveSlope@@@std@@YAPAVCaveSlope@@PAV1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAVCaveSlope@@@std@@YAPAVCaveSlope@@PAV1@@Z PROC ; std::_Unchecked<CaveSlope *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 281
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unchecked@PAVCaveSlope@@@std@@YAPAVCaveSlope@@PAV1@@Z ENDP ; std::_Unchecked<CaveSlope *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@VCaveSlope@@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@VCaveSlope@@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@@Z PROC ; std::_Wrap_alloc<std::allocator<CaveSlope> >::destroy<CaveSlope>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$destroy@VCaveSlope@@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@@Z ; std::allocator_traits<std::allocator<CaveSlope> >::destroy<CaveSlope>
  00030	83 c4 08	 add	 esp, 8
; Line 880
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??$destroy@VCaveSlope@@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@@Z ENDP ; std::_Wrap_alloc<std::allocator<CaveSlope> >::destroy<CaveSlope>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Rechecked@PAVCaveRectangle@@PAV1@@std@@YAAAPAVCaveRectangle@@AAPAV1@PAV1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAVCaveRectangle@@PAV1@@std@@YAAAPAVCaveRectangle@@AAPAV1@PAV1@@Z PROC ; std::_Rechecked<CaveRectangle *,CaveRectangle *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 289
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00024	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  00026	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_Rechecked@PAVCaveRectangle@@PAV1@@std@@YAAAPAVCaveRectangle@@AAPAV1@PAV1@@Z ENDP ; std::_Rechecked<CaveRectangle *,CaveRectangle *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAVCaveRectangle@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAVCaveRectangle@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z PROC ; std::_Uninit_move<CaveRectangle *,CaveRectangle *,std::_Wrap_alloc<std::allocator<CaveRectangle> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 484
  0001e	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@VCaveRectangle@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVCaveRectangle@@0@Z ; std::_Ptr_cat<CaveRectangle,CaveRectangle>
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Val_type@PAVCaveRectangle@@@std@@YAPAVCaveRectangle@@PAV1@@Z ; std::_Val_type<CaveRectangle *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00050	52		 push	 edx
  00051	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVCaveRectangle@@PAV1@V?$allocator@VCaveRectangle@@@std@@V1@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<CaveRectangle *,CaveRectangle *,std::allocator<CaveRectangle>,CaveRectangle>
  0005e	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
??$_Uninit_move@PAVCaveRectangle@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z ENDP ; std::_Uninit_move<CaveRectangle *,CaveRectangle *,std::_Wrap_alloc<std::allocator<CaveRectangle> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unchecked@PAVCaveRectangle@@@std@@YAPAVCaveRectangle@@PAV1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAVCaveRectangle@@@std@@YAPAVCaveRectangle@@PAV1@@Z PROC ; std::_Unchecked<CaveRectangle *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 281
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unchecked@PAVCaveRectangle@@@std@@YAPAVCaveRectangle@@PAV1@@Z ENDP ; std::_Unchecked<CaveRectangle *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@VCaveRectangle@@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@VCaveRectangle@@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@@Z PROC ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::destroy<CaveRectangle>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$destroy@VCaveRectangle@@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@@Z ; std::allocator_traits<std::allocator<CaveRectangle> >::destroy<CaveRectangle>
  00030	83 c4 08	 add	 esp, 8
; Line 880
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??$destroy@VCaveRectangle@@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@@Z ENDP ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::destroy<CaveRectangle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Rechecked@PAUTileSet@@PAU1@@std@@YAAAPAUTileSet@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUTileSet@@PAU1@@std@@YAAAPAUTileSet@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<TileSet *,TileSet *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 289
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00024	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  00026	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_Rechecked@PAUTileSet@@PAU1@@std@@YAAAPAUTileSet@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<TileSet *,TileSet *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAUTileSet@@PAU1@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAUTileSet@@PAU1@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z PROC ; std::_Uninit_move<TileSet *,TileSet *,std::_Wrap_alloc<std::allocator<TileSet> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 484
  0001e	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@UTileSet@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUTileSet@@0@Z ; std::_Ptr_cat<TileSet,TileSet>
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Val_type@PAUTileSet@@@std@@YAPAUTileSet@@PAU1@@Z ; std::_Val_type<TileSet *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00050	52		 push	 edx
  00051	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUTileSet@@PAU1@V?$allocator@UTileSet@@@std@@U1@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<TileSet *,TileSet *,std::allocator<TileSet>,TileSet>
  0005e	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
??$_Uninit_move@PAUTileSet@@PAU1@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z ENDP ; std::_Uninit_move<TileSet *,TileSet *,std::_Wrap_alloc<std::allocator<TileSet> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unchecked@PAUTileSet@@@std@@YAPAUTileSet@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUTileSet@@@std@@YAPAUTileSet@@PAU1@@Z PROC ; std::_Unchecked<TileSet *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 281
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unchecked@PAUTileSet@@@std@@YAPAUTileSet@@PAU1@@Z ENDP ; std::_Unchecked<TileSet *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@UTileSet@@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UTileSet@@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@@Z PROC ; std::_Wrap_alloc<std::allocator<TileSet> >::destroy<TileSet>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$destroy@UTileSet@@@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAXAAV?$allocator@UTileSet@@@1@PAUTileSet@@@Z ; std::allocator_traits<std::allocator<TileSet> >::destroy<TileSet>
  00030	83 c4 08	 add	 esp, 8
; Line 880
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??$destroy@UTileSet@@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@@Z ENDP ; std::_Wrap_alloc<std::allocator<TileSet> >::destroy<TileSet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Rechecked@PAVTile@@PAV1@@std@@YAAAPAVTile@@AAPAV1@PAV1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAVTile@@PAV1@@std@@YAAAPAVTile@@AAPAV1@PAV1@@Z PROC ; std::_Rechecked<Tile *,Tile *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 289
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00024	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  00026	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_Rechecked@PAVTile@@PAV1@@std@@YAAAPAVTile@@AAPAV1@PAV1@@Z ENDP ; std::_Rechecked<Tile *,Tile *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAVTile@@PAV1@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAVTile@@PAV1@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z PROC ; std::_Uninit_move<Tile *,Tile *,std::_Wrap_alloc<std::allocator<Tile> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 484
  0001e	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@VTile@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVTile@@0@Z ; std::_Ptr_cat<Tile,Tile>
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Val_type@PAVTile@@@std@@YAPAVTile@@PAV1@@Z ; std::_Val_type<Tile *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00050	52		 push	 edx
  00051	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVTile@@PAV1@V?$allocator@VTile@@@std@@V1@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Tile *,Tile *,std::allocator<Tile>,Tile>
  0005e	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
??$_Uninit_move@PAVTile@@PAV1@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z ENDP ; std::_Uninit_move<Tile *,Tile *,std::_Wrap_alloc<std::allocator<Tile> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unchecked@PAVTile@@@std@@YAPAVTile@@PAV1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAVTile@@@std@@YAPAVTile@@PAV1@@Z PROC	; std::_Unchecked<Tile *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 281
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unchecked@PAVTile@@@std@@YAPAVTile@@PAV1@@Z ENDP	; std::_Unchecked<Tile *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@VTile@@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@VTile@@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@@Z PROC ; std::_Wrap_alloc<std::allocator<Tile> >::destroy<Tile>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$destroy@VTile@@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@@Z ; std::allocator_traits<std::allocator<Tile> >::destroy<Tile>
  00030	83 c4 08	 add	 esp, 8
; Line 880
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??$destroy@VTile@@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@@Z ENDP ; std::_Wrap_alloc<std::allocator<Tile> >::destroy<Tile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Rechecked@PAUSDL_Rect@@PAU1@@std@@YAAAPAUSDL_Rect@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUSDL_Rect@@PAU1@@std@@YAAAPAUSDL_Rect@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<SDL_Rect *,SDL_Rect *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 289
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00024	89 08		 mov	 DWORD PTR [eax], ecx
; Line 290
  00026	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
; Line 291
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_Rechecked@PAUSDL_Rect@@PAU1@@std@@YAAAPAUSDL_Rect@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<SDL_Rect *,SDL_Rect *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninit_move@PAUSDL_Rect@@PAU1@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAUSDL_Rect@@PAU1@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z PROC ; std::_Uninit_move<SDL_Rect *,SDL_Rect *,std::_Wrap_alloc<std::allocator<SDL_Rect> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 484
  0001e	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@USDL_Rect@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUSDL_Rect@@0@Z ; std::_Ptr_cat<SDL_Rect,SDL_Rect>
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Val_type@PAUSDL_Rect@@@std@@YAPAUSDL_Rect@@PAU1@@Z ; std::_Val_type<SDL_Rect *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00050	52		 push	 edx
  00051	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUSDL_Rect@@PAU1@V?$allocator@USDL_Rect@@@std@@U1@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<SDL_Rect *,SDL_Rect *,std::allocator<SDL_Rect>,SDL_Rect>
  0005e	83 c4 18	 add	 esp, 24			; 00000018H
; Line 485
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
??$_Uninit_move@PAUSDL_Rect@@PAU1@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z ENDP ; std::_Uninit_move<SDL_Rect *,SDL_Rect *,std::_Wrap_alloc<std::allocator<SDL_Rect> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unchecked@PAUSDL_Rect@@@std@@YAPAUSDL_Rect@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUSDL_Rect@@@std@@YAPAUSDL_Rect@@PAU1@@Z PROC ; std::_Unchecked<SDL_Rect *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 281
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]
; Line 282
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unchecked@PAUSDL_Rect@@@std@@YAPAUSDL_Rect@@PAU1@@Z ENDP ; std::_Unchecked<SDL_Rect *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@USDL_Rect@@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@USDL_Rect@@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@@Z PROC ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::destroy<SDL_Rect>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$destroy@USDL_Rect@@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@@Z ; std::allocator_traits<std::allocator<SDL_Rect> >::destroy<SDL_Rect>
  00030	83 c4 08	 add	 esp, 8
; Line 880
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??$destroy@USDL_Rect@@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@@Z ENDP ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::destroy<SDL_Rect>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00030	83 c4 08	 add	 esp, 8
; Line 880
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
tv73 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 04		 push	 4
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 24		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@AAPAD@std@@YAAAPADAAPAD@Z ; std::forward<char * &>
  0006f	83 c4 04	 add	 esp, 4
  00072	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00078	8b 00		 mov	 eax, DWORD PTR [eax]
  0007a	89 02		 mov	 DWORD PTR [edx], eax
  0007c	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00082	89 8d 0c ff ff
	ff		 mov	 DWORD PTR tv73[ebp], ecx
  00088	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  0008a	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
$LN4@construct:
  00094	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR tv73[ebp]
  0009a	89 95 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  000a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000a7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000aa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b1	59		 pop	 ecx
  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000bb	3b ec		 cmp	 ebp, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z PROC ; std::allocator<Vector2>::construct<Vector2,Vector2>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 08		 push	 8
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 2a		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@UVector2@@@std@@YA$$QAUVector2@@AAU1@@Z ; std::forward<Vector2>
  0006f	83 c4 04	 add	 esp, 4
  00072	8b 10		 mov	 edx, DWORD PTR [eax]
  00074	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00077	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0007d	89 11		 mov	 DWORD PTR [ecx], edx
  0007f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00082	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00088	89 95 0c ff ff
	ff		 mov	 DWORD PTR tv74[ebp], edx
  0008e	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00090	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  0009a	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR tv74[ebp]
  000a0	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000ad	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b7	59		 pop	 ecx
  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	5b		 pop	 ebx
  000bb	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000c1	3b ec		 cmp	 ebp, esp
  000c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z ENDP ; std::allocator<Vector2>::construct<Vector2,Vector2>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z
_TEXT	SEGMENT
tv76 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 1c		 push	 28			; 0000001cH
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 20		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0006f	83 c4 04	 add	 esp, 4
  00072	50		 push	 eax
  00073	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00079	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0007e	89 85 0c ff ff
	ff		 mov	 DWORD PTR tv76[ebp], eax
  00084	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00086	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN4@construct:
  00090	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR tv76[ebp]
  00096	89 95 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  0009c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000a3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ad	59		 pop	 ecx
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx
  000b1	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000b7	3b ec		 cmp	 ebp, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z PROC ; std::allocator<CaveSlope>::construct<CaveSlope,CaveSlope &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 14		 push	 20			; 00000014H
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 3c		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@AAVCaveSlope@@@std@@YAAAVCaveSlope@@AAV1@@Z ; std::forward<CaveSlope &>
  0006f	83 c4 04	 add	 esp, 4
  00072	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00078	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007a	89 0a		 mov	 DWORD PTR [edx], ecx
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00082	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00085	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00088	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0008b	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  0008e	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00091	89 42 10	 mov	 DWORD PTR [edx+16], eax
  00094	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0009a	89 8d 0c ff ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  000a0	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  000a2	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  000ac	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR tv74[ebp]
  000b2	89 95 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  000b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000bf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c9	59		 pop	 ecx
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z ENDP ; std::allocator<CaveSlope>::construct<CaveSlope,CaveSlope &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z PROC ; std::allocator<CaveSlope>::construct<CaveSlope,CaveSlope>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 14		 push	 20			; 00000014H
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 3c		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@VCaveSlope@@@std@@YA$$QAVCaveSlope@@AAV1@@Z ; std::forward<CaveSlope>
  0006f	83 c4 04	 add	 esp, 4
  00072	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00078	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007a	89 0a		 mov	 DWORD PTR [edx], ecx
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00082	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00085	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00088	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0008b	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  0008e	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00091	89 42 10	 mov	 DWORD PTR [edx+16], eax
  00094	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0009a	89 8d 0c ff ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  000a0	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  000a2	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  000ac	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR tv74[ebp]
  000b2	89 95 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  000b8	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000bf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c9	59		 pop	 ecx
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000d3	3b ec		 cmp	 ebp, esp
  000d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z ENDP ; std::allocator<CaveSlope>::construct<CaveSlope,CaveSlope>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z PROC ; std::allocator<CaveRectangle>::construct<CaveRectangle,CaveRectangle &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 10		 push	 16			; 00000010H
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 36		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@AAVCaveRectangle@@@std@@YAAAVCaveRectangle@@AAV1@@Z ; std::forward<CaveRectangle &>
  0006f	83 c4 04	 add	 esp, 4
  00072	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00078	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007a	89 0a		 mov	 DWORD PTR [edx], ecx
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00082	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00085	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00088	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0008b	89 42 0c	 mov	 DWORD PTR [edx+12], eax
  0008e	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00094	89 8d 0c ff ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  0009a	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  0009c	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  000a6	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR tv74[ebp]
  000ac	89 95 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  000b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c3	59		 pop	 ecx
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
  000c7	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000cd	3b ec		 cmp	 ebp, esp
  000cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z ENDP ; std::allocator<CaveRectangle>::construct<CaveRectangle,CaveRectangle &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z PROC ; std::allocator<CaveRectangle>::construct<CaveRectangle,CaveRectangle>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 10		 push	 16			; 00000010H
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 36		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@VCaveRectangle@@@std@@YA$$QAVCaveRectangle@@AAV1@@Z ; std::forward<CaveRectangle>
  0006f	83 c4 04	 add	 esp, 4
  00072	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00078	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007a	89 0a		 mov	 DWORD PTR [edx], ecx
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00082	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00085	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00088	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0008b	89 42 0c	 mov	 DWORD PTR [edx+12], eax
  0008e	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00094	89 8d 0c ff ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  0009a	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  0009c	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  000a6	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR tv74[ebp]
  000ac	89 95 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  000b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c3	59		 pop	 ecx
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
  000c7	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000cd	3b ec		 cmp	 ebp, esp
  000cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z ENDP ; std::allocator<CaveRectangle>::construct<CaveRectangle,CaveRectangle>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z PROC ; std::allocator<TileSet>::construct<TileSet,TileSet>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 08		 push	 8
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 2a		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@UTileSet@@@std@@YA$$QAUTileSet@@AAU1@@Z ; std::forward<TileSet>
  0006f	83 c4 04	 add	 esp, 4
  00072	8b 10		 mov	 edx, DWORD PTR [eax]
  00074	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00077	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0007d	89 11		 mov	 DWORD PTR [ecx], edx
  0007f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00082	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00088	89 95 0c ff ff
	ff		 mov	 DWORD PTR tv74[ebp], edx
  0008e	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00090	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  0009a	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR tv74[ebp]
  000a0	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000ad	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b7	59		 pop	 ecx
  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	5b		 pop	 ebx
  000bb	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000c1	3b ec		 cmp	 ebp, esp
  000c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z ENDP ; std::allocator<TileSet>::construct<TileSet,TileSet>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z PROC ; std::allocator<Tile>::construct<Tile,Tile &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 1c		 push	 28			; 0000001cH
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 29		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@AAVTile@@@std@@YAAAVTile@@AAV1@@Z ; std::forward<Tile &>
  0006f	83 c4 04	 add	 esp, 4
  00072	b9 07 00 00 00	 mov	 ecx, 7
  00077	8b f0		 mov	 esi, eax
  00079	8b bd 20 ff ff
	ff		 mov	 edi, DWORD PTR $T3[ebp]
  0007f	f3 a5		 rep movsd
  00081	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00087	89 95 0c ff ff
	ff		 mov	 DWORD PTR tv74[ebp], edx
  0008d	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  0008f	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  00099	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR tv74[ebp]
  0009f	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  000a5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b6	59		 pop	 ecx
  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
  000ba	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000c0	3b ec		 cmp	 ebp, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z ENDP ; std::allocator<Tile>::construct<Tile,Tile &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z PROC ; std::allocator<SDL_Rect>::construct<SDL_Rect,SDL_Rect &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 10		 push	 16			; 00000010H
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 36		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@AAUSDL_Rect@@@std@@YAAAUSDL_Rect@@AAU1@@Z ; std::forward<SDL_Rect &>
  0006f	83 c4 04	 add	 esp, 4
  00072	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00078	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007a	89 0a		 mov	 DWORD PTR [edx], ecx
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00082	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00085	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00088	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0008b	89 42 0c	 mov	 DWORD PTR [edx+12], eax
  0008e	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  00094	89 8d 0c ff ff
	ff		 mov	 DWORD PTR tv74[ebp], ecx
  0009a	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  0009c	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  000a6	8b 95 0c ff ff
	ff		 mov	 edx, DWORD PTR tv74[ebp]
  000ac	89 95 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edx
  000b2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000b9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c3	59		 pop	 ecx
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
  000c7	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000cd	3b ec		 cmp	 ebp, esp
  000cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z ENDP ; std::allocator<SDL_Rect>::construct<SDL_Rect,SDL_Rect &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z
_TEXT	SEGMENT
__Pred$ = 8						; size = 1
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
__File$ = 20						; size = 4
__Line$ = 24						; size = 4
??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z PROC ; std::_Debug_lt_pred<std::less<void>,int const &,int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 520
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 521
  0001e	8b 45 10	 mov	 eax, DWORD PTR __Right$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  00034	83 c4 04	 add	 esp, 4
  00037	50		 push	 eax
  00038	8d 4d 08	 lea	 ecx, DWORD PTR __Pred$[ebp]
  0003b	e8 00 00 00 00	 call	 ??$?RABHABH@?$less@X@std@@QBE_NABH0@Z ; std::less<void>::operator()<int const &,int const &>
  00040	0f b6 d0	 movzx	 edx, al
  00043	85 d2		 test	 edx, edx
  00045	75 06		 jne	 SHORT $LN3@Debug_lt_p
; Line 522
  00047	32 c0		 xor	 al, al
  00049	eb 4c		 jmp	 SHORT $LN4@Debug_lt_p
  0004b	eb 48		 jmp	 SHORT $LN2@Debug_lt_p
$LN3@Debug_lt_p:
; Line 523
  0004d	8b 45 0c	 mov	 eax, DWORD PTR __Left$[ebp]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  00056	83 c4 04	 add	 esp, 4
  00059	50		 push	 eax
  0005a	8b 4d 10	 mov	 ecx, DWORD PTR __Right$[ebp]
  0005d	51		 push	 ecx
  0005e	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  00063	83 c4 04	 add	 esp, 4
  00066	50		 push	 eax
  00067	8d 4d 08	 lea	 ecx, DWORD PTR __Pred$[ebp]
  0006a	e8 00 00 00 00	 call	 ??$?RABHABH@?$less@X@std@@QBE_NABH0@Z ; std::less<void>::operator()<int const &,int const &>
  0006f	0f b6 d0	 movzx	 edx, al
  00072	85 d2		 test	 edx, edx
  00074	74 1f		 je	 SHORT $LN2@Debug_lt_p
; Line 524
  00076	8b f4		 mov	 esi, esp
  00078	8b 45 18	 mov	 eax, DWORD PTR __Line$[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d 14	 mov	 ecx, DWORD PTR __File$[ebp]
  0007f	51		 push	 ecx
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_1CE@IGJMOCCK@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AA?$AA@
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0008b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_lt_p:
; Line 525
  00095	b0 01		 mov	 al, 1
$LN4@Debug_lt_p:
; Line 526
  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  000a0	3b ec		 cmp	 ebp, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z ENDP ; std::_Debug_lt_pred<std::less<void>,int const &,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABH@std@@YAABHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABH@std@@YAABHABH@Z PROC			; std::forward<int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@ABH@std@@YAABHABH@Z ENDP			; std::forward<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	8b f4		 mov	 esi, esp
  00020	6a 00		 push	 0
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0id@locale@std@@QAE@I@Z
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	8b f4		 mov	 esi, esp
  00020	6a 00		 push	 0
  00022	b9 00 00 00 00	 mov	 ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0id@locale@std@@QAE@I@Z
  0002d	3b f4		 cmp	 esi, esp
  0002f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003d	3b ec		 cmp	 ebp, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_move@PAUVector2@@PAU1@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUVector2@@PAU1@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z PROC ; std::_Uninitialized_move<Vector2 *,Vector2 *,std::_Wrap_alloc<std::allocator<Vector2> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 495
  0001e	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Unchecked@PAUVector2@@@std@@YAPAUVector2@@PAU1@@Z ; std::_Unchecked<Vector2 *>
  0002b	83 c4 04	 add	 esp, 4
  0002e	50		 push	 eax
  0002f	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$_Unchecked@PAUVector2@@@std@@YAPAUVector2@@PAU1@@Z ; std::_Unchecked<Vector2 *>
  00038	83 c4 04	 add	 esp, 4
  0003b	50		 push	 eax
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Unchecked@PAUVector2@@@std@@YAPAUVector2@@PAU1@@Z ; std::_Unchecked<Vector2 *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUVector2@@PAU1@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z ; std::_Uninit_move<Vector2 *,Vector2 *,std::_Wrap_alloc<std::allocator<Vector2> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
  00051	50		 push	 eax
  00052	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ??$_Rechecked@PAUVector2@@PAU1@@std@@YAAAPAUVector2@@AAPAU1@PAU1@@Z ; std::_Rechecked<Vector2 *,Vector2 *>
  0005b	83 c4 08	 add	 esp, 8
  0005e	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Uninitialized_move@PAUVector2@@PAU1@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<Vector2 *,Vector2 *,std::_Wrap_alloc<std::allocator<Vector2> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAXPAUVector2@@0AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAXPAUVector2@@0AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Vector2> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 81
  0001e	eb 09		 jmp	 SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
  00020	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00023	83 c0 08	 add	 eax, 8
  00026	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
  00029	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0002c	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0002f	74 0e		 je	 SHORT $LN4@Destroy_ra
; Line 82
  00031	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00034	50		 push	 eax
  00035	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  00038	e8 00 00 00 00	 call	 ??$destroy@UVector2@@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::destroy<Vector2>
  0003d	eb e1		 jmp	 SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAXPAUVector2@@0AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Vector2> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Ptr_cat@UVector2@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUVector2@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UVector2@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUVector2@@0@Z PROC ; std::_Ptr_cat<Vector2,Vector2>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 446
  0001e	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  00021	52		 push	 edx
  00022	8b cd		 mov	 ecx, ebp
  00024	50		 push	 eax
  00025	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  0002b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00030	58		 pop	 eax
  00031	5a		 pop	 edx
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
  00039	8d 49 00	 npad	 3
$LN5@Ptr_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Ptr_cat@UVector2@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUVector2@@0@Z ENDP ; std::_Ptr_cat<Vector2,Vector2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 495
  0001e	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  0002b	83 c4 04	 add	 esp, 4
  0002e	50		 push	 eax
  0002f	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  00038	83 c4 04	 add	 esp, 4
  0003b	50		 push	 eax
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Unchecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Unchecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
  00051	50		 push	 eax
  00052	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ??$_Rechecked@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAAAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  0005b	83 c4 08	 add	 esp, 8
  0005e	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_move@PAVCaveSlope@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAVCaveSlope@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z PROC ; std::_Uninitialized_move<CaveSlope *,CaveSlope *,std::_Wrap_alloc<std::allocator<CaveSlope> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 495
  0001e	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Unchecked@PAVCaveSlope@@@std@@YAPAVCaveSlope@@PAV1@@Z ; std::_Unchecked<CaveSlope *>
  0002b	83 c4 04	 add	 esp, 4
  0002e	50		 push	 eax
  0002f	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$_Unchecked@PAVCaveSlope@@@std@@YAPAVCaveSlope@@PAV1@@Z ; std::_Unchecked<CaveSlope *>
  00038	83 c4 04	 add	 esp, 4
  0003b	50		 push	 eax
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Unchecked@PAVCaveSlope@@@std@@YAPAVCaveSlope@@PAV1@@Z ; std::_Unchecked<CaveSlope *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVCaveSlope@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z ; std::_Uninit_move<CaveSlope *,CaveSlope *,std::_Wrap_alloc<std::allocator<CaveSlope> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
  00051	50		 push	 eax
  00052	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ??$_Rechecked@PAVCaveSlope@@PAV1@@std@@YAAAPAVCaveSlope@@AAPAV1@PAV1@@Z ; std::_Rechecked<CaveSlope *,CaveSlope *>
  0005b	83 c4 08	 add	 esp, 8
  0005e	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Uninitialized_move@PAVCaveSlope@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<CaveSlope *,CaveSlope *,std::_Wrap_alloc<std::allocator<CaveSlope> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAXPAVCaveSlope@@0AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAXPAVCaveSlope@@0AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveSlope> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 81
  0001e	eb 09		 jmp	 SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
  00020	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00023	83 c0 14	 add	 eax, 20			; 00000014H
  00026	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
  00029	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0002c	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0002f	74 0e		 je	 SHORT $LN4@Destroy_ra
; Line 82
  00031	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00034	50		 push	 eax
  00035	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  00038	e8 00 00 00 00	 call	 ??$destroy@VCaveSlope@@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::destroy<CaveSlope>
  0003d	eb e1		 jmp	 SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAXPAVCaveSlope@@0AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveSlope> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Ptr_cat@VCaveSlope@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVCaveSlope@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@VCaveSlope@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVCaveSlope@@0@Z PROC ; std::_Ptr_cat<CaveSlope,CaveSlope>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 446
  0001e	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  00021	52		 push	 edx
  00022	8b cd		 mov	 ecx, ebp
  00024	50		 push	 eax
  00025	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  0002b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00030	58		 pop	 eax
  00031	5a		 pop	 edx
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
  00039	8d 49 00	 npad	 3
$LN5@Ptr_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Ptr_cat@VCaveSlope@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVCaveSlope@@0@Z ENDP ; std::_Ptr_cat<CaveSlope,CaveSlope>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_move@PAVCaveRectangle@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAVCaveRectangle@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z PROC ; std::_Uninitialized_move<CaveRectangle *,CaveRectangle *,std::_Wrap_alloc<std::allocator<CaveRectangle> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 495
  0001e	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Unchecked@PAVCaveRectangle@@@std@@YAPAVCaveRectangle@@PAV1@@Z ; std::_Unchecked<CaveRectangle *>
  0002b	83 c4 04	 add	 esp, 4
  0002e	50		 push	 eax
  0002f	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$_Unchecked@PAVCaveRectangle@@@std@@YAPAVCaveRectangle@@PAV1@@Z ; std::_Unchecked<CaveRectangle *>
  00038	83 c4 04	 add	 esp, 4
  0003b	50		 push	 eax
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Unchecked@PAVCaveRectangle@@@std@@YAPAVCaveRectangle@@PAV1@@Z ; std::_Unchecked<CaveRectangle *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVCaveRectangle@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z ; std::_Uninit_move<CaveRectangle *,CaveRectangle *,std::_Wrap_alloc<std::allocator<CaveRectangle> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
  00051	50		 push	 eax
  00052	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ??$_Rechecked@PAVCaveRectangle@@PAV1@@std@@YAAAPAVCaveRectangle@@AAPAV1@PAV1@@Z ; std::_Rechecked<CaveRectangle *,CaveRectangle *>
  0005b	83 c4 08	 add	 esp, 8
  0005e	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Uninitialized_move@PAVCaveRectangle@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<CaveRectangle *,CaveRectangle *,std::_Wrap_alloc<std::allocator<CaveRectangle> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAXPAVCaveRectangle@@0AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAXPAVCaveRectangle@@0AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveRectangle> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 81
  0001e	eb 09		 jmp	 SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
  00020	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00023	83 c0 10	 add	 eax, 16			; 00000010H
  00026	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
  00029	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0002c	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0002f	74 0e		 je	 SHORT $LN4@Destroy_ra
; Line 82
  00031	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00034	50		 push	 eax
  00035	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  00038	e8 00 00 00 00	 call	 ??$destroy@VCaveRectangle@@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::destroy<CaveRectangle>
  0003d	eb e1		 jmp	 SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAXPAVCaveRectangle@@0AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveRectangle> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Ptr_cat@VCaveRectangle@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVCaveRectangle@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@VCaveRectangle@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVCaveRectangle@@0@Z PROC ; std::_Ptr_cat<CaveRectangle,CaveRectangle>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 446
  0001e	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  00021	52		 push	 edx
  00022	8b cd		 mov	 ecx, ebp
  00024	50		 push	 eax
  00025	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  0002b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00030	58		 pop	 eax
  00031	5a		 pop	 edx
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
  00039	8d 49 00	 npad	 3
$LN5@Ptr_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Ptr_cat@VCaveRectangle@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVCaveRectangle@@0@Z ENDP ; std::_Ptr_cat<CaveRectangle,CaveRectangle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_move@PAUTileSet@@PAU1@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUTileSet@@PAU1@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z PROC ; std::_Uninitialized_move<TileSet *,TileSet *,std::_Wrap_alloc<std::allocator<TileSet> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 495
  0001e	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Unchecked@PAUTileSet@@@std@@YAPAUTileSet@@PAU1@@Z ; std::_Unchecked<TileSet *>
  0002b	83 c4 04	 add	 esp, 4
  0002e	50		 push	 eax
  0002f	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$_Unchecked@PAUTileSet@@@std@@YAPAUTileSet@@PAU1@@Z ; std::_Unchecked<TileSet *>
  00038	83 c4 04	 add	 esp, 4
  0003b	50		 push	 eax
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Unchecked@PAUTileSet@@@std@@YAPAUTileSet@@PAU1@@Z ; std::_Unchecked<TileSet *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUTileSet@@PAU1@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z ; std::_Uninit_move<TileSet *,TileSet *,std::_Wrap_alloc<std::allocator<TileSet> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
  00051	50		 push	 eax
  00052	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ??$_Rechecked@PAUTileSet@@PAU1@@std@@YAAAPAUTileSet@@AAPAU1@PAU1@@Z ; std::_Rechecked<TileSet *,TileSet *>
  0005b	83 c4 08	 add	 esp, 8
  0005e	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Uninitialized_move@PAUTileSet@@PAU1@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<TileSet *,TileSet *,std::_Wrap_alloc<std::allocator<TileSet> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAXPAUTileSet@@0AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAXPAUTileSet@@0AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<TileSet> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 81
  0001e	eb 09		 jmp	 SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
  00020	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00023	83 c0 08	 add	 eax, 8
  00026	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
  00029	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0002c	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0002f	74 0e		 je	 SHORT $LN4@Destroy_ra
; Line 82
  00031	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00034	50		 push	 eax
  00035	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  00038	e8 00 00 00 00	 call	 ??$destroy@UTileSet@@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::destroy<TileSet>
  0003d	eb e1		 jmp	 SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAXPAUTileSet@@0AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<TileSet> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Ptr_cat@UTileSet@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUTileSet@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UTileSet@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUTileSet@@0@Z PROC ; std::_Ptr_cat<TileSet,TileSet>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 446
  0001e	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  00021	52		 push	 edx
  00022	8b cd		 mov	 ecx, ebp
  00024	50		 push	 eax
  00025	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  0002b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00030	58		 pop	 eax
  00031	5a		 pop	 edx
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
  00039	8d 49 00	 npad	 3
$LN5@Ptr_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Ptr_cat@UTileSet@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUTileSet@@0@Z ENDP ; std::_Ptr_cat<TileSet,TileSet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_move@PAVTile@@PAV1@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAVTile@@PAV1@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z PROC ; std::_Uninitialized_move<Tile *,Tile *,std::_Wrap_alloc<std::allocator<Tile> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 495
  0001e	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Unchecked@PAVTile@@@std@@YAPAVTile@@PAV1@@Z ; std::_Unchecked<Tile *>
  0002b	83 c4 04	 add	 esp, 4
  0002e	50		 push	 eax
  0002f	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$_Unchecked@PAVTile@@@std@@YAPAVTile@@PAV1@@Z ; std::_Unchecked<Tile *>
  00038	83 c4 04	 add	 esp, 4
  0003b	50		 push	 eax
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Unchecked@PAVTile@@@std@@YAPAVTile@@PAV1@@Z ; std::_Unchecked<Tile *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninit_move@PAVTile@@PAV1@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z ; std::_Uninit_move<Tile *,Tile *,std::_Wrap_alloc<std::allocator<Tile> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
  00051	50		 push	 eax
  00052	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ??$_Rechecked@PAVTile@@PAV1@@std@@YAAAPAVTile@@AAPAV1@PAV1@@Z ; std::_Rechecked<Tile *,Tile *>
  0005b	83 c4 08	 add	 esp, 8
  0005e	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Uninitialized_move@PAVTile@@PAV1@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<Tile *,Tile *,std::_Wrap_alloc<std::allocator<Tile> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAXPAVTile@@0AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAXPAVTile@@0AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Tile> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 81
  0001e	eb 09		 jmp	 SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
  00020	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00023	83 c0 1c	 add	 eax, 28			; 0000001cH
  00026	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
  00029	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0002c	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0002f	74 0e		 je	 SHORT $LN4@Destroy_ra
; Line 82
  00031	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00034	50		 push	 eax
  00035	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  00038	e8 00 00 00 00	 call	 ??$destroy@VTile@@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@@Z ; std::_Wrap_alloc<std::allocator<Tile> >::destroy<Tile>
  0003d	eb e1		 jmp	 SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAXPAVTile@@0AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Tile> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Ptr_cat@VTile@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVTile@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@VTile@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVTile@@0@Z PROC ; std::_Ptr_cat<Tile,Tile>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 446
  0001e	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  00021	52		 push	 edx
  00022	8b cd		 mov	 ecx, ebp
  00024	50		 push	 eax
  00025	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  0002b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00030	58		 pop	 eax
  00031	5a		 pop	 edx
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
  00039	8d 49 00	 npad	 3
$LN5@Ptr_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Ptr_cat@VTile@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVTile@@0@Z ENDP ; std::_Ptr_cat<Tile,Tile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 730
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 731
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_move@PAUSDL_Rect@@PAU1@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSDL_Rect@@PAU1@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z PROC ; std::_Uninitialized_move<SDL_Rect *,SDL_Rect *,std::_Wrap_alloc<std::allocator<SDL_Rect> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 495
  0001e	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Unchecked@PAUSDL_Rect@@@std@@YAPAUSDL_Rect@@PAU1@@Z ; std::_Unchecked<SDL_Rect *>
  0002b	83 c4 04	 add	 esp, 4
  0002e	50		 push	 eax
  0002f	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$_Unchecked@PAUSDL_Rect@@@std@@YAPAUSDL_Rect@@PAU1@@Z ; std::_Unchecked<SDL_Rect *>
  00038	83 c4 04	 add	 esp, 4
  0003b	50		 push	 eax
  0003c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ??$_Unchecked@PAUSDL_Rect@@@std@@YAPAUSDL_Rect@@PAU1@@Z ; std::_Unchecked<SDL_Rect *>
  00045	83 c4 04	 add	 esp, 4
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninit_move@PAUSDL_Rect@@PAU1@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z ; std::_Uninit_move<SDL_Rect *,SDL_Rect *,std::_Wrap_alloc<std::allocator<SDL_Rect> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
  00051	50		 push	 eax
  00052	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ??$_Rechecked@PAUSDL_Rect@@PAU1@@std@@YAAAPAUSDL_Rect@@AAPAU1@PAU1@@Z ; std::_Rechecked<SDL_Rect *,SDL_Rect *>
  0005b	83 c4 08	 add	 esp, 8
  0005e	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 496
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Uninitialized_move@PAUSDL_Rect@@PAU1@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<SDL_Rect *,SDL_Rect *,std::_Wrap_alloc<std::allocator<SDL_Rect> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAXPAUSDL_Rect@@0AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAXPAUSDL_Rect@@0AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<SDL_Rect> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 81
  0001e	eb 09		 jmp	 SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
  00020	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00023	83 c0 10	 add	 eax, 16			; 00000010H
  00026	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
  00029	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0002c	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0002f	74 0e		 je	 SHORT $LN4@Destroy_ra
; Line 82
  00031	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00034	50		 push	 eax
  00035	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  00038	e8 00 00 00 00	 call	 ??$destroy@USDL_Rect@@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::destroy<SDL_Rect>
  0003d	eb e1		 jmp	 SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAXPAUSDL_Rect@@0AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<SDL_Rect> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Ptr_cat@USDL_Rect@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUSDL_Rect@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@USDL_Rect@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUSDL_Rect@@0@Z PROC ; std::_Ptr_cat<SDL_Rect,SDL_Rect>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 446
  0001e	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  00021	52		 push	 edx
  00022	8b cd		 mov	 ecx, ebp
  00024	50		 push	 eax
  00025	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  0002b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00030	58		 pop	 eax
  00031	5a		 pop	 edx
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
  00039	8d 49 00	 npad	 3
$LN5@Ptr_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Ptr_cat@USDL_Rect@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUSDL_Rect@@0@Z ENDP ; std::_Ptr_cat<SDL_Rect,SDL_Rect>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 81
  0001e	eb 09		 jmp	 SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
  00020	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00023	83 c0 1c	 add	 eax, 28			; 0000001cH
  00026	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
  00029	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0002c	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0002f	74 0e		 je	 SHORT $LN4@Destroy_ra
; Line 82
  00031	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00034	50		 push	 eax
  00035	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  00038	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0003d	eb e1		 jmp	 SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 446
  0001e	8a 45 fb	 mov	 al, BYTE PTR __Cat$[ebp]
; Line 447
  00021	52		 push	 edx
  00022	8b cd		 mov	 ecx, ebp
  00024	50		 push	 eax
  00025	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Ptr_cat
  0002b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00030	58		 pop	 eax
  00031	5a		 pop	 edx
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
  00039	8d 49 00	 npad	 3
$LN5@Ptr_cat:
  0003c	01 00 00 00	 DD	 1
  00040	00 00 00 00	 DD	 $LN4@Ptr_cat
$LN4@Ptr_cat:
  00044	fb ff ff ff	 DD	 -5			; fffffffbH
  00048	01 00 00 00	 DD	 1
  0004c	00 00 00 00	 DD	 $LN3@Ptr_cat
$LN3@Ptr_cat:
  00050	5f		 DB	 95			; 0000005fH
  00051	43		 DB	 67			; 00000043H
  00052	61		 DB	 97			; 00000061H
  00053	74		 DB	 116			; 00000074H
  00054	00		 DB	 0
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 730
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>
; Line 731
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@AAPAD@std@@YAAAPADAAPAD@Z ; std::forward<char * &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@UVector2@@U1@@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAXAAV?$allocator@UVector2@@@1@PAUVector2@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UVector2@@U1@@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAXAAV?$allocator@UVector2@@@1@PAUVector2@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<Vector2> >::construct<Vector2,Vector2>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@UVector2@@@std@@YA$$QAUVector2@@AAU1@@Z ; std::forward<Vector2>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@UVector2@@U1@@?$allocator@UVector2@@@std@@QAEXPAUVector2@@$$QAU2@@Z ; std::allocator<Vector2>::construct<Vector2,Vector2>
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@UVector2@@U1@@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAXAAV?$allocator@UVector2@@@1@PAUVector2@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<Vector2> >::construct<Vector2,Vector2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveSlope@@ABV1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@ABV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VCaveSlope@@ABV1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@ABV3@@Z PROC ; std::allocator_traits<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@ABVCaveSlope@@@std@@YAABVCaveSlope@@ABV1@@Z ; std::forward<CaveSlope const &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ?construct@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@ABV3@@Z ; std::allocator<CaveSlope>::construct
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@VCaveSlope@@ABV1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@ABV3@@Z ENDP ; std::allocator_traits<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABVCaveSlope@@@std@@YAABVCaveSlope@@ABV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABVCaveSlope@@@std@@YAABVCaveSlope@@ABV1@@Z PROC ; std::forward<CaveSlope const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@ABVCaveSlope@@@std@@YAABVCaveSlope@@ABV1@@Z ENDP ; std::forward<CaveSlope const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveSlope@@AAV1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@AAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VCaveSlope@@AAV1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@AAV3@@Z PROC ; std::allocator_traits<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@AAVCaveSlope@@@std@@YAAAVCaveSlope@@AAV1@@Z ; std::forward<CaveSlope &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@VCaveSlope@@AAV1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@AAV2@@Z ; std::allocator<CaveSlope>::construct<CaveSlope,CaveSlope &>
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@VCaveSlope@@AAV1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@AAV3@@Z ENDP ; std::allocator_traits<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AAVCaveSlope@@@std@@YAAAVCaveSlope@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAVCaveSlope@@@std@@YAAAVCaveSlope@@AAV1@@Z PROC ; std::forward<CaveSlope &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@AAVCaveSlope@@@std@@YAAAVCaveSlope@@AAV1@@Z ENDP ; std::forward<CaveSlope &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveSlope@@V1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@$$QAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VCaveSlope@@V1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@$$QAV3@@Z PROC ; std::allocator_traits<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@VCaveSlope@@@std@@YA$$QAVCaveSlope@@AAV1@@Z ; std::forward<CaveSlope>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@VCaveSlope@@V1@@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z ; std::allocator<CaveSlope>::construct<CaveSlope,CaveSlope>
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@VCaveSlope@@V1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@$$QAV3@@Z ENDP ; std::allocator_traits<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveRectangle@@ABV1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@ABV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VCaveRectangle@@ABV1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@ABV3@@Z PROC ; std::allocator_traits<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@ABVCaveRectangle@@@std@@YAABVCaveRectangle@@ABV1@@Z ; std::forward<CaveRectangle const &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ?construct@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@ABV3@@Z ; std::allocator<CaveRectangle>::construct
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@VCaveRectangle@@ABV1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@ABV3@@Z ENDP ; std::allocator_traits<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABVCaveRectangle@@@std@@YAABVCaveRectangle@@ABV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABVCaveRectangle@@@std@@YAABVCaveRectangle@@ABV1@@Z PROC ; std::forward<CaveRectangle const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@ABVCaveRectangle@@@std@@YAABVCaveRectangle@@ABV1@@Z ENDP ; std::forward<CaveRectangle const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveRectangle@@AAV1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@AAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VCaveRectangle@@AAV1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@AAV3@@Z PROC ; std::allocator_traits<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@AAVCaveRectangle@@@std@@YAAAVCaveRectangle@@AAV1@@Z ; std::forward<CaveRectangle &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@VCaveRectangle@@AAV1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z ; std::allocator<CaveRectangle>::construct<CaveRectangle,CaveRectangle &>
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@VCaveRectangle@@AAV1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@AAV3@@Z ENDP ; std::allocator_traits<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AAVCaveRectangle@@@std@@YAAAVCaveRectangle@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAVCaveRectangle@@@std@@YAAAVCaveRectangle@@AAV1@@Z PROC ; std::forward<CaveRectangle &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@AAVCaveRectangle@@@std@@YAAAVCaveRectangle@@AAV1@@Z ENDP ; std::forward<CaveRectangle &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveRectangle@@V1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@$$QAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VCaveRectangle@@V1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@$$QAV3@@Z PROC ; std::allocator_traits<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@VCaveRectangle@@@std@@YA$$QAVCaveRectangle@@AAV1@@Z ; std::forward<CaveRectangle>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@VCaveRectangle@@V1@@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z ; std::allocator<CaveRectangle>::construct<CaveRectangle,CaveRectangle>
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@VCaveRectangle@@V1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@$$QAV3@@Z ENDP ; std::allocator_traits<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@UTileSet@@U1@@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAXAAV?$allocator@UTileSet@@@1@PAUTileSet@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UTileSet@@U1@@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAXAAV?$allocator@UTileSet@@@1@PAUTileSet@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<TileSet> >::construct<TileSet,TileSet>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@UTileSet@@@std@@YA$$QAUTileSet@@AAU1@@Z ; std::forward<TileSet>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@UTileSet@@U1@@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@$$QAU2@@Z ; std::allocator<TileSet>::construct<TileSet,TileSet>
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@UTileSet@@U1@@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAXAAV?$allocator@UTileSet@@@1@PAUTileSet@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<TileSet> >::construct<TileSet,TileSet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VTile@@ABV1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@ABV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VTile@@ABV1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@ABV3@@Z PROC ; std::allocator_traits<std::allocator<Tile> >::construct<Tile,Tile const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@ABVTile@@@std@@YAABVTile@@ABV1@@Z ; std::forward<Tile const &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ?construct@?$allocator@VTile@@@std@@QAEXPAVTile@@ABV3@@Z ; std::allocator<Tile>::construct
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@VTile@@ABV1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@ABV3@@Z ENDP ; std::allocator_traits<std::allocator<Tile> >::construct<Tile,Tile const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABVTile@@@std@@YAABVTile@@ABV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABVTile@@@std@@YAABVTile@@ABV1@@Z PROC	; std::forward<Tile const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@ABVTile@@@std@@YAABVTile@@ABV1@@Z ENDP	; std::forward<Tile const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VTile@@AAV1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@AAV3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VTile@@AAV1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@AAV3@@Z PROC ; std::allocator_traits<std::allocator<Tile> >::construct<Tile,Tile &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@AAVTile@@@std@@YAAAVTile@@AAV1@@Z ; std::forward<Tile &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@VTile@@AAV1@@?$allocator@VTile@@@std@@QAEXPAVTile@@AAV2@@Z ; std::allocator<Tile>::construct<Tile,Tile &>
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@VTile@@AAV1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@AAV3@@Z ENDP ; std::allocator_traits<std::allocator<Tile> >::construct<Tile,Tile &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AAVTile@@@std@@YAAAVTile@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAVTile@@@std@@YAAAVTile@@AAV1@@Z PROC	; std::forward<Tile &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@AAVTile@@@std@@YAAAVTile@@AAV1@@Z ENDP	; std::forward<Tile &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@USDL_Rect@@ABU1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@ABU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@USDL_Rect@@ABU1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@ABU3@@Z PROC ; std::allocator_traits<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@ABUSDL_Rect@@@std@@YAABUSDL_Rect@@ABU1@@Z ; std::forward<SDL_Rect const &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ?construct@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@ABU3@@Z ; std::allocator<SDL_Rect>::construct
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@USDL_Rect@@ABU1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@ABU3@@Z ENDP ; std::allocator_traits<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABUSDL_Rect@@@std@@YAABUSDL_Rect@@ABU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUSDL_Rect@@@std@@YAABUSDL_Rect@@ABU1@@Z PROC ; std::forward<SDL_Rect const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@ABUSDL_Rect@@@std@@YAABUSDL_Rect@@ABU1@@Z ENDP ; std::forward<SDL_Rect const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@USDL_Rect@@AAU1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@AAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@USDL_Rect@@AAU1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@AAU3@@Z PROC ; std::allocator_traits<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 723
  0001e	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$forward@AAUSDL_Rect@@@std@@YAAAUSDL_Rect@@AAU1@@Z ; std::forward<SDL_Rect &>
  00027	83 c4 04	 add	 esp, 4
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00032	e8 00 00 00 00	 call	 ??$construct@USDL_Rect@@AAU1@@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z ; std::allocator<SDL_Rect>::construct<SDL_Rect,SDL_Rect &>
; Line 724
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??$construct@USDL_Rect@@AAU1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@AAU3@@Z ENDP ; std::allocator_traits<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AAUSDL_Rect@@@std@@YAAAUSDL_Rect@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUSDL_Rect@@@std@@YAAAUSDL_Rect@@AAU1@@Z PROC ; std::forward<SDL_Rect &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@AAUSDL_Rect@@@std@@YAAAUSDL_Rect@@AAU1@@Z ENDP ; std::forward<SDL_Rect &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z PROC		; std::_Debug_lt<int const &,int const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 532
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 534
  0001e	33 c0		 xor	 eax, eax
  00020	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00026	8b 4d 14	 mov	 ecx, DWORD PTR __Line$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 10	 mov	 edx, DWORD PTR __File$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  00037	83 c4 04	 add	 esp, 4
  0003a	50		 push	 eax
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0003e	51		 push	 ecx
  0003f	e8 00 00 00 00	 call	 ??$forward@ABH@std@@YAABHABH@Z ; std::forward<int const &>
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0004f	52		 push	 edx
  00050	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@U?$less@X@std@@ABHABH@std@@YA_NU?$less@X@0@ABH1PB_WI@Z ; std::_Debug_lt_pred<std::less<void>,int const &,int const &>
  00055	83 c4 14	 add	 esp, 20			; 00000014H
; Line 535
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z ENDP		; std::_Debug_lt<int const &,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
  00023	e8 00 00 00 00	 call	 ??1_System_error_category@std@@UAE@XZ
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
  00023	e8 00 00 00 00	 call	 ??0_System_error_category@std@@QAE@XZ ; std::_System_error_category::_System_error_category
  00028	68 00 00 00 00	 push	 OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
  0002d	e8 00 00 00 00	 call	 _atexit
  00032	83 c4 04	 add	 esp, 4
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
  00023	e8 00 00 00 00	 call	 ??1_Iostream_error_category@std@@UAE@XZ
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
  00023	e8 00 00 00 00	 call	 ??0_Iostream_error_category@std@@QAE@XZ ; std::_Iostream_error_category::_Iostream_error_category
  00028	68 00 00 00 00	 push	 OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
  0002d	e8 00 00 00 00	 call	 _atexit
  00032	83 c4 04	 add	 esp, 4
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
  00023	e8 00 00 00 00	 call	 ??1_Generic_error_category@std@@UAE@XZ
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
  00023	e8 00 00 00 00	 call	 ??0_Generic_error_category@std@@QAE@XZ ; std::_Generic_error_category::_Generic_error_category
  00028	68 00 00 00 00	 push	 OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
  0002d	e8 00 00 00 00	 call	 _atexit
  00032	83 c4 04	 add	 esp, 4
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate@UVector2@@@std@@YAPAUVector2@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UVector2@@@std@@YAPAUVector2@@IPAU1@@Z PROC ; std::_Allocate<Vector2>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 23
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00025	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00029	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  0002b	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0002d	81 7d 08 ff ff
	ff 1f		 cmp	 DWORD PTR __Count$[ebp], 536870911 ; 1fffffffH
  00034	77 18		 ja	 SHORT $LN1@Allocate
  00036	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00039	c1 e0 03	 shl	 eax, 3
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00042	83 c4 04	 add	 esp, 4
  00045	89 45 f8	 mov	 DWORD PTR __Ptr$[ebp], eax
  00048	83 7d f8 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0004c	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0004e	8b f4		 mov	 esi, esp
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00056	3b f4		 cmp	 esi, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Allocate@UVector2@@@std@@YAPAUVector2@@IPAU1@@Z ENDP ; std::_Allocate<Vector2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z PROC ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 23
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00025	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00029	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  0002b	eb 2e		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0002d	81 7d 08 49 92
	24 09		 cmp	 DWORD PTR __Count$[ebp], 153391689 ; 09249249H
  00034	77 16		 ja	 SHORT $LN1@Allocate
  00036	6b 45 08 1c	 imul	 eax, DWORD PTR __Count$[ebp], 28
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 f8	 mov	 DWORD PTR __Ptr$[ebp], eax
  00046	83 7d f8 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0004a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0004c	8b f4		 mov	 esi, esp
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0005b	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00067	3b ec		 cmp	 ebp, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ENDP ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate@VCaveSlope@@@std@@YAPAVCaveSlope@@IPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@VCaveSlope@@@std@@YAPAVCaveSlope@@IPAV1@@Z PROC ; std::_Allocate<CaveSlope>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 23
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00025	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00029	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  0002b	eb 2e		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0002d	81 7d 08 cc cc
	cc 0c		 cmp	 DWORD PTR __Count$[ebp], 214748364 ; 0cccccccH
  00034	77 16		 ja	 SHORT $LN1@Allocate
  00036	6b 45 08 14	 imul	 eax, DWORD PTR __Count$[ebp], 20
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 f8	 mov	 DWORD PTR __Ptr$[ebp], eax
  00046	83 7d f8 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0004a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0004c	8b f4		 mov	 esi, esp
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0005b	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00067	3b ec		 cmp	 ebp, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
??$_Allocate@VCaveSlope@@@std@@YAPAVCaveSlope@@IPAV1@@Z ENDP ; std::_Allocate<CaveSlope>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate@VCaveRectangle@@@std@@YAPAVCaveRectangle@@IPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@VCaveRectangle@@@std@@YAPAVCaveRectangle@@IPAV1@@Z PROC ; std::_Allocate<CaveRectangle>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 23
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00025	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00029	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  0002b	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0002d	81 7d 08 ff ff
	ff 0f		 cmp	 DWORD PTR __Count$[ebp], 268435455 ; 0fffffffH
  00034	77 18		 ja	 SHORT $LN1@Allocate
  00036	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00039	c1 e0 04	 shl	 eax, 4
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00042	83 c4 04	 add	 esp, 4
  00045	89 45 f8	 mov	 DWORD PTR __Ptr$[ebp], eax
  00048	83 7d f8 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0004c	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0004e	8b f4		 mov	 esi, esp
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00056	3b f4		 cmp	 esi, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Allocate@VCaveRectangle@@@std@@YAPAVCaveRectangle@@IPAV1@@Z ENDP ; std::_Allocate<CaveRectangle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate@UTileSet@@@std@@YAPAUTileSet@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UTileSet@@@std@@YAPAUTileSet@@IPAU1@@Z PROC ; std::_Allocate<TileSet>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 23
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00025	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00029	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  0002b	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0002d	81 7d 08 ff ff
	ff 1f		 cmp	 DWORD PTR __Count$[ebp], 536870911 ; 1fffffffH
  00034	77 18		 ja	 SHORT $LN1@Allocate
  00036	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00039	c1 e0 03	 shl	 eax, 3
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00042	83 c4 04	 add	 esp, 4
  00045	89 45 f8	 mov	 DWORD PTR __Ptr$[ebp], eax
  00048	83 7d f8 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0004c	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0004e	8b f4		 mov	 esi, esp
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00056	3b f4		 cmp	 esi, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Allocate@UTileSet@@@std@@YAPAUTileSet@@IPAU1@@Z ENDP ; std::_Allocate<TileSet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate@VTile@@@std@@YAPAVTile@@IPAV1@@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@VTile@@@std@@YAPAVTile@@IPAV1@@Z PROC	; std::_Allocate<Tile>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 23
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00025	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00029	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  0002b	eb 2e		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0002d	81 7d 08 49 92
	24 09		 cmp	 DWORD PTR __Count$[ebp], 153391689 ; 09249249H
  00034	77 16		 ja	 SHORT $LN1@Allocate
  00036	6b 45 08 1c	 imul	 eax, DWORD PTR __Count$[ebp], 28
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 f8	 mov	 DWORD PTR __Ptr$[ebp], eax
  00046	83 7d f8 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0004a	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0004c	8b f4		 mov	 esi, esp
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0005b	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00067	3b ec		 cmp	 ebp, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
??$_Allocate@VTile@@@std@@YAPAVTile@@IPAV1@@Z ENDP	; std::_Allocate<Tile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate@USDL_Rect@@@std@@YAPAUSDL_Rect@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@USDL_Rect@@@std@@YAPAUSDL_Rect@@IPAU1@@Z PROC ; std::_Allocate<SDL_Rect>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 23
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00025	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00029	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  0002b	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0002d	81 7d 08 ff ff
	ff 0f		 cmp	 DWORD PTR __Count$[ebp], 268435455 ; 0fffffffH
  00034	77 18		 ja	 SHORT $LN1@Allocate
  00036	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00039	c1 e0 04	 shl	 eax, 4
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00042	83 c4 04	 add	 esp, 4
  00045	89 45 f8	 mov	 DWORD PTR __Ptr$[ebp], eax
  00048	83 7d f8 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0004c	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0004e	8b f4		 mov	 esi, esp
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00056	3b f4		 cmp	 esi, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Allocate@USDL_Rect@@@std@@YAPAUSDL_Rect@@IPAU1@@Z ENDP ; std::_Allocate<SDL_Rect>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 23
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00025	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00029	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  0002b	eb 30		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0002d	81 7d 08 ff ff
	ff 1f		 cmp	 DWORD PTR __Count$[ebp], 536870911 ; 1fffffffH
  00034	77 18		 ja	 SHORT $LN1@Allocate
  00036	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00039	c1 e0 03	 shl	 eax, 3
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00042	83 c4 04	 add	 esp, 4
  00045	89 45 f8	 mov	 DWORD PTR __Ptr$[ebp], eax
  00048	83 7d f8 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  0004c	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  0004e	8b f4		 mov	 esi, esp
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00056	3b f4		 cmp	 esi, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  0005d	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Umove@PAUVector2@@@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEPAUVector2@@PAU2@00@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUVector2@@@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEPAUVector2@@PAU2@00@Z PROC ; std::vector<Vector2,std::allocator<Vector2> >::_Umove<Vector2 *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Getal
; Line 1648
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00044	52		 push	 edx
  00045	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUVector2@@PAU1@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAPAUVector2@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z ; std::_Uninitialized_move<Vector2 *,Vector2 *,std::_Wrap_alloc<std::allocator<Vector2> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  00051	52		 push	 edx
  00052	8b cd		 mov	 ecx, ebp
  00054	50		 push	 eax
  00055	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  0005b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00060	58		 pop	 eax
  00061	5a		 pop	 edx
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00068	33 cd		 xor	 ecx, ebp
  0006a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006f	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00075	3b ec		 cmp	 ebp, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 0c 00	 ret	 12			; 0000000cH
  00082	8b ff		 npad	 2
$LN5@Umove:
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  0008c	eb ff ff ff	 DD	 -21			; ffffffebH
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00098	5f		 DB	 95			; 0000005fH
  00099	41		 DB	 65			; 00000041H
  0009a	6c		 DB	 108			; 0000006cH
  0009b	76		 DB	 118			; 00000076H
  0009c	61		 DB	 97			; 00000061H
  0009d	6c		 DB	 108			; 0000006cH
  0009e	00		 DB	 0
??$_Umove@PAUVector2@@@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEPAUVector2@@PAU2@00@Z ENDP ; std::vector<Vector2,std::allocator<Vector2> >::_Umove<Vector2 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAXPAUVector2@@0AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAXPAUVector2@@0AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Vector2> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 96
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@UVector2@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUVector2@@0@Z ; std::_Ptr_cat<Vector2,Vector2>
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00043	51		 push	 ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAXPAUVector2@@0AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Vector2> > >
  0004d	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAXPAUVector2@@0AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Vector2> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
; Line 1648
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00044	52		 push	 edx
  00045	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  00051	52		 push	 edx
  00052	8b cd		 mov	 ecx, ebp
  00054	50		 push	 eax
  00055	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  0005b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00060	58		 pop	 eax
  00061	5a		 pop	 edx
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00068	33 cd		 xor	 ecx, ebp
  0006a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006f	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00075	3b ec		 cmp	 ebp, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 0c 00	 ret	 12			; 0000000cH
  00082	8b ff		 npad	 2
$LN5@Umove:
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  0008c	eb ff ff ff	 DD	 -21			; ffffffebH
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00098	5f		 DB	 95			; 0000005fH
  00099	41		 DB	 65			; 00000041H
  0009a	6c		 DB	 108			; 0000006cH
  0009b	76		 DB	 118			; 00000076H
  0009c	61		 DB	 97			; 00000061H
  0009d	6c		 DB	 108			; 0000006cH
  0009e	00		 DB	 0
??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Umove@PAVCaveSlope@@@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEPAVCaveSlope@@PAV2@00@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAVCaveSlope@@@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEPAVCaveSlope@@PAV2@00@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Umove<CaveSlope *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
; Line 1648
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00044	52		 push	 edx
  00045	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAVCaveSlope@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAPAVCaveSlope@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z ; std::_Uninitialized_move<CaveSlope *,CaveSlope *,std::_Wrap_alloc<std::allocator<CaveSlope> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  00051	52		 push	 edx
  00052	8b cd		 mov	 ecx, ebp
  00054	50		 push	 eax
  00055	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  0005b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00060	58		 pop	 eax
  00061	5a		 pop	 edx
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00068	33 cd		 xor	 ecx, ebp
  0006a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006f	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00075	3b ec		 cmp	 ebp, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 0c 00	 ret	 12			; 0000000cH
  00082	8b ff		 npad	 2
$LN5@Umove:
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  0008c	eb ff ff ff	 DD	 -21			; ffffffebH
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00098	5f		 DB	 95			; 0000005fH
  00099	41		 DB	 65			; 00000041H
  0009a	6c		 DB	 108			; 0000006cH
  0009b	76		 DB	 118			; 00000076H
  0009c	61		 DB	 97			; 00000061H
  0009d	6c		 DB	 108			; 0000006cH
  0009e	00		 DB	 0
??$_Umove@PAVCaveSlope@@@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEPAVCaveSlope@@PAV2@00@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Umove<CaveSlope *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAXPAVCaveSlope@@0AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAXPAVCaveSlope@@0AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveSlope> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 96
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@VCaveSlope@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVCaveSlope@@0@Z ; std::_Ptr_cat<CaveSlope,CaveSlope>
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00043	51		 push	 ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAXPAVCaveSlope@@0AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveSlope> > >
  0004d	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAXPAVCaveSlope@@0AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveSlope> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Umove@PAVCaveRectangle@@@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEPAVCaveRectangle@@PAV2@00@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAVCaveRectangle@@@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEPAVCaveRectangle@@PAV2@00@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Umove<CaveRectangle *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
; Line 1648
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00044	52		 push	 edx
  00045	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAVCaveRectangle@@PAV1@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAPAVCaveRectangle@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z ; std::_Uninitialized_move<CaveRectangle *,CaveRectangle *,std::_Wrap_alloc<std::allocator<CaveRectangle> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  00051	52		 push	 edx
  00052	8b cd		 mov	 ecx, ebp
  00054	50		 push	 eax
  00055	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  0005b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00060	58		 pop	 eax
  00061	5a		 pop	 edx
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00068	33 cd		 xor	 ecx, ebp
  0006a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006f	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00075	3b ec		 cmp	 ebp, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 0c 00	 ret	 12			; 0000000cH
  00082	8b ff		 npad	 2
$LN5@Umove:
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  0008c	eb ff ff ff	 DD	 -21			; ffffffebH
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00098	5f		 DB	 95			; 0000005fH
  00099	41		 DB	 65			; 00000041H
  0009a	6c		 DB	 108			; 0000006cH
  0009b	76		 DB	 118			; 00000076H
  0009c	61		 DB	 97			; 00000061H
  0009d	6c		 DB	 108			; 0000006cH
  0009e	00		 DB	 0
??$_Umove@PAVCaveRectangle@@@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEPAVCaveRectangle@@PAV2@00@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Umove<CaveRectangle *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAXPAVCaveRectangle@@0AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAXPAVCaveRectangle@@0AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveRectangle> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 96
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@VCaveRectangle@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVCaveRectangle@@0@Z ; std::_Ptr_cat<CaveRectangle,CaveRectangle>
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00043	51		 push	 ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAXPAVCaveRectangle@@0AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveRectangle> > >
  0004d	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAXPAVCaveRectangle@@0AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveRectangle> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Umove@PAUTileSet@@@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEPAUTileSet@@PAU2@00@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUTileSet@@@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEPAUTileSet@@PAU2@00@Z PROC ; std::vector<TileSet,std::allocator<TileSet> >::_Umove<TileSet *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Getal
; Line 1648
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00044	52		 push	 edx
  00045	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUTileSet@@PAU1@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAPAUTileSet@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z ; std::_Uninitialized_move<TileSet *,TileSet *,std::_Wrap_alloc<std::allocator<TileSet> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  00051	52		 push	 edx
  00052	8b cd		 mov	 ecx, ebp
  00054	50		 push	 eax
  00055	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  0005b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00060	58		 pop	 eax
  00061	5a		 pop	 edx
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00068	33 cd		 xor	 ecx, ebp
  0006a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006f	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00075	3b ec		 cmp	 ebp, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 0c 00	 ret	 12			; 0000000cH
  00082	8b ff		 npad	 2
$LN5@Umove:
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  0008c	eb ff ff ff	 DD	 -21			; ffffffebH
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00098	5f		 DB	 95			; 0000005fH
  00099	41		 DB	 65			; 00000041H
  0009a	6c		 DB	 108			; 0000006cH
  0009b	76		 DB	 118			; 00000076H
  0009c	61		 DB	 97			; 00000061H
  0009d	6c		 DB	 108			; 0000006cH
  0009e	00		 DB	 0
??$_Umove@PAUTileSet@@@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEPAUTileSet@@PAU2@00@Z ENDP ; std::vector<TileSet,std::allocator<TileSet> >::_Umove<TileSet *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAXPAUTileSet@@0AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAXPAUTileSet@@0AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<TileSet> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 96
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@UTileSet@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUTileSet@@0@Z ; std::_Ptr_cat<TileSet,TileSet>
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00043	51		 push	 ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAXPAUTileSet@@0AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<TileSet> > >
  0004d	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAXPAUTileSet@@0AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<TileSet> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Umove@PAVTile@@@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEPAVTile@@PAV2@00@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAVTile@@@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEPAVTile@@PAV2@00@Z PROC ; std::vector<Tile,std::allocator<Tile> >::_Umove<Tile *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Getal
; Line 1648
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00044	52		 push	 edx
  00045	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAVTile@@PAV1@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAPAVTile@@PAV1@00AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z ; std::_Uninitialized_move<Tile *,Tile *,std::_Wrap_alloc<std::allocator<Tile> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  00051	52		 push	 edx
  00052	8b cd		 mov	 ecx, ebp
  00054	50		 push	 eax
  00055	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  0005b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00060	58		 pop	 eax
  00061	5a		 pop	 edx
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00068	33 cd		 xor	 ecx, ebp
  0006a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006f	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00075	3b ec		 cmp	 ebp, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 0c 00	 ret	 12			; 0000000cH
  00082	8b ff		 npad	 2
$LN5@Umove:
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  0008c	eb ff ff ff	 DD	 -21			; ffffffebH
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00098	5f		 DB	 95			; 0000005fH
  00099	41		 DB	 65			; 00000041H
  0009a	6c		 DB	 108			; 0000006cH
  0009b	76		 DB	 118			; 00000076H
  0009c	61		 DB	 97			; 00000061H
  0009d	6c		 DB	 108			; 0000006cH
  0009e	00		 DB	 0
??$_Umove@PAVTile@@@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEPAVTile@@PAV2@00@Z ENDP ; std::vector<Tile,std::allocator<Tile> >::_Umove<Tile *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAXPAVTile@@0AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAXPAVTile@@0AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Tile> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 96
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@VTile@@V1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAVTile@@0@Z ; std::_Ptr_cat<Tile,Tile>
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00043	51		 push	 ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAXPAVTile@@0AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Tile> > >
  0004d	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAXPAVTile@@0AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Tile> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
  00030	83 c4 08	 add	 esp, 8
; Line 880
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 859
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Line 848
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 802
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Umove@PAUSDL_Rect@@@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEPAUSDL_Rect@@PAU2@00@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUSDL_Rect@@@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEPAUSDL_Rect@@PAU2@00@Z PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Umove<SDL_Rect *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1646
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Getal
; Line 1648
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00044	52		 push	 edx
  00045	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSDL_Rect@@PAU1@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAPAUSDL_Rect@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z ; std::_Uninitialized_move<SDL_Rect *,SDL_Rect *,std::_Wrap_alloc<std::allocator<SDL_Rect> > >
  0004e	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1649
  00051	52		 push	 edx
  00052	8b cd		 mov	 ecx, ebp
  00054	50		 push	 eax
  00055	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Umove
  0005b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00060	58		 pop	 eax
  00061	5a		 pop	 edx
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00068	33 cd		 xor	 ecx, ebp
  0006a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006f	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00075	3b ec		 cmp	 ebp, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 0c 00	 ret	 12			; 0000000cH
  00082	8b ff		 npad	 2
$LN5@Umove:
  00084	01 00 00 00	 DD	 1
  00088	00 00 00 00	 DD	 $LN4@Umove
$LN4@Umove:
  0008c	eb ff ff ff	 DD	 -21			; ffffffebH
  00090	01 00 00 00	 DD	 1
  00094	00 00 00 00	 DD	 $LN3@Umove
$LN3@Umove:
  00098	5f		 DB	 95			; 0000005fH
  00099	41		 DB	 65			; 00000041H
  0009a	6c		 DB	 108			; 0000006cH
  0009b	76		 DB	 118			; 00000076H
  0009c	61		 DB	 97			; 00000061H
  0009d	6c		 DB	 108			; 0000006cH
  0009e	00		 DB	 0
??$_Umove@PAUSDL_Rect@@@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEPAUSDL_Rect@@PAU2@00@Z ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Umove<SDL_Rect *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAXPAUSDL_Rect@@0AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAXPAUSDL_Rect@@0AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<SDL_Rect> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 96
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@USDL_Rect@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUSDL_Rect@@0@Z ; std::_Ptr_cat<SDL_Rect,SDL_Rect>
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00043	51		 push	 ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAXPAUSDL_Rect@@0AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<SDL_Rect> > >
  0004d	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAXPAUSDL_Rect@@0AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<SDL_Rect> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 141
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 142
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8a 40 04	 mov	 al, BYTE PTR [eax+4]
; Line 143
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 130
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 132
  00023	8b f4		 mov	 esi, esp
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00032	0f b6 c0	 movzx	 eax, al
  00035	85 c0		 test	 eax, eax
  00037	75 14		 jne	 SHORT $LN2@sentry
; Line 133
  00039	8b f4		 mov	 esi, esp
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
  00046	3b f4		 cmp	 esi, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@sentry:
; Line 138
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 123
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00045	50		 push	 eax
  00046	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 124
  00055	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00058	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005a	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0005d	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00060	8b f4		 mov	 esi, esp
  00062	8b ca		 mov	 ecx, edx
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
  0006a	3b f4		 cmp	 esi, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	0f b6 c0	 movzx	 eax, al
  00074	85 c0		 test	 eax, eax
  00076	74 6e		 je	 SHORT $LN1@sentry
  00078	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0007b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007d	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00080	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00083	8b f4		 mov	 esi, esp
  00085	8b ca		 mov	 ecx, edx
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  0008d	3b f4		 cmp	 esi, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00094	85 c0		 test	 eax, eax
  00096	74 4e		 je	 SHORT $LN1@sentry
  00098	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0009b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009d	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000a0	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000a3	8b f4		 mov	 esi, esp
  000a5	8b ca		 mov	 ecx, edx
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b4	3b 45 08	 cmp	 eax, DWORD PTR __Ostr$[ebp]
  000b7	74 2d		 je	 SHORT $LN1@sentry
; Line 125
  000b9	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000be	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000c1	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000c4	8b f4		 mov	 esi, esp
  000c6	8b ca		 mov	 ecx, edx
  000c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000ce	3b f4		 cmp	 esi, esp
  000d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d5	8b f4		 mov	 esi, esp
  000d7	8b c8		 mov	 ecx, eax
  000d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
  000df	3b f4		 cmp	 esi, esp
  000e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@sentry:
; Line 126
  000e6	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000eb	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000ee	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000f1	8b f4		 mov	 esi, esp
  000f3	8b ca		 mov	 ecx, edx
  000f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
  000fb	3b f4		 cmp	 esi, esp
  000fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00102	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	88 41 04	 mov	 BYTE PTR [ecx+4], al
; Line 127
  00108	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0010f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00112	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00115	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011c	59		 pop	 ecx
  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx
  00120	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00126	3b ec		 cmp	 ebp, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv92 = -212						; size = 4
tv86 = -208						; size = 4
tv72 = -208						; size = 4
_this$ = -8						; size = 4
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 106
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-212]
  00013	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 107
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], ecx
  0002e	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv72[ebp]
  00034	8b 02		 mov	 eax, DWORD PTR [edx]
  00036	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv72[ebp]
  0003c	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  0003f	8b f4		 mov	 esi, esp
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00047	3b f4		 cmp	 esi, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	85 c0		 test	 eax, eax
  00050	74 4d		 je	 SHORT $LN2@Sentry_bas
; Line 108
  00052	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 08		 mov	 ecx, DWORD PTR [eax]
  00057	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv86[ebp], ecx
  0005d	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv86[ebp]
  00063	8b 02		 mov	 eax, DWORD PTR [edx]
  00065	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv86[ebp]
  0006b	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  0006e	8b f4		 mov	 esi, esp
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00076	3b f4		 cmp	 esi, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  00083	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  00089	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008b	8b f4		 mov	 esi, esp
  0008d	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  00093	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00096	ff d0		 call	 eax
  00098	3b f4		 cmp	 esi, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Sentry_bas:
; Line 109
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
  000a2	81 c4 d4 00 00
	00		 add	 esp, 212		; 000000d4H
  000a8	3b ec		 cmp	 ebp, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv93 = -212						; size = 4
tv87 = -208						; size = 4
tv73 = -208						; size = 4
_this$ = -8						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 100
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-212]
  00013	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
; Line 101
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv73[ebp], ecx
  00036	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv73[ebp]
  0003c	8b 02		 mov	 eax, DWORD PTR [edx]
  0003e	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv73[ebp]
  00044	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00047	8b f4		 mov	 esi, esp
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	85 c0		 test	 eax, eax
  00058	74 4d		 je	 SHORT $LN2@Sentry_bas
; Line 102
  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005f	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv87[ebp], ecx
  00065	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv87[ebp]
  0006b	8b 02		 mov	 eax, DWORD PTR [edx]
  0006d	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv87[ebp]
  00073	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00076	8b f4		 mov	 esi, esp
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0007e	3b f4		 cmp	 esi, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00085	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv93[ebp], eax
  0008b	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  00091	8b 11		 mov	 edx, DWORD PTR [ecx]
  00093	8b f4		 mov	 esi, esp
  00095	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  0009b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0009e	ff d0		 call	 eax
  000a0	3b f4		 cmp	 esi, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Sentry_bas:
; Line 103
  000a7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	5b		 pop	 ebx
  000ad	81 c4 d4 00 00
	00		 add	 esp, 212		; 000000d4H
  000b3	3b ec		 cmp	 ebp, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c2 04 00	 ret	 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 600
  00042	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00045	50		 push	 eax
  00046	6a 08		 push	 8
  00048	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0004d	83 c4 08	 add	 esp, 8
  00050	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR $T3[ebp], 0
  00064	74 2a		 je	 SHORT $LN3@construct
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  0006f	83 c4 04	 add	 esp, 4
  00072	8b 10		 mov	 edx, DWORD PTR [eax]
  00074	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00077	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR $T3[ebp]
  0007d	89 11		 mov	 DWORD PTR [ecx], edx
  0007f	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00082	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00088	89 95 0c ff ff
	ff		 mov	 DWORD PTR tv74[ebp], edx
  0008e	eb 0a		 jmp	 SHORT $LN4@construct
$LN3@construct:
  00090	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN4@construct:
  0009a	8b 85 0c ff ff
	ff		 mov	 eax, DWORD PTR tv74[ebp]
  000a0	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  000a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
  000ad	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b7	59		 pop	 ecx
  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	5b		 pop	 ebx
  000bb	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000c1	3b ec		 cmp	 ebp, esp
  000c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T3[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  00010	83 c4 08	 add	 esp, 8
  00013	c3		 ret	 0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  00023	6a 00		 push	 0
  00025	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
  0002e	83 c4 08	 add	 esp, 8
; Line 579
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	83 c4 04	 add	 esp, 4
; Line 574
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 96
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 ??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002b	83 c4 08	 add	 esp, 8
  0002e	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00034	0f b6 95 3b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  0003b	52		 push	 edx
  0003c	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00043	51		 push	 ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  0004d	83 c4 10	 add	 esp, 16			; 00000010H
; Line 97
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 23
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 25
  00025	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00029	75 02		 jne	 SHORT $LN4@Allocate
; Line 27
  0002b	eb 2a		 jmp	 SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
  0002d	83 7d 08 ff	 cmp	 DWORD PTR __Count$[ebp], -1
  00031	77 15		 ja	 SHORT $LN1@Allocate
  00033	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003c	83 c4 04	 add	 esp, 4
  0003f	89 45 f8	 mov	 DWORD PTR __Ptr$[ebp], eax
  00042	83 7d f8 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00046	75 0f		 jne	 SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
  00048	8b f4		 mov	 esi, esp
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
  00050	3b f4		 cmp	 esi, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Allocate:
; Line 31
  00057	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00063	3b ec		 cmp	 ebp, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 95
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 879
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
  00030	83 c4 08	 add	 esp, 8
; Line 880
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@AAPAD@std@@YAAAPADAAPAD@Z ; std::forward<char * &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@UVector2@@U1@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UVector2@@U1@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<Vector2> >::construct<Vector2,Vector2>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@UVector2@@@std@@YA$$QAUVector2@@AAU1@@Z ; std::forward<Vector2>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@UVector2@@U1@@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAXAAV?$allocator@UVector2@@@1@PAUVector2@@$$QAU3@@Z ; std::allocator_traits<std::allocator<Vector2> >::construct<Vector2,Vector2>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@UVector2@@U1@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Vector2> >::construct<Vector2,Vector2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@UVector2@@@std@@YA$$QAUVector2@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UVector2@@@std@@YA$$QAUVector2@@AAU1@@Z PROC	; std::forward<Vector2>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@UVector2@@@std@@YA$$QAUVector2@@AAU1@@Z ENDP	; std::forward<Vector2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@UVector2@@@std@@YAPAUVector2@@AAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@UVector2@@@std@@YAPAUVector2@@AAU1@@Z PROC	; std::addressof<Vector2>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 95
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@UVector2@@@std@@YAPAUVector2@@AAU1@@Z ENDP	; std::addressof<Vector2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveSlope@@ABV1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@ABV2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VCaveSlope@@ABV1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@ABV2@@Z PROC ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@ABVCaveSlope@@@std@@YAABVCaveSlope@@ABV1@@Z ; std::forward<CaveSlope const &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@VCaveSlope@@ABV1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@ABV3@@Z ; std::allocator_traits<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope const &>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@VCaveSlope@@ABV1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@ABV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveSlope@@AAV1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@AAV2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VCaveSlope@@AAV1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@AAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@AAVCaveSlope@@@std@@YAAAVCaveSlope@@AAV1@@Z ; std::forward<CaveSlope &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@VCaveSlope@@AAV1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@AAV3@@Z ; std::allocator_traits<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope &>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@VCaveSlope@@AAV1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@AAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@$$CBVCaveSlope@@@std@@YAPBVCaveSlope@@ABV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBVCaveSlope@@@std@@YAPBVCaveSlope@@ABV1@@Z PROC ; std::addressof<CaveSlope const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 95
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@$$CBVCaveSlope@@@std@@YAPBVCaveSlope@@ABV1@@Z ENDP ; std::addressof<CaveSlope const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveSlope@@V1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VCaveSlope@@V1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@VCaveSlope@@@std@@YA$$QAVCaveSlope@@AAV1@@Z ; std::forward<CaveSlope>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@VCaveSlope@@V1@@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAXAAV?$allocator@VCaveSlope@@@1@PAVCaveSlope@@$$QAV3@@Z ; std::allocator_traits<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@VCaveSlope@@V1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@VCaveSlope@@@std@@YA$$QAVCaveSlope@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@VCaveSlope@@@std@@YA$$QAVCaveSlope@@AAV1@@Z PROC ; std::forward<CaveSlope>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@VCaveSlope@@@std@@YA$$QAVCaveSlope@@AAV1@@Z ENDP ; std::forward<CaveSlope>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@VCaveSlope@@@std@@YAPAVCaveSlope@@AAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@VCaveSlope@@@std@@YAPAVCaveSlope@@AAV1@@Z PROC ; std::addressof<CaveSlope>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 95
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@VCaveSlope@@@std@@YAPAVCaveSlope@@AAV1@@Z ENDP ; std::addressof<CaveSlope>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@V?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YA$$QAV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YA$$QAV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@0@AAV10@@Z PROC ; std::forward<std::vector<CaveSlope,std::allocator<CaveSlope> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@V?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YA$$QAV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::vector<CaveSlope,std::allocator<CaveSlope> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveRectangle@@ABV1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@ABV2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VCaveRectangle@@ABV1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@ABV2@@Z PROC ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@ABVCaveRectangle@@@std@@YAABVCaveRectangle@@ABV1@@Z ; std::forward<CaveRectangle const &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@VCaveRectangle@@ABV1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@ABV3@@Z ; std::allocator_traits<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle const &>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@VCaveRectangle@@ABV1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@ABV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveRectangle@@AAV1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VCaveRectangle@@AAV1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@AAVCaveRectangle@@@std@@YAAAVCaveRectangle@@AAV1@@Z ; std::forward<CaveRectangle &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@VCaveRectangle@@AAV1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@AAV3@@Z ; std::allocator_traits<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle &>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@VCaveRectangle@@AAV1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@$$CBVCaveRectangle@@@std@@YAPBVCaveRectangle@@ABV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBVCaveRectangle@@@std@@YAPBVCaveRectangle@@ABV1@@Z PROC ; std::addressof<CaveRectangle const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 95
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@$$CBVCaveRectangle@@@std@@YAPBVCaveRectangle@@ABV1@@Z ENDP ; std::addressof<CaveRectangle const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VCaveRectangle@@V1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VCaveRectangle@@V1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@VCaveRectangle@@@std@@YA$$QAVCaveRectangle@@AAV1@@Z ; std::forward<CaveRectangle>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@VCaveRectangle@@V1@@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAXAAV?$allocator@VCaveRectangle@@@1@PAVCaveRectangle@@$$QAV3@@Z ; std::allocator_traits<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@VCaveRectangle@@V1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@VCaveRectangle@@@std@@YA$$QAVCaveRectangle@@AAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@VCaveRectangle@@@std@@YA$$QAVCaveRectangle@@AAV1@@Z PROC ; std::forward<CaveRectangle>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@VCaveRectangle@@@std@@YA$$QAVCaveRectangle@@AAV1@@Z ENDP ; std::forward<CaveRectangle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@VCaveRectangle@@@std@@YAPAVCaveRectangle@@AAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@VCaveRectangle@@@std@@YAPAVCaveRectangle@@AAV1@@Z PROC ; std::addressof<CaveRectangle>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 95
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@VCaveRectangle@@@std@@YAPAVCaveRectangle@@AAV1@@Z ENDP ; std::addressof<CaveRectangle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@V?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YA$$QAV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YA$$QAV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@0@AAV10@@Z PROC ; std::forward<std::vector<CaveRectangle,std::allocator<CaveRectangle> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@V?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YA$$QAV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::vector<CaveRectangle,std::allocator<CaveRectangle> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@UTileSet@@U1@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UTileSet@@U1@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<TileSet> >::construct<TileSet,TileSet>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@UTileSet@@@std@@YA$$QAUTileSet@@AAU1@@Z ; std::forward<TileSet>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@UTileSet@@U1@@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAXAAV?$allocator@UTileSet@@@1@PAUTileSet@@$$QAU3@@Z ; std::allocator_traits<std::allocator<TileSet> >::construct<TileSet,TileSet>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@UTileSet@@U1@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<TileSet> >::construct<TileSet,TileSet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@UTileSet@@@std@@YA$$QAUTileSet@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UTileSet@@@std@@YA$$QAUTileSet@@AAU1@@Z PROC	; std::forward<TileSet>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@UTileSet@@@std@@YA$$QAUTileSet@@AAU1@@Z ENDP	; std::forward<TileSet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@UTileSet@@@std@@YAPAUTileSet@@AAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@UTileSet@@@std@@YAPAUTileSet@@AAU1@@Z PROC	; std::addressof<TileSet>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 95
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@UTileSet@@@std@@YAPAUTileSet@@AAU1@@Z ENDP	; std::addressof<TileSet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VTile@@ABV1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@ABV2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VTile@@ABV1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@ABV2@@Z PROC ; std::_Wrap_alloc<std::allocator<Tile> >::construct<Tile,Tile const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@ABVTile@@@std@@YAABVTile@@ABV1@@Z ; std::forward<Tile const &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@VTile@@ABV1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@ABV3@@Z ; std::allocator_traits<std::allocator<Tile> >::construct<Tile,Tile const &>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@VTile@@ABV1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@ABV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Tile> >::construct<Tile,Tile const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@VTile@@AAV1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@AAV2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@VTile@@AAV1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@AAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<Tile> >::construct<Tile,Tile &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@AAVTile@@@std@@YAAAVTile@@AAV1@@Z ; std::forward<Tile &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@VTile@@AAV1@@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAXAAV?$allocator@VTile@@@1@PAVTile@@AAV3@@Z ; std::allocator_traits<std::allocator<Tile> >::construct<Tile,Tile &>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@VTile@@AAV1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@AAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<Tile> >::construct<Tile,Tile &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@$$CBVTile@@@std@@YAPBVTile@@ABV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBVTile@@@std@@YAPBVTile@@ABV1@@Z PROC	; std::addressof<Tile const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 95
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@$$CBVTile@@@std@@YAPBVTile@@ABV1@@Z ENDP	; std::addressof<Tile const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@USDL_Rect@@ABU1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@ABU2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@USDL_Rect@@ABU1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@ABU2@@Z PROC ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@ABUSDL_Rect@@@std@@YAABUSDL_Rect@@ABU1@@Z ; std::forward<SDL_Rect const &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@USDL_Rect@@ABU1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@ABU3@@Z ; std::allocator_traits<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect const &>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@USDL_Rect@@ABU1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@ABU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@USDL_Rect@@AAU1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@USDL_Rect@@AAU1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 872
  00023	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@AAUSDL_Rect@@@std@@YAAAUSDL_Rect@@AAU1@@Z ; std::forward<SDL_Rect &>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$construct@USDL_Rect@@AAU1@@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAXAAV?$allocator@USDL_Rect@@@1@PAUSDL_Rect@@AAU3@@Z ; std::allocator_traits<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect &>
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 873
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
??$construct@USDL_Rect@@AAU1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@$$CBUSDL_Rect@@@std@@YAPBUSDL_Rect@@ABU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUSDL_Rect@@@std@@YAPBUSDL_Rect@@ABU1@@Z PROC ; std::addressof<SDL_Rect const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 95
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@$$CBUSDL_Rect@@@std@@YAPBUSDL_Rect@@ABU1@@Z ENDP ; std::addressof<SDL_Rect const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 95
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 96
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$fpos@H@std@@QBE_JXZ PROC				; std::fpos<int>::operator __int64, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 67
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 68
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 10		 mov	 edx, DWORD PTR [eax]
  0002b	03 51 08	 add	 edx, DWORD PTR [ecx+8]
  0002e	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  00031	13 71 0c	 adc	 esi, DWORD PTR [ecx+12]
  00034	8b c2		 mov	 eax, edx
  00036	8b d6		 mov	 edx, esi
; Line 69
  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??B?$fpos@H@std@@QBE_JXZ ENDP				; std::fpos<int>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$fpos@H@std@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 8
??0?$fpos@H@std@@QAE@_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 43
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
  0002b	8b 55 0c	 mov	 edx, DWORD PTR __Off$[ebp+4]
  0002e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00031	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  0003b	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00045	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
; Line 44
  0004c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 08 00	 ret	 8
??0?$fpos@H@std@@QAE@_J@Z ENDP				; std::fpos<int>::fpos<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1505
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1506
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEXI@Z PROC ; std::vector<Vector2,std::allocator<Vector2> >::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00026	50		 push	 eax
  00027	6a 00		 push	 0
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?__autoclassinit2@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEXI@Z ENDP ; std::vector<Vector2,std::allocator<Vector2> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z
_TEXT	SEGMENT
__Pnext$ = -48						; size = 4
__Lock$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z PROC ; std::vector<Vector2,std::allocator<Vector2> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  00045	8b f4		 mov	 esi, esp
  00047	6a 03		 push	 3
  00049	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00060	8b f4		 mov	 esi, esp
  00062	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  00075	83 7d d0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00079	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  0007b	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0007e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00081	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  00083	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00086	8b 08		 mov	 ecx, DWORD PTR [eax]
  00088	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0008b	3b 55 08	 cmp	 edx, DWORD PTR __First$[ebp]
  0008e	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00090	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00093	8b 08		 mov	 ecx, DWORD PTR [eax]
  00095	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00098	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0009b	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  0009d	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a2	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000a7	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000aa	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000ac	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000af	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b1	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000b6	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bb	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000c0	8b 4d d0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000c3	8b 10		 mov	 edx, DWORD PTR [eax]
  000c5	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000c7	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d0	8b f4		 mov	 esi, esp
  000d2	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000db	3b f4		 cmp	 esi, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e2	52		 push	 edx
  000e3	8b cd		 mov	 ecx, ebp
  000e5	50		 push	 eax
  000e6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000ec	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f1	58		 pop	 eax
  000f2	5a		 pop	 edx
  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00104	33 cd		 xor	 ecx, ebp
  00106	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010b	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  00111	3b ec		 cmp	 ebp, esp
  00113	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 08 00	 ret	 8
  0011e	8b ff		 npad	 2
$LN13@Orphan_ran:
  00120	01 00 00 00	 DD	 1
  00124	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00128	dc ff ff ff	 DD	 -36			; ffffffdcH
  0012c	04 00 00 00	 DD	 4
  00130	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00134	5f		 DB	 95			; 0000005fH
  00135	4c		 DB	 76			; 0000004cH
  00136	6f		 DB	 111			; 0000006fH
  00137	63		 DB	 99			; 00000063H
  00138	6b		 DB	 107			; 0000006bH
  00139	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z ENDP ; std::vector<Vector2,std::allocator<Vector2> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xran@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXXZ PROC ; std::vector<Vector2,std::allocator<Vector2> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1758
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1759
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xran:
; Line 1760
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xran@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXXZ ENDP ; std::vector<Vector2,std::allocator<Vector2> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlen@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXXZ PROC ; std::vector<Vector2,std::allocator<Vector2> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xlen@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXXZ ENDP ; std::vector<Vector2,std::allocator<Vector2> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?_Tidy@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXXZ PROC ; std::vector<Vector2,std::allocator<Vector2> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 73		 je	 SHORT $LN2@Tidy
; Line 1625
  0002c	8b f4		 mov	 esi, esp
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00037	3b f4		 cmp	 esi, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00044	51		 push	 ecx
  00045	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004b	50		 push	 eax
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXPAUVector2@@0@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Destroy
; Line 1628
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0005d	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  00060	c1 fa 03	 sar	 edx, 3
  00063	52		 push	 edx
  00064	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	51		 push	 ecx
  0006b	8d 95 2f ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00071	52		 push	 edx
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Getal
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@I@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::deallocate
; Line 1629
  00081	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00084	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 1630
  0008b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00095	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00098	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
$LN2@Tidy:
; Line 1633
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
  000a2	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000a8	3b ec		 cmp	 ebp, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
?_Tidy@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXXZ ENDP ; std::vector<Vector2,std::allocator<Vector2> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reserve@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z PROC ; std::vector<Vector2,std::allocator<Vector2> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::_Unused_capacity
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0002e	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?max_size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::max_size
  00038	8b f0		 mov	 esi, eax
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::size
  00042	2b f0		 sub	 esi, eax
  00044	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00047	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXXZ ; std::vector<Vector2,std::allocator<Vector2> >::_Xlen
$LN1@Reserve:
; Line 1617
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::size
  00059	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEII@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Grow_to
  00065	50		 push	 eax
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?_Reserve@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Vector2,std::allocator<Vector2> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -273						; size = 1
$T3 = -261						; size = 1
$T4 = -249						; size = 1
__Size$ = -48						; size = 4
__Ptr$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z PROC ; std::vector<Vector2,std::allocator<Vector2> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d bd e8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-280]
  00022	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00027	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002c	f3 ab		 rep stosd
  0002e	59		 pop	 ecx
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00034	33 c5		 xor	 eax, ebp
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00043	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00046	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00049	50		 push	 eax
  0004a	8d 8d ef fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00050	51		 push	 ecx
  00051	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Getal
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEPAUVector2@@I@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::allocate
  00060	89 45 dc	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  00063	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  0006a	8b 45 dc	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00074	52		 push	 edx
  00075	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007b	51		 push	 ecx
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ??$_Umove@PAUVector2@@@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEPAUVector2@@PAU2@00@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Umove<Vector2 *>
  00084	eb 2d		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  00086	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0008d	51		 push	 ecx
  0008e	8d 95 fb fe ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00094	52		 push	 edx
  00095	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Getal
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@I@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::deallocate
; Line 1594
  000a4	6a 00		 push	 0
  000a6	6a 00		 push	 0
  000a8	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000ad	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000b2	c3		 ret	 0
$LN5@Reallocate:
  000b3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ba	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000c3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	e8 00 00 00 00	 call	 ?size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::size
  000cb	89 45 d0	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000ce	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000d5	74 43		 je	 SHORT $LN1@Reallocate
; Line 1600
  000d7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e4	50		 push	 eax
  000e5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXPAUVector2@@0@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Destroy
; Line 1602
  000ed	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000f0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000f6	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000f9	c1 fa 03	 sar	 edx, 3
  000fc	52		 push	 edx
  000fd	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00103	51		 push	 ecx
  00104	8d 95 07 ff ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  0010a	52		 push	 edx
  0010b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Getal
  00113	8b c8		 mov	 ecx, eax
  00115	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@I@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::deallocate
$LN1@Reallocate:
; Line 1605
  0011a	8b f4		 mov	 esi, esp
  0011c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00125	3b f4		 cmp	 esi, esp
  00127	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0012c	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0012f	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00132	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  00135	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00138	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0013b	8b 45 d0	 mov	 eax, DWORD PTR __Size$[ebp]
  0013e	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00141	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  00144	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00147	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 1608
  0014a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0014d	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00150	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
  00153	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00156	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0015d	59		 pop	 ecx
  0015e	5f		 pop	 edi
  0015f	5e		 pop	 esi
  00160	5b		 pop	 ebx
  00161	81 c4 18 01 00
	00		 add	 esp, 280		; 00000118H
  00167	3b ec		 cmp	 ebp, esp
  00169	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a e4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-284]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Vector2,std::allocator<Vector2> >::_Reallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Inside@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBE_NPBUVector2@@@Z
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBE_NPBUVector2@@@Z PROC ; std::vector<Vector2,std::allocator<Vector2> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00029	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002c	73 17		 jae	 SHORT $LN3@Inside
  0002e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00031	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00034	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  00037	77 0c		 ja	 SHORT $LN3@Inside
  00039	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv76[ebp], 1
  00043	eb 0a		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00045	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0004f	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?_Inside@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBE_NPBUVector2@@@Z ENDP ; std::vector<Vector2,std::allocator<Vector2> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Grow_to@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEII@Z PROC ; std::vector<Vector2,std::allocator<Vector2> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?capacity@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::capacity
  0002b	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?max_size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::max_size
  00036	8b 4d ec	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00039	d1 e9		 shr	 ecx, 1
  0003b	2b c1		 sub	 eax, ecx
  0003d	3b 45 ec	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  00040	73 0c		 jae	 SHORT $LN4@Grow_to
  00042	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
  0004c	eb 0e		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0004e	8b 55 ec	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00051	d1 ea		 shr	 edx, 1
  00053	03 55 ec	 add	 edx, DWORD PTR __Capacity$[ebp]
  00056	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  0005c	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv73[ebp]
  00062	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00065	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
  00068	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0006b	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0006d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00070	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
$LN1@Grow_to:
; Line 1578
  00073	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?_Grow_to@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEII@Z ENDP ; std::vector<Vector2,std::allocator<Vector2> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Destroy@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXPAUVector2@@0@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXPAUVector2@@0@Z PROC ; std::vector<Vector2,std::allocator<Vector2> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Getal
; Line 1567
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@@std@@YAXPAUVector2@@0AAU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Vector2> > >
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0004d	52		 push	 edx
  0004e	8b cd		 mov	 ecx, ebp
  00050	50		 push	 eax
  00051	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00057	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0005c	58		 pop	 eax
  0005d	5a		 pop	 edx
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00064	33 cd		 xor	 ecx, ebp
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
  0007e	8b ff		 npad	 2
$LN5@Destroy:
  00080	01 00 00 00	 DD	 1
  00084	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00088	eb ff ff ff	 DD	 -21			; ffffffebH
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00094	5f		 DB	 95			; 0000005fH
  00095	41		 DB	 65			; 00000041H
  00096	6c		 DB	 108			; 0000006cH
  00097	76		 DB	 118			; 00000076H
  00098	61		 DB	 97			; 00000061H
  00099	6c		 DB	 108			; 0000006cH
  0009a	00		 DB	 0
?_Destroy@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXPAUVector2@@0@Z ENDP ; std::vector<Vector2,std::allocator<Vector2> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?at@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEAAUVector2@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEAAUVector2@@I@Z PROC ; std::vector<Vector2,std::allocator<Vector2> >::at, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1174
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1175
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::size
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0002e	77 08		 ja	 SHORT $LN1@at
; Line 1176
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Xran@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXXZ ; std::vector<Vector2,std::allocator<Vector2> >::_Xran
$LN1@at:
; Line 1177
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003e	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  00041	8d 04 d1	 lea	 eax, DWORD PTR [ecx+edx*8]
$LN3@at:
; Line 1178
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?at@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEAAUVector2@@I@Z ENDP ; std::vector<Vector2,std::allocator<Vector2> >::at
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ PROC ; std::vector<Vector2,std::allocator<Vector2> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00023	8d 85 2f ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Getal
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<Vector2> >::max_size
; Line 1154
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?max_size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ENDP ; std::vector<Vector2,std::allocator<Vector2> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ PROC ; std::vector<Vector2,std::allocator<Vector2> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	c1 f8 03	 sar	 eax, 3
; Line 1149
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ENDP ; std::vector<Vector2,std::allocator<Vector2> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Unused_capacity@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unused_capacity@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ PROC ; std::vector<Vector2,std::allocator<Vector2> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0002f	c1 f8 03	 sar	 eax, 3
; Line 1016
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Unused_capacity@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ENDP ; std::vector<Vector2,std::allocator<Vector2> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?capacity@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ PROC ; std::vector<Vector2,std::allocator<Vector2> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	c1 f8 03	 sar	 eax, 3
; Line 1011
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?capacity@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ENDP ; std::vector<Vector2,std::allocator<Vector2> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAE@XZ PROC ; std::vector<Vector2,std::allocator<Vector2> >::~vector<Vector2,std::allocator<Vector2> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXXZ ; std::vector<Vector2,std::allocator<Vector2> >::_Tidy
; Line 946
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::~_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAE@XZ ENDP ; std::vector<Vector2,std::allocator<Vector2> >::~vector<Vector2,std::allocator<Vector2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEX$$QAUVector2@@@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Idx$3 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEX$$QAUVector2@@@Z PROC ; std::vector<Vector2,std::allocator<Vector2> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 865
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 866
  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$addressof@UVector2@@@std@@YAPAUVector2@@AAU1@@Z ; std::addressof<Vector2>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Inside@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBE_NPBUVector2@@@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Inside
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 8a 00 00
	00		 je	 $LN4@push_back
; Line 868
  00043	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$addressof@UVector2@@@std@@YAPAUVector2@@AAU1@@Z ; std::addressof<Vector2>
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00055	c1 f8 03	 sar	 eax, 3
  00058	89 45 ec	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 869
  0005b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00064	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00067	75 0a		 jne	 SHORT $LN3@push_back
; Line 870
  00069	6a 01		 push	 1
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Reserve
$LN3@push_back:
; Line 871
  00073	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00079	51		 push	 ecx
  0007a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00080	50		 push	 eax
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Orphan_range
; Line 873
  00089	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008f	8b 55 ec	 mov	 edx, DWORD PTR __Idx$3[ebp]
  00092	8d 04 d1	 lea	 eax, DWORD PTR [ecx+edx*8]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??$forward@UVector2@@@std@@YA$$QAUVector2@@AAU1@@Z ; std::forward<Vector2>
  0009b	83 c4 04	 add	 esp, 4
  0009e	50		 push	 eax
  0009f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000a5	52		 push	 edx
  000a6	8d 85 17 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  000ac	50		 push	 eax
  000ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Getal
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??$construct@UVector2@@U1@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::construct<Vector2,Vector2>
; Line 874
  000bc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c2	83 c1 08	 add	 ecx, 8
  000c5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c8	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 876
  000cb	eb 67		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 878
  000cd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000d6	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  000d9	75 0a		 jne	 SHORT $LN1@push_back
; Line 879
  000db	6a 01		 push	 1
  000dd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IAEXI@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Reserve
$LN1@push_back:
; Line 880
  000e5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000eb	51		 push	 ecx
  000ec	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f2	50		 push	 eax
  000f3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@IBEXPAUVector2@@0@Z ; std::vector<Vector2,std::allocator<Vector2> >::_Orphan_range
; Line 882
  000fb	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ??$forward@UVector2@@@std@@YA$$QAUVector2@@AAU1@@Z ; std::forward<Vector2>
  00104	83 c4 04	 add	 esp, 4
  00107	50		 push	 eax
  00108	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0010e	52		 push	 edx
  0010f	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00115	50		 push	 eax
  00116	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Getal
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ??$construct@UVector2@@U1@@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<Vector2> >::construct<Vector2,Vector2>
; Line 883
  00125	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00128	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0012b	83 c1 08	 add	 ecx, 8
  0012e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00131	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 885
  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  0013d	3b ec		 cmp	 ebp, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	8b e5		 mov	 esp, ebp
  00146	5d		 pop	 ebp
  00147	c2 04 00	 ret	 4
?push_back@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEX$$QAUVector2@@@Z ENDP ; std::vector<Vector2,std::allocator<Vector2> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
??0?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAE@XZ PROC ; std::vector<Vector2,std::allocator<Vector2> >::vector<Vector2,std::allocator<Vector2> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8d 8d 2f ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00029	e8 00 00 00 00	 call	 ??0?$allocator@UVector2@@@std@@QAE@XZ ; std::allocator<Vector2>::allocator<Vector2>
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >
; Line 681
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??0?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAE@XZ ENDP ; std::vector<Vector2,std::allocator<Vector2> >::vector<Vector2,std::allocator<Vector2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  00023	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<Vector2> >::_Wrap_alloc<std::allocator<Vector2> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00047	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	51		 push	 ecx
  0004d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00050	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00055	6a 01		 push	 1
  00057	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	51		 push	 ecx
  0005d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00060	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00065	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 637
  0006e	52		 push	 edx
  0006f	8b cd		 mov	 ecx, ebp
  00071	50		 push	 eax
  00072	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00078	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0007d	58		 pop	 eax
  0007e	5a		 pop	 edx
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00085	33 cd		 xor	 ecx, ebp
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
  0009d	8d 49 00	 npad	 3
$LN5@Free_proxy:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  000a8	eb ff ff ff	 DD	 -21			; ffffffebH
  000ac	01 00 00 00	 DD	 1
  000b0	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  000b4	5f		 DB	 95			; 0000005fH
  000b5	41		 DB	 65			; 00000041H
  000b6	6c		 DB	 108			; 0000006cH
  000b7	70		 DB	 112			; 00000070H
  000b8	72		 DB	 114			; 00000072H
  000b9	6f		 DB	 111			; 0000006fH
  000ba	78		 DB	 120			; 00000078H
  000bb	79		 DB	 121			; 00000079H
  000bc	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -232						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00013	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00035	6a 01		 push	 1
  00037	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003a	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00044	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0004a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0004f	50		 push	 eax
  00050	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00059	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0005e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00066	89 11		 mov	 DWORD PTR [ecx], edx
; Line 627
  00068	52		 push	 edx
  00069	8b cd		 mov	 ecx, ebp
  0006b	50		 push	 eax
  0006c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00072	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00077	58		 pop	 eax
  00078	5a		 pop	 edx
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
  00097	90		 npad	 1
$LN5@Alloc_prox:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000a0	eb ff ff ff	 DD	 -21			; ffffffebH
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000ac	5f		 DB	 95			; 0000005fH
  000ad	41		 DB	 65			; 00000041H
  000ae	6c		 DB	 108			; 0000006cH
  000af	70		 DB	 112			; 00000070H
  000b0	72		 DB	 114			; 00000072H
  000b1	6f		 DB	 111			; 0000006fH
  000b2	78		 DB	 120			; 00000078H
  000b3	79		 DB	 121			; 00000079H
  000b4	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::~_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Free_proxy
; Line 609
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@UVector2@@@std@@@std@@QAE@XZ
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::~_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UVector2@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Vector2> >::_Vector_val<std::_Simple_types<Vector2> >
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Alloc_proxy
; Line 604
  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@UVector2@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UVector2@@V?$allocator@UVector2@@@std@@@std@@@std@@QAE@ABV?$allocator@UVector2@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >::_Vector_alloc<0,std::_Vec_base_types<Vector2,std::allocator<Vector2> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@UVector2@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@UVector2@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<Vector2> >::~_Vector_val<std::_Simple_types<Vector2> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@UVector2@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<Vector2> >::~_Vector_val<std::_Simple_types<Vector2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UVector2@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@UVector2@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<Vector2> >::_Vector_val<std::_Simple_types<Vector2> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 484
  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 485
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UVector2@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<Vector2> >::_Vector_val<std::_Simple_types<Vector2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<Vector2> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAIABV?$allocator@UVector2@@@2@@Z ; std::allocator_traits<std::allocator<Vector2> >::max_size
  0002c	83 c4 04	 add	 esp, 4
; Line 885
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<Vector2> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@I@Z PROC ; std::_Wrap_alloc<std::allocator<Vector2> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UVector2@@@std@@QAEXPAUVector2@@I@Z ; std::allocator<Vector2>::deallocate
; Line 859
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEXPAUVector2@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<Vector2> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEPAUVector2@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEPAUVector2@@I@Z PROC ; std::_Wrap_alloc<std::allocator<Vector2> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@UVector2@@@std@@QAEPAUVector2@@I@Z ; std::allocator<Vector2>::allocate
; Line 848
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAEPAUVector2@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<Vector2> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<Vector2> >::_Wrap_alloc<std::allocator<Vector2> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@UVector2@@@std@@QAE@XZ ; std::allocator<Vector2>::allocator<Vector2>
; Line 802
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@UVector2@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<Vector2> >::_Wrap_alloc<std::allocator<Vector2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAIABV?$allocator@UVector2@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAIABV?$allocator@UVector2@@@2@@Z PROC ; std::allocator_traits<std::allocator<Vector2> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 735
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$allocator@UVector2@@@std@@QBEIXZ ; std::allocator<Vector2>::max_size
; Line 736
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@UVector2@@@std@@@std@@SAIABV?$allocator@UVector2@@@2@@Z ENDP ; std::allocator_traits<std::allocator<Vector2> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator@UVector2@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@UVector2@@@std@@QBEIXZ PROC	; std::allocator<Vector2>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  00023	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH
; Line 613
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?max_size@?$allocator@UVector2@@@std@@QBEIXZ ENDP	; std::allocator<Vector2>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@UVector2@@@std@@QAEPAUVector2@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UVector2@@@std@@QAEPAUVector2@@I@Z PROC ; std::allocator<Vector2>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  00023	6a 00		 push	 0
  00025	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??$_Allocate@UVector2@@@std@@YAPAUVector2@@IPAU1@@Z ; std::_Allocate<Vector2>
  0002e	83 c4 08	 add	 esp, 8
; Line 579
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?allocate@?$allocator@UVector2@@@std@@QAEPAUVector2@@I@Z ENDP ; std::allocator<Vector2>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@UVector2@@@std@@QAEXPAUVector2@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UVector2@@@std@@QAEXPAUVector2@@I@Z PROC ; std::allocator<Vector2>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	83 c4 04	 add	 esp, 4
; Line 574
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?deallocate@?$allocator@UVector2@@@std@@QAEXPAUVector2@@I@Z ENDP ; std::allocator<Vector2>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@UVector2@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@UVector2@@@std@@QAE@XZ PROC		; std::allocator<Vector2>::allocator<Vector2>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@UVector2@@@std@@QAE@XZ ENDP		; std::allocator<Vector2>::allocator<Vector2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2488
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 2489
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00025	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
  0002a	85 c0		 test	 eax, eax
  0002c	75 0c		 jne	 SHORT $LN3@operator
  0002e	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv68[ebp], 1
  00038	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003a	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN4@operator:
  00044	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv68[ebp]
; Line 2490
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
tv411 = -344						; size = 8
tv294 = -336						; size = 4
tv291 = -336						; size = 8
tv289 = -336						; size = 4
tv136 = -336						; size = 4
tv329 = -332						; size = 8
tv293 = -332						; size = 4
tv288 = -332						; size = 4
tv290 = -328						; size = 4
tv138 = -328						; size = 4
tv292 = -325						; size = 1
tv287 = -325						; size = 1
$T2 = -320						; size = 4
$T3 = -308						; size = 4
$T4 = -296						; size = 4
$T5 = -284						; size = 4
$T6 = -272						; size = 4
__Ok$ = -68						; size = 8
__Pad$ = -52						; size = 4
__Size$ = -40						; size = 4
__State$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\string
; Line 169
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 48 01 00
	00		 sub	 esp, 328		; 00000148H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd a8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-344]
  00021	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00037	50		 push	 eax
  00038	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00041	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 174
  00044	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR __State$[ebp], 0
; Line 175
  0004b	8b 4d 0c	 mov	 ecx, DWORD PTR __Str$[ebp]
  0004e	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00053	89 45 d8	 mov	 DWORD PTR __Size$[ebp], eax
; Line 177
  00056	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00059	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005b	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0005e	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00061	8b f4		 mov	 esi, esp
  00063	8b ca		 mov	 ecx, edx
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	89 85 b4 fe ff
	ff		 mov	 DWORD PTR tv329[ebp], eax
  00078	89 95 b8 fe ff
	ff		 mov	 DWORD PTR tv329[ebp+4], edx
  0007e	83 bd b8 fe ff
	ff 00		 cmp	 DWORD PTR tv329[ebp+4], 0
  00085	7c 53		 jl	 SHORT $LN17@operator
  00087	7f 09		 jg	 SHORT $LN24@operator
  00089	83 bd b4 fe ff
	ff 00		 cmp	 DWORD PTR tv329[ebp], 0
  00090	76 48		 jbe	 SHORT $LN17@operator
$LN24@operator:
  00092	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0009a	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0009d	8b f4		 mov	 esi, esp
  0009f	8b ca		 mov	 ecx, edx
  000a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	3b 45 d8	 cmp	 eax, DWORD PTR __Size$[ebp]
  000b1	76 27		 jbe	 SHORT $LN17@operator
  000b3	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b8	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000bb	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000be	8b f4		 mov	 esi, esp
  000c0	8b ca		 mov	 ecx, edx
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  000c8	3b f4		 cmp	 esi, esp
  000ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cf	2b 45 d8	 sub	 eax, DWORD PTR __Size$[ebp]
  000d2	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv136[ebp], eax
  000d8	eb 0a		 jmp	 SHORT $LN18@operator
$LN17@operator:
  000da	c7 85 b0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
$LN18@operator:
  000e4	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR tv136[ebp]
  000ea	89 45 cc	 mov	 DWORD PTR __Pad$[ebp], eax
; Line 178
  000ed	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  000f0	50		 push	 eax
  000f1	8d 4d bc	 lea	 ecx, DWORD PTR __Ok$[ebp]
  000f4	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  000f9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 180
  00100	8d 4d bc	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00103	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00108	0f b6 c0	 movzx	 eax, al
  0010b	85 c0		 test	 eax, eax
  0010d	75 0e		 jne	 SHORT $LN14@operator
; Line 181
  0010f	8b 45 e4	 mov	 eax, DWORD PTR __State$[ebp]
  00112	83 c8 04	 or	 eax, 4
  00115	89 45 e4	 mov	 DWORD PTR __State$[ebp], eax
; Line 182
  00118	e9 aa 02 00 00	 jmp	 $LN13@operator
$LN14@operator:
; Line 184
  0011d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
; Line 185
  00121	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00124	8b 08		 mov	 ecx, DWORD PTR [eax]
  00126	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00129	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0012c	8b f4		 mov	 esi, esp
  0012e	8b ca		 mov	 ecx, edx
  00130	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
  00136	3b f4		 cmp	 esi, esp
  00138	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013d	89 85 b8 fe ff
	ff		 mov	 DWORD PTR tv138[ebp], eax
  00143	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR tv138[ebp]
  00149	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  0014e	83 f8 40	 cmp	 eax, 64			; 00000040H
  00151	0f 84 c0 00 00
	00		 je	 $LN11@operator
; Line 186
  00157	eb 09		 jmp	 SHORT $LN10@operator
$LN9@operator:
  00159	8b 45 cc	 mov	 eax, DWORD PTR __Pad$[ebp]
  0015c	83 e8 01	 sub	 eax, 1
  0015f	89 45 cc	 mov	 DWORD PTR __Pad$[ebp], eax
$LN10@operator:
  00162	83 7d cc 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  00166	0f 86 ab 00 00
	00		 jbe	 $LN11@operator
; Line 188
  0016c	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0016f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00171	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00174	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00177	8b f4		 mov	 esi, esp
  00179	8b ca		 mov	 ecx, edx
  0017b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
  00181	3b f4		 cmp	 esi, esp
  00183	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00188	88 85 bb fe ff
	ff		 mov	 BYTE PTR tv287[ebp], al
  0018e	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00191	8b 08		 mov	 ecx, DWORD PTR [eax]
  00193	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00196	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00199	8b f4		 mov	 esi, esp
  0019b	8b ca		 mov	 ecx, edx
  0019d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  001a3	3b f4		 cmp	 esi, esp
  001a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001aa	89 85 b4 fe ff
	ff		 mov	 DWORD PTR tv288[ebp], eax
  001b0	8b f4		 mov	 esi, esp
  001b2	0f b6 85 bb fe
	ff ff		 movzx	 eax, BYTE PTR tv287[ebp]
  001b9	50		 push	 eax
  001ba	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR tv288[ebp]
  001c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
  001c6	3b f4		 cmp	 esi, esp
  001c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001cd	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv289[ebp], eax
  001d3	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR tv289[ebp]
  001d9	89 8d c0 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  001df	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  001e4	89 85 cc fe ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  001ea	8d 95 c0 fe ff
	ff		 lea	 edx, DWORD PTR $T2[ebp]
  001f0	52		 push	 edx
  001f1	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  001f7	50		 push	 eax
  001f8	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  001fd	83 c4 08	 add	 esp, 8
  00200	0f b6 c8	 movzx	 ecx, al
  00203	85 c9		 test	 ecx, ecx
  00205	74 0b		 je	 SHORT $LN7@operator
; Line 190
  00207	8b 45 e4	 mov	 eax, DWORD PTR __State$[ebp]
  0020a	83 c8 04	 or	 eax, 4
  0020d	89 45 e4	 mov	 DWORD PTR __State$[ebp], eax
; Line 191
  00210	eb 05		 jmp	 SHORT $LN11@operator
$LN7@operator:
; Line 194
  00212	e9 42 ff ff ff	 jmp	 $LN9@operator
$LN11@operator:
; Line 196
  00217	83 7d e4 00	 cmp	 DWORD PTR __State$[ebp], 0
  0021b	0f 85 8e 00 00
	00		 jne	 $LN6@operator
  00221	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00224	8b 08		 mov	 ecx, DWORD PTR [eax]
  00226	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00229	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0022c	8b f4		 mov	 esi, esp
  0022e	8b ca		 mov	 ecx, edx
  00230	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00236	3b f4		 cmp	 esi, esp
  00238	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023d	89 85 b8 fe ff
	ff		 mov	 DWORD PTR tv290[ebp], eax
  00243	8b 45 d8	 mov	 eax, DWORD PTR __Size$[ebp]
  00246	33 c9		 xor	 ecx, ecx
  00248	8b f4		 mov	 esi, esp
  0024a	51		 push	 ecx
  0024b	50		 push	 eax
  0024c	8b 4d 0c	 mov	 ecx, DWORD PTR __Str$[ebp]
  0024f	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00254	50		 push	 eax
  00255	8b 8d b8 fe ff
	ff		 mov	 ecx, DWORD PTR tv290[ebp]
  0025b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
  00261	3b f4		 cmp	 esi, esp
  00263	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00268	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv291[ebp], eax
  0026e	89 95 b4 fe ff
	ff		 mov	 DWORD PTR tv291[ebp+4], edx
  00274	8b 55 d8	 mov	 edx, DWORD PTR __Size$[ebp]
  00277	33 c0		 xor	 eax, eax
  00279	89 95 a8 fe ff
	ff		 mov	 DWORD PTR tv411[ebp], edx
  0027f	89 85 ac fe ff
	ff		 mov	 DWORD PTR tv411[ebp+4], eax
  00285	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR tv291[ebp]
  0028b	3b 8d a8 fe ff
	ff		 cmp	 ecx, DWORD PTR tv411[ebp]
  00291	75 0e		 jne	 SHORT $LN25@operator
  00293	8b 95 b4 fe ff
	ff		 mov	 edx, DWORD PTR tv291[ebp+4]
  00299	3b 95 ac fe ff
	ff		 cmp	 edx, DWORD PTR tv411[ebp+4]
  0029f	74 0e		 je	 SHORT $LN6@operator
$LN25@operator:
; Line 197
  002a1	8b 45 e4	 mov	 eax, DWORD PTR __State$[ebp]
  002a4	83 c8 04	 or	 eax, 4
  002a7	89 45 e4	 mov	 DWORD PTR __State$[ebp], eax
; Line 198
  002aa	e9 c0 00 00 00	 jmp	 $LN5@operator
$LN6@operator:
; Line 199
  002af	eb 09		 jmp	 SHORT $LN4@operator
$LN3@operator:
  002b1	8b 45 cc	 mov	 eax, DWORD PTR __Pad$[ebp]
  002b4	83 e8 01	 sub	 eax, 1
  002b7	89 45 cc	 mov	 DWORD PTR __Pad$[ebp], eax
$LN4@operator:
  002ba	83 7d cc 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  002be	0f 86 ab 00 00
	00		 jbe	 $LN5@operator
; Line 201
  002c4	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  002c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c9	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  002cc	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  002cf	8b f4		 mov	 esi, esp
  002d1	8b ca		 mov	 ecx, edx
  002d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
  002d9	3b f4		 cmp	 esi, esp
  002db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002e0	88 85 bb fe ff
	ff		 mov	 BYTE PTR tv292[ebp], al
  002e6	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  002e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  002eb	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  002ee	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  002f1	8b f4		 mov	 esi, esp
  002f3	8b ca		 mov	 ecx, edx
  002f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  002fb	3b f4		 cmp	 esi, esp
  002fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00302	89 85 b4 fe ff
	ff		 mov	 DWORD PTR tv293[ebp], eax
  00308	8b f4		 mov	 esi, esp
  0030a	0f b6 85 bb fe
	ff ff		 movzx	 eax, BYTE PTR tv292[ebp]
  00311	50		 push	 eax
  00312	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR tv293[ebp]
  00318	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
  0031e	3b f4		 cmp	 esi, esp
  00320	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00325	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv294[ebp], eax
  0032b	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR tv294[ebp]
  00331	89 8d d8 fe ff
	ff		 mov	 DWORD PTR $T4[ebp], ecx
  00337	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0033c	89 85 e4 fe ff
	ff		 mov	 DWORD PTR $T5[ebp], eax
  00342	8d 95 d8 fe ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  00348	52		 push	 edx
  00349	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  0034f	50		 push	 eax
  00350	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00355	83 c4 08	 add	 esp, 8
  00358	0f b6 c8	 movzx	 ecx, al
  0035b	85 c9		 test	 ecx, ecx
  0035d	74 0b		 je	 SHORT $LN1@operator
; Line 203
  0035f	8b 45 e4	 mov	 eax, DWORD PTR __State$[ebp]
  00362	83 c8 04	 or	 eax, 4
  00365	89 45 e4	 mov	 DWORD PTR __State$[ebp], eax
; Line 204
  00368	eb 05		 jmp	 SHORT $LN5@operator
$LN1@operator:
; Line 205
  0036a	e9 42 ff ff ff	 jmp	 $LN3@operator
$LN5@operator:
; Line 206
  0036f	8b f4		 mov	 esi, esp
  00371	6a 00		 push	 0
  00373	6a 00		 push	 0
  00375	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00378	8b 08		 mov	 ecx, DWORD PTR [eax]
  0037a	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0037d	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00380	8b ca		 mov	 ecx, edx
  00382	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
  00388	3b f4		 cmp	 esi, esp
  0038a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0038f	eb 26		 jmp	 SHORT $LN19@operator
__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0:
; Line 207
  00391	8b f4		 mov	 esi, esp
  00393	6a 01		 push	 1
  00395	6a 04		 push	 4
  00397	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0039a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0039c	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  0039f	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  003a2	8b ca		 mov	 ecx, edx
  003a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
  003aa	3b f4		 cmp	 esi, esp
  003ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b1	b8 00 00 00 00	 mov	 eax, $LN23@operator
  003b6	c3		 ret	 0
$LN19@operator:
  003b7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  003be	eb 07		 jmp	 SHORT $LN13@operator
$LN23@operator:
  003c0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
$LN13@operator:
; Line 210
  003c7	8b f4		 mov	 esi, esp
  003c9	6a 00		 push	 0
  003cb	8b 45 e4	 mov	 eax, DWORD PTR __State$[ebp]
  003ce	50		 push	 eax
  003cf	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  003d2	8b 11		 mov	 edx, DWORD PTR [ecx]
  003d4	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  003d7	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  003da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
  003e0	3b f4		 cmp	 esi, esp
  003e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 211
  003e7	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  003ea	89 85 f0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  003f0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  003f7	8d 4d bc	 lea	 ecx, DWORD PTR __Ok$[ebp]
  003fa	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  003ff	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
; Line 212
  00405	52		 push	 edx
  00406	8b cd		 mov	 ecx, ebp
  00408	50		 push	 eax
  00409	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN29@operator
  0040f	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00414	58		 pop	 eax
  00415	5a		 pop	 edx
  00416	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00419	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00420	59		 pop	 ecx
  00421	5f		 pop	 edi
  00422	5e		 pop	 esi
  00423	5b		 pop	 ebx
  00424	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00427	33 cd		 xor	 ecx, ebp
  00429	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0042e	81 c4 58 01 00
	00		 add	 esp, 344		; 00000158H
  00434	3b ec		 cmp	 ebp, esp
  00436	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0043b	8b e5		 mov	 esp, ebp
  0043d	5d		 pop	 ebp
  0043e	c3		 ret	 0
  0043f	90		 npad	 1
$LN29@operator:
  00440	01 00 00 00	 DD	 1
  00444	00 00 00 00	 DD	 $LN28@operator
$LN28@operator:
  00448	bc ff ff ff	 DD	 -68			; ffffffbcH
  0044c	08 00 00 00	 DD	 8
  00450	00 00 00 00	 DD	 $LN26@operator
$LN26@operator:
  00454	5f		 DB	 95			; 0000005fH
  00455	4f		 DB	 79			; 0000004fH
  00456	6b		 DB	 107			; 0000006bH
  00457	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2:
  00000	8d 4d bc	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a a4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-348]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv135 = -356						; size = 8
tv342 = -348						; size = 8
tv290 = -344						; size = 4
tv287 = -344						; size = 8
tv285 = -344						; size = 4
tv328 = -340						; size = 8
tv289 = -340						; size = 4
tv284 = -340						; size = 4
tv286 = -336						; size = 4
tv137 = -336						; size = 4
tv288 = -333						; size = 1
tv283 = -333						; size = 1
$T2 = -328						; size = 4
$T3 = -316						; size = 4
$T4 = -304						; size = 4
$T5 = -292						; size = 4
$T6 = -280						; size = 4
__Ok$ = -76						; size = 8
__Pad$ = -60						; size = 8
__Count$ = -44						; size = 8
__State$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 787
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 54 01 00
	00		 sub	 esp, 340		; 00000154H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d bd 9c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-356]
  00021	b9 55 00 00 00	 mov	 ecx, 85			; 00000055H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00037	50		 push	 eax
  00038	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00041	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 790
  00044	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR __State$[ebp], 0
; Line 791
  0004b	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SAIPBD@Z ; std::char_traits<char>::length
  00054	83 c4 04	 add	 esp, 4
  00057	33 c9		 xor	 ecx, ecx
  00059	89 45 d4	 mov	 DWORD PTR __Count$[ebp], eax
  0005c	89 4d d8	 mov	 DWORD PTR __Count$[ebp+4], ecx
; Line 793
  0005f	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00062	8b 08		 mov	 ecx, DWORD PTR [eax]
  00064	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00067	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0006a	8b f4		 mov	 esi, esp
  0006c	8b ca		 mov	 ecx, edx
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  00074	3b f4		 cmp	 esi, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	89 85 ac fe ff
	ff		 mov	 DWORD PTR tv328[ebp], eax
  00081	89 95 b0 fe ff
	ff		 mov	 DWORD PTR tv328[ebp+4], edx
  00087	83 bd b0 fe ff
	ff 00		 cmp	 DWORD PTR tv328[ebp+4], 0
  0008e	7c 79		 jl	 SHORT $LN17@operator
  00090	7f 09		 jg	 SHORT $LN24@operator
  00092	83 bd ac fe ff
	ff 00		 cmp	 DWORD PTR tv328[ebp], 0
  00099	76 6e		 jbe	 SHORT $LN17@operator
$LN24@operator:
  0009b	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0009e	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a0	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000a3	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  000a6	8b f4		 mov	 esi, esp
  000a8	8b ca		 mov	 ecx, edx
  000aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  000b0	3b f4		 cmp	 esi, esp
  000b2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b7	89 85 a4 fe ff
	ff		 mov	 DWORD PTR tv342[ebp], eax
  000bd	89 95 a8 fe ff
	ff		 mov	 DWORD PTR tv342[ebp+4], edx
  000c3	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR tv342[ebp+4]
  000c9	3b 45 d8	 cmp	 eax, DWORD PTR __Count$[ebp+4]
  000cc	7c 3b		 jl	 SHORT $LN17@operator
  000ce	7f 0b		 jg	 SHORT $LN25@operator
  000d0	8b 8d a4 fe ff
	ff		 mov	 ecx, DWORD PTR tv342[ebp]
  000d6	3b 4d d4	 cmp	 ecx, DWORD PTR __Count$[ebp]
  000d9	76 2e		 jbe	 SHORT $LN17@operator
$LN25@operator:
  000db	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  000de	8b 02		 mov	 eax, DWORD PTR [edx]
  000e0	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  000e3	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  000e6	8b f4		 mov	 esi, esp
  000e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
  000ee	3b f4		 cmp	 esi, esp
  000f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f5	2b 45 d4	 sub	 eax, DWORD PTR __Count$[ebp]
  000f8	1b 55 d8	 sbb	 edx, DWORD PTR __Count$[ebp+4]
  000fb	89 85 9c fe ff
	ff		 mov	 DWORD PTR tv135[ebp], eax
  00101	89 95 a0 fe ff
	ff		 mov	 DWORD PTR tv135[ebp+4], edx
  00107	eb 0c		 jmp	 SHORT $LN18@operator
$LN17@operator:
  00109	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0010d	66 0f 13 85 9c
	fe ff ff	 movlpd	 QWORD PTR tv135[ebp], xmm0
$LN18@operator:
  00115	8b 8d 9c fe ff
	ff		 mov	 ecx, DWORD PTR tv135[ebp]
  0011b	89 4d c4	 mov	 DWORD PTR __Pad$[ebp], ecx
  0011e	8b 95 a0 fe ff
	ff		 mov	 edx, DWORD PTR tv135[ebp+4]
  00124	89 55 c8	 mov	 DWORD PTR __Pad$[ebp+4], edx
; Line 794
  00127	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0012a	50		 push	 eax
  0012b	8d 4d b4	 lea	 ecx, DWORD PTR __Ok$[ebp]
  0012e	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  00133	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 796
  0013a	8d 4d b4	 lea	 ecx, DWORD PTR __Ok$[ebp]
  0013d	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00142	0f b6 c0	 movzx	 eax, al
  00145	85 c0		 test	 eax, eax
  00147	75 0e		 jne	 SHORT $LN14@operator
; Line 797
  00149	8b 45 e4	 mov	 eax, DWORD PTR __State$[ebp]
  0014c	83 c8 04	 or	 eax, 4
  0014f	89 45 e4	 mov	 DWORD PTR __State$[ebp], eax
; Line 798
  00152	e9 ba 02 00 00	 jmp	 $LN13@operator
$LN14@operator:
; Line 800
  00157	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
; Line 801
  0015b	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0015e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00160	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00163	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00166	8b f4		 mov	 esi, esp
  00168	8b ca		 mov	 ecx, edx
  0016a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
  00170	3b f4		 cmp	 esi, esp
  00172	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00177	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv137[ebp], eax
  0017d	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR tv137[ebp]
  00183	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  00188	83 f8 40	 cmp	 eax, 64			; 00000040H
  0018b	0f 84 d5 00 00
	00		 je	 $LN11@operator
; Line 802
  00191	eb 12		 jmp	 SHORT $LN10@operator
$LN9@operator:
  00193	8b 45 c4	 mov	 eax, DWORD PTR __Pad$[ebp]
  00196	83 e8 01	 sub	 eax, 1
  00199	8b 4d c8	 mov	 ecx, DWORD PTR __Pad$[ebp+4]
  0019c	83 d9 00	 sbb	 ecx, 0
  0019f	89 45 c4	 mov	 DWORD PTR __Pad$[ebp], eax
  001a2	89 4d c8	 mov	 DWORD PTR __Pad$[ebp+4], ecx
$LN10@operator:
  001a5	83 7d c8 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  001a9	0f 8c b7 00 00
	00		 jl	 $LN11@operator
  001af	7f 0a		 jg	 SHORT $LN26@operator
  001b1	83 7d c4 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  001b5	0f 86 ab 00 00
	00		 jbe	 $LN11@operator
$LN26@operator:
; Line 804
  001bb	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  001be	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c0	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  001c3	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  001c6	8b f4		 mov	 esi, esp
  001c8	8b ca		 mov	 ecx, edx
  001ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
  001d0	3b f4		 cmp	 esi, esp
  001d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001d7	88 85 b3 fe ff
	ff		 mov	 BYTE PTR tv283[ebp], al
  001dd	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  001e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e2	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  001e5	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  001e8	8b f4		 mov	 esi, esp
  001ea	8b ca		 mov	 ecx, edx
  001ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  001f2	3b f4		 cmp	 esi, esp
  001f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f9	89 85 ac fe ff
	ff		 mov	 DWORD PTR tv284[ebp], eax
  001ff	8b f4		 mov	 esi, esp
  00201	0f b6 85 b3 fe
	ff ff		 movzx	 eax, BYTE PTR tv283[ebp]
  00208	50		 push	 eax
  00209	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR tv284[ebp]
  0020f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
  00215	3b f4		 cmp	 esi, esp
  00217	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0021c	89 85 a8 fe ff
	ff		 mov	 DWORD PTR tv285[ebp], eax
  00222	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR tv285[ebp]
  00228	89 8d b8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  0022e	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00233	89 85 c4 fe ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00239	8d 95 b8 fe ff
	ff		 lea	 edx, DWORD PTR $T2[ebp]
  0023f	52		 push	 edx
  00240	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00246	50		 push	 eax
  00247	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  0024c	83 c4 08	 add	 esp, 8
  0024f	0f b6 c8	 movzx	 ecx, al
  00252	85 c9		 test	 ecx, ecx
  00254	74 0b		 je	 SHORT $LN7@operator
; Line 806
  00256	8b 45 e4	 mov	 eax, DWORD PTR __State$[ebp]
  00259	83 c8 04	 or	 eax, 4
  0025c	89 45 e4	 mov	 DWORD PTR __State$[ebp], eax
; Line 807
  0025f	eb 05		 jmp	 SHORT $LN11@operator
$LN7@operator:
; Line 810
  00261	e9 2d ff ff ff	 jmp	 $LN9@operator
$LN11@operator:
; Line 811
  00266	83 7d e4 00	 cmp	 DWORD PTR __State$[ebp], 0
  0026a	75 6e		 jne	 SHORT $LN6@operator
  0026c	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  0026f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00271	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00274	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00277	8b f4		 mov	 esi, esp
  00279	8b ca		 mov	 ecx, edx
  0027b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00281	3b f4		 cmp	 esi, esp
  00283	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00288	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv286[ebp], eax
  0028e	8b f4		 mov	 esi, esp
  00290	8b 45 d8	 mov	 eax, DWORD PTR __Count$[ebp+4]
  00293	50		 push	 eax
  00294	8b 4d d4	 mov	 ecx, DWORD PTR __Count$[ebp]
  00297	51		 push	 ecx
  00298	8b 55 0c	 mov	 edx, DWORD PTR __Val$[ebp]
  0029b	52		 push	 edx
  0029c	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR tv286[ebp]
  002a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
  002a8	3b f4		 cmp	 esi, esp
  002aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002af	89 85 a8 fe ff
	ff		 mov	 DWORD PTR tv287[ebp], eax
  002b5	89 95 ac fe ff
	ff		 mov	 DWORD PTR tv287[ebp+4], edx
  002bb	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR tv287[ebp]
  002c1	3b 45 d4	 cmp	 eax, DWORD PTR __Count$[ebp]
  002c4	75 0b		 jne	 SHORT $LN27@operator
  002c6	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR tv287[ebp+4]
  002cc	3b 4d d8	 cmp	 ecx, DWORD PTR __Count$[ebp+4]
  002cf	74 09		 je	 SHORT $LN6@operator
$LN27@operator:
; Line 812
  002d1	8b 45 e4	 mov	 eax, DWORD PTR __State$[ebp]
  002d4	83 c8 04	 or	 eax, 4
  002d7	89 45 e4	 mov	 DWORD PTR __State$[ebp], eax
$LN6@operator:
; Line 814
  002da	83 7d e4 00	 cmp	 DWORD PTR __State$[ebp], 0
  002de	0f 85 d5 00 00
	00		 jne	 $LN5@operator
; Line 815
  002e4	eb 12		 jmp	 SHORT $LN4@operator
$LN3@operator:
  002e6	8b 45 c4	 mov	 eax, DWORD PTR __Pad$[ebp]
  002e9	83 e8 01	 sub	 eax, 1
  002ec	8b 4d c8	 mov	 ecx, DWORD PTR __Pad$[ebp+4]
  002ef	83 d9 00	 sbb	 ecx, 0
  002f2	89 45 c4	 mov	 DWORD PTR __Pad$[ebp], eax
  002f5	89 4d c8	 mov	 DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
  002f8	83 7d c8 00	 cmp	 DWORD PTR __Pad$[ebp+4], 0
  002fc	0f 8c b7 00 00
	00		 jl	 $LN5@operator
  00302	7f 0a		 jg	 SHORT $LN28@operator
  00304	83 7d c4 00	 cmp	 DWORD PTR __Pad$[ebp], 0
  00308	0f 86 ab 00 00
	00		 jbe	 $LN5@operator
$LN28@operator:
; Line 817
  0030e	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00311	8b 08		 mov	 ecx, DWORD PTR [eax]
  00313	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00316	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00319	8b f4		 mov	 esi, esp
  0031b	8b ca		 mov	 ecx, edx
  0031d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
  00323	3b f4		 cmp	 esi, esp
  00325	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0032a	88 85 b3 fe ff
	ff		 mov	 BYTE PTR tv288[ebp], al
  00330	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00333	8b 08		 mov	 ecx, DWORD PTR [eax]
  00335	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  00338	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  0033b	8b f4		 mov	 esi, esp
  0033d	8b ca		 mov	 ecx, edx
  0033f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00345	3b f4		 cmp	 esi, esp
  00347	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0034c	89 85 ac fe ff
	ff		 mov	 DWORD PTR tv289[ebp], eax
  00352	8b f4		 mov	 esi, esp
  00354	0f b6 85 b3 fe
	ff ff		 movzx	 eax, BYTE PTR tv288[ebp]
  0035b	50		 push	 eax
  0035c	8b 8d ac fe ff
	ff		 mov	 ecx, DWORD PTR tv289[ebp]
  00362	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
  00368	3b f4		 cmp	 esi, esp
  0036a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036f	89 85 a8 fe ff
	ff		 mov	 DWORD PTR tv290[ebp], eax
  00375	8b 8d a8 fe ff
	ff		 mov	 ecx, DWORD PTR tv290[ebp]
  0037b	89 8d d0 fe ff
	ff		 mov	 DWORD PTR $T4[ebp], ecx
  00381	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00386	89 85 dc fe ff
	ff		 mov	 DWORD PTR $T5[ebp], eax
  0038c	8d 95 d0 fe ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  00392	52		 push	 edx
  00393	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  00399	50		 push	 eax
  0039a	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  0039f	83 c4 08	 add	 esp, 8
  003a2	0f b6 c8	 movzx	 ecx, al
  003a5	85 c9		 test	 ecx, ecx
  003a7	74 0b		 je	 SHORT $LN1@operator
; Line 819
  003a9	8b 45 e4	 mov	 eax, DWORD PTR __State$[ebp]
  003ac	83 c8 04	 or	 eax, 4
  003af	89 45 e4	 mov	 DWORD PTR __State$[ebp], eax
; Line 820
  003b2	eb 05		 jmp	 SHORT $LN5@operator
$LN1@operator:
; Line 821
  003b4	e9 2d ff ff ff	 jmp	 $LN3@operator
$LN5@operator:
; Line 822
  003b9	8b f4		 mov	 esi, esp
  003bb	6a 00		 push	 0
  003bd	6a 00		 push	 0
  003bf	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  003c2	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c4	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  003c7	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  003ca	8b ca		 mov	 ecx, edx
  003cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
  003d2	3b f4		 cmp	 esi, esp
  003d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003d9	eb 26		 jmp	 SHORT $LN19@operator
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:
; Line 823
  003db	8b f4		 mov	 esi, esp
  003dd	6a 01		 push	 1
  003df	6a 04		 push	 4
  003e1	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  003e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  003e6	8b 55 08	 mov	 edx, DWORD PTR __Ostr$[ebp]
  003e9	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  003ec	8b ca		 mov	 ecx, edx
  003ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
  003f4	3b f4		 cmp	 esi, esp
  003f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003fb	b8 00 00 00 00	 mov	 eax, $LN23@operator
  00400	c3		 ret	 0
$LN19@operator:
  00401	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00408	eb 07		 jmp	 SHORT $LN13@operator
$LN23@operator:
  0040a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
$LN13@operator:
; Line 826
  00411	8b f4		 mov	 esi, esp
  00413	6a 00		 push	 0
  00415	8b 45 e4	 mov	 eax, DWORD PTR __State$[ebp]
  00418	50		 push	 eax
  00419	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  0041c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0041e	8b 4d 08	 mov	 ecx, DWORD PTR __Ostr$[ebp]
  00421	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  00424	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
  0042a	3b f4		 cmp	 esi, esp
  0042c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 827
  00431	8b 45 08	 mov	 eax, DWORD PTR __Ostr$[ebp]
  00434	89 85 e8 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  0043a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00441	8d 4d b4	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00444	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00449	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
; Line 828
  0044f	52		 push	 edx
  00450	8b cd		 mov	 ecx, ebp
  00452	50		 push	 eax
  00453	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN32@operator
  00459	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0045e	58		 pop	 eax
  0045f	5a		 pop	 edx
  00460	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00463	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0046a	59		 pop	 ecx
  0046b	5f		 pop	 edi
  0046c	5e		 pop	 esi
  0046d	5b		 pop	 ebx
  0046e	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00471	33 cd		 xor	 ecx, ebp
  00473	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00478	81 c4 64 01 00
	00		 add	 esp, 356		; 00000164H
  0047e	3b ec		 cmp	 ebp, esp
  00480	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00485	8b e5		 mov	 esp, ebp
  00487	5d		 pop	 ebp
  00488	c3		 ret	 0
  00489	8d 49 00	 npad	 3
$LN32@operator:
  0048c	01 00 00 00	 DD	 1
  00490	00 00 00 00	 DD	 $LN31@operator
$LN31@operator:
  00494	b4 ff ff ff	 DD	 -76			; ffffffb4H
  00498	08 00 00 00	 DD	 8
  0049c	00 00 00 00	 DD	 $LN29@operator
$LN29@operator:
  004a0	5f		 DB	 95			; 0000005fH
  004a1	4f		 DB	 79			; 0000004fH
  004a2	6b		 DB	 107			; 0000006bH
  004a3	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
  00000	8d 4d b4	 lea	 ecx, DWORD PTR __Ok$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 98 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-360]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 68	 add	 ecx, 104		; 00000068H
  00029	e8 00 00 00 00	 call	 ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 68	 add	 ecx, 104		; 00000068H
  00034	8b f4		 mov	 esi, esp
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 e9 68	 sub	 ecx, 104		; 00000068H
  00029	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  0002e	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00031	83 e0 01	 and	 eax, 1
  00034	74 0f		 je	 SHORT $LN1@scalar
  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	83 e8 68	 sub	 eax, 104		; 00000068H
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00042	83 c4 04	 add	 esp, 4
$LN1@scalar:
  00045	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	83 e8 68	 sub	 eax, 104		; 00000068H
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00026	50		 push	 eax
  00027	6a 00		 push	 0
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z
_TEXT	SEGMENT
__State$ = -20						; size = 4
_this$ = -8						; size = 4
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 354
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 355
  00023	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __State$[ebp], 0
; Line 356
  0002a	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  0002d	83 e0 01	 and	 eax, 1
  00030	75 09		 jne	 SHORT $LN4@Getstate
; Line 357
  00032	8b 45 ec	 mov	 eax, DWORD PTR __State$[ebp]
  00035	83 c8 04	 or	 eax, 4
  00038	89 45 ec	 mov	 DWORD PTR __State$[ebp], eax
$LN4@Getstate:
; Line 358
  0003b	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  0003e	83 e0 02	 and	 eax, 2
  00041	75 09		 jne	 SHORT $LN3@Getstate
; Line 359
  00043	8b 45 ec	 mov	 eax, DWORD PTR __State$[ebp]
  00046	83 c8 02	 or	 eax, 2
  00049	89 45 ec	 mov	 DWORD PTR __State$[ebp], eax
$LN3@Getstate:
; Line 360
  0004c	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  0004f	83 e0 08	 and	 eax, 8
  00052	74 09		 je	 SHORT $LN2@Getstate
; Line 361
  00054	8b 45 ec	 mov	 eax, DWORD PTR __State$[ebp]
  00057	83 c8 08	 or	 eax, 8
  0005a	89 45 ec	 mov	 DWORD PTR __State$[ebp], eax
$LN2@Getstate:
; Line 362
  0005d	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  00060	83 e0 04	 and	 eax, 4
  00063	74 09		 je	 SHORT $LN1@Getstate
; Line 363
  00065	8b 45 ec	 mov	 eax, DWORD PTR __State$[ebp]
  00068	83 c8 10	 or	 eax, 16			; 00000010H
  0006b	89 45 ec	 mov	 DWORD PTR __State$[ebp], eax
$LN1@Getstate:
; Line 364
  0006e	8b 45 ec	 mov	 eax, DWORD PTR __State$[ebp]
; Line 365
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
_TEXT	SEGMENT
tv88 = -208						; size = 4
_this$ = -8						; size = 4
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 337
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 338
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00029	83 e1 01	 and	 ecx, 1
  0002c	0f 84 81 00 00
	00		 je	 $LN1@Tidy
; Line 341
  00032	8b f4		 mov	 esi, esp
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0003d	3b f4		 cmp	 esi, esp
  0003f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00044	85 c0		 test	 eax, eax
  00046	74 1a		 je	 SHORT $LN4@Tidy
  00048	8b f4		 mov	 esi, esp
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00053	3b f4		 cmp	 esi, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv88[ebp], eax
  00060	eb 18		 jmp	 SHORT $LN5@Tidy
$LN4@Tidy:
  00062	8b f4		 mov	 esi, esp
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0006d	3b f4		 cmp	 esi, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv88[ebp], eax
$LN5@Tidy:
  0007a	8b f4		 mov	 esi, esp
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv88[ebp]
  00092	2b c8		 sub	 ecx, eax
  00094	51		 push	 ecx
  00095	8b f4		 mov	 esi, esp
  00097	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000a0	3b f4		 cmp	 esi, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a7	50		 push	 eax
  000a8	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	83 c1 40	 add	 ecx, 64			; 00000040H
  000ae	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@Tidy:
; Line 342
  000b3	8b f4		 mov	 esi, esp
  000b5	6a 00		 push	 0
  000b7	6a 00		 push	 0
  000b9	6a 00		 push	 0
  000bb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  000c4	3b f4		 cmp	 esi, esp
  000c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 343
  000cb	8b f4		 mov	 esi, esp
  000cd	6a 00		 push	 0
  000cf	6a 00		 push	 0
  000d1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
  000da	3b f4		 cmp	 esi, esp
  000dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 344
  000e1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
; Line 345
  000eb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ee	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000f1	83 e1 fe	 and	 ecx, -2			; fffffffeH
  000f4	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000f7	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
; Line 346
  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi
  000fc	5b		 pop	 ebx
  000fd	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00103	3b ec		 cmp	 ebp, esp
  00105	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c3		 ret	 0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z
_TEXT	SEGMENT
tv137 = -220						; size = 4
__Pnew$1 = -20						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 310
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 311
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
; Line 312
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 4d 10	 mov	 ecx, DWORD PTR __State$[ebp]
  00033	89 48 3c	 mov	 DWORD PTR [eax+60], ecx
; Line 315
  00036	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  0003a	0f 84 02 01 00
	00		 je	 $LN5@Init
  00040	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00046	83 e1 06	 and	 ecx, 6
  00049	83 f9 06	 cmp	 ecx, 6
  0004c	0f 84 f0 00 00
	00		 je	 $LN5@Init
; Line 317
  00052	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00055	50		 push	 eax
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	83 c1 40	 add	 ecx, 64			; 00000040H
  0005c	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
  00061	89 45 ec	 mov	 DWORD PTR __Pnew$1[ebp], eax
; Line 318
  00064	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00067	50		 push	 eax
  00068	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0006b	51		 push	 ecx
  0006c	8b 55 ec	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  0006f	52		 push	 edx
  00070	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  00075	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 319
  00078	8b 45 ec	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  0007b	03 45 0c	 add	 eax, DWORD PTR __Count$[ebp]
  0007e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; Line 321
  00084	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00087	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0008a	83 e1 04	 and	 ecx, 4
  0008d	75 21		 jne	 SHORT $LN3@Init
; Line 323
  0008f	8b 45 ec	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  00092	03 45 0c	 add	 eax, DWORD PTR __Count$[ebp]
  00095	8b f4		 mov	 esi, esp
  00097	50		 push	 eax
  00098	8b 4d ec	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  0009b	51		 push	 ecx
  0009c	8b 55 ec	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  0009f	52		 push	 edx
  000a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@Init:
; Line 324
  000b0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b3	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000b6	83 e1 02	 and	 ecx, 2
  000b9	75 78		 jne	 SHORT $LN2@Init
; Line 328
  000bb	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000be	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000c1	83 e1 18	 and	 ecx, 24			; 00000018H
  000c4	74 0e		 je	 SHORT $LN7@Init
  000c6	8b 55 ec	 mov	 edx, DWORD PTR __Pnew$1[ebp]
  000c9	03 55 0c	 add	 edx, DWORD PTR __Count$[ebp]
  000cc	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv137[ebp], edx
  000d2	eb 09		 jmp	 SHORT $LN8@Init
$LN7@Init:
  000d4	8b 45 ec	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  000d7	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv137[ebp], eax
$LN8@Init:
  000dd	8b 4d ec	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  000e0	03 4d 0c	 add	 ecx, DWORD PTR __Count$[ebp]
  000e3	8b f4		 mov	 esi, esp
  000e5	51		 push	 ecx
  000e6	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR tv137[ebp]
  000ec	52		 push	 edx
  000ed	8b 45 ec	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  000f0	50		 push	 eax
  000f1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  000fa	3b f4		 cmp	 esi, esp
  000fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 329
  00101	8b f4		 mov	 esi, esp
  00103	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0010c	3b f4		 cmp	 esi, esp
  0010e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00113	85 c0		 test	 eax, eax
  00115	75 1c		 jne	 SHORT $LN2@Init
; Line 330
  00117	8b f4		 mov	 esi, esp
  00119	8b 45 ec	 mov	 eax, DWORD PTR __Pnew$1[ebp]
  0011c	50		 push	 eax
  0011d	6a 00		 push	 0
  0011f	8b 4d ec	 mov	 ecx, DWORD PTR __Pnew$1[ebp]
  00122	51		 push	 ecx
  00123	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00126	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  0012c	3b f4		 cmp	 esi, esp
  0012e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Init:
; Line 332
  00133	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00136	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00139	83 c9 01	 or	 ecx, 1
  0013c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0013f	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
$LN5@Init:
; Line 334
  00142	5f		 pop	 edi
  00143	5e		 pop	 esi
  00144	5b		 pop	 ebx
  00145	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0014b	3b ec		 cmp	 ebp, esp
  0014d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00152	8b e5		 mov	 esp, ebp
  00154	5d		 pop	 ebp
  00155	c2 0c 00	 ret	 12			; 0000000cH
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
tv342 = -228						; size = 8
tv282 = -228						; size = 8
tv259 = -224						; size = 4
__Off$ = -24						; size = 8
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 276
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 277
  00023	8d 4d 0c	 lea	 ecx, DWORD PTR __Ptr$[ebp]
  00026	e8 00 00 00 00	 call	 ??B?$fpos@H@std@@QBE_JXZ ; std::fpos<int>::operator __int64
  0002b	89 45 e8	 mov	 DWORD PTR __Off$[ebp], eax
  0002e	89 55 ec	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 278
  00031	8b f4		 mov	 esi, esp
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	85 c0		 test	 eax, eax
  00045	74 32		 je	 SHORT $LN12@seekpos
  00047	8b f4		 mov	 esi, esp
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  0005f	73 18		 jae	 SHORT $LN12@seekpos
; Line 279
  00061	8b f4		 mov	 esi, esp
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN12@seekpos:
; Line 281
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  0007e	89 85 20 ff ff
	ff		 mov	 DWORD PTR tv259[ebp], eax
  00084	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR tv259[ebp]
  0008a	8b 55 e8	 mov	 edx, DWORD PTR __Off$[ebp]
  0008d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0008f	75 13		 jne	 SHORT $LN11@seekpos
  00091	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR tv259[ebp]
  00097	8b 4d ec	 mov	 ecx, DWORD PTR __Off$[ebp+4]
  0009a	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0009d	75 05		 jne	 SHORT $LN11@seekpos
  0009f	e9 2e 02 00 00	 jmp	 $LN10@seekpos
$LN11@seekpos:
; Line 283
  000a4	8b 45 24	 mov	 eax, DWORD PTR __Mode$[ebp]
  000a7	83 e0 01	 and	 eax, 1
  000aa	0f 84 3d 01 00
	00		 je	 $LN9@seekpos
  000b0	8b f4		 mov	 esi, esp
  000b2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000bb	3b f4		 cmp	 esi, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c2	85 c0		 test	 eax, eax
  000c4	0f 84 23 01 00
	00		 je	 $LN9@seekpos
; Line 285
  000ca	83 7d ec 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  000ce	0f 8c 04 01 00
	00		 jl	 $LN8@seekpos
  000d4	7f 0a		 jg	 SHORT $LN15@seekpos
  000d6	83 7d e8 00	 cmp	 DWORD PTR __Off$[ebp], 0
  000da	0f 82 f8 00 00
	00		 jb	 $LN8@seekpos
$LN15@seekpos:
  000e0	8b f4		 mov	 esi, esp
  000e2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000eb	3b f4		 cmp	 esi, esp
  000ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f5	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  000f8	2b d0		 sub	 edx, eax
  000fa	8b c2		 mov	 eax, edx
  000fc	99		 cdq
  000fd	89 85 1c ff ff
	ff		 mov	 DWORD PTR tv282[ebp], eax
  00103	89 95 20 ff ff
	ff		 mov	 DWORD PTR tv282[ebp+4], edx
  00109	8b 45 ec	 mov	 eax, DWORD PTR __Off$[ebp+4]
  0010c	3b 85 20 ff ff
	ff		 cmp	 eax, DWORD PTR tv282[ebp+4]
  00112	0f 8f c0 00 00
	00		 jg	 $LN8@seekpos
  00118	7c 0f		 jl	 SHORT $LN16@seekpos
  0011a	8b 4d e8	 mov	 ecx, DWORD PTR __Off$[ebp]
  0011d	3b 8d 1c ff ff
	ff		 cmp	 ecx, DWORD PTR tv282[ebp]
  00123	0f 87 af 00 00
	00		 ja	 $LN8@seekpos
$LN16@seekpos:
; Line 287
  00129	8b f4		 mov	 esi, esp
  0012b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00134	3b f4		 cmp	 esi, esp
  00136	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013b	8b f0		 mov	 esi, eax
  0013d	8b fc		 mov	 edi, esp
  0013f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00148	3b fc		 cmp	 edi, esp
  0014a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014f	2b f0		 sub	 esi, eax
  00151	8b c6		 mov	 eax, esi
  00153	99		 cdq
  00154	03 45 e8	 add	 eax, DWORD PTR __Off$[ebp]
  00157	13 55 ec	 adc	 edx, DWORD PTR __Off$[ebp+4]
  0015a	8b f4		 mov	 esi, esp
  0015c	50		 push	 eax
  0015d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  00166	3b f4		 cmp	 esi, esp
  00168	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 288
  0016d	8b 45 24	 mov	 eax, DWORD PTR __Mode$[ebp]
  00170	83 e0 02	 and	 eax, 2
  00173	74 61		 je	 SHORT $LN7@seekpos
  00175	8b f4		 mov	 esi, esp
  00177	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00180	3b f4		 cmp	 esi, esp
  00182	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00187	85 c0		 test	 eax, eax
  00189	74 4b		 je	 SHORT $LN7@seekpos
; Line 290
  0018b	8b f4		 mov	 esi, esp
  0018d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00190	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00196	3b f4		 cmp	 esi, esp
  00198	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019d	8b f4		 mov	 esi, esp
  0019f	50		 push	 eax
  001a0	8b fc		 mov	 edi, esp
  001a2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001ab	3b fc		 cmp	 edi, esp
  001ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001b2	50		 push	 eax
  001b3	8b fc		 mov	 edi, esp
  001b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001be	3b fc		 cmp	 edi, esp
  001c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c5	50		 push	 eax
  001c6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  001cf	3b f4		 cmp	 esi, esp
  001d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN7@seekpos:
; Line 292
  001d6	eb 10		 jmp	 SHORT $LN6@seekpos
$LN8@seekpos:
; Line 293
  001d8	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  001dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  001df	89 4d e8	 mov	 DWORD PTR __Off$[ebp], ecx
  001e2	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001e5	89 55 ec	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN6@seekpos:
  001e8	e9 e5 00 00 00	 jmp	 $LN10@seekpos
$LN9@seekpos:
; Line 295
  001ed	8b 45 24	 mov	 eax, DWORD PTR __Mode$[ebp]
  001f0	83 e0 02	 and	 eax, 2
  001f3	0f 84 c9 00 00
	00		 je	 $LN4@seekpos
  001f9	8b f4		 mov	 esi, esp
  001fb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00204	3b f4		 cmp	 esi, esp
  00206	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020b	85 c0		 test	 eax, eax
  0020d	0f 84 af 00 00
	00		 je	 $LN4@seekpos
; Line 297
  00213	83 7d ec 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  00217	0f 8c 93 00 00
	00		 jl	 $LN3@seekpos
  0021d	7f 0a		 jg	 SHORT $LN17@seekpos
  0021f	83 7d e8 00	 cmp	 DWORD PTR __Off$[ebp], 0
  00223	0f 82 87 00 00
	00		 jb	 $LN3@seekpos
$LN17@seekpos:
  00229	8b f4		 mov	 esi, esp
  0022b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0022e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00234	3b f4		 cmp	 esi, esp
  00236	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0023e	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00241	2b d0		 sub	 edx, eax
  00243	8b c2		 mov	 eax, edx
  00245	99		 cdq
  00246	89 85 1c ff ff
	ff		 mov	 DWORD PTR tv342[ebp], eax
  0024c	89 95 20 ff ff
	ff		 mov	 DWORD PTR tv342[ebp+4], edx
  00252	8b 45 ec	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00255	3b 85 20 ff ff
	ff		 cmp	 eax, DWORD PTR tv342[ebp+4]
  0025b	7f 53		 jg	 SHORT $LN3@seekpos
  0025d	7c 0b		 jl	 SHORT $LN18@seekpos
  0025f	8b 4d e8	 mov	 ecx, DWORD PTR __Off$[ebp]
  00262	3b 8d 1c ff ff
	ff		 cmp	 ecx, DWORD PTR tv342[ebp]
  00268	77 46		 ja	 SHORT $LN3@seekpos
$LN18@seekpos:
; Line 299
  0026a	8b f4		 mov	 esi, esp
  0026c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0026f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00275	3b f4		 cmp	 esi, esp
  00277	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0027c	8b f0		 mov	 esi, eax
  0027e	8b fc		 mov	 edi, esp
  00280	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00283	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00289	3b fc		 cmp	 edi, esp
  0028b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00290	2b f0		 sub	 esi, eax
  00292	8b c6		 mov	 eax, esi
  00294	99		 cdq
  00295	03 45 e8	 add	 eax, DWORD PTR __Off$[ebp]
  00298	13 55 ec	 adc	 edx, DWORD PTR __Off$[ebp+4]
  0029b	8b f4		 mov	 esi, esp
  0029d	50		 push	 eax
  0029e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  002a7	3b f4		 cmp	 esi, esp
  002a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 300
  002ae	eb 10		 jmp	 SHORT $LN2@seekpos
$LN3@seekpos:
; Line 301
  002b0	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  002b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b7	89 4d e8	 mov	 DWORD PTR __Off$[ebp], ecx
  002ba	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002bd	89 55 ec	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN2@seekpos:
; Line 303
  002c0	eb 10		 jmp	 SHORT $LN10@seekpos
$LN4@seekpos:
; Line 304
  002c2	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  002c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c9	89 4d e8	 mov	 DWORD PTR __Off$[ebp], ecx
  002cc	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002cf	89 55 ec	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN10@seekpos:
; Line 305
  002d2	8b 45 ec	 mov	 eax, DWORD PTR __Off$[ebp+4]
  002d5	50		 push	 eax
  002d6	8b 4d e8	 mov	 ecx, DWORD PTR __Off$[ebp]
  002d9	51		 push	 ecx
  002da	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  002dd	e8 00 00 00 00	 call	 ??0?$fpos@H@std@@QAE@_J@Z ; std::fpos<int>::fpos<int>
  002e2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 306
  002e5	5f		 pop	 edi
  002e6	5e		 pop	 esi
  002e7	5b		 pop	 ebx
  002e8	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  002ee	3b ec		 cmp	 ebp, esp
  002f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002f5	8b e5		 mov	 esp, ebp
  002f7	5d		 pop	 ebp
  002f8	c2 20 00	 ret	 32			; 00000020H
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
tv453 = -212						; size = 8
tv360 = -212						; size = 8
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
__Which$ = 24						; size = 4
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 227
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-212]
  00013	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 228
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	85 c0		 test	 eax, eax
  00037	74 32		 je	 SHORT $LN21@seekoff
  00039	8b f4		 mov	 esi, esp
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  00051	73 18		 jae	 SHORT $LN21@seekoff
; Line 229
  00053	8b f4		 mov	 esi, esp
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0005e	3b f4		 cmp	 esi, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN21@seekoff:
; Line 231
  0006b	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  0006e	83 e0 01	 and	 eax, 1
  00071	0f 84 cb 01 00
	00		 je	 $LN20@seekoff
  00077	8b f4		 mov	 esi, esp
  00079	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00082	3b f4		 cmp	 esi, esp
  00084	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00089	85 c0		 test	 eax, eax
  0008b	0f 84 b1 01 00
	00		 je	 $LN20@seekoff
; Line 233
  00091	83 7d 14 02	 cmp	 DWORD PTR __Way$[ebp], 2
  00095	75 2b		 jne	 SHORT $LN19@seekoff
; Line 234
  00097	8b f4		 mov	 esi, esp
  00099	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000a2	3b f4		 cmp	 esi, esp
  000a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ac	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  000af	2b d0		 sub	 edx, eax
  000b1	8b c2		 mov	 eax, edx
  000b3	99		 cdq
  000b4	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  000b7	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  000ba	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  000bd	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 235
  000c0	eb 5d		 jmp	 SHORT $LN18@seekoff
$LN19@seekoff:
; Line 236
  000c2	83 7d 14 01	 cmp	 DWORD PTR __Way$[ebp], 1
  000c6	75 41		 jne	 SHORT $LN17@seekoff
  000c8	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  000cb	83 e0 02	 and	 eax, 2
  000ce	75 39		 jne	 SHORT $LN17@seekoff
; Line 237
  000d0	8b f4		 mov	 esi, esp
  000d2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000db	3b f4		 cmp	 esi, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e2	8b f0		 mov	 esi, eax
  000e4	8b fc		 mov	 edi, esp
  000e6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000ef	3b fc		 cmp	 edi, esp
  000f1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f6	2b f0		 sub	 esi, eax
  000f8	8b c6		 mov	 eax, esi
  000fa	99		 cdq
  000fb	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  000fe	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  00101	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  00104	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 238
  00107	eb 16		 jmp	 SHORT $LN18@seekoff
$LN17@seekoff:
  00109	83 7d 14 00	 cmp	 DWORD PTR __Way$[ebp], 0
  0010d	74 10		 je	 SHORT $LN18@seekoff
; Line 239
  0010f	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00114	8b 08		 mov	 ecx, DWORD PTR [eax]
  00116	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  00119	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0011c	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN18@seekoff:
; Line 241
  0011f	83 7d 10 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  00123	0f 8c 04 01 00
	00		 jl	 $LN14@seekoff
  00129	7f 0a		 jg	 SHORT $LN24@seekoff
  0012b	83 7d 0c 00	 cmp	 DWORD PTR __Off$[ebp], 0
  0012f	0f 82 f8 00 00
	00		 jb	 $LN14@seekoff
$LN24@seekoff:
  00135	8b f4		 mov	 esi, esp
  00137	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00140	3b f4		 cmp	 esi, esp
  00142	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00147	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0014d	2b d0		 sub	 edx, eax
  0014f	8b c2		 mov	 eax, edx
  00151	99		 cdq
  00152	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv360[ebp], eax
  00158	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv360[ebp+4], edx
  0015e	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00161	3b 85 30 ff ff
	ff		 cmp	 eax, DWORD PTR tv360[ebp+4]
  00167	0f 8f c0 00 00
	00		 jg	 $LN14@seekoff
  0016d	7c 0f		 jl	 SHORT $LN25@seekoff
  0016f	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  00172	3b 8d 2c ff ff
	ff		 cmp	 ecx, DWORD PTR tv360[ebp]
  00178	0f 87 af 00 00
	00		 ja	 $LN14@seekoff
$LN25@seekoff:
; Line 243
  0017e	8b f4		 mov	 esi, esp
  00180	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00183	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00189	3b f4		 cmp	 esi, esp
  0018b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00190	8b f0		 mov	 esi, eax
  00192	8b fc		 mov	 edi, esp
  00194	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00197	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0019d	3b fc		 cmp	 edi, esp
  0019f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a4	2b f0		 sub	 esi, eax
  001a6	8b c6		 mov	 eax, esi
  001a8	99		 cdq
  001a9	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  001ac	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  001af	8b f4		 mov	 esi, esp
  001b1	50		 push	 eax
  001b2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  001bb	3b f4		 cmp	 esi, esp
  001bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 244
  001c2	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  001c5	83 e0 02	 and	 eax, 2
  001c8	74 61		 je	 SHORT $LN13@seekoff
  001ca	8b f4		 mov	 esi, esp
  001cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001d5	3b f4		 cmp	 esi, esp
  001d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001dc	85 c0		 test	 eax, eax
  001de	74 4b		 je	 SHORT $LN13@seekoff
; Line 246
  001e0	8b f4		 mov	 esi, esp
  001e2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  001eb	3b f4		 cmp	 esi, esp
  001ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f2	8b f4		 mov	 esi, esp
  001f4	50		 push	 eax
  001f5	8b fc		 mov	 edi, esp
  001f7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  001fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00200	3b fc		 cmp	 edi, esp
  00202	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00207	50		 push	 eax
  00208	8b fc		 mov	 edi, esp
  0020a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0020d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00213	3b fc		 cmp	 edi, esp
  00215	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0021a	50		 push	 eax
  0021b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0021e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00224	3b f4		 cmp	 esi, esp
  00226	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN13@seekoff:
; Line 248
  0022b	eb 10		 jmp	 SHORT $LN12@seekoff
$LN14@seekoff:
; Line 249
  0022d	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00232	8b 08		 mov	 ecx, DWORD PTR [eax]
  00234	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  00237	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0023a	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN12@seekoff:
  0023d	e9 73 01 00 00	 jmp	 $LN11@seekoff
$LN20@seekoff:
; Line 251
  00242	8b 45 18	 mov	 eax, DWORD PTR __Which$[ebp]
  00245	83 e0 02	 and	 eax, 2
  00248	0f 84 4f 01 00
	00		 je	 $LN10@seekoff
  0024e	8b f4		 mov	 esi, esp
  00250	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00253	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00259	3b f4		 cmp	 esi, esp
  0025b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00260	85 c0		 test	 eax, eax
  00262	0f 84 35 01 00
	00		 je	 $LN10@seekoff
; Line 253
  00268	83 7d 14 02	 cmp	 DWORD PTR __Way$[ebp], 2
  0026c	75 2b		 jne	 SHORT $LN9@seekoff
; Line 254
  0026e	8b f4		 mov	 esi, esp
  00270	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00273	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00279	3b f4		 cmp	 esi, esp
  0027b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00280	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00283	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00286	2b d0		 sub	 edx, eax
  00288	8b c2		 mov	 eax, edx
  0028a	99		 cdq
  0028b	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  0028e	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  00291	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  00294	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 255
  00297	eb 55		 jmp	 SHORT $LN8@seekoff
$LN9@seekoff:
  00299	83 7d 14 01	 cmp	 DWORD PTR __Way$[ebp], 1
  0029d	75 39		 jne	 SHORT $LN7@seekoff
; Line 256
  0029f	8b f4		 mov	 esi, esp
  002a1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  002aa	3b f4		 cmp	 esi, esp
  002ac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002b1	8b f0		 mov	 esi, eax
  002b3	8b fc		 mov	 edi, esp
  002b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  002be	3b fc		 cmp	 edi, esp
  002c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002c5	2b f0		 sub	 esi, eax
  002c7	8b c6		 mov	 eax, esi
  002c9	99		 cdq
  002ca	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  002cd	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  002d0	89 45 0c	 mov	 DWORD PTR __Off$[ebp], eax
  002d3	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
; Line 257
  002d6	eb 16		 jmp	 SHORT $LN8@seekoff
$LN7@seekoff:
  002d8	83 7d 14 00	 cmp	 DWORD PTR __Way$[ebp], 0
  002dc	74 10		 je	 SHORT $LN8@seekoff
; Line 258
  002de	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  002e3	8b 08		 mov	 ecx, DWORD PTR [eax]
  002e5	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  002e8	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002eb	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN8@seekoff:
; Line 260
  002ee	83 7d 10 00	 cmp	 DWORD PTR __Off$[ebp+4], 0
  002f2	0f 8c 93 00 00
	00		 jl	 $LN4@seekoff
  002f8	7f 0a		 jg	 SHORT $LN26@seekoff
  002fa	83 7d 0c 00	 cmp	 DWORD PTR __Off$[ebp], 0
  002fe	0f 82 87 00 00
	00		 jb	 $LN4@seekoff
$LN26@seekoff:
  00304	8b f4		 mov	 esi, esp
  00306	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00309	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0030f	3b f4		 cmp	 esi, esp
  00311	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00316	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00319	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0031c	2b d0		 sub	 edx, eax
  0031e	8b c2		 mov	 eax, edx
  00320	99		 cdq
  00321	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv453[ebp], eax
  00327	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv453[ebp+4], edx
  0032d	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp+4]
  00330	3b 85 30 ff ff
	ff		 cmp	 eax, DWORD PTR tv453[ebp+4]
  00336	7f 53		 jg	 SHORT $LN4@seekoff
  00338	7c 0b		 jl	 SHORT $LN27@seekoff
  0033a	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  0033d	3b 8d 2c ff ff
	ff		 cmp	 ecx, DWORD PTR tv453[ebp]
  00343	77 46		 ja	 SHORT $LN4@seekoff
$LN27@seekoff:
; Line 262
  00345	8b f4		 mov	 esi, esp
  00347	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0034a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00350	3b f4		 cmp	 esi, esp
  00352	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00357	8b f0		 mov	 esi, eax
  00359	8b fc		 mov	 edi, esp
  0035b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0035e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00364	3b fc		 cmp	 edi, esp
  00366	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036b	2b f0		 sub	 esi, eax
  0036d	8b c6		 mov	 eax, esi
  0036f	99		 cdq
  00370	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  00373	13 55 10	 adc	 edx, DWORD PTR __Off$[ebp+4]
  00376	8b f4		 mov	 esi, esp
  00378	50		 push	 eax
  00379	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0037c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  00382	3b f4		 cmp	 esi, esp
  00384	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 263
  00389	eb 10		 jmp	 SHORT $LN3@seekoff
$LN4@seekoff:
; Line 264
  0038b	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  00390	8b 08		 mov	 ecx, DWORD PTR [eax]
  00392	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  00395	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00398	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN3@seekoff:
  0039b	eb 18		 jmp	 SHORT $LN11@seekoff
$LN10@seekoff:
; Line 267
  0039d	8b 45 0c	 mov	 eax, DWORD PTR __Off$[ebp]
  003a0	0b 45 10	 or	 eax, DWORD PTR __Off$[ebp+4]
  003a3	74 10		 je	 SHORT $LN11@seekoff
; Line 270
  003a5	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
  003aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ac	89 4d 0c	 mov	 DWORD PTR __Off$[ebp], ecx
  003af	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  003b2	89 55 10	 mov	 DWORD PTR __Off$[ebp+4], edx
$LN11@seekoff:
; Line 271
  003b5	8b 45 10	 mov	 eax, DWORD PTR __Off$[ebp+4]
  003b8	50		 push	 eax
  003b9	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  003bc	51		 push	 ecx
  003bd	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  003c0	e8 00 00 00 00	 call	 ??0?$fpos@H@std@@QAE@_J@Z ; std::fpos<int>::fpos<int>
  003c5	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 272
  003c8	5f		 pop	 edi
  003c9	5e		 pop	 esi
  003ca	5b		 pop	 ebx
  003cb	81 c4 d4 00 00
	00		 add	 esp, 212		; 000000d4H
  003d1	3b ec		 cmp	 ebp, esp
  003d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003d8	8b e5		 mov	 esp, ebp
  003da	5d		 pop	 ebp
  003db	c2 14 00	 ret	 20			; 00000014H
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 207
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 208
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	85 c0		 test	 eax, eax
  00037	75 0f		 jne	 SHORT $LN8@underflow
; Line 209
  00039	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0003e	e9 54 01 00 00	 jmp	 $LN9@underflow
  00043	e9 4f 01 00 00	 jmp	 $LN9@underflow
$LN8@underflow:
; Line 210
  00048	8b f4		 mov	 esi, esp
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00053	3b f4		 cmp	 esi, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b f0		 mov	 esi, eax
  0005c	8b fc		 mov	 edi, esp
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00067	3b fc		 cmp	 edi, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	3b f0		 cmp	 esi, eax
  00070	73 25		 jae	 SHORT $LN6@underflow
; Line 211
  00072	8b f4		 mov	 esi, esp
  00074	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0007d	3b f4		 cmp	 esi, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  0008a	83 c4 04	 add	 esp, 4
  0008d	e9 05 01 00 00	 jmp	 $LN9@underflow
; Line 212
  00092	e9 00 01 00 00	 jmp	 $LN9@underflow
$LN6@underflow:
; Line 213
  00097	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009a	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0009d	83 e1 04	 and	 ecx, 4
  000a0	75 5a		 jne	 SHORT $LN3@underflow
  000a2	8b f4		 mov	 esi, esp
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000ad	3b f4		 cmp	 esi, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b4	85 c0		 test	 eax, eax
  000b6	74 44		 je	 SHORT $LN3@underflow
  000b8	8b f4		 mov	 esi, esp
  000ba	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000c3	3b f4		 cmp	 esi, esp
  000c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ca	8b f0		 mov	 esi, eax
  000cc	8b fc		 mov	 edi, esp
  000ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000d7	3b fc		 cmp	 edi, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000de	3b f0		 cmp	 esi, eax
  000e0	77 29		 ja	 SHORT $LN4@underflow
  000e2	8b f4		 mov	 esi, esp
  000e4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000ed	3b f4		 cmp	 esi, esp
  000ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f7	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  000fa	77 0f		 ja	 SHORT $LN4@underflow
$LN3@underflow:
; Line 214
  000fc	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00101	e9 91 00 00 00	 jmp	 $LN9@underflow
; Line 215
  00106	e9 8c 00 00 00	 jmp	 $LN9@underflow
$LN4@underflow:
; Line 217
  0010b	8b f4		 mov	 esi, esp
  0010d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00110	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00116	3b f4		 cmp	 esi, esp
  00118	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00120	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  00123	73 18		 jae	 SHORT $LN1@underflow
; Line 218
  00125	8b f4		 mov	 esi, esp
  00127	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00130	3b f4		 cmp	 esi, esp
  00132	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00137	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013a	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN1@underflow:
; Line 219
  0013d	8b f4		 mov	 esi, esp
  0013f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00142	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00145	51		 push	 ecx
  00146	8b fc		 mov	 edi, esp
  00148	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00151	3b fc		 cmp	 edi, esp
  00153	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00158	50		 push	 eax
  00159	8b fc		 mov	 edi, esp
  0015b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00164	3b fc		 cmp	 edi, esp
  00166	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016b	50		 push	 eax
  0016c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0016f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00175	3b f4		 cmp	 esi, esp
  00177	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 220
  0017c	8b f4		 mov	 esi, esp
  0017e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00181	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00187	3b f4		 cmp	 esi, esp
  00189	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 ?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
  00194	83 c4 04	 add	 esp, 4
$LN9@underflow:
; Line 222
  00197	5f		 pop	 edi
  00198	5e		 pop	 esi
  00199	5b		 pop	 ebx
  0019a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  001a0	3b ec		 cmp	 ebp, esp
  001a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a7	8b e5		 mov	 esp, ebp
  001a9	5d		 pop	 ebp
  001aa	c3		 ret	 0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
$T1 = -236						; size = 4
$T2 = -221						; size = 1
$T3 = -212						; size = 4
_this$ = -8						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 190
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 195
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	85 c0		 test	 eax, eax
  00037	0f 84 9f 00 00
	00		 je	 $LN3@pbackfail
  0003d	8b f4		 mov	 esi, esp
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b f0		 mov	 esi, eax
  00051	8b fc		 mov	 edi, esp
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0005c	3b fc		 cmp	 edi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	3b f0		 cmp	 esi, eax
  00065	76 75		 jbe	 SHORT $LN3@pbackfail
  00067	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0006c	89 85 14 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00072	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00075	50		 push	 eax
  00076	8d 8d 14 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0007c	51		 push	 ecx
  0007d	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00082	83 c4 08	 add	 esp, 8
  00085	0f b6 d0	 movzx	 edx, al
  00088	85 d2		 test	 edx, edx
  0008a	75 59		 jne	 SHORT $LN4@pbackfail
  0008c	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  00095	83 c4 04	 add	 esp, 4
  00098	88 85 23 ff ff
	ff		 mov	 BYTE PTR $T2[ebp], al
  0009e	8b f4		 mov	 esi, esp
  000a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000a9	3b f4		 cmp	 esi, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	b9 01 00 00 00	 mov	 ecx, 1
  000b5	6b d1 ff	 imul	 edx, ecx, -1
  000b8	03 c2		 add	 eax, edx
  000ba	50		 push	 eax
  000bb	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?eq@?$char_traits@D@std@@SA_NABD0@Z ; std::char_traits<char>::eq
  000c7	83 c4 08	 add	 esp, 8
  000ca	0f b6 c8	 movzx	 ecx, al
  000cd	85 c9		 test	 ecx, ecx
  000cf	75 14		 jne	 SHORT $LN4@pbackfail
  000d1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d4	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  000d7	83 e1 02	 and	 ecx, 2
  000da	74 09		 je	 SHORT $LN4@pbackfail
$LN3@pbackfail:
; Line 196
  000dc	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  000e1	eb 69		 jmp	 SHORT $LN5@pbackfail
; Line 197
  000e3	eb 67		 jmp	 SHORT $LN5@pbackfail
$LN4@pbackfail:
; Line 199
  000e5	8b f4		 mov	 esi, esp
  000e7	6a ff		 push	 -1
  000e9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 200
  000f9	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  000fe	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00104	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00107	50		 push	 eax
  00108	8d 8d 2c ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  0010e	51		 push	 ecx
  0010f	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00114	83 c4 08	 add	 esp, 8
  00117	0f b6 d0	 movzx	 edx, al
  0011a	85 d2		 test	 edx, edx
  0011c	75 22		 jne	 SHORT $LN1@pbackfail
; Line 201
  0011e	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00121	50		 push	 eax
  00122	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  00127	83 c4 04	 add	 esp, 4
  0012a	8a d8		 mov	 bl, al
  0012c	8b f4		 mov	 esi, esp
  0012e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00131	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00137	3b f4		 cmp	 esi, esp
  00139	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013e	88 18		 mov	 BYTE PTR [eax], bl
$LN1@pbackfail:
; Line 202
  00140	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00143	50		 push	 eax
  00144	e8 00 00 00 00	 call	 ?not_eof@?$char_traits@D@std@@SAHABH@Z ; std::char_traits<char>::not_eof
  00149	83 c4 04	 add	 esp, 4
$LN5@pbackfail:
; Line 204
  0014c	5f		 pop	 edi
  0014d	5e		 pop	 esi
  0014e	5b		 pop	 ebx
  0014f	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  00155	3b ec		 cmp	 ebp, esp
  00157	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c2 04 00	 ret	 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
tv199 = -280						; size = 4
tv195 = -280						; size = 4
$T1 = -272						; size = 4
__Oldptr$2 = -68					; size = 4
__Newptr$3 = -56					; size = 4
__Inc$4 = -44						; size = 4
__Newsize$5 = -32					; size = 4
__Oldsize$6 = -20					; size = 4
_this$ = -8						; size = 4
__Meta$ = 8						; size = 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 120
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 18 01 00
	00		 sub	 esp, 280		; 00000118H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd e8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-280]
  00013	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 121
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00029	83 e1 02	 and	 ecx, 2
  0002c	74 0c		 je	 SHORT $LN17@overflow
; Line 122
  0002e	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00033	e9 b9 03 00 00	 jmp	 $LN18@overflow
  00038	eb 36		 jmp	 SHORT $LN16@overflow
$LN17@overflow:
; Line 123
  0003a	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0003f	89 85 f0 fe ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00045	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00048	50		 push	 eax
  00049	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
  00055	83 c4 08	 add	 esp, 8
  00058	0f b6 d0	 movzx	 edx, al
  0005b	85 d2		 test	 edx, edx
  0005d	74 11		 je	 SHORT $LN16@overflow
; Line 124
  0005f	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?not_eof@?$char_traits@D@std@@SAHABH@Z ; std::char_traits<char>::not_eof
  00068	83 c4 04	 add	 esp, 4
  0006b	e9 81 03 00 00	 jmp	 $LN18@overflow
$LN16@overflow:
; Line 127
  00070	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00076	83 e1 08	 and	 ecx, 8
  00079	74 6f		 je	 SHORT $LN14@overflow
  0007b	8b f4		 mov	 esi, esp
  0007d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00086	3b f4		 cmp	 esi, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	85 c0		 test	 eax, eax
  0008f	74 59		 je	 SHORT $LN14@overflow
  00091	8b f4		 mov	 esi, esp
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0009c	3b f4		 cmp	 esi, esp
  0009e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	3b 41 38	 cmp	 eax, DWORD PTR [ecx+56]
  000a9	73 3f		 jae	 SHORT $LN14@overflow
; Line 128
  000ab	8b f4		 mov	 esi, esp
  000ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000b6	3b f4		 cmp	 esi, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b f4		 mov	 esi, esp
  000bf	50		 push	 eax
  000c0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c3	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000c6	51		 push	 ecx
  000c7	8b fc		 mov	 edi, esp
  000c9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000d2	3b fc		 cmp	 edi, esp
  000d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d9	50		 push	 eax
  000da	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  000e3	3b f4		 cmp	 esi, esp
  000e5	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN14@overflow:
; Line 131
  000ea	8b f4		 mov	 esi, esp
  000ec	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000f5	3b f4		 cmp	 esi, esp
  000f7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fc	85 c0		 test	 eax, eax
  000fe	74 59		 je	 SHORT $LN13@overflow
  00100	8b f4		 mov	 esi, esp
  00102	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00105	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0010b	3b f4		 cmp	 esi, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	8b f0		 mov	 esi, eax
  00114	8b fc		 mov	 edi, esp
  00116	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0011f	3b fc		 cmp	 edi, esp
  00121	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00126	3b f0		 cmp	 esi, eax
  00128	73 2f		 jae	 SHORT $LN13@overflow
; Line 133
  0012a	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  00133	83 c4 04	 add	 esp, 4
  00136	8a d8		 mov	 bl, al
  00138	8b f4		 mov	 esi, esp
  0013a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
  00143	3b f4		 cmp	 esi, esp
  00145	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0014a	88 18		 mov	 BYTE PTR [eax], bl
; Line 134
  0014c	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  0014f	e9 9d 02 00 00	 jmp	 $LN18@overflow
; Line 136
  00154	e9 98 02 00 00	 jmp	 $LN18@overflow
$LN13@overflow:
; Line 139
  00159	8b f4		 mov	 esi, esp
  0015b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0015e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00164	3b f4		 cmp	 esi, esp
  00166	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016b	85 c0		 test	 eax, eax
  0016d	75 0c		 jne	 SHORT $LN20@overflow
  0016f	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv195[ebp], 0
  00179	eb 2e		 jmp	 SHORT $LN21@overflow
$LN20@overflow:
  0017b	8b f4		 mov	 esi, esp
  0017d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00180	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00186	3b f4		 cmp	 esi, esp
  00188	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018d	8b f0		 mov	 esi, eax
  0018f	8b fc		 mov	 edi, esp
  00191	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0019a	3b fc		 cmp	 edi, esp
  0019c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a1	2b f0		 sub	 esi, eax
  001a3	89 b5 e8 fe ff
	ff		 mov	 DWORD PTR tv195[ebp], esi
$LN21@overflow:
  001a9	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR tv195[ebp]
  001af	89 45 ec	 mov	 DWORD PTR __Oldsize$6[ebp], eax
; Line 140
  001b2	8b 45 ec	 mov	 eax, DWORD PTR __Oldsize$6[ebp]
  001b5	89 45 e0	 mov	 DWORD PTR __Newsize$5[ebp], eax
; Line 142
  001b8	8b 45 e0	 mov	 eax, DWORD PTR __Newsize$5[ebp]
  001bb	d1 e8		 shr	 eax, 1
  001bd	83 f8 20	 cmp	 eax, 32			; 00000020H
  001c0	73 0c		 jae	 SHORT $LN22@overflow
  001c2	c7 85 e8 fe ff
	ff 20 00 00 00	 mov	 DWORD PTR tv199[ebp], 32 ; 00000020H
  001cc	eb 0b		 jmp	 SHORT $LN23@overflow
$LN22@overflow:
  001ce	8b 4d e0	 mov	 ecx, DWORD PTR __Newsize$5[ebp]
  001d1	d1 e9		 shr	 ecx, 1
  001d3	89 8d e8 fe ff
	ff		 mov	 DWORD PTR tv199[ebp], ecx
$LN23@overflow:
  001d9	8b 95 e8 fe ff
	ff		 mov	 edx, DWORD PTR tv199[ebp]
  001df	89 55 d4	 mov	 DWORD PTR __Inc$4[ebp], edx
$LN11@overflow:
; Line 144
  001e2	83 7d d4 00	 cmp	 DWORD PTR __Inc$4[ebp], 0
  001e6	76 17		 jbe	 SHORT $LN10@overflow
  001e8	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  001ed	2b 45 d4	 sub	 eax, DWORD PTR __Inc$4[ebp]
  001f0	3b 45 e0	 cmp	 eax, DWORD PTR __Newsize$5[ebp]
  001f3	73 0a		 jae	 SHORT $LN10@overflow
; Line 145
  001f5	8b 45 d4	 mov	 eax, DWORD PTR __Inc$4[ebp]
  001f8	d1 e8		 shr	 eax, 1
  001fa	89 45 d4	 mov	 DWORD PTR __Inc$4[ebp], eax
  001fd	eb e3		 jmp	 SHORT $LN11@overflow
$LN10@overflow:
; Line 146
  001ff	83 7d d4 00	 cmp	 DWORD PTR __Inc$4[ebp], 0
  00203	75 0a		 jne	 SHORT $LN9@overflow
; Line 147
  00205	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0020a	e9 e2 01 00 00	 jmp	 $LN18@overflow
$LN9@overflow:
; Line 149
  0020f	8b 45 e0	 mov	 eax, DWORD PTR __Newsize$5[ebp]
  00212	03 45 d4	 add	 eax, DWORD PTR __Inc$4[ebp]
  00215	89 45 e0	 mov	 DWORD PTR __Newsize$5[ebp], eax
; Line 151
  00218	8b 45 e0	 mov	 eax, DWORD PTR __Newsize$5[ebp]
  0021b	50		 push	 eax
  0021c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0021f	83 c1 40	 add	 ecx, 64			; 00000040H
  00222	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
  00227	89 45 c8	 mov	 DWORD PTR __Newptr$3[ebp], eax
; Line 152
  0022a	8b f4		 mov	 esi, esp
  0022c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0022f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00235	3b f4		 cmp	 esi, esp
  00237	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023c	89 45 bc	 mov	 DWORD PTR __Oldptr$2[ebp], eax
; Line 154
  0023f	83 7d ec 00	 cmp	 DWORD PTR __Oldsize$6[ebp], 0
  00243	76 14		 jbe	 SHORT $LN8@overflow
; Line 155
  00245	8b 45 ec	 mov	 eax, DWORD PTR __Oldsize$6[ebp]
  00248	50		 push	 eax
  00249	8b 4d bc	 mov	 ecx, DWORD PTR __Oldptr$2[ebp]
  0024c	51		 push	 ecx
  0024d	8b 55 c8	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  00250	52		 push	 edx
  00251	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  00256	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@overflow:
; Line 157
  00259	83 7d ec 00	 cmp	 DWORD PTR __Oldsize$6[ebp], 0
  0025d	75 75		 jne	 SHORT $LN7@overflow
; Line 159
  0025f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00262	8b 4d c8	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  00265	89 48 38	 mov	 DWORD PTR [eax+56], ecx
; Line 160
  00268	8b 45 c8	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  0026b	03 45 e0	 add	 eax, DWORD PTR __Newsize$5[ebp]
  0026e	8b f4		 mov	 esi, esp
  00270	50		 push	 eax
  00271	8b 4d c8	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  00274	51		 push	 ecx
  00275	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00278	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
  0027e	3b f4		 cmp	 esi, esp
  00280	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 161
  00285	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00288	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0028b	83 e1 04	 and	 ecx, 4
  0028e	74 1e		 je	 SHORT $LN6@overflow
; Line 162
  00290	8b f4		 mov	 esi, esp
  00292	8b 45 c8	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  00295	50		 push	 eax
  00296	6a 00		 push	 0
  00298	8b 4d c8	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  0029b	51		 push	 ecx
  0029c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0029f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  002a5	3b f4		 cmp	 esi, esp
  002a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 163
  002ac	eb 21		 jmp	 SHORT $LN5@overflow
$LN6@overflow:
; Line 164
  002ae	8b 45 c8	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  002b1	83 c0 01	 add	 eax, 1
  002b4	8b f4		 mov	 esi, esp
  002b6	50		 push	 eax
  002b7	8b 4d c8	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  002ba	51		 push	 ecx
  002bb	8b 55 c8	 mov	 edx, DWORD PTR __Newptr$3[ebp]
  002be	52		 push	 edx
  002bf	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  002c8	3b f4		 cmp	 esi, esp
  002ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN5@overflow:
; Line 166
  002cf	e9 cb 00 00 00	 jmp	 $LN4@overflow
$LN7@overflow:
; Line 168
  002d4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  002d7	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  002da	2b 4d bc	 sub	 ecx, DWORD PTR __Oldptr$2[ebp]
  002dd	03 4d c8	 add	 ecx, DWORD PTR __Newptr$3[ebp]
  002e0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  002e3	89 4a 38	 mov	 DWORD PTR [edx+56], ecx
; Line 171
  002e6	8b 45 c8	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  002e9	03 45 e0	 add	 eax, DWORD PTR __Newsize$5[ebp]
  002ec	8b f4		 mov	 esi, esp
  002ee	50		 push	 eax
  002ef	8b fc		 mov	 edi, esp
  002f1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  002f4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  002fa	3b fc		 cmp	 edi, esp
  002fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00301	2b 45 bc	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  00304	03 45 c8	 add	 eax, DWORD PTR __Newptr$3[ebp]
  00307	50		 push	 eax
  00308	8b fc		 mov	 edi, esp
  0030a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0030d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00313	3b fc		 cmp	 edi, esp
  00315	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0031a	2b 45 bc	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  0031d	03 45 c8	 add	 eax, DWORD PTR __Newptr$3[ebp]
  00320	50		 push	 eax
  00321	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00324	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  0032a	3b f4		 cmp	 esi, esp
  0032c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 172
  00331	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00334	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00337	83 e1 04	 and	 ecx, 4
  0033a	74 1e		 je	 SHORT $LN3@overflow
; Line 173
  0033c	8b f4		 mov	 esi, esp
  0033e	8b 45 c8	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  00341	50		 push	 eax
  00342	6a 00		 push	 0
  00344	8b 4d c8	 mov	 ecx, DWORD PTR __Newptr$3[ebp]
  00347	51		 push	 ecx
  00348	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0034b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00351	3b f4		 cmp	 esi, esp
  00353	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 174
  00358	eb 45		 jmp	 SHORT $LN4@overflow
$LN3@overflow:
; Line 177
  0035a	8b f4		 mov	 esi, esp
  0035c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0035f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00365	3b f4		 cmp	 esi, esp
  00367	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036c	83 c0 01	 add	 eax, 1
  0036f	8b f4		 mov	 esi, esp
  00371	50		 push	 eax
  00372	8b fc		 mov	 edi, esp
  00374	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00377	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0037d	3b fc		 cmp	 edi, esp
  0037f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00384	2b 45 bc	 sub	 eax, DWORD PTR __Oldptr$2[ebp]
  00387	03 45 c8	 add	 eax, DWORD PTR __Newptr$3[ebp]
  0038a	50		 push	 eax
  0038b	8b 45 c8	 mov	 eax, DWORD PTR __Newptr$3[ebp]
  0038e	50		 push	 eax
  0038f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00392	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
  00398	3b f4		 cmp	 esi, esp
  0039a	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@overflow:
; Line 180
  0039f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003a2	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  003a5	83 e1 01	 and	 ecx, 1
  003a8	74 13		 je	 SHORT $LN1@overflow
; Line 181
  003aa	8b 45 ec	 mov	 eax, DWORD PTR __Oldsize$6[ebp]
  003ad	50		 push	 eax
  003ae	8b 4d bc	 mov	 ecx, DWORD PTR __Oldptr$2[ebp]
  003b1	51		 push	 ecx
  003b2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003b5	83 c1 40	 add	 ecx, 64			; 00000040H
  003b8	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@overflow:
; Line 182
  003bd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  003c0	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  003c3	83 c9 01	 or	 ecx, 1
  003c6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  003c9	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
; Line 184
  003cc	8d 45 08	 lea	 eax, DWORD PTR __Meta$[ebp]
  003cf	50		 push	 eax
  003d0	e8 00 00 00 00	 call	 ?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
  003d5	83 c4 04	 add	 esp, 4
  003d8	8a d8		 mov	 bl, al
  003da	8b f4		 mov	 esi, esp
  003dc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  003df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
  003e5	3b f4		 cmp	 esi, esp
  003e7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ec	88 18		 mov	 BYTE PTR [eax], bl
; Line 185
  003ee	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
$LN18@overflow:
; Line 187
  003f1	5f		 pop	 edi
  003f2	5e		 pop	 esi
  003f3	5b		 pop	 ebx
  003f4	81 c4 18 01 00
	00		 add	 esp, 280		; 00000118H
  003fa	3b ec		 cmp	 ebp, esp
  003fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00401	8b e5		 mov	 esp, ebp
  00403	5d		 pop	 ebp
  00404	c2 04 00	 ret	 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
tv91 = -332						; size = 4
$T1 = -324						; size = 4
__Nul$2 = -120						; size = 28
__Str$3 = -84						; size = 28
__Str$4 = -48						; size = 28
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 93
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 4c 01 00
	00		 sub	 esp, 332		; 0000014cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd b4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-332]
  00013	b9 53 00 00 00	 mov	 ecx, 83			; 00000053H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	c7 85 bc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], 0
; Line 94
  00037	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0003d	83 e1 02	 and	 ecx, 2
  00040	0f 85 c0 00 00
	00		 jne	 $LN4@str
  00046	8b f4		 mov	 esi, esp
  00048	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00051	3b f4		 cmp	 esi, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	85 c0		 test	 eax, eax
  0005a	0f 84 a6 00 00
	00		 je	 $LN4@str
; Line 97
  00060	8b f4		 mov	 esi, esp
  00062	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	39 41 38	 cmp	 DWORD PTR [ecx+56], eax
  00078	73 1a		 jae	 SHORT $LN7@str
  0007a	8b f4		 mov	 esi, esp
  0007c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	89 85 b4 fe ff
	ff		 mov	 DWORD PTR tv91[ebp], eax
  00092	eb 0c		 jmp	 SHORT $LN8@str
$LN7@str:
  00094	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00097	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0009a	89 85 b4 fe ff
	ff		 mov	 DWORD PTR tv91[ebp], eax
$LN8@str:
  000a0	8b f4		 mov	 esi, esp
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000ab	3b f4		 cmp	 esi, esp
  000ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b2	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR tv91[ebp]
  000b8	2b c8		 sub	 ecx, eax
  000ba	51		 push	 ecx
  000bb	8b f4		 mov	 esi, esp
  000bd	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	50		 push	 eax
  000ce	8d 4d d0	 lea	 ecx, DWORD PTR __Str$4[ebp]
  000d1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 98
  000d6	8d 45 d0	 lea	 eax, DWORD PTR __Str$4[ebp]
  000d9	50		 push	 eax
  000da	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000dd	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000e2	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  000e8	83 c9 01	 or	 ecx, 1
  000eb	89 8d bc fe ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  000f1	8d 4d d0	 lea	 ecx, DWORD PTR __Str$4[ebp]
  000f4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000f9	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000fc	e9 c6 00 00 00	 jmp	 $LN5@str
  00101	e9 c1 00 00 00	 jmp	 $LN5@str
$LN4@str:
; Line 100
  00106	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00109	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  0010c	83 e1 04	 and	 ecx, 4
  0010f	0f 85 84 00 00
	00		 jne	 $LN2@str
  00115	8b f4		 mov	 esi, esp
  00117	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0011a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00120	3b f4		 cmp	 esi, esp
  00122	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00127	85 c0		 test	 eax, eax
  00129	74 6e		 je	 SHORT $LN2@str
; Line 102
  0012b	8b f4		 mov	 esi, esp
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00130	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  00136	3b f4		 cmp	 esi, esp
  00138	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013d	8b f0		 mov	 esi, eax
  0013f	8b fc		 mov	 edi, esp
  00141	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00144	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0014a	3b fc		 cmp	 edi, esp
  0014c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00151	2b f0		 sub	 esi, eax
  00153	56		 push	 esi
  00154	8b f4		 mov	 esi, esp
  00156	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00159	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
  0015f	3b f4		 cmp	 esi, esp
  00161	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00166	50		 push	 eax
  00167	8d 4d ac	 lea	 ecx, DWORD PTR __Str$3[ebp]
  0016a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 103
  0016f	8d 45 ac	 lea	 eax, DWORD PTR __Str$3[ebp]
  00172	50		 push	 eax
  00173	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00176	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0017b	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00181	83 c9 01	 or	 ecx, 1
  00184	89 8d bc fe ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  0018a	8d 4d ac	 lea	 ecx, DWORD PTR __Str$3[ebp]
  0018d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00192	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00195	eb 30		 jmp	 SHORT $LN5@str
; Line 105
  00197	eb 2e		 jmp	 SHORT $LN5@str
$LN2@str:
; Line 107
  00199	8d 4d 88	 lea	 ecx, DWORD PTR __Nul$2[ebp]
  0019c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 108
  001a1	8d 45 88	 lea	 eax, DWORD PTR __Nul$2[ebp]
  001a4	50		 push	 eax
  001a5	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001a8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001ad	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  001b3	83 c9 01	 or	 ecx, 1
  001b6	89 8d bc fe ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  001bc	8d 4d 88	 lea	 ecx, DWORD PTR __Nul$2[ebp]
  001bf	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001c4	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@str:
; Line 110
  001c7	52		 push	 edx
  001c8	8b cd		 mov	 ecx, ebp
  001ca	50		 push	 eax
  001cb	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN18@str
  001d1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001d6	58		 pop	 eax
  001d7	5a		 pop	 edx
  001d8	5f		 pop	 edi
  001d9	5e		 pop	 esi
  001da	5b		 pop	 ebx
  001db	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001de	33 cd		 xor	 ecx, ebp
  001e0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e5	81 c4 4c 01 00
	00		 add	 esp, 332		; 0000014cH
  001eb	3b ec		 cmp	 ebp, esp
  001ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f2	8b e5		 mov	 esp, ebp
  001f4	5d		 pop	 ebp
  001f5	c2 04 00	 ret	 4
$LN18@str:
  001f8	03 00 00 00	 DD	 3
  001fc	00 00 00 00	 DD	 $LN17@str
$LN17@str:
  00200	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00204	1c 00 00 00	 DD	 28			; 0000001cH
  00208	00 00 00 00	 DD	 $LN14@str
  0020c	ac ff ff ff	 DD	 -84			; ffffffacH
  00210	1c 00 00 00	 DD	 28			; 0000001cH
  00214	00 00 00 00	 DD	 $LN15@str
  00218	88 ff ff ff	 DD	 -120			; ffffff88H
  0021c	1c 00 00 00	 DD	 28			; 0000001cH
  00220	00 00 00 00	 DD	 $LN16@str
$LN16@str:
  00224	5f		 DB	 95			; 0000005fH
  00225	4e		 DB	 78			; 0000004eH
  00226	75		 DB	 117			; 00000075H
  00227	6c		 DB	 108			; 0000006cH
  00228	00		 DB	 0
$LN15@str:
  00229	5f		 DB	 95			; 0000005fH
  0022a	53		 DB	 83			; 00000053H
  0022b	74		 DB	 116			; 00000074H
  0022c	72		 DB	 114			; 00000072H
  0022d	00		 DB	 0
$LN14@str:
  0022e	5f		 DB	 95			; 0000005fH
  0022f	53		 DB	 83			; 00000053H
  00230	74		 DB	 116			; 00000074H
  00231	72		 DB	 114			; 00000072H
  00232	00		 DB	 0
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 75
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
; Line 76
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 77
  00034	8b f4		 mov	 esi, esp
  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 28
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b f4		 mov	 esi, esp
  00044	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
  0004d	3b f4		 cmp	 esi, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  00064	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	83 c1 40	 add	 ecx, 64			; 00000040H
  0006a	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
; Line 31
  0006f	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  00072	50		 push	 eax
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
  0007b	50		 push	 eax
  0007c	6a 00		 push	 0
  0007e	6a 00		 push	 0
  00080	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Line 32
  00088	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00092	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00095	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009c	59		 pop	 ecx
  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
  000a0	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000a6	3b ec		 cmp	 ebp, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 644
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], 0
; Line 645
  0002d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	83 c1 18	 add	 ecx, 24			; 00000018H
  00037	e8 00 00 00 00	 call	 ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
  0003c	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00042	83 c9 01	 or	 ecx, 1
  00045	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  0004b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 646
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00057	3b ec		 cmp	 ebp, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 635
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 98	 mov	 ecx, DWORD PTR [eax-104]
  00029	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 44 10 98 00
	00 00 00	 mov	 DWORD PTR [eax+edx-104], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	8b 48 98	 mov	 ecx, DWORD PTR [eax-104]
  0003d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00040	83 ea 68	 sub	 edx, 104		; 00000068H
  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8b 48 98	 mov	 ecx, DWORD PTR [eax-104]
  00049	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	89 54 01 94	 mov	 DWORD PTR [ecx+eax-108], edx
; Line 636
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	83 e9 50	 sub	 ecx, 80			; 00000050H
  00059	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 e9 48	 sub	 ecx, 72			; 00000048H
  00064	8b f4		 mov	 esi, esp
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
  0006c	3b f4		 cmp	 esi, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0007c	3b ec		 cmp	 ebp, esp
  0007e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 591
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  0004c	83 7d 0c 00	 cmp	 DWORD PTR _$initVBases$[ebp], 0
  00050	74 3e		 je	 SHORT $LN1@basic_stri
  00052	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00055	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
  0005b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
  00065	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	83 c1 68	 add	 ecx, 104		; 00000068H
  0006b	8b f4		 mov	 esi, esp
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
  00073	3b f4		 cmp	 esi, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00081	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00087	83 c8 01	 or	 eax, 1
  0008a	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
$LN1@basic_stri:
  00090	8b f4		 mov	 esi, esp
  00092	6a 00		 push	 0
  00094	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00097	83 c0 18	 add	 eax, 24			; 00000018H
  0009a	50		 push	 eax
  0009b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
  000a4	3b f4		 cmp	 esi, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  000b2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000ba	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	c7 04 10 00 00
	00 00		 mov	 DWORD PTR [eax+edx], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  000c4	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c9	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000cc	83 ea 68	 sub	 edx, 104		; 00000068H
  000cf	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d4	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000d7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	89 54 01 fc	 mov	 DWORD PTR [ecx+eax-4], edx
  000de	8b 45 08	 mov	 eax, DWORD PTR __Mode$[ebp]
  000e1	50		 push	 eax
  000e2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	83 c1 18	 add	 ecx, 24			; 00000018H
  000e8	e8 00 00 00 00	 call	 ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Line 592
  000ed	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f4	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000f7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000fa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00101	59		 pop	 ecx
  00102	5f		 pop	 edi
  00103	5e		 pop	 esi
  00104	5b		 pop	 ebx
  00105	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0010b	3b ec		 cmp	 ebp, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	8b e5		 mov	 esp, ebp
  00114	5d		 pop	 ebp
  00115	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
  00000	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00006	83 e0 01	 and	 eax, 1
  00009	0f 84 1c 00 00
	00		 je	 $LN5@basic_stri
  0000f	83 a5 20 ff ff
	ff fe		 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00016	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 68	 add	 ecx, 104		; 00000068H
  0001c	8b f4		 mov	 esi, esp
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
  00024	3b f4		 cmp	 esi, esp
  00026	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
$LN5@basic_stri:
  0002b	c3		 ret	 0
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1:
  0002c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 20	 add	 ecx, 32			; 00000020H
  00032	8b f4		 mov	 esi, esp
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
  0003a	3b f4		 cmp	 esi, esp
  0003c	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
  00041	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00045	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00048	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  0004e	33 c8		 xor	 ecx, eax
  00050	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00055	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
  0005a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$min@H@std@@YAABHABH0@Z
_TEXT	SEGMENT
tv71 = -208						; size = 4
$T1 = -200						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YAABHABH0@Z PROC				; std::min<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\algorithm
; Line 4120
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00012	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 4121
  0001e	68 19 10 00 00	 push	 4121			; 00001019H
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_1JC@OFJFDCCC@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00028	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ??$_Debug_lt@ABHABH@std@@YA_NABH0PB_WI@Z ; std::_Debug_lt<int const &,int const &>
  00035	83 c4 10	 add	 esp, 16			; 00000010H
  00038	0f b6 d0	 movzx	 edx, al
  0003b	85 d2		 test	 edx, edx
  0003d	74 0b		 je	 SHORT $LN3@min
  0003f	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00042	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], eax
  00048	eb 09		 jmp	 SHORT $LN4@min
$LN3@min:
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0004d	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], ecx
$LN4@min:
  00053	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv71[ebp]
  00059	89 95 38 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  0005f	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
; Line 4122
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  0006e	3b ec		 cmp	 ebp, esp
  00070	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
??$min@H@std@@YAABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00026	50		 push	 eax
  00027	6a 00		 push	 0
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
__Pnext$ = -48						; size = 4
__Lock$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  00045	8b f4		 mov	 esi, esp
  00047	6a 03		 push	 3
  00049	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00060	8b f4		 mov	 esi, esp
  00062	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  00075	83 7d d0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00079	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  0007b	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0007e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00081	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  00083	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00086	8b 08		 mov	 ecx, DWORD PTR [eax]
  00088	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0008b	3b 55 08	 cmp	 edx, DWORD PTR __First$[ebp]
  0008e	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00090	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00093	8b 08		 mov	 ecx, DWORD PTR [eax]
  00095	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00098	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0009b	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  0009d	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a2	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000a7	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000aa	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000ac	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000af	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b1	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000b6	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bb	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000c0	8b 4d d0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000c3	8b 10		 mov	 edx, DWORD PTR [eax]
  000c5	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000c7	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d0	8b f4		 mov	 esi, esp
  000d2	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000db	3b f4		 cmp	 esi, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e2	52		 push	 edx
  000e3	8b cd		 mov	 ecx, ebp
  000e5	50		 push	 eax
  000e6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000ec	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f1	58		 pop	 eax
  000f2	5a		 pop	 edx
  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00104	33 cd		 xor	 ecx, ebp
  00106	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010b	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  00111	3b ec		 cmp	 ebp, esp
  00113	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 08 00	 ret	 8
  0011e	8b ff		 npad	 2
$LN13@Orphan_ran:
  00120	01 00 00 00	 DD	 1
  00124	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00128	dc ff ff ff	 DD	 -36			; ffffffdcH
  0012c	04 00 00 00	 DD	 4
  00130	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00134	5f		 DB	 95			; 0000005fH
  00135	4c		 DB	 76			; 0000004cH
  00136	6f		 DB	 111			; 0000006fH
  00137	63		 DB	 99			; 00000063H
  00138	6b		 DB	 107			; 0000006bH
  00139	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1758
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1759
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xran:
; Line 1760
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 78		 je	 SHORT $LN2@Tidy
; Line 1625
  0002c	8b f4		 mov	 esi, esp
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00037	3b f4		 cmp	 esi, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00044	51		 push	 ecx
  00045	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004b	50		 push	 eax
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Line 1628
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0005d	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00060	99		 cdq
  00061	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00066	f7 f9		 idiv	 ecx
  00068	50		 push	 eax
  00069	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0006f	50		 push	 eax
  00070	8d 8d 2f ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00076	51		 push	 ecx
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
; Line 1629
  00086	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00089	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 1630
  00090	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00093	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  0009a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
$LN2@Tidy:
; Line 1633
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000ad	3b ec		 cmp	 ebp, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unused_capacity
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0002e	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
  00038	8b f0		 mov	 esi, eax
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
  00042	2b f0		 sub	 esi, eax
  00044	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00047	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
$LN1@Reserve:
; Line 1617
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
  00059	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
  00065	50		 push	 eax
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate
$LN4@Reserve:
; Line 1619
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -273						; size = 1
$T3 = -261						; size = 1
$T4 = -249						; size = 1
__Size$ = -48						; size = 4
__Ptr$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d bd e8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-280]
  00022	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00027	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002c	f3 ab		 rep stosd
  0002e	59		 pop	 ecx
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00034	33 c5		 xor	 eax, ebp
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00043	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00046	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00049	50		 push	 eax
  0004a	8d 8d ef fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00050	51		 push	 ecx
  00051	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::allocate
  00060	89 45 dc	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  00063	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  0006a	8b 45 dc	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00074	52		 push	 edx
  00075	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007b	51		 push	 ecx
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
  00084	eb 2d		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z$0:
; Line 1593
  00086	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0008d	51		 push	 ecx
  0008e	8d 95 fb fe ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00094	52		 push	 edx
  00095	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
; Line 1594
  000a4	6a 00		 push	 0
  000a6	6a 00		 push	 0
  000a8	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000ad	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000b2	c3		 ret	 0
$LN5@Reallocate:
  000b3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ba	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z$1:
; Line 1597
  000c3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	e8 00 00 00 00	 call	 ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
  000cb	89 45 d0	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000ce	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000d5	74 48		 je	 SHORT $LN1@Reallocate
; Line 1600
  000d7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e4	50		 push	 eax
  000e5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Line 1602
  000ed	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000f0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000f6	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  000f9	99		 cdq
  000fa	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  000ff	f7 f9		 idiv	 ecx
  00101	50		 push	 eax
  00102	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00105	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00108	50		 push	 eax
  00109	8d 8d 07 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0010f	51		 push	 ecx
  00110	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
  00118	8b c8		 mov	 ecx, eax
  0011a	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
$LN1@Reallocate:
; Line 1605
  0011f	8b f4		 mov	 esi, esp
  00121	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0012a	3b f4		 cmp	 esi, esp
  0012c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  00131	6b 45 08 1c	 imul	 eax, DWORD PTR __Count$[ebp], 28
  00135	03 45 dc	 add	 eax, DWORD PTR __Ptr$[ebp]
  00138	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 1607
  0013e	6b 45 d0 1c	 imul	 eax, DWORD PTR __Size$[ebp], 28
  00142	03 45 dc	 add	 eax, DWORD PTR __Ptr$[ebp]
  00145	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00148	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0014b	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0014e	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00151	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
  00154	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00157	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0015e	59		 pop	 ecx
  0015f	5f		 pop	 edi
  00160	5e		 pop	 esi
  00161	5b		 pop	 ebx
  00162	81 c4 18 01 00
	00		 add	 esp, 280		; 00000118H
  00168	3b ec		 cmp	 ebp, esp
  0016a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016f	8b e5		 mov	 esp, ebp
  00171	5d		 pop	 ebp
  00172	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a e4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-284]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00029	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002c	73 17		 jae	 SHORT $LN3@Inside
  0002e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00031	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00034	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  00037	77 0c		 ja	 SHORT $LN3@Inside
  00039	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv76[ebp], 1
  00043	eb 0a		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00045	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0004f	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
  0002b	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
  00036	8b 4d ec	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00039	d1 e9		 shr	 ecx, 1
  0003b	2b c1		 sub	 eax, ecx
  0003d	3b 45 ec	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  00040	73 0c		 jae	 SHORT $LN4@Grow_to
  00042	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
  0004c	eb 0e		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0004e	8b 55 ec	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00051	d1 ea		 shr	 edx, 1
  00053	03 55 ec	 add	 edx, DWORD PTR __Capacity$[ebp]
  00056	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  0005c	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv73[ebp]
  00062	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00065	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
  00068	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0006b	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0006d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00070	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
$LN1@Grow_to:
; Line 1578
  00073	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
; Line 1567
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0004d	52		 push	 edx
  0004e	8b cd		 mov	 ecx, ebp
  00050	50		 push	 eax
  00051	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00057	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0005c	58		 pop	 eax
  0005d	5a		 pop	 edx
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00064	33 cd		 xor	 ecx, ebp
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
  0007e	8b ff		 npad	 2
$LN5@Destroy:
  00080	01 00 00 00	 DD	 1
  00084	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00088	eb ff ff ff	 DD	 -21			; ffffffebH
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00094	5f		 DB	 95			; 0000005fH
  00095	41		 DB	 65			; 00000041H
  00096	6c		 DB	 108			; 0000006cH
  00097	76		 DB	 118			; 00000076H
  00098	61		 DB	 97			; 00000061H
  00099	6c		 DB	 108			; 0000006cH
  0009a	00		 DB	 0
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1508
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1509
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003b	51		 push	 ecx
  0003c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00042	50		 push	 eax
  00043	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Line 1510
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00054	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 1511
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00060	3b ec		 cmp	 ebp, esp
  00062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1174
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1175
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0002e	77 08		 ja	 SHORT $LN1@at
; Line 1176
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xran
$LN1@at:
; Line 1177
  00038	6b 45 08 1c	 imul	 eax, DWORD PTR __Pos$[ebp], 28
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	03 41 04	 add	 eax, DWORD PTR [ecx+4]
$LN3@at:
; Line 1178
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00023	8d 85 2f ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
; Line 1154
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	99		 cdq
  00030	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00035	f7 f9		 idiv	 ecx
; Line 1149
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Unused_capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unused_capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0002f	99		 cdq
  00030	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00035	f7 f9		 idiv	 ecx
; Line 1016
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?_Unused_capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	99		 cdq
  00030	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00035	f7 f9		 idiv	 ecx
; Line 1011
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; Line 946
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Idx$3 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 865
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 866
  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 8d 00 00
	00		 je	 $LN4@push_back
; Line 868
  00043	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00055	99		 cdq
  00056	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  0005b	f7 f9		 idiv	 ecx
  0005d	89 45 ec	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 869
  00060	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00069	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  0006c	75 0a		 jne	 SHORT $LN3@push_back
; Line 870
  0006e	6a 01		 push	 1
  00070	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
$LN3@push_back:
; Line 871
  00078	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0007e	51		 push	 ecx
  0007f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00082	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00085	50		 push	 eax
  00086	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
; Line 873
  0008e	6b 45 ec 1c	 imul	 eax, DWORD PTR __Idx$3[ebp], 28
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0009e	83 c4 04	 add	 esp, 4
  000a1	50		 push	 eax
  000a2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a5	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000a8	50		 push	 eax
  000a9	8d 8d 17 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  000af	51		 push	 ecx
  000b0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
  000b8	8b c8		 mov	 ecx, eax
  000ba	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Line 874
  000bf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c5	83 c1 1c	 add	 ecx, 28			; 0000001cH
  000c8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000cb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 876
  000ce	eb 67		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 878
  000d0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000d9	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  000dc	75 0a		 jne	 SHORT $LN1@push_back
; Line 879
  000de	6a 01		 push	 1
  000e0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e3	e8 00 00 00 00	 call	 ?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
$LN1@push_back:
; Line 880
  000e8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000eb	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ee	51		 push	 ecx
  000ef	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000f2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f5	50		 push	 eax
  000f6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
; Line 882
  000fe	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00107	83 c4 04	 add	 esp, 4
  0010a	50		 push	 eax
  0010b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00111	52		 push	 edx
  00112	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00118	50		 push	 eax
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
  00121	8b c8		 mov	 ecx, eax
  00123	e8 00 00 00 00	 call	 ??$construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Line 883
  00128	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0012b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0012e	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00131	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00134	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 885
  00137	5f		 pop	 edi
  00138	5e		 pop	 esi
  00139	5b		 pop	 ebx
  0013a	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  00140	3b ec		 cmp	 ebp, esp
  00142	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c2 04 00	 ret	 4
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8d 8d 2f ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00029	e8 00 00 00 00	 call	 ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Line 681
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  00023	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00047	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	51		 push	 ecx
  0004d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00050	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00055	6a 01		 push	 1
  00057	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	51		 push	 ecx
  0005d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00060	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00065	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 637
  0006e	52		 push	 edx
  0006f	8b cd		 mov	 ecx, ebp
  00071	50		 push	 eax
  00072	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00078	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0007d	58		 pop	 eax
  0007e	5a		 pop	 edx
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00085	33 cd		 xor	 ecx, ebp
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
  0009d	8d 49 00	 npad	 3
$LN5@Free_proxy:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  000a8	eb ff ff ff	 DD	 -21			; ffffffebH
  000ac	01 00 00 00	 DD	 1
  000b0	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  000b4	5f		 DB	 95			; 0000005fH
  000b5	41		 DB	 65			; 00000041H
  000b6	6c		 DB	 108			; 0000006cH
  000b7	70		 DB	 112			; 00000070H
  000b8	72		 DB	 114			; 00000072H
  000b9	6f		 DB	 111			; 0000006fH
  000ba	78		 DB	 120			; 00000078H
  000bb	79		 DB	 121			; 00000079H
  000bc	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -232						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00013	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00035	6a 01		 push	 1
  00037	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003a	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00044	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0004a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0004f	50		 push	 eax
  00050	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00059	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0005e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00066	89 11		 mov	 DWORD PTR [ecx], edx
; Line 627
  00068	52		 push	 edx
  00069	8b cd		 mov	 ecx, ebp
  0006b	50		 push	 eax
  0006c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00072	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00077	58		 pop	 eax
  00078	5a		 pop	 edx
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
  00097	90		 npad	 1
$LN5@Alloc_prox:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000a0	eb ff ff ff	 DD	 -21			; ffffffebH
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000ac	5f		 DB	 95			; 0000005fH
  000ad	41		 DB	 65			; 00000041H
  000ae	6c		 DB	 108			; 0000006cH
  000af	70		 DB	 112			; 00000070H
  000b0	72		 DB	 114			; 00000072H
  000b1	6f		 DB	 111			; 0000006fH
  000b2	78		 DB	 120			; 00000078H
  000b3	79		 DB	 121			; 00000079H
  000b4	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Free_proxy
; Line 609
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Alloc_proxy
; Line 604
  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_alloc<0,std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 484
  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 485
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAIABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
  0002c	83 c4 04	 add	 esp, 4
; Line 885
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
; Line 859
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
; Line 848
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Line 802
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Wrap_alloc<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAIABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAIABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 735
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
; Line 736
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAIABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  00023	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H
; Line 613
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  00023	6a 00		 push	 0
  00025	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002e	83 c4 08	 add	 esp, 8
; Line 579
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	83 c4 04	 add	 esp, 4
; Line 574
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z
_TEXT	SEGMENT
tv139 = -324						; size = 4
tv137 = -324						; size = 4
tv141 = -320						; size = 4
tv140 = -320						; size = 4
$T2 = -312						; size = 28
$T3 = -276						; size = 28
$T4 = -240						; size = 4
_initialPosition$ = -36					; size = 4
_position$ = -24					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_Text$ = 8						; size = 4
_Strings$ = 12						; size = 4
_Character$ = 16					; size = 1
?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z PROC ; CaveUtiltity::Split, COMDAT
; File f:\cavestory\cavestory\cavestory\caveutility.h
; Line 23
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 38 01 00
	00		 sub	 esp, 312		; 00000138H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd bc fe ff
	ff		 lea	 edi, DWORD PTR [ebp-324]
  00020	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; Line 24
  00040	6a 00		 push	 0
  00042	0f b6 45 10	 movzx	 eax, BYTE PTR _Character$[ebp]
  00046	50		 push	 eax
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _Text$[ebp]
  0004a	e8 00 00 00 00	 call	 ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
  0004f	89 45 e8	 mov	 DWORD PTR _position$[ebp], eax
; Line 25
  00052	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _initialPosition$[ebp], 0
; Line 26
  00059	8b 4d 0c	 mov	 ecx, DWORD PTR _Strings$[ebp]
  0005c	e8 00 00 00 00	 call	 ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
$LN2@Split:
; Line 27
  00061	8b 45 e8	 mov	 eax, DWORD PTR _position$[ebp]
  00064	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  0006a	74 79		 je	 SHORT $LN1@Split
; Line 29
  0006c	8b 45 e8	 mov	 eax, DWORD PTR _position$[ebp]
  0006f	2b 45 dc	 sub	 eax, DWORD PTR _initialPosition$[ebp]
  00072	83 c0 01	 add	 eax, 1
  00075	50		 push	 eax
  00076	8b 4d dc	 mov	 ecx, DWORD PTR _initialPosition$[ebp]
  00079	51		 push	 ecx
  0007a	8d 95 c8 fe ff
	ff		 lea	 edx, DWORD PTR $T2[ebp]
  00080	52		 push	 edx
  00081	8b 4d 08	 mov	 ecx, DWORD PTR _Text$[ebp]
  00084	e8 00 00 00 00	 call	 ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
  00089	89 85 c0 fe ff
	ff		 mov	 DWORD PTR tv140[ebp], eax
  0008f	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR tv140[ebp]
  00095	89 85 bc fe ff
	ff		 mov	 DWORD PTR tv137[ebp], eax
  0009b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000a2	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR tv137[ebp]
  000a8	51		 push	 ecx
  000a9	8b 4d 0c	 mov	 ecx, DWORD PTR _Strings$[ebp]
  000ac	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
  000b1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b8	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  000be	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 30
  000c3	8b 45 e8	 mov	 eax, DWORD PTR _position$[ebp]
  000c6	83 c0 01	 add	 eax, 1
  000c9	89 45 dc	 mov	 DWORD PTR _initialPosition$[ebp], eax
; Line 32
  000cc	8b 45 dc	 mov	 eax, DWORD PTR _initialPosition$[ebp]
  000cf	50		 push	 eax
  000d0	0f b6 4d 10	 movzx	 ecx, BYTE PTR _Character$[ebp]
  000d4	51		 push	 ecx
  000d5	8b 4d 08	 mov	 ecx, DWORD PTR _Text$[ebp]
  000d8	e8 00 00 00 00	 call	 ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
  000dd	89 45 e8	 mov	 DWORD PTR _position$[ebp], eax
; Line 33
  000e0	e9 7c ff ff ff	 jmp	 $LN2@Split
$LN1@Split:
; Line 34
  000e5	8b 4d 08	 mov	 ecx, DWORD PTR _Text$[ebp]
  000e8	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  000ed	8b 4d dc	 mov	 ecx, DWORD PTR _initialPosition$[ebp]
  000f0	83 c1 01	 add	 ecx, 1
  000f3	2b c1		 sub	 eax, ecx
  000f5	89 85 10 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
  000fb	8d 95 10 ff ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  00101	52		 push	 edx
  00102	8d 45 e8	 lea	 eax, DWORD PTR _position$[ebp]
  00105	50		 push	 eax
  00106	e8 00 00 00 00	 call	 ??$min@H@std@@YAABHABH0@Z ; std::min<int>
  0010b	83 c4 08	 add	 esp, 8
  0010e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00110	51		 push	 ecx
  00111	8b 55 dc	 mov	 edx, DWORD PTR _initialPosition$[ebp]
  00114	52		 push	 edx
  00115	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  0011b	50		 push	 eax
  0011c	8b 4d 08	 mov	 ecx, DWORD PTR _Text$[ebp]
  0011f	e8 00 00 00 00	 call	 ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
  00124	89 85 c0 fe ff
	ff		 mov	 DWORD PTR tv141[ebp], eax
  0012a	8b 8d c0 fe ff
	ff		 mov	 ecx, DWORD PTR tv141[ebp]
  00130	89 8d bc fe ff
	ff		 mov	 DWORD PTR tv139[ebp], ecx
  00136	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0013d	8b 95 bc fe ff
	ff		 mov	 edx, DWORD PTR tv139[ebp]
  00143	52		 push	 edx
  00144	8b 4d 0c	 mov	 ecx, DWORD PTR _Strings$[ebp]
  00147	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
  0014c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00153	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00159	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 35
  0015e	8b 4d 0c	 mov	 ecx, DWORD PTR _Strings$[ebp]
  00161	e8 00 00 00 00	 call	 ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
; Line 36
  00166	52		 push	 edx
  00167	8b cd		 mov	 ecx, ebp
  00169	50		 push	 eax
  0016a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@Split
  00170	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00175	58		 pop	 eax
  00176	5a		 pop	 edx
  00177	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0017a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00181	59		 pop	 ecx
  00182	5f		 pop	 edi
  00183	5e		 pop	 esi
  00184	5b		 pop	 ebx
  00185	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00188	33 cd		 xor	 ecx, ebp
  0018a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018f	81 c4 44 01 00
	00		 add	 esp, 324		; 00000144H
  00195	3b ec		 cmp	 ebp, esp
  00197	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0019c	8b e5		 mov	 esp, ebp
  0019e	5d		 pop	 ebp
  0019f	c3		 ret	 0
$LN10@Split:
  001a0	01 00 00 00	 DD	 1
  001a4	00 00 00 00	 DD	 $LN9@Split
$LN9@Split:
  001a8	e8 ff ff ff	 DD	 -24			; ffffffe8H
  001ac	04 00 00 00	 DD	 4
  001b0	00 00 00 00	 DD	 $LN7@Split
$LN7@Split:
  001b4	70		 DB	 112			; 00000070H
  001b5	6f		 DB	 111			; 0000006fH
  001b6	73		 DB	 115			; 00000073H
  001b7	69		 DB	 105			; 00000069H
  001b8	74		 DB	 116			; 00000074H
  001b9	69		 DB	 105			; 00000069H
  001ba	6f		 DB	 111			; 0000006fH
  001bb	6e		 DB	 110			; 0000006eH
  001bc	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z$0:
  00000	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z$1:
  0000b	8d 8d ec fe ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z:
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 8a b8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-328]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002d	33 c8		 xor	 ecx, eax
  0002f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00034	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z
  00039	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z ENDP ; CaveUtiltity::Split
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@XMLDocument@tinyxml2@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@XMLDocument@tinyxml2@@QAEXI@Z PROC	; tinyxml2::XMLDocument::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00026	50		 push	 eax
  00027	6a 00		 push	 0
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?__autoclassinit2@XMLDocument@tinyxml2@@QAEXI@Z ENDP	; tinyxml2::XMLDocument::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryFloatAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAM@Z
_TEXT	SEGMENT
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?QueryFloatAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAM@Z PROC ; tinyxml2::XMLElement::QueryFloatAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1270
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1271
  00023	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?FindAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindAttribute
  0002f	89 45 ec	 mov	 DWORD PTR _a$[ebp], eax
; Line 1272
  00032	83 7d ec 00	 cmp	 DWORD PTR _a$[ebp], 0
  00036	75 07		 jne	 SHORT $LN1@QueryFloat
; Line 1273
  00038	b8 01 00 00 00	 mov	 eax, 1
  0003d	eb 0c		 jmp	 SHORT $LN2@QueryFloat
$LN1@QueryFloat:
; Line 1275
  0003f	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  00042	50		 push	 eax
  00043	8b 4d ec	 mov	 ecx, DWORD PTR _a$[ebp]
  00046	e8 00 00 00 00	 call	 ?QueryFloatValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAM@Z ; tinyxml2::XMLAttribute::QueryFloatValue
$LN2@QueryFloat:
; Line 1276
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?QueryFloatAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAM@Z ENDP ; tinyxml2::XMLElement::QueryFloatAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z
_TEXT	SEGMENT
_a$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z PROC ; tinyxml2::XMLElement::QueryIntAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1238
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1239
  00023	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?FindAttribute@XMLElement@tinyxml2@@QBEPBVXMLAttribute@2@PBD@Z ; tinyxml2::XMLElement::FindAttribute
  0002f	89 45 ec	 mov	 DWORD PTR _a$[ebp], eax
; Line 1240
  00032	83 7d ec 00	 cmp	 DWORD PTR _a$[ebp], 0
  00036	75 07		 jne	 SHORT $LN1@QueryIntAt
; Line 1241
  00038	b8 01 00 00 00	 mov	 eax, 1
  0003d	eb 0c		 jmp	 SHORT $LN2@QueryIntAt
$LN1@QueryIntAt:
; Line 1243
  0003f	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  00042	50		 push	 eax
  00043	8b 4d ec	 mov	 ecx, DWORD PTR _a$[ebp]
  00046	e8 00 00 00 00	 call	 ?QueryIntValue@XMLAttribute@tinyxml2@@QBE?AW4XMLError@2@PAH@Z ; tinyxml2::XMLAttribute::QueryIntValue
$LN2@QueryIntAt:
; Line 1244
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00054	3b ec		 cmp	 ebp, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ENDP ; tinyxml2::XMLElement::QueryIntAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FloatAttribute@XMLElement@tinyxml2@@QBEMPBD@Z
_TEXT	SEGMENT
_f$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
?FloatAttribute@XMLElement@tinyxml2@@QBEMPBD@Z PROC	; tinyxml2::XMLElement::FloatAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1219
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1220
  0002d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00000000
  00035	f3 0f 11 45 e8	 movss	 DWORD PTR _f$[ebp], xmm0
; Line 1221
  0003a	8d 45 e8	 lea	 eax, DWORD PTR _f$[ebp]
  0003d	50		 push	 eax
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _name$[ebp]
  00041	51		 push	 ecx
  00042	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?QueryFloatAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAM@Z ; tinyxml2::XMLElement::QueryFloatAttribute
; Line 1222
  0004a	d9 45 e8	 fld	 DWORD PTR _f$[ebp]
; Line 1223
  0004d	52		 push	 edx
  0004e	8b cd		 mov	 ecx, ebp
  00050	50		 push	 eax
  00051	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@FloatAttri
  00057	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0005c	58		 pop	 eax
  0005d	5a		 pop	 edx
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00064	33 cd		 xor	 ecx, ebp
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
  0007e	8b ff		 npad	 2
$LN5@FloatAttri:
  00080	01 00 00 00	 DD	 1
  00084	00 00 00 00	 DD	 $LN4@FloatAttri
$LN4@FloatAttri:
  00088	e8 ff ff ff	 DD	 -24			; ffffffe8H
  0008c	04 00 00 00	 DD	 4
  00090	00 00 00 00	 DD	 $LN3@FloatAttri
$LN3@FloatAttri:
  00094	66		 DB	 102			; 00000066H
  00095	00		 DB	 0
?FloatAttribute@XMLElement@tinyxml2@@QBEMPBD@Z ENDP	; tinyxml2::XMLElement::FloatAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IntAttribute@XMLElement@tinyxml2@@QBEHPBD@Z
_TEXT	SEGMENT
_i$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
?IntAttribute@XMLElement@tinyxml2@@QBEHPBD@Z PROC	; tinyxml2::XMLElement::IntAttribute, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 1195
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1196
  0002d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
; Line 1197
  00034	8d 45 e8	 lea	 eax, DWORD PTR _i$[ebp]
  00037	50		 push	 eax
  00038	8b 4d 08	 mov	 ecx, DWORD PTR _name$[ebp]
  0003b	51		 push	 ecx
  0003c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute
; Line 1198
  00044	8b 45 e8	 mov	 eax, DWORD PTR _i$[ebp]
; Line 1199
  00047	52		 push	 edx
  00048	8b cd		 mov	 ecx, ebp
  0004a	50		 push	 eax
  0004b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@IntAttribu
  00051	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00056	58		 pop	 eax
  00057	5a		 pop	 edx
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005e	33 cd		 xor	 ecx, ebp
  00060	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00065	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
$LN5@IntAttribu:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@IntAttribu
$LN4@IntAttribu:
  00080	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00084	04 00 00 00	 DD	 4
  00088	00 00 00 00	 DD	 $LN3@IntAttribu
$LN3@IntAttribu:
  0008c	69		 DB	 105			; 00000069H
  0008d	00		 DB	 0
?IntAttribute@XMLElement@tinyxml2@@QBEHPBD@Z ENDP	; tinyxml2::XMLElement::IntAttribute
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z PROC ; tinyxml2::XMLNode::NextSiblingElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 768
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 769
  00023	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?NextSiblingElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
; Line 770
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ENDP ; tinyxml2::XMLNode::NextSiblingElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z PROC ; tinyxml2::XMLNode::FirstChildElement, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\tinyxml2.h
; Line 718
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 719
  00023	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?FirstChildElement@XMLNode@tinyxml2@@QBEPBVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
; Line 720
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ENDP ; tinyxml2::XMLNode::FirstChildElement
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetTileSetPosition@Level@@AAE?AUVector2@@UTileSet@@H@Z
_TEXT	SEGMENT
_tileSetPosY$ = -72					; size = 4
_shiftAmount$ = -60					; size = 4
_tileSetPosX$ = -48					; size = 4
_tileSetHeight$ = -36					; size = 4
_tileSetWidth$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_Tile$ = 12						; size = 8
_GID$ = 20						; size = 4
?GetTileSetPosition@Level@@AAE?AUVector2@@UTileSet@@H@Z PROC ; Level::GetTileSetPosition, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.cpp
; Line 293
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00013	b9 43 00 00 00	 mov	 ecx, 67			; 00000043H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 295
  0002d	8d 45 dc	 lea	 eax, DWORD PTR _tileSetHeight$[ebp]
  00030	50		 push	 eax
  00031	8d 4d e8	 lea	 ecx, DWORD PTR _tileSetWidth$[ebp]
  00034	51		 push	 ecx
  00035	6a 00		 push	 0
  00037	6a 00		 push	 0
  00039	8b 55 0c	 mov	 edx, DWORD PTR _Tile$[ebp]
  0003c	52		 push	 edx
  0003d	e8 00 00 00 00	 call	 _SDL_QueryTexture
  00042	83 c4 14	 add	 esp, 20			; 00000014H
; Line 297
  00045	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	8b 45 e8	 mov	 eax, DWORD PTR _tileSetWidth$[ebp]
  0004b	99		 cdq
  0004c	f7 79 3c	 idiv	 DWORD PTR [ecx+60]
  0004f	8b c8		 mov	 ecx, eax
  00051	8b 45 14	 mov	 eax, DWORD PTR _GID$[ebp]
  00054	99		 cdq
  00055	f7 f9		 idiv	 ecx
  00057	83 ea 01	 sub	 edx, 1
  0005a	89 55 d0	 mov	 DWORD PTR _tileSetPosX$[ebp], edx
; Line 298
  0005d	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 4d d0	 mov	 ecx, DWORD PTR _tileSetPosX$[ebp]
  00063	0f af 48 3c	 imul	 ecx, DWORD PTR [eax+60]
  00067	89 4d d0	 mov	 DWORD PTR _tileSetPosX$[ebp], ecx
; Line 300
  0006a	8b 4d 14	 mov	 ecx, DWORD PTR _GID$[ebp]
  0006d	2b 4d 10	 sub	 ecx, DWORD PTR _Tile$[ebp+4]
  00070	8b 75 f4	 mov	 esi, DWORD PTR _this$[ebp]
  00073	8b 45 e8	 mov	 eax, DWORD PTR _tileSetWidth$[ebp]
  00076	99		 cdq
  00077	f7 7e 3c	 idiv	 DWORD PTR [esi+60]
  0007a	8b f0		 mov	 esi, eax
  0007c	8b c1		 mov	 eax, ecx
  0007e	99		 cdq
  0007f	f7 fe		 idiv	 esi
  00081	89 45 c4	 mov	 DWORD PTR _shiftAmount$[ebp], eax
; Line 301
  00084	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00087	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0008a	0f af 4d c4	 imul	 ecx, DWORD PTR _shiftAmount$[ebp]
  0008e	89 4d b8	 mov	 DWORD PTR _tileSetPosY$[ebp], ecx
; Line 303
  00091	8b 45 b8	 mov	 eax, DWORD PTR _tileSetPosY$[ebp]
  00094	50		 push	 eax
  00095	8b 4d d0	 mov	 ecx, DWORD PTR _tileSetPosX$[ebp]
  00098	51		 push	 ecx
  00099	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0009c	e8 00 00 00 00	 call	 ??0Vector2@@QAE@HH@Z	; Vector2::Vector2
  000a1	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 304
  000a4	52		 push	 edx
  000a5	8b cd		 mov	 ecx, ebp
  000a7	50		 push	 eax
  000a8	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@GetTileSet
  000ae	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b3	58		 pop	 eax
  000b4	5a		 pop	 edx
  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5b		 pop	 ebx
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bb	33 cd		 xor	 ecx, ebp
  000bd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c2	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  000c8	3b ec		 cmp	 ebp, esp
  000ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c2 10 00	 ret	 16			; 00000010H
  000d5	8d 49 00	 npad	 3
$LN6@GetTileSet:
  000d8	02 00 00 00	 DD	 2
  000dc	00 00 00 00	 DD	 $LN5@GetTileSet
$LN5@GetTileSet:
  000e0	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000e4	04 00 00 00	 DD	 4
  000e8	00 00 00 00	 DD	 $LN3@GetTileSet
  000ec	dc ff ff ff	 DD	 -36			; ffffffdcH
  000f0	04 00 00 00	 DD	 4
  000f4	00 00 00 00	 DD	 $LN4@GetTileSet
$LN4@GetTileSet:
  000f8	74		 DB	 116			; 00000074H
  000f9	69		 DB	 105			; 00000069H
  000fa	6c		 DB	 108			; 0000006cH
  000fb	65		 DB	 101			; 00000065H
  000fc	53		 DB	 83			; 00000053H
  000fd	65		 DB	 101			; 00000065H
  000fe	74		 DB	 116			; 00000074H
  000ff	48		 DB	 72			; 00000048H
  00100	65		 DB	 101			; 00000065H
  00101	69		 DB	 105			; 00000069H
  00102	67		 DB	 103			; 00000067H
  00103	68		 DB	 104			; 00000068H
  00104	74		 DB	 116			; 00000074H
  00105	00		 DB	 0
$LN3@GetTileSet:
  00106	74		 DB	 116			; 00000074H
  00107	69		 DB	 105			; 00000069H
  00108	6c		 DB	 108			; 0000006cH
  00109	65		 DB	 101			; 00000065H
  0010a	53		 DB	 83			; 00000053H
  0010b	65		 DB	 101			; 00000065H
  0010c	74		 DB	 116			; 00000074H
  0010d	57		 DB	 87			; 00000057H
  0010e	69		 DB	 105			; 00000069H
  0010f	64		 DB	 100			; 00000064H
  00110	74		 DB	 116			; 00000074H
  00111	68		 DB	 104			; 00000068H
  00112	00		 DB	 0
?GetTileSetPosition@Level@@AAE?AUVector2@@UTileSet@@H@Z ENDP ; Level::GetTileSetPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?StoreBackgroundLocations@Level@@AAEXXZ
_TEXT	SEGMENT
_y$1 = -60						; size = 4
_x$2 = -48						; size = 4
_destinationRectangle$ = -36				; size = 16
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?StoreBackgroundLocations@Level@@AAEXXZ PROC		; Level::StoreBackgroundLocations, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.cpp
; Line 81
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 00 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-256]
  00013	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 82
  0002d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42800000
  00035	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _SPRITE_SCALE
  0003d	f3 0f 2c c0	 cvttss2si eax, xmm0
  00041	89 45 dc	 mov	 DWORD PTR _destinationRectangle$[ebp], eax
  00044	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42800000
  0004c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _SPRITE_SCALE
  00054	f3 0f 2c c0	 cvttss2si eax, xmm0
  00058	89 45 e0	 mov	 DWORD PTR _destinationRectangle$[ebp+4], eax
  0005b	c7 45 e4 40 00
	00 00		 mov	 DWORD PTR _destinationRectangle$[ebp+8], 64 ; 00000040H
  00062	c7 45 e8 40 00
	00 00		 mov	 DWORD PTR _destinationRectangle$[ebp+12], 64 ; 00000040H
; Line 83
  00069	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _x$2[ebp], 0
  00070	eb 09		 jmp	 SHORT $LN6@StoreBackg
$LN5@StoreBackg:
  00072	8b 45 d0	 mov	 eax, DWORD PTR _x$2[ebp]
  00075	83 c0 01	 add	 eax, 1
  00078	89 45 d0	 mov	 DWORD PTR _x$2[ebp], eax
$LN6@StoreBackg:
  0007b	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0007e	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  00081	99		 cdq
  00082	83 e2 3f	 and	 edx, 63			; 0000003fH
  00085	03 c2		 add	 eax, edx
  00087	c1 f8 06	 sar	 eax, 6
  0008a	39 45 d0	 cmp	 DWORD PTR _x$2[ebp], eax
  0008d	7d 48		 jge	 SHORT $LN4@StoreBackg
; Line 85
  0008f	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _y$1[ebp], 0
  00096	eb 09		 jmp	 SHORT $LN3@StoreBackg
$LN2@StoreBackg:
  00098	8b 45 c4	 mov	 eax, DWORD PTR _y$1[ebp]
  0009b	83 c0 01	 add	 eax, 1
  0009e	89 45 c4	 mov	 DWORD PTR _y$1[ebp], eax
$LN3@StoreBackg:
  000a1	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  000a7	99		 cdq
  000a8	83 e2 3f	 and	 edx, 63			; 0000003fH
  000ab	03 c2		 add	 eax, edx
  000ad	c1 f8 06	 sar	 eax, 6
  000b0	39 45 c4	 cmp	 DWORD PTR _y$1[ebp], eax
  000b3	7d 20		 jge	 SHORT $LN1@StoreBackg
; Line 87
  000b5	8b 45 d0	 mov	 eax, DWORD PTR _x$2[ebp]
  000b8	c1 e0 06	 shl	 eax, 6
  000bb	89 45 dc	 mov	 DWORD PTR _destinationRectangle$[ebp], eax
; Line 88
  000be	8b 45 c4	 mov	 eax, DWORD PTR _y$1[ebp]
  000c1	c1 e0 06	 shl	 eax, 6
  000c4	89 45 e0	 mov	 DWORD PTR _destinationRectangle$[ebp+4], eax
; Line 89
  000c7	8d 45 dc	 lea	 eax, DWORD PTR _destinationRectangle$[ebp]
  000ca	50		 push	 eax
  000cb	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	e8 00 00 00 00	 call	 ?push_back@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAEXABUSDL_Rect@@@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::push_back
; Line 90
  000d3	eb c3		 jmp	 SHORT $LN2@StoreBackg
$LN1@StoreBackg:
; Line 91
  000d5	eb 9b		 jmp	 SHORT $LN5@StoreBackg
$LN4@StoreBackg:
; Line 92
  000d7	52		 push	 edx
  000d8	8b cd		 mov	 ecx, ebp
  000da	50		 push	 eax
  000db	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@StoreBackg
  000e1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000e6	58		 pop	 eax
  000e7	5a		 pop	 edx
  000e8	5f		 pop	 edi
  000e9	5e		 pop	 esi
  000ea	5b		 pop	 ebx
  000eb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ee	33 cd		 xor	 ecx, ebp
  000f0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f5	81 c4 00 01 00
	00		 add	 esp, 256		; 00000100H
  000fb	3b ec		 cmp	 ebp, esp
  000fd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
  00106	8b ff		 npad	 2
$LN11@StoreBackg:
  00108	01 00 00 00	 DD	 1
  0010c	00 00 00 00	 DD	 $LN10@StoreBackg
$LN10@StoreBackg:
  00110	dc ff ff ff	 DD	 -36			; ffffffdcH
  00114	10 00 00 00	 DD	 16			; 00000010H
  00118	00 00 00 00	 DD	 $LN9@StoreBackg
$LN9@StoreBackg:
  0011c	64		 DB	 100			; 00000064H
  0011d	65		 DB	 101			; 00000065H
  0011e	73		 DB	 115			; 00000073H
  0011f	74		 DB	 116			; 00000074H
  00120	69		 DB	 105			; 00000069H
  00121	6e		 DB	 110			; 0000006eH
  00122	61		 DB	 97			; 00000061H
  00123	74		 DB	 116			; 00000074H
  00124	69		 DB	 105			; 00000069H
  00125	6f		 DB	 111			; 0000006fH
  00126	6e		 DB	 110			; 0000006eH
  00127	52		 DB	 82			; 00000052H
  00128	65		 DB	 101			; 00000065H
  00129	63		 DB	 99			; 00000063H
  0012a	74		 DB	 116			; 00000074H
  0012b	61		 DB	 97			; 00000061H
  0012c	6e		 DB	 110			; 0000006eH
  0012d	67		 DB	 103			; 00000067H
  0012e	6c		 DB	 108			; 0000006cH
  0012f	65		 DB	 101			; 00000065H
  00130	00		 DB	 0
?StoreBackgroundLocations@Level@@AAEXXZ ENDP		; Level::StoreBackgroundLocations
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z
_TEXT	SEGMENT
tv712 = -2216						; size = 4
tv81 = -2212						; size = 4
tv921 = -2208						; size = 4
tv675 = -2208						; size = 4
tv915 = -2204						; size = 4
tv663 = -2204						; size = 4
tv909 = -2200						; size = 4
tv719 = -2200						; size = 4
tv714 = -2200						; size = 4
tv710 = -2200						; size = 4
tv707 = -2200						; size = 4
tv704 = -2200						; size = 4
tv648 = -2200						; size = 4
tv903 = -2196						; size = 4
tv636 = -2196						; size = 4
tv577 = -2196						; size = 4
tv567 = -2196						; size = 4
tv441 = -2196						; size = 4
tv431 = -2196						; size = 4
tv207 = -2196						; size = 4
tv197 = -2196						; size = 4
tv134 = -2196						; size = 4
tv88 = -2196						; size = 4
tv70 = -2196						; size = 4
$T2 = -2188						; size = 28
$T3 = -2152						; size = 8
$T4 = -2136						; size = 8
$T5 = -2117						; size = 1
$T6 = -2108						; size = 16
$T7 = -2081						; size = 1
$T8 = -2072						; size = 8
$T9 = -2056						; size = 20
$T10 = -2028						; size = 8
$T11 = -2012						; size = 8
$T12 = -1996						; size = 28
$T13 = -1960						; size = 28
$T14 = -1924						; size = 28
$T15 = -1888						; size = 28
$T16 = -1852						; size = 28
_i$17 = -1624						; size = 4
_ps$18 = -1612						; size = 16
_i$19 = -1588						; size = 4
_pointsName$20 = -1576					; size = 176
_slopePointNames$21 = -1392				; size = 4
_polyPairs$22 = -1380					; size = 16
_slopePolyLine$23 = -1356				; size = 4
_pointOne$24 = -1344					; size = 8
_slopePoints$25 = -1328					; size = 16
_slopeObject$26 = -1304					; size = 4
_height$27 = -1292					; size = 4
_width$28 = -1280					; size = 4
_y$29 = -1268						; size = 4
_x$30 = -1256						; size = 4
_collideObject$31 = -1244				; size = 4
_name$32 = -1232					; size = 176
_collisionName$33 = -1048				; size = 4
_objectGroup$ = -1036					; size = 4
_newTile$34 = -1024					; size = 28
_finalTileSetPosition$35 = -988				; size = 8
_finalTilePosition$36 = -972				; size = 8
_yPos$37 = -956						; size = 4
_xPos$38 = -944						; size = 4
_i$39 = -932						; size = 4
_nextTileSet$40 = -920					; size = 8
_nextGID$41 = -904					; size = 4
_tileCounter$42 = -892					; size = 4
_tile$43 = -880						; size = 4
_data$44 = -868						; size = 4
_layer$ = -856						; size = 4
_texture$45 = -844					; size = 4
_ss2$46 = -832						; size = 176
_source$47 = -636					; size = 4
_firstGID$48 = -624					; size = 4
_tileSet$ = -612					; size = 4
_mapNode$ = -600					; size = 4
_ss$ = -588						; size = 176
_document$ = -404					; size = 372
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_MapName$ = 8						; size = 28
_Graphic$ = 36						; size = 4
?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z PROC ; Level::LoadMap, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.cpp
; Line 96
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 9c 08 00
	00		 sub	 esp, 2204		; 0000089cH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 58 f7 ff
	ff		 lea	 edi, DWORD PTR [ebp-2216]
  00021	b9 27 02 00 00	 mov	 ecx, 551		; 00000227H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00045	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 97
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@HNOCAMCO@Content?1Backgrounds?1bkBlue?4png?$AA@
  00051	8d 8d 58 f8 ff
	ff		 lea	 ecx, DWORD PTR $T13[ebp]
  00057	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00060	8d 85 58 f8 ff
	ff		 lea	 eax, DWORD PTR $T13[ebp]
  00066	50		 push	 eax
  00067	8b 4d 24	 mov	 ecx, DWORD PTR _Graphic$[ebp]
  0006a	e8 00 00 00 00	 call	 ?LoadImage@Graphics@@QAEPAUSDL_Surface@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Graphics::LoadImage
  0006f	50		 push	 eax
  00070	8b 4d 24	 mov	 ecx, DWORD PTR _Graphic$[ebp]
  00073	e8 00 00 00 00	 call	 ?GetRenderer@Graphics@@QBEPAUSDL_Renderer@@XZ ; Graphics::GetRenderer
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 _SDL_CreateTextureFromSurface
  0007e	83 c4 08	 add	 esp, 8
  00081	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	89 41 44	 mov	 DWORD PTR [ecx+68], eax
  00087	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0008b	8d 8d 58 f8 ff
	ff		 lea	 ecx, DWORD PTR $T13[ebp]
  00091	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 99
  00096	68 74 01 00 00	 push	 372			; 00000174H
  0009b	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _document$[ebp]
  000a1	e8 00 00 00 00	 call	 ?__autoclassinit2@XMLDocument@tinyxml2@@QAEXI@Z
  000a6	6a 00		 push	 0
  000a8	6a 01		 push	 1
  000aa	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _document$[ebp]
  000b0	e8 00 00 00 00	 call	 ??0XMLDocument@tinyxml2@@QAE@_NW4Whitespace@1@@Z ; tinyxml2::XMLDocument::XMLDocument
  000b5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; Line 100
  000b9	68 b0 00 00 00	 push	 176			; 000000b0H
  000be	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  000c4	e8 00 00 00 00	 call	 ?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
  000c9	6a 01		 push	 1
  000cb	6a 03		 push	 3
  000cd	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  000d3	e8 00 00 00 00	 call	 ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  000d8	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; Line 101
  000dc	8d 85 b4 fd ff
	ff		 lea	 eax, DWORD PTR _ss$[ebp]
  000e2	85 c0		 test	 eax, eax
  000e4	74 11		 je	 SHORT $LN44@LoadMap
  000e6	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  000ec	83 c1 10	 add	 ecx, 16			; 00000010H
  000ef	89 8d 6c f7 ff
	ff		 mov	 DWORD PTR tv134[ebp], ecx
  000f5	eb 0a		 jmp	 SHORT $LN45@LoadMap
$LN44@LoadMap:
  000f7	c7 85 6c f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv134[ebp], 0
$LN45@LoadMap:
  00101	68 00 00 00 00	 push	 OFFSET ??_C@_04EJIAFMB@?4tmx?$AA@
  00106	8d 55 08	 lea	 edx, DWORD PTR _MapName$[ebp]
  00109	52		 push	 edx
  0010a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DBLIHGAP@Content?1Levels?1?$AA@
  0010f	8b 85 6c f7 ff
	ff		 mov	 eax, DWORD PTR tv134[ebp]
  00115	50		 push	 eax
  00116	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0011b	83 c4 08	 add	 esp, 8
  0011e	50		 push	 eax
  0011f	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
  00124	83 c4 08	 add	 esp, 8
  00127	50		 push	 eax
  00128	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0012d	83 c4 08	 add	 esp, 8
; Line 102
  00130	8d 85 a0 f8 ff
	ff		 lea	 eax, DWORD PTR $T15[ebp]
  00136	50		 push	 eax
  00137	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  0013d	e8 00 00 00 00	 call	 ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
  00142	89 85 6c f7 ff
	ff		 mov	 DWORD PTR tv88[ebp], eax
  00148	8b 8d 6c f7 ff
	ff		 mov	 ecx, DWORD PTR tv88[ebp]
  0014e	89 8d 68 f7 ff
	ff		 mov	 DWORD PTR tv704[ebp], ecx
  00154	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00158	8b 8d 68 f7 ff
	ff		 mov	 ecx, DWORD PTR tv704[ebp]
  0015e	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00163	50		 push	 eax
  00164	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _document$[ebp]
  0016a	e8 00 00 00 00	 call	 ?LoadFile@XMLDocument@tinyxml2@@QAE?AW4XMLError@2@PBD@Z ; tinyxml2::XMLDocument::LoadFile
  0016f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00173	8d 8d a0 f8 ff
	ff		 lea	 ecx, DWORD PTR $T15[ebp]
  00179	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 104
  0017e	68 00 00 00 00	 push	 OFFSET ??_C@_03HBNNNHNM@map?$AA@
  00183	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _document$[ebp]
  00189	e8 00 00 00 00	 call	 ?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
  0018e	89 85 a8 fd ff
	ff		 mov	 DWORD PTR _mapNode$[ebp], eax
; Line 105
  00194	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00197	83 c0 34	 add	 eax, 52			; 00000034H
  0019a	50		 push	 eax
  0019b	68 00 00 00 00	 push	 OFFSET ??_C@_05IGKADHGO@width?$AA@
  001a0	8b 8d a8 fd ff
	ff		 mov	 ecx, DWORD PTR _mapNode$[ebp]
  001a6	e8 00 00 00 00	 call	 ?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute
; Line 106
  001ab	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001ae	83 c0 38	 add	 eax, 56			; 00000038H
  001b1	50		 push	 eax
  001b2	68 00 00 00 00	 push	 OFFSET ??_C@_06LNLHEAAG@height?$AA@
  001b7	8b 8d a8 fd ff
	ff		 mov	 ecx, DWORD PTR _mapNode$[ebp]
  001bd	e8 00 00 00 00	 call	 ?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute
; Line 107
  001c2	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001c5	83 c0 3c	 add	 eax, 60			; 0000003cH
  001c8	50		 push	 eax
  001c9	68 00 00 00 00	 push	 OFFSET ??_C@_09IFEADKBA@tilewidth?$AA@
  001ce	8b 8d a8 fd ff
	ff		 mov	 ecx, DWORD PTR _mapNode$[ebp]
  001d4	e8 00 00 00 00	 call	 ?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute
; Line 108
  001d9	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  001dc	83 c0 40	 add	 eax, 64			; 00000040H
  001df	50		 push	 eax
  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KAJPMDA@tileheight?$AA@
  001e5	8b 8d a8 fd ff
	ff		 mov	 ecx, DWORD PTR _mapNode$[ebp]
  001eb	e8 00 00 00 00	 call	 ?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute
; Line 110
  001f0	68 00 00 00 00	 push	 OFFSET ??_C@_07POMIDLJN@tileset?$AA@
  001f5	8b 8d a8 fd ff
	ff		 mov	 ecx, DWORD PTR _mapNode$[ebp]
  001fb	e8 00 00 00 00	 call	 ?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
  00200	89 85 9c fd ff
	ff		 mov	 DWORD PTR _tileSet$[ebp], eax
; Line 111
  00206	83 bd 9c fd ff
	ff 00		 cmp	 DWORD PTR _tileSet$[ebp], 0
  0020d	0f 84 53 01 00
	00		 je	 $LN39@LoadMap
$LN40@LoadMap:
; Line 114
  00213	83 bd 9c fd ff
	ff 00		 cmp	 DWORD PTR _tileSet$[ebp], 0
  0021a	0f 84 46 01 00
	00		 je	 $LN39@LoadMap
; Line 117
  00220	6a 00		 push	 0
  00222	68 00 00 00 00	 push	 OFFSET ??_C@_06OEKOLKIL@source?$AA@
  00227	68 00 00 00 00	 push	 OFFSET ??_C@_05NGOMGBBD@image?$AA@
  0022c	8b 8d 9c fd ff
	ff		 mov	 ecx, DWORD PTR _tileSet$[ebp]
  00232	e8 00 00 00 00	 call	 ?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
  00237	8b c8		 mov	 ecx, eax
  00239	e8 00 00 00 00	 call	 ?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
  0023e	89 85 84 fd ff
	ff		 mov	 DWORD PTR _source$47[ebp], eax
; Line 119
  00244	68 b0 00 00 00	 push	 176			; 000000b0H
  00249	8d 8d c0 fc ff
	ff		 lea	 ecx, DWORD PTR _ss2$46[ebp]
  0024f	e8 00 00 00 00	 call	 ?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
  00254	6a 01		 push	 1
  00256	6a 03		 push	 3
  00258	8d 8d c0 fc ff
	ff		 lea	 ecx, DWORD PTR _ss2$46[ebp]
  0025e	e8 00 00 00 00	 call	 ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  00263	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
; Line 120
  00267	8d 85 c0 fc ff
	ff		 lea	 eax, DWORD PTR _ss2$46[ebp]
  0026d	85 c0		 test	 eax, eax
  0026f	74 11		 je	 SHORT $LN46@LoadMap
  00271	8d 8d c0 fc ff
	ff		 lea	 ecx, DWORD PTR _ss2$46[ebp]
  00277	83 c1 10	 add	 ecx, 16			; 00000010H
  0027a	89 8d 6c f7 ff
	ff		 mov	 DWORD PTR tv207[ebp], ecx
  00280	eb 0a		 jmp	 SHORT $LN47@LoadMap
$LN46@LoadMap:
  00282	c7 85 6c f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv207[ebp], 0
$LN47@LoadMap:
  0028c	8b 95 84 fd ff
	ff		 mov	 edx, DWORD PTR _source$47[ebp]
  00292	52		 push	 edx
  00293	8b 85 6c f7 ff
	ff		 mov	 eax, DWORD PTR tv207[ebp]
  00299	50		 push	 eax
  0029a	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0029f	83 c4 08	 add	 esp, 8
; Line 121
  002a2	8d 85 90 fd ff
	ff		 lea	 eax, DWORD PTR _firstGID$48[ebp]
  002a8	50		 push	 eax
  002a9	68 00 00 00 00	 push	 OFFSET ??_C@_08ODFOMBDL@firstgid?$AA@
  002ae	8b 8d 9c fd ff
	ff		 mov	 ecx, DWORD PTR _tileSet$[ebp]
  002b4	e8 00 00 00 00	 call	 ?QueryIntAttribute@XMLElement@tinyxml2@@QBE?AW4XMLError@2@PBDPAH@Z ; tinyxml2::XMLElement::QueryIntAttribute
; Line 122
  002b9	8d 85 c4 f8 ff
	ff		 lea	 eax, DWORD PTR $T16[ebp]
  002bf	50		 push	 eax
  002c0	8d 8d c0 fc ff
	ff		 lea	 ecx, DWORD PTR _ss2$46[ebp]
  002c6	e8 00 00 00 00	 call	 ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
  002cb	89 85 6c f7 ff
	ff		 mov	 DWORD PTR tv197[ebp], eax
  002d1	8b 8d 6c f7 ff
	ff		 mov	 ecx, DWORD PTR tv197[ebp]
  002d7	89 8d 68 f7 ff
	ff		 mov	 DWORD PTR tv707[ebp], ecx
  002dd	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  002e1	8b 95 68 f7 ff
	ff		 mov	 edx, DWORD PTR tv707[ebp]
  002e7	52		 push	 edx
  002e8	8b 4d 24	 mov	 ecx, DWORD PTR _Graphic$[ebp]
  002eb	e8 00 00 00 00	 call	 ?LoadImage@Graphics@@QAEPAUSDL_Surface@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Graphics::LoadImage
  002f0	50		 push	 eax
  002f1	8b 4d 24	 mov	 ecx, DWORD PTR _Graphic$[ebp]
  002f4	e8 00 00 00 00	 call	 ?GetRenderer@Graphics@@QBEPAUSDL_Renderer@@XZ ; Graphics::GetRenderer
  002f9	50		 push	 eax
  002fa	e8 00 00 00 00	 call	 _SDL_CreateTextureFromSurface
  002ff	83 c4 08	 add	 esp, 8
  00302	89 85 b4 fc ff
	ff		 mov	 DWORD PTR _texture$45[ebp], eax
  00308	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0030c	8d 8d c4 f8 ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  00312	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 123
  00317	8b 85 90 fd ff
	ff		 mov	 eax, DWORD PTR _firstGID$48[ebp]
  0031d	50		 push	 eax
  0031e	8b 8d b4 fc ff
	ff		 mov	 ecx, DWORD PTR _texture$45[ebp]
  00324	51		 push	 ecx
  00325	8d 8d 98 f7 ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  0032b	e8 00 00 00 00	 call	 ??0TileSet@@QAE@PAUSDL_Texture@@H@Z ; TileSet::TileSet
  00330	50		 push	 eax
  00331	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00334	83 c1 58	 add	 ecx, 88			; 00000058H
  00337	e8 00 00 00 00	 call	 ?push_back@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEX$$QAUTileSet@@@Z ; std::vector<TileSet,std::allocator<TileSet> >::push_back
; Line 125
  0033c	68 00 00 00 00	 push	 OFFSET ??_C@_07POMIDLJN@tileset?$AA@
  00341	8b 8d 9c fd ff
	ff		 mov	 ecx, DWORD PTR _tileSet$[ebp]
  00347	e8 00 00 00 00	 call	 ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
  0034c	89 85 9c fd ff
	ff		 mov	 DWORD PTR _tileSet$[ebp], eax
; Line 126
  00352	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00356	8d 8d c0 fc ff
	ff		 lea	 ecx, DWORD PTR _ss2$46[ebp]
  0035c	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  00361	e9 ad fe ff ff	 jmp	 $LN40@LoadMap
$LN39@LoadMap:
; Line 129
  00366	68 00 00 00 00	 push	 OFFSET ??_C@_05NAHLDCCJ@layer?$AA@
  0036b	8b 8d a8 fd ff
	ff		 mov	 ecx, DWORD PTR _mapNode$[ebp]
  00371	e8 00 00 00 00	 call	 ?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
  00376	89 85 a8 fc ff
	ff		 mov	 DWORD PTR _layer$[ebp], eax
; Line 130
  0037c	83 bd a8 fc ff
	ff 00		 cmp	 DWORD PTR _layer$[ebp], 0
  00383	0f 84 12 03 00
	00		 je	 $LN36@LoadMap
$LN37@LoadMap:
; Line 133
  00389	83 bd a8 fc ff
	ff 00		 cmp	 DWORD PTR _layer$[ebp], 0
  00390	0f 84 05 03 00
	00		 je	 $LN36@LoadMap
; Line 135
  00396	68 00 00 00 00	 push	 OFFSET ??_C@_04PJOLNDGD@data?$AA@
  0039b	8b 8d a8 fc ff
	ff		 mov	 ecx, DWORD PTR _layer$[ebp]
  003a1	e8 00 00 00 00	 call	 ?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
  003a6	89 85 9c fc ff
	ff		 mov	 DWORD PTR _data$44[ebp], eax
; Line 136
  003ac	83 bd 9c fc ff
	ff 00		 cmp	 DWORD PTR _data$44[ebp], 0
  003b3	0f 84 c7 02 00
	00		 je	 $LN33@LoadMap
$LN34@LoadMap:
; Line 139
  003b9	83 bd 9c fc ff
	ff 00		 cmp	 DWORD PTR _data$44[ebp], 0
  003c0	0f 84 ba 02 00
	00		 je	 $LN33@LoadMap
; Line 141
  003c6	68 00 00 00 00	 push	 OFFSET ??_C@_04CKOGFLMC@tile?$AA@
  003cb	8b 8d 9c fc ff
	ff		 mov	 ecx, DWORD PTR _data$44[ebp]
  003d1	e8 00 00 00 00	 call	 ?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
  003d6	89 85 90 fc ff
	ff		 mov	 DWORD PTR _tile$43[ebp], eax
; Line 142
  003dc	83 bd 90 fc ff
	ff 00		 cmp	 DWORD PTR _tile$43[ebp], 0
  003e3	0f 84 7c 02 00
	00		 je	 $LN30@LoadMap
; Line 144
  003e9	c7 85 84 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _tileCounter$42[ebp], 0
$LN77@LoadMap:
; Line 147
  003f3	83 bd 90 fc ff
	ff 00		 cmp	 DWORD PTR _tile$43[ebp], 0
  003fa	0f 84 65 02 00
	00		 je	 $LN30@LoadMap
; Line 149
  00400	68 00 00 00 00	 push	 OFFSET ??_C@_03DONNLBFF@gid?$AA@
  00405	8b 8d 90 fc ff
	ff		 mov	 ecx, DWORD PTR _tile$43[ebp]
  0040b	e8 00 00 00 00	 call	 ?IntAttribute@XMLElement@tinyxml2@@QBEHPBD@Z ; tinyxml2::XMLElement::IntAttribute
  00410	85 c0		 test	 eax, eax
  00412	75 42		 jne	 SHORT $LN27@LoadMap
; Line 151
  00414	8b 85 84 fc ff
	ff		 mov	 eax, DWORD PTR _tileCounter$42[ebp]
  0041a	83 c0 01	 add	 eax, 1
  0041d	89 85 84 fc ff
	ff		 mov	 DWORD PTR _tileCounter$42[ebp], eax
; Line 152
  00423	68 00 00 00 00	 push	 OFFSET ??_C@_04CKOGFLMC@tile?$AA@
  00428	8b 8d 90 fc ff
	ff		 mov	 ecx, DWORD PTR _tile$43[ebp]
  0042e	e8 00 00 00 00	 call	 ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
  00433	85 c0		 test	 eax, eax
  00435	74 1a		 je	 SHORT $LN28@LoadMap
; Line 154
  00437	68 00 00 00 00	 push	 OFFSET ??_C@_04CKOGFLMC@tile?$AA@
  0043c	8b 8d 90 fc ff
	ff		 mov	 ecx, DWORD PTR _tile$43[ebp]
  00442	e8 00 00 00 00	 call	 ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
  00447	89 85 90 fc ff
	ff		 mov	 DWORD PTR _tile$43[ebp], eax
; Line 155
  0044d	eb a4		 jmp	 SHORT $LN77@LoadMap
; Line 157
  0044f	eb 05		 jmp	 SHORT $LN27@LoadMap
$LN28@LoadMap:
; Line 159
  00451	e9 0f 02 00 00	 jmp	 $LN30@LoadMap
$LN27@LoadMap:
; Line 163
  00456	68 00 00 00 00	 push	 OFFSET ??_C@_03DONNLBFF@gid?$AA@
  0045b	8b 8d 90 fc ff
	ff		 mov	 ecx, DWORD PTR _tile$43[ebp]
  00461	e8 00 00 00 00	 call	 ?IntAttribute@XMLElement@tinyxml2@@QBEHPBD@Z ; tinyxml2::XMLElement::IntAttribute
  00466	89 85 78 fc ff
	ff		 mov	 DWORD PTR _nextGID$41[ebp], eax
; Line 164
  0046c	8d 8d 68 fc ff
	ff		 lea	 ecx, DWORD PTR _nextTileSet$40[ebp]
  00472	e8 00 00 00 00	 call	 ??0TileSet@@QAE@XZ	; TileSet::TileSet
; Line 165
  00477	c7 85 5c fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$39[ebp], 0
  00481	eb 0f		 jmp	 SHORT $LN26@LoadMap
$LN25@LoadMap:
  00483	8b 85 5c fc ff
	ff		 mov	 eax, DWORD PTR _i$39[ebp]
  00489	83 c0 01	 add	 eax, 1
  0048c	89 85 5c fc ff
	ff		 mov	 DWORD PTR _i$39[ebp], eax
$LN26@LoadMap:
  00492	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00495	83 c1 58	 add	 ecx, 88			; 00000058H
  00498	e8 00 00 00 00	 call	 ?size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::size
  0049d	39 85 5c fc ff
	ff		 cmp	 DWORD PTR _i$39[ebp], eax
  004a3	73 44		 jae	 SHORT $LN24@LoadMap
; Line 167
  004a5	8b 85 5c fc ff
	ff		 mov	 eax, DWORD PTR _i$39[ebp]
  004ab	50		 push	 eax
  004ac	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  004af	83 c1 58	 add	 ecx, 88			; 00000058H
  004b2	e8 00 00 00 00	 call	 ??A?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEAAUTileSet@@I@Z ; std::vector<TileSet,std::allocator<TileSet> >::operator[]
  004b7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  004ba	3b 8d 78 fc ff
	ff		 cmp	 ecx, DWORD PTR _nextGID$41[ebp]
  004c0	7f 25		 jg	 SHORT $LN23@LoadMap
; Line 169
  004c2	8b 85 5c fc ff
	ff		 mov	 eax, DWORD PTR _i$39[ebp]
  004c8	50		 push	 eax
  004c9	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  004cc	83 c1 58	 add	 ecx, 88			; 00000058H
  004cf	e8 00 00 00 00	 call	 ?at@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEAAUTileSet@@I@Z ; std::vector<TileSet,std::allocator<TileSet> >::at
  004d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  004d6	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  004d9	89 8d 68 fc ff
	ff		 mov	 DWORD PTR _nextTileSet$40[ebp], ecx
  004df	89 95 6c fc ff
	ff		 mov	 DWORD PTR _nextTileSet$40[ebp+4], edx
; Line 170
  004e5	eb 02		 jmp	 SHORT $LN24@LoadMap
$LN23@LoadMap:
; Line 172
  004e7	eb 9a		 jmp	 SHORT $LN25@LoadMap
$LN24@LoadMap:
; Line 174
  004e9	83 bd 6c fc ff
	ff ff		 cmp	 DWORD PTR _nextTileSet$40[ebp+4], -1
  004f0	75 45		 jne	 SHORT $LN20@LoadMap
; Line 176
  004f2	8b 85 84 fc ff
	ff		 mov	 eax, DWORD PTR _tileCounter$42[ebp]
  004f8	83 c0 01	 add	 eax, 1
  004fb	89 85 84 fc ff
	ff		 mov	 DWORD PTR _tileCounter$42[ebp], eax
; Line 177
  00501	68 00 00 00 00	 push	 OFFSET ??_C@_04CKOGFLMC@tile?$AA@
  00506	8b 8d 90 fc ff
	ff		 mov	 ecx, DWORD PTR _tile$43[ebp]
  0050c	e8 00 00 00 00	 call	 ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
  00511	85 c0		 test	 eax, eax
  00513	74 1d		 je	 SHORT $LN21@LoadMap
; Line 179
  00515	68 00 00 00 00	 push	 OFFSET ??_C@_04CKOGFLMC@tile?$AA@
  0051a	8b 8d 90 fc ff
	ff		 mov	 ecx, DWORD PTR _tile$43[ebp]
  00520	e8 00 00 00 00	 call	 ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
  00525	89 85 90 fc ff
	ff		 mov	 DWORD PTR _tile$43[ebp], eax
; Line 180
  0052b	e9 c3 fe ff ff	 jmp	 $LN77@LoadMap
; Line 182
  00530	eb 05		 jmp	 SHORT $LN20@LoadMap
$LN21@LoadMap:
; Line 184
  00532	e9 2e 01 00 00	 jmp	 $LN30@LoadMap
$LN20@LoadMap:
; Line 188
  00537	c7 85 50 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _xPos$38[ebp], 0
; Line 189
  00541	c7 85 44 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _yPos$37[ebp], 0
; Line 190
  0054b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0054e	8b 85 84 fc ff
	ff		 mov	 eax, DWORD PTR _tileCounter$42[ebp]
  00554	99		 cdq
  00555	f7 79 34	 idiv	 DWORD PTR [ecx+52]
  00558	89 95 50 fc ff
	ff		 mov	 DWORD PTR _xPos$38[ebp], edx
; Line 191
  0055e	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00561	8b 8d 50 fc ff
	ff		 mov	 ecx, DWORD PTR _xPos$38[ebp]
  00567	0f af 48 3c	 imul	 ecx, DWORD PTR [eax+60]
  0056b	89 8d 50 fc ff
	ff		 mov	 DWORD PTR _xPos$38[ebp], ecx
; Line 192
  00571	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00574	8b 85 84 fc ff
	ff		 mov	 eax, DWORD PTR _tileCounter$42[ebp]
  0057a	99		 cdq
  0057b	f7 79 34	 idiv	 DWORD PTR [ecx+52]
  0057e	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00581	0f af 42 40	 imul	 eax, DWORD PTR [edx+64]
  00585	03 85 44 fc ff
	ff		 add	 eax, DWORD PTR _yPos$37[ebp]
  0058b	89 85 44 fc ff
	ff		 mov	 DWORD PTR _yPos$37[ebp], eax
; Line 193
  00591	8b 85 44 fc ff
	ff		 mov	 eax, DWORD PTR _yPos$37[ebp]
  00597	50		 push	 eax
  00598	8b 8d 50 fc ff
	ff		 mov	 ecx, DWORD PTR _xPos$38[ebp]
  0059e	51		 push	 ecx
  0059f	8d 8d 34 fc ff
	ff		 lea	 ecx, DWORD PTR _finalTilePosition$36[ebp]
  005a5	e8 00 00 00 00	 call	 ??0Vector2@@QAE@HH@Z	; Vector2::Vector2
; Line 195
  005aa	8b 85 78 fc ff
	ff		 mov	 eax, DWORD PTR _nextGID$41[ebp]
  005b0	50		 push	 eax
  005b1	8b 8d 6c fc ff
	ff		 mov	 ecx, DWORD PTR _nextTileSet$40[ebp+4]
  005b7	51		 push	 ecx
  005b8	8b 95 68 fc ff
	ff		 mov	 edx, DWORD PTR _nextTileSet$40[ebp]
  005be	52		 push	 edx
  005bf	8d 85 24 fc ff
	ff		 lea	 eax, DWORD PTR _finalTileSetPosition$35[ebp]
  005c5	50		 push	 eax
  005c6	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  005c9	e8 00 00 00 00	 call	 ?GetTileSetPosition@Level@@AAE?AUVector2@@UTileSet@@H@Z ; Level::GetTileSetPosition
; Line 197
  005ce	6a 1c		 push	 28			; 0000001cH
  005d0	8d 8d 00 fc ff
	ff		 lea	 ecx, DWORD PTR _newTile$34[ebp]
  005d6	e8 00 00 00 00	 call	 ?__autoclassinit2@Tile@@QAEXI@Z
  005db	8b 85 38 fc ff
	ff		 mov	 eax, DWORD PTR _finalTilePosition$36[ebp+4]
  005e1	50		 push	 eax
  005e2	8b 8d 34 fc ff
	ff		 mov	 ecx, DWORD PTR _finalTilePosition$36[ebp]
  005e8	51		 push	 ecx
  005e9	8b 95 28 fc ff
	ff		 mov	 edx, DWORD PTR _finalTileSetPosition$35[ebp+4]
  005ef	52		 push	 edx
  005f0	8b 85 24 fc ff
	ff		 mov	 eax, DWORD PTR _finalTileSetPosition$35[ebp]
  005f6	50		 push	 eax
  005f7	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  005fa	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  005fd	52		 push	 edx
  005fe	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00601	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00604	51		 push	 ecx
  00605	8d 8d a8 f7 ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0060b	e8 00 00 00 00	 call	 ??0Vector2@@QAE@HH@Z	; Vector2::Vector2
  00610	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00613	52		 push	 edx
  00614	8b 00		 mov	 eax, DWORD PTR [eax]
  00616	50		 push	 eax
  00617	8b 8d 68 fc ff
	ff		 mov	 ecx, DWORD PTR _nextTileSet$40[ebp]
  0061d	51		 push	 ecx
  0061e	8d 8d 00 fc ff
	ff		 lea	 ecx, DWORD PTR _newTile$34[ebp]
  00624	e8 00 00 00 00	 call	 ??0Tile@@QAE@PAUSDL_Texture@@UVector2@@11@Z ; Tile::Tile
; Line 198
  00629	8d 85 00 fc ff
	ff		 lea	 eax, DWORD PTR _newTile$34[ebp]
  0062f	50		 push	 eax
  00630	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00633	83 c1 48	 add	 ecx, 72			; 00000048H
  00636	e8 00 00 00 00	 call	 ?push_back@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAEXABVTile@@@Z ; std::vector<Tile,std::allocator<Tile> >::push_back
; Line 199
  0063b	8b 85 84 fc ff
	ff		 mov	 eax, DWORD PTR _tileCounter$42[ebp]
  00641	83 c0 01	 add	 eax, 1
  00644	89 85 84 fc ff
	ff		 mov	 DWORD PTR _tileCounter$42[ebp], eax
; Line 201
  0064a	68 00 00 00 00	 push	 OFFSET ??_C@_04CKOGFLMC@tile?$AA@
  0064f	8b 8d 90 fc ff
	ff		 mov	 ecx, DWORD PTR _tile$43[ebp]
  00655	e8 00 00 00 00	 call	 ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
  0065a	89 85 90 fc ff
	ff		 mov	 DWORD PTR _tile$43[ebp], eax
; Line 202
  00660	e9 8e fd ff ff	 jmp	 $LN77@LoadMap
$LN30@LoadMap:
; Line 205
  00665	68 00 00 00 00	 push	 OFFSET ??_C@_04PJOLNDGD@data?$AA@
  0066a	8b 8d 9c fc ff
	ff		 mov	 ecx, DWORD PTR _data$44[ebp]
  00670	e8 00 00 00 00	 call	 ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
  00675	89 85 9c fc ff
	ff		 mov	 DWORD PTR _data$44[ebp], eax
; Line 206
  0067b	e9 39 fd ff ff	 jmp	 $LN34@LoadMap
$LN33@LoadMap:
; Line 209
  00680	68 00 00 00 00	 push	 OFFSET ??_C@_05NAHLDCCJ@layer?$AA@
  00685	8b 8d a8 fc ff
	ff		 mov	 ecx, DWORD PTR _layer$[ebp]
  0068b	e8 00 00 00 00	 call	 ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
  00690	89 85 a8 fc ff
	ff		 mov	 DWORD PTR _layer$[ebp], eax
; Line 210
  00696	e9 ee fc ff ff	 jmp	 $LN37@LoadMap
$LN36@LoadMap:
; Line 214
  0069b	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MIIFFOHH@objectgroup?$AA@
  006a0	8b 8d a8 fd ff
	ff		 mov	 ecx, DWORD PTR _mapNode$[ebp]
  006a6	e8 00 00 00 00	 call	 ?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
  006ab	89 85 f4 fb ff
	ff		 mov	 DWORD PTR _objectGroup$[ebp], eax
; Line 215
  006b1	83 bd f4 fb ff
	ff 00		 cmp	 DWORD PTR _objectGroup$[ebp], 0
  006b8	0f 84 8d 07 00
	00		 je	 $LN17@LoadMap
$LN18@LoadMap:
; Line 217
  006be	83 bd f4 fb ff
	ff 00		 cmp	 DWORD PTR _objectGroup$[ebp], 0
  006c5	0f 84 80 07 00
	00		 je	 $LN17@LoadMap
; Line 219
  006cb	6a 00		 push	 0
  006cd	68 00 00 00 00	 push	 OFFSET ??_C@_04MEMAJGDJ@name?$AA@
  006d2	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR _objectGroup$[ebp]
  006d8	e8 00 00 00 00	 call	 ?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
  006dd	89 85 e8 fb ff
	ff		 mov	 DWORD PTR _collisionName$33[ebp], eax
; Line 220
  006e3	68 b0 00 00 00	 push	 176			; 000000b0H
  006e8	8d 8d 30 fb ff
	ff		 lea	 ecx, DWORD PTR _name$32[ebp]
  006ee	e8 00 00 00 00	 call	 ?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
  006f3	6a 01		 push	 1
  006f5	6a 03		 push	 3
  006f7	8d 8d 30 fb ff
	ff		 lea	 ecx, DWORD PTR _name$32[ebp]
  006fd	e8 00 00 00 00	 call	 ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  00702	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; Line 221
  00706	8d 85 30 fb ff
	ff		 lea	 eax, DWORD PTR _name$32[ebp]
  0070c	85 c0		 test	 eax, eax
  0070e	74 11		 je	 SHORT $LN48@LoadMap
  00710	8d 8d 30 fb ff
	ff		 lea	 ecx, DWORD PTR _name$32[ebp]
  00716	83 c1 10	 add	 ecx, 16			; 00000010H
  00719	89 8d 6c f7 ff
	ff		 mov	 DWORD PTR tv441[ebp], ecx
  0071f	eb 0a		 jmp	 SHORT $LN49@LoadMap
$LN48@LoadMap:
  00721	c7 85 6c f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv441[ebp], 0
$LN49@LoadMap:
  0072b	8b 95 e8 fb ff
	ff		 mov	 edx, DWORD PTR _collisionName$33[ebp]
  00731	52		 push	 edx
  00732	8b 85 6c f7 ff
	ff		 mov	 eax, DWORD PTR tv441[ebp]
  00738	50		 push	 eax
  00739	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  0073e	83 c4 08	 add	 esp, 8
; Line 222
  00741	68 00 00 00 00	 push	 OFFSET ??_C@_09EOCCEAAK@Collision?$AA@
  00746	8d 85 74 f7 ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0074c	50		 push	 eax
  0074d	8d 8d 30 fb ff
	ff		 lea	 ecx, DWORD PTR _name$32[ebp]
  00753	e8 00 00 00 00	 call	 ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
  00758	89 85 6c f7 ff
	ff		 mov	 DWORD PTR tv431[ebp], eax
  0075e	8b 8d 6c f7 ff
	ff		 mov	 ecx, DWORD PTR tv431[ebp]
  00764	89 8d 68 f7 ff
	ff		 mov	 DWORD PTR tv710[ebp], ecx
  0076a	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  0076e	8b 95 68 f7 ff
	ff		 mov	 edx, DWORD PTR tv710[ebp]
  00774	52		 push	 edx
  00775	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  0077a	83 c4 08	 add	 esp, 8
  0077d	88 85 bb f7 ff
	ff		 mov	 BYTE PTR $T5[ebp], al
  00783	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00787	8d 8d 74 f7 ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0078d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00792	0f b6 85 bb f7
	ff ff		 movzx	 eax, BYTE PTR $T5[ebp]
  00799	85 c0		 test	 eax, eax
  0079b	0f 84 ae 01 00
	00		 je	 $LN16@LoadMap
; Line 224
  007a1	68 00 00 00 00	 push	 OFFSET ??_C@_06IEOJBDIK@object?$AA@
  007a6	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR _objectGroup$[ebp]
  007ac	e8 00 00 00 00	 call	 ?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
  007b1	89 85 24 fb ff
	ff		 mov	 DWORD PTR _collideObject$31[ebp], eax
; Line 225
  007b7	83 bd 24 fb ff
	ff 00		 cmp	 DWORD PTR _collideObject$31[ebp], 0
  007be	0f 84 86 01 00
	00		 je	 $LN13@LoadMap
$LN14@LoadMap:
; Line 227
  007c4	83 bd 24 fb ff
	ff 00		 cmp	 DWORD PTR _collideObject$31[ebp], 0
  007cb	0f 84 79 01 00
	00		 je	 $LN13@LoadMap
; Line 230
  007d1	68 00 00 00 00	 push	 OFFSET ??_C@_01FJMABOPO@x?$AA@
  007d6	8b 8d 24 fb ff
	ff		 mov	 ecx, DWORD PTR _collideObject$31[ebp]
  007dc	e8 00 00 00 00	 call	 ?FloatAttribute@XMLElement@tinyxml2@@QBEMPBD@Z ; tinyxml2::XMLElement::FloatAttribute
  007e1	d9 9d 18 fb ff
	ff		 fstp	 DWORD PTR _x$30[ebp]
; Line 231
  007e7	68 00 00 00 00	 push	 OFFSET ??_C@_01EANLCPLP@y?$AA@
  007ec	8b 8d 24 fb ff
	ff		 mov	 ecx, DWORD PTR _collideObject$31[ebp]
  007f2	e8 00 00 00 00	 call	 ?FloatAttribute@XMLElement@tinyxml2@@QBEMPBD@Z ; tinyxml2::XMLElement::FloatAttribute
  007f7	d9 9d 0c fb ff
	ff		 fstp	 DWORD PTR _y$29[ebp]
; Line 232
  007fd	68 00 00 00 00	 push	 OFFSET ??_C@_05IGKADHGO@width?$AA@
  00802	8b 8d 24 fb ff
	ff		 mov	 ecx, DWORD PTR _collideObject$31[ebp]
  00808	e8 00 00 00 00	 call	 ?FloatAttribute@XMLElement@tinyxml2@@QBEMPBD@Z ; tinyxml2::XMLElement::FloatAttribute
  0080d	d9 9d 00 fb ff
	ff		 fstp	 DWORD PTR _width$28[ebp]
; Line 233
  00813	68 00 00 00 00	 push	 OFFSET ??_C@_06LNLHEAAG@height?$AA@
  00818	8b 8d 24 fb ff
	ff		 mov	 ecx, DWORD PTR _collideObject$31[ebp]
  0081e	e8 00 00 00 00	 call	 ?FloatAttribute@XMLElement@tinyxml2@@QBEMPBD@Z ; tinyxml2::XMLElement::FloatAttribute
  00823	d9 9d f4 fa ff
	ff		 fstp	 DWORD PTR _height$27[ebp]
; Line 239
  00829	51		 push	 ecx
  0082a	f3 0f 10 85 f4
	fa ff ff	 movss	 xmm0, DWORD PTR _height$27[ebp]
  00832	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00837	e8 00 00 00 00	 call	 ?ceil@@YAMM@Z		; ceil
  0083c	83 c4 04	 add	 esp, 4
  0083f	d9 9d 6c f7 ff
	ff		 fstp	 DWORD PTR tv903[ebp]
  00845	f3 0f 10 85 6c
	f7 ff ff	 movss	 xmm0, DWORD PTR tv903[ebp]
  0084d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _SPRITE_SCALE
  00855	f3 0f 2c c0	 cvttss2si eax, xmm0
  00859	50		 push	 eax
  0085a	51		 push	 ecx
  0085b	f3 0f 10 85 00
	fb ff ff	 movss	 xmm0, DWORD PTR _width$28[ebp]
  00863	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00868	e8 00 00 00 00	 call	 ?ceil@@YAMM@Z		; ceil
  0086d	83 c4 04	 add	 esp, 4
  00870	d9 9d 68 f7 ff
	ff		 fstp	 DWORD PTR tv909[ebp]
  00876	f3 0f 10 85 68
	f7 ff ff	 movss	 xmm0, DWORD PTR tv909[ebp]
  0087e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _SPRITE_SCALE
  00886	f3 0f 2c c8	 cvttss2si ecx, xmm0
  0088a	51		 push	 ecx
  0088b	51		 push	 ecx
  0088c	f3 0f 10 85 0c
	fb ff ff	 movss	 xmm0, DWORD PTR _y$29[ebp]
  00894	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00899	e8 00 00 00 00	 call	 ?ceil@@YAMM@Z		; ceil
  0089e	83 c4 04	 add	 esp, 4
  008a1	d9 9d 64 f7 ff
	ff		 fstp	 DWORD PTR tv915[ebp]
  008a7	f3 0f 10 85 64
	f7 ff ff	 movss	 xmm0, DWORD PTR tv915[ebp]
  008af	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _SPRITE_SCALE
  008b7	f3 0f 2c d0	 cvttss2si edx, xmm0
  008bb	52		 push	 edx
  008bc	51		 push	 ecx
  008bd	f3 0f 10 85 18
	fb ff ff	 movss	 xmm0, DWORD PTR _x$30[ebp]
  008c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ca	e8 00 00 00 00	 call	 ?ceil@@YAMM@Z		; ceil
  008cf	83 c4 04	 add	 esp, 4
  008d2	d9 9d 60 f7 ff
	ff		 fstp	 DWORD PTR tv921[ebp]
  008d8	f3 0f 10 85 60
	f7 ff ff	 movss	 xmm0, DWORD PTR tv921[ebp]
  008e0	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _SPRITE_SCALE
  008e8	f3 0f 2c c0	 cvttss2si eax, xmm0
  008ec	50		 push	 eax
  008ed	8d 8d c4 f7 ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  008f3	e8 00 00 00 00	 call	 ??0CaveRectangle@@QAE@HHHH@Z ; CaveRectangle::CaveRectangle
  008f8	89 85 5c f7 ff
	ff		 mov	 DWORD PTR tv81[ebp], eax
  008fe	8b 8d 5c f7 ff
	ff		 mov	 ecx, DWORD PTR tv81[ebp]
  00904	89 8d 58 f7 ff
	ff		 mov	 DWORD PTR tv712[ebp], ecx
  0090a	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9
  0090e	8b 95 58 f7 ff
	ff		 mov	 edx, DWORD PTR tv712[ebp]
  00914	52		 push	 edx
  00915	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00918	83 c1 68	 add	 ecx, 104		; 00000068H
  0091b	e8 00 00 00 00	 call	 ?push_back@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEX$$QAVCaveRectangle@@@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::push_back
  00920	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00924	8d 8d c4 f7 ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0092a	e8 00 00 00 00	 call	 ??1CaveRectangle@@QAE@XZ ; CaveRectangle::~CaveRectangle
; Line 241
  0092f	68 00 00 00 00	 push	 OFFSET ??_C@_06IEOJBDIK@object?$AA@
  00934	8b 8d 24 fb ff
	ff		 mov	 ecx, DWORD PTR _collideObject$31[ebp]
  0093a	e8 00 00 00 00	 call	 ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
  0093f	89 85 24 fb ff
	ff		 mov	 DWORD PTR _collideObject$31[ebp], eax
; Line 242
  00945	e9 7a fe ff ff	 jmp	 $LN14@LoadMap
$LN13@LoadMap:
; Line 245
  0094a	e9 d2 04 00 00	 jmp	 $LN8@LoadMap
$LN16@LoadMap:
  0094f	68 00 00 00 00	 push	 OFFSET ??_C@_05LHNLKOKO@Slope?$AA@
  00954	8d 85 34 f8 ff
	ff		 lea	 eax, DWORD PTR $T12[ebp]
  0095a	50		 push	 eax
  0095b	8d 8d 30 fb ff
	ff		 lea	 ecx, DWORD PTR _name$32[ebp]
  00961	e8 00 00 00 00	 call	 ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
  00966	89 85 6c f7 ff
	ff		 mov	 DWORD PTR tv70[ebp], eax
  0096c	8b 8d 6c f7 ff
	ff		 mov	 ecx, DWORD PTR tv70[ebp]
  00972	89 8d 68 f7 ff
	ff		 mov	 DWORD PTR tv714[ebp], ecx
  00978	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  0097c	8b 95 68 f7 ff
	ff		 mov	 edx, DWORD PTR tv714[ebp]
  00982	52		 push	 edx
  00983	e8 00 00 00 00	 call	 ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
  00988	83 c4 08	 add	 esp, 8
  0098b	88 85 df f7 ff
	ff		 mov	 BYTE PTR $T7[ebp], al
  00991	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00995	8d 8d 34 f8 ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  0099b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  009a0	0f b6 85 df f7
	ff ff		 movzx	 eax, BYTE PTR $T7[ebp]
  009a7	85 c0		 test	 eax, eax
  009a9	0f 84 72 04 00
	00		 je	 $LN8@LoadMap
; Line 247
  009af	68 00 00 00 00	 push	 OFFSET ??_C@_06IEOJBDIK@object?$AA@
  009b4	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR _objectGroup$[ebp]
  009ba	e8 00 00 00 00	 call	 ?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
  009bf	89 85 e8 fa ff
	ff		 mov	 DWORD PTR _slopeObject$26[ebp], eax
; Line 248
  009c5	83 bd e8 fa ff
	ff 00		 cmp	 DWORD PTR _slopeObject$26[ebp], 0
  009cc	0f 84 4f 04 00
	00		 je	 $LN8@LoadMap
$LN9@LoadMap:
; Line 250
  009d2	83 bd e8 fa ff
	ff 00		 cmp	 DWORD PTR _slopeObject$26[ebp], 0
  009d9	0f 84 42 04 00
	00		 je	 $LN8@LoadMap
; Line 252
  009df	6a 10		 push	 16			; 00000010H
  009e1	8d 8d d0 fa ff
	ff		 lea	 ecx, DWORD PTR _slopePoints$25[ebp]
  009e7	e8 00 00 00 00	 call	 ?__autoclassinit2@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEXI@Z
  009ec	8d 8d d0 fa ff
	ff		 lea	 ecx, DWORD PTR _slopePoints$25[ebp]
  009f2	e8 00 00 00 00	 call	 ??0?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAE@XZ ; std::vector<Vector2,std::allocator<Vector2> >::vector<Vector2,std::allocator<Vector2> >
  009f7	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
; Line 253
  009fb	68 00 00 00 00	 push	 OFFSET ??_C@_01EANLCPLP@y?$AA@
  00a00	8b 8d e8 fa ff
	ff		 mov	 ecx, DWORD PTR _slopeObject$26[ebp]
  00a06	e8 00 00 00 00	 call	 ?FloatAttribute@XMLElement@tinyxml2@@QBEMPBD@Z ; tinyxml2::XMLElement::FloatAttribute
  00a0b	51		 push	 ecx
  00a0c	d9 1c 24	 fstp	 DWORD PTR [esp]
  00a0f	e8 00 00 00 00	 call	 ?ceil@@YAMM@Z		; ceil
  00a14	83 c4 04	 add	 esp, 4
  00a17	e8 00 00 00 00	 call	 __ftol2_sse
  00a1c	50		 push	 eax
  00a1d	68 00 00 00 00	 push	 OFFSET ??_C@_01FJMABOPO@x?$AA@
  00a22	8b 8d e8 fa ff
	ff		 mov	 ecx, DWORD PTR _slopeObject$26[ebp]
  00a28	e8 00 00 00 00	 call	 ?FloatAttribute@XMLElement@tinyxml2@@QBEMPBD@Z ; tinyxml2::XMLElement::FloatAttribute
  00a2d	51		 push	 ecx
  00a2e	d9 1c 24	 fstp	 DWORD PTR [esp]
  00a31	e8 00 00 00 00	 call	 ?ceil@@YAMM@Z		; ceil
  00a36	83 c4 04	 add	 esp, 4
  00a39	e8 00 00 00 00	 call	 __ftol2_sse
  00a3e	50		 push	 eax
  00a3f	8d 8d c0 fa ff
	ff		 lea	 ecx, DWORD PTR _pointOne$24[ebp]
  00a45	e8 00 00 00 00	 call	 ??0Vector2@@QAE@HH@Z	; Vector2::Vector2
; Line 255
  00a4a	68 00 00 00 00	 push	 OFFSET ??_C@_08MAIKLLAG@polyline?$AA@
  00a4f	8b 8d e8 fa ff
	ff		 mov	 ecx, DWORD PTR _slopeObject$26[ebp]
  00a55	e8 00 00 00 00	 call	 ?FirstChildElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::FirstChildElement
  00a5a	89 85 b4 fa ff
	ff		 mov	 DWORD PTR _slopePolyLine$23[ebp], eax
; Line 256
  00a60	83 bd b4 fa ff
	ff 00		 cmp	 DWORD PTR _slopePolyLine$23[ebp], 0
  00a67	0f 84 d2 01 00
	00		 je	 $LN7@LoadMap
; Line 258
  00a6d	6a 10		 push	 16			; 00000010H
  00a6f	8d 8d 9c fa ff
	ff		 lea	 ecx, DWORD PTR _polyPairs$22[ebp]
  00a75	e8 00 00 00 00	 call	 ?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
  00a7a	8d 8d 9c fa ff
	ff		 lea	 ecx, DWORD PTR _polyPairs$22[ebp]
  00a80	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00a85	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
; Line 259
  00a89	6a 00		 push	 0
  00a8b	68 00 00 00 00	 push	 OFFSET ??_C@_06GPGIDCJA@points?$AA@
  00a90	8b 8d b4 fa ff
	ff		 mov	 ecx, DWORD PTR _slopePolyLine$23[ebp]
  00a96	e8 00 00 00 00	 call	 ?Attribute@XMLElement@tinyxml2@@QBEPBDPBD0@Z ; tinyxml2::XMLElement::Attribute
  00a9b	89 85 90 fa ff
	ff		 mov	 DWORD PTR _slopePointNames$21[ebp], eax
; Line 261
  00aa1	68 b0 00 00 00	 push	 176			; 000000b0H
  00aa6	8d 8d d8 f9 ff
	ff		 lea	 ecx, DWORD PTR _pointsName$20[ebp]
  00aac	e8 00 00 00 00	 call	 ?__autoclassinit2@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
  00ab1	6a 01		 push	 1
  00ab3	6a 03		 push	 3
  00ab5	8d 8d d8 f9 ff
	ff		 lea	 ecx, DWORD PTR _pointsName$20[ebp]
  00abb	e8 00 00 00 00	 call	 ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  00ac0	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
; Line 262
  00ac4	8d 85 d8 f9 ff
	ff		 lea	 eax, DWORD PTR _pointsName$20[ebp]
  00aca	85 c0		 test	 eax, eax
  00acc	74 11		 je	 SHORT $LN50@LoadMap
  00ace	8d 8d d8 f9 ff
	ff		 lea	 ecx, DWORD PTR _pointsName$20[ebp]
  00ad4	83 c1 10	 add	 ecx, 16			; 00000010H
  00ad7	89 8d 6c f7 ff
	ff		 mov	 DWORD PTR tv577[ebp], ecx
  00add	eb 0a		 jmp	 SHORT $LN51@LoadMap
$LN50@LoadMap:
  00adf	c7 85 6c f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv577[ebp], 0
$LN51@LoadMap:
  00ae9	8b 95 90 fa ff
	ff		 mov	 edx, DWORD PTR _slopePointNames$21[ebp]
  00aef	52		 push	 edx
  00af0	8b 85 6c f7 ff
	ff		 mov	 eax, DWORD PTR tv577[ebp]
  00af6	50		 push	 eax
  00af7	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
  00afc	83 c4 08	 add	 esp, 8
; Line 263
  00aff	6a 20		 push	 32			; 00000020H
  00b01	8d 85 9c fa ff
	ff		 lea	 eax, DWORD PTR _polyPairs$22[ebp]
  00b07	50		 push	 eax
  00b08	8d 8d 7c f8 ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  00b0e	51		 push	 ecx
  00b0f	8d 8d d8 f9 ff
	ff		 lea	 ecx, DWORD PTR _pointsName$20[ebp]
  00b15	e8 00 00 00 00	 call	 ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
  00b1a	89 85 6c f7 ff
	ff		 mov	 DWORD PTR tv567[ebp], eax
  00b20	8b 95 6c f7 ff
	ff		 mov	 edx, DWORD PTR tv567[ebp]
  00b26	89 95 68 f7 ff
	ff		 mov	 DWORD PTR tv719[ebp], edx
  00b2c	c6 45 fc 0e	 mov	 BYTE PTR __$EHRec$[ebp+8], 14 ; 0000000eH
  00b30	8b 85 68 f7 ff
	ff		 mov	 eax, DWORD PTR tv719[ebp]
  00b36	50		 push	 eax
  00b37	e8 00 00 00 00	 call	 ?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z ; CaveUtiltity::Split
  00b3c	83 c4 0c	 add	 esp, 12			; 0000000cH
  00b3f	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  00b43	8d 8d 7c f8 ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  00b49	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 265
  00b4e	c7 85 cc f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$19[ebp], 0
  00b58	eb 0f		 jmp	 SHORT $LN6@LoadMap
$LN5@LoadMap:
  00b5a	8b 85 cc f9 ff
	ff		 mov	 eax, DWORD PTR _i$19[ebp]
  00b60	83 c0 01	 add	 eax, 1
  00b63	89 85 cc f9 ff
	ff		 mov	 DWORD PTR _i$19[ebp], eax
$LN6@LoadMap:
  00b69	8d 8d 9c fa ff
	ff		 lea	 ecx, DWORD PTR _polyPairs$22[ebp]
  00b6f	e8 00 00 00 00	 call	 ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
  00b74	39 85 cc f9 ff
	ff		 cmp	 DWORD PTR _i$19[ebp], eax
  00b7a	0f 83 a1 00 00
	00		 jae	 $LN4@LoadMap
; Line 267
  00b80	6a 10		 push	 16			; 00000010H
  00b82	8d 8d b4 f9 ff
	ff		 lea	 ecx, DWORD PTR _ps$18[ebp]
  00b88	e8 00 00 00 00	 call	 ?__autoclassinit2@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
  00b8d	8d 8d b4 f9 ff
	ff		 lea	 ecx, DWORD PTR _ps$18[ebp]
  00b93	e8 00 00 00 00	 call	 ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00b98	c6 45 fc 0f	 mov	 BYTE PTR __$EHRec$[ebp+8], 15 ; 0000000fH
; Line 268
  00b9c	6a 2c		 push	 44			; 0000002cH
  00b9e	8d 85 b4 f9 ff
	ff		 lea	 eax, DWORD PTR _ps$18[ebp]
  00ba4	50		 push	 eax
  00ba5	8b 8d cc f9 ff
	ff		 mov	 ecx, DWORD PTR _i$19[ebp]
  00bab	51		 push	 ecx
  00bac	8d 8d 9c fa ff
	ff		 lea	 ecx, DWORD PTR _polyPairs$22[ebp]
  00bb2	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
  00bb7	50		 push	 eax
  00bb8	e8 00 00 00 00	 call	 ?Split@CaveUtiltity@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@D@Z ; CaveUtiltity::Split
  00bbd	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 269
  00bc0	6a 0a		 push	 10			; 0000000aH
  00bc2	6a 00		 push	 0
  00bc4	6a 01		 push	 1
  00bc6	8d 8d b4 f9 ff
	ff		 lea	 ecx, DWORD PTR _ps$18[ebp]
  00bcc	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
  00bd1	50		 push	 eax
  00bd2	e8 00 00 00 00	 call	 ?stoi@std@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAIH@Z ; std::stoi
  00bd7	83 c4 0c	 add	 esp, 12			; 0000000cH
  00bda	50		 push	 eax
  00bdb	6a 0a		 push	 10			; 0000000aH
  00bdd	6a 00		 push	 0
  00bdf	6a 00		 push	 0
  00be1	8d 8d b4 f9 ff
	ff		 lea	 ecx, DWORD PTR _ps$18[ebp]
  00be7	e8 00 00 00 00	 call	 ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
  00bec	50		 push	 eax
  00bed	e8 00 00 00 00	 call	 ?stoi@std@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAIH@Z ; std::stoi
  00bf2	83 c4 0c	 add	 esp, 12			; 0000000cH
  00bf5	50		 push	 eax
  00bf6	8d 8d e8 f7 ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00bfc	e8 00 00 00 00	 call	 ??0Vector2@@QAE@HH@Z	; Vector2::Vector2
  00c01	50		 push	 eax
  00c02	8d 8d d0 fa ff
	ff		 lea	 ecx, DWORD PTR _slopePoints$25[ebp]
  00c08	e8 00 00 00 00	 call	 ?push_back@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEX$$QAUVector2@@@Z ; std::vector<Vector2,std::allocator<Vector2> >::push_back
; Line 270
  00c0d	c6 45 fc 0d	 mov	 BYTE PTR __$EHRec$[ebp+8], 13 ; 0000000dH
  00c11	8d 8d b4 f9 ff
	ff		 lea	 ecx, DWORD PTR _ps$18[ebp]
  00c17	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00c1c	e9 39 ff ff ff	 jmp	 $LN5@LoadMap
$LN4@LoadMap:
; Line 271
  00c21	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  00c25	8d 8d d8 f9 ff
	ff		 lea	 ecx, DWORD PTR _pointsName$20[ebp]
  00c2b	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  00c30	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  00c34	8d 8d 9c fa ff
	ff		 lea	 ecx, DWORD PTR _polyPairs$22[ebp]
  00c3a	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN7@LoadMap:
; Line 273
  00c3f	c7 85 a8 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$17[ebp], 0
  00c49	eb 0f		 jmp	 SHORT $LN3@LoadMap
$LN2@LoadMap:
  00c4b	8b 85 a8 f9 ff
	ff		 mov	 eax, DWORD PTR _i$17[ebp]
  00c51	83 c0 02	 add	 eax, 2
  00c54	89 85 a8 f9 ff
	ff		 mov	 DWORD PTR _i$17[ebp], eax
$LN3@LoadMap:
  00c5a	8d 8d d0 fa ff
	ff		 lea	 ecx, DWORD PTR _slopePoints$25[ebp]
  00c60	e8 00 00 00 00	 call	 ?size@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QBEIXZ ; std::vector<Vector2,std::allocator<Vector2> >::size
  00c65	39 85 a8 f9 ff
	ff		 cmp	 DWORD PTR _i$17[ebp], eax
  00c6b	0f 83 86 01 00
	00		 jae	 $LN1@LoadMap
; Line 278
  00c71	83 bd a8 f9 ff
	ff 02		 cmp	 DWORD PTR _i$17[ebp], 2
  00c78	7d 11		 jge	 SHORT $LN52@LoadMap
  00c7a	8b 85 a8 f9 ff
	ff		 mov	 eax, DWORD PTR _i$17[ebp]
  00c80	83 c0 01	 add	 eax, 1
  00c83	89 85 6c f7 ff
	ff		 mov	 DWORD PTR tv636[ebp], eax
  00c89	eb 0c		 jmp	 SHORT $LN53@LoadMap
$LN52@LoadMap:
  00c8b	8b 8d a8 f9 ff
	ff		 mov	 ecx, DWORD PTR _i$17[ebp]
  00c91	89 8d 6c f7 ff
	ff		 mov	 DWORD PTR tv636[ebp], ecx
$LN53@LoadMap:
  00c97	83 bd a8 f9 ff
	ff 02		 cmp	 DWORD PTR _i$17[ebp], 2
  00c9e	7d 11		 jge	 SHORT $LN54@LoadMap
  00ca0	8b 95 a8 f9 ff
	ff		 mov	 edx, DWORD PTR _i$17[ebp]
  00ca6	83 c2 01	 add	 edx, 1
  00ca9	89 95 68 f7 ff
	ff		 mov	 DWORD PTR tv648[ebp], edx
  00caf	eb 0c		 jmp	 SHORT $LN55@LoadMap
$LN54@LoadMap:
  00cb1	8b 85 a8 f9 ff
	ff		 mov	 eax, DWORD PTR _i$17[ebp]
  00cb7	89 85 68 f7 ff
	ff		 mov	 DWORD PTR tv648[ebp], eax
$LN55@LoadMap:
  00cbd	83 bd a8 f9 ff
	ff 02		 cmp	 DWORD PTR _i$17[ebp], 2
  00cc4	7d 0e		 jge	 SHORT $LN56@LoadMap
  00cc6	8b 8d a8 f9 ff
	ff		 mov	 ecx, DWORD PTR _i$17[ebp]
  00ccc	89 8d 64 f7 ff
	ff		 mov	 DWORD PTR tv663[ebp], ecx
  00cd2	eb 0f		 jmp	 SHORT $LN57@LoadMap
$LN56@LoadMap:
  00cd4	8b 95 a8 f9 ff
	ff		 mov	 edx, DWORD PTR _i$17[ebp]
  00cda	83 ea 01	 sub	 edx, 1
  00cdd	89 95 64 f7 ff
	ff		 mov	 DWORD PTR tv663[ebp], edx
$LN57@LoadMap:
  00ce3	83 bd a8 f9 ff
	ff 02		 cmp	 DWORD PTR _i$17[ebp], 2
  00cea	7d 0e		 jge	 SHORT $LN58@LoadMap
  00cec	8b 85 a8 f9 ff
	ff		 mov	 eax, DWORD PTR _i$17[ebp]
  00cf2	89 85 60 f7 ff
	ff		 mov	 DWORD PTR tv675[ebp], eax
  00cf8	eb 0f		 jmp	 SHORT $LN59@LoadMap
$LN58@LoadMap:
  00cfa	8b 8d a8 f9 ff
	ff		 mov	 ecx, DWORD PTR _i$17[ebp]
  00d00	83 e9 01	 sub	 ecx, 1
  00d03	89 8d 60 f7 ff
	ff		 mov	 DWORD PTR tv675[ebp], ecx
$LN59@LoadMap:
  00d09	8b 95 6c f7 ff
	ff		 mov	 edx, DWORD PTR tv636[ebp]
  00d0f	52		 push	 edx
  00d10	8d 8d d0 fa ff
	ff		 lea	 ecx, DWORD PTR _slopePoints$25[ebp]
  00d16	e8 00 00 00 00	 call	 ?at@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEAAUVector2@@I@Z ; std::vector<Vector2,std::allocator<Vector2> >::at
  00d1b	8b 8d c4 fa ff
	ff		 mov	 ecx, DWORD PTR _pointOne$24[ebp+4]
  00d21	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00d24	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00d28	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _SPRITE_SCALE
  00d30	f3 0f 2c d0	 cvttss2si edx, xmm0
  00d34	52		 push	 edx
  00d35	8b 85 68 f7 ff
	ff		 mov	 eax, DWORD PTR tv648[ebp]
  00d3b	50		 push	 eax
  00d3c	8d 8d d0 fa ff
	ff		 lea	 ecx, DWORD PTR _slopePoints$25[ebp]
  00d42	e8 00 00 00 00	 call	 ?at@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEAAUVector2@@I@Z ; std::vector<Vector2,std::allocator<Vector2> >::at
  00d47	8b 8d c0 fa ff
	ff		 mov	 ecx, DWORD PTR _pointOne$24[ebp]
  00d4d	03 08		 add	 ecx, DWORD PTR [eax]
  00d4f	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00d53	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _SPRITE_SCALE
  00d5b	f3 0f 2c d0	 cvttss2si edx, xmm0
  00d5f	52		 push	 edx
  00d60	8d 8d 14 f8 ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  00d66	e8 00 00 00 00	 call	 ??0Vector2@@QAE@HH@Z	; Vector2::Vector2
  00d6b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00d6e	51		 push	 ecx
  00d6f	8b 10		 mov	 edx, DWORD PTR [eax]
  00d71	52		 push	 edx
  00d72	8b 85 64 f7 ff
	ff		 mov	 eax, DWORD PTR tv663[ebp]
  00d78	50		 push	 eax
  00d79	8d 8d d0 fa ff
	ff		 lea	 ecx, DWORD PTR _slopePoints$25[ebp]
  00d7f	e8 00 00 00 00	 call	 ?at@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEAAUVector2@@I@Z ; std::vector<Vector2,std::allocator<Vector2> >::at
  00d84	8b 8d c4 fa ff
	ff		 mov	 ecx, DWORD PTR _pointOne$24[ebp+4]
  00d8a	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  00d8d	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00d91	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _SPRITE_SCALE
  00d99	f3 0f 2c d0	 cvttss2si edx, xmm0
  00d9d	52		 push	 edx
  00d9e	8b 85 60 f7 ff
	ff		 mov	 eax, DWORD PTR tv675[ebp]
  00da4	50		 push	 eax
  00da5	8d 8d d0 fa ff
	ff		 lea	 ecx, DWORD PTR _slopePoints$25[ebp]
  00dab	e8 00 00 00 00	 call	 ?at@?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAEAAUVector2@@I@Z ; std::vector<Vector2,std::allocator<Vector2> >::at
  00db0	8b 8d c0 fa ff
	ff		 mov	 ecx, DWORD PTR _pointOne$24[ebp]
  00db6	03 08		 add	 ecx, DWORD PTR [eax]
  00db8	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00dbc	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR _SPRITE_SCALE
  00dc4	f3 0f 2c d0	 cvttss2si edx, xmm0
  00dc8	52		 push	 edx
  00dc9	8d 8d 24 f8 ff
	ff		 lea	 ecx, DWORD PTR $T11[ebp]
  00dcf	e8 00 00 00 00	 call	 ??0Vector2@@QAE@HH@Z	; Vector2::Vector2
  00dd4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00dd7	51		 push	 ecx
  00dd8	8b 10		 mov	 edx, DWORD PTR [eax]
  00dda	52		 push	 edx
  00ddb	8d 8d f8 f7 ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00de1	e8 00 00 00 00	 call	 ??0CaveSlope@@QAE@UVector2@@0@Z ; CaveSlope::CaveSlope
  00de6	50		 push	 eax
  00de7	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00dea	83 c1 78	 add	 ecx, 120		; 00000078H
  00ded	e8 00 00 00 00	 call	 ?push_back@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEX$$QAVCaveSlope@@@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::push_back
; Line 279
  00df2	e9 54 fe ff ff	 jmp	 $LN2@LoadMap
$LN1@LoadMap:
; Line 281
  00df7	68 00 00 00 00	 push	 OFFSET ??_C@_06IEOJBDIK@object?$AA@
  00dfc	8b 8d e8 fa ff
	ff		 mov	 ecx, DWORD PTR _slopeObject$26[ebp]
  00e02	e8 00 00 00 00	 call	 ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
  00e07	89 85 e8 fa ff
	ff		 mov	 DWORD PTR _slopeObject$26[ebp], eax
; Line 282
  00e0d	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00e11	8d 8d d0 fa ff
	ff		 lea	 ecx, DWORD PTR _slopePoints$25[ebp]
  00e17	e8 00 00 00 00	 call	 ??1?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAE@XZ ; std::vector<Vector2,std::allocator<Vector2> >::~vector<Vector2,std::allocator<Vector2> >
  00e1c	e9 b1 fb ff ff	 jmp	 $LN9@LoadMap
$LN8@LoadMap:
; Line 286
  00e21	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MIIFFOHH@objectgroup?$AA@
  00e26	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR _objectGroup$[ebp]
  00e2c	e8 00 00 00 00	 call	 ?NextSiblingElement@XMLNode@tinyxml2@@QAEPAVXMLElement@2@PBD@Z ; tinyxml2::XMLNode::NextSiblingElement
  00e31	89 85 f4 fb ff
	ff		 mov	 DWORD PTR _objectGroup$[ebp], eax
; Line 287
  00e37	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00e3b	8d 8d 30 fb ff
	ff		 lea	 ecx, DWORD PTR _name$32[ebp]
  00e41	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  00e46	e9 73 f8 ff ff	 jmp	 $LN18@LoadMap
$LN17@LoadMap:
; Line 289
  00e4b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00e4f	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  00e55	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
  00e5a	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00e5e	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _document$[ebp]
  00e64	e8 00 00 00 00	 call	 ??1XMLDocument@tinyxml2@@UAE@XZ ; tinyxml2::XMLDocument::~XMLDocument
  00e69	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00e70	8d 4d 08	 lea	 ecx, DWORD PTR _MapName$[ebp]
  00e73	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00e78	52		 push	 edx
  00e79	8b cd		 mov	 ecx, ebp
  00e7b	50		 push	 eax
  00e7c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN94@LoadMap
  00e82	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00e87	58		 pop	 eax
  00e88	5a		 pop	 edx
  00e89	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00e8c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00e93	59		 pop	 ecx
  00e94	5f		 pop	 edi
  00e95	5e		 pop	 esi
  00e96	5b		 pop	 ebx
  00e97	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00e9a	33 cd		 xor	 ecx, ebp
  00e9c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00ea1	81 c4 a8 08 00
	00		 add	 esp, 2216		; 000008a8H
  00ea7	3b ec		 cmp	 ebp, esp
  00ea9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00eae	8b e5		 mov	 esp, ebp
  00eb0	5d		 pop	 ebp
  00eb1	c2 20 00	 ret	 32			; 00000020H
$LN94@LoadMap:
  00eb4	0e 00 00 00	 DD	 14			; 0000000eH
  00eb8	00 00 00 00	 DD	 $LN93@LoadMap
$LN93@LoadMap:
  00ebc	6c fe ff ff	 DD	 -404			; fffffe6cH
  00ec0	74 01 00 00	 DD	 372			; 00000174H
  00ec4	00 00 00 00	 DD	 $LN78@LoadMap
  00ec8	b4 fd ff ff	 DD	 -588			; fffffdb4H
  00ecc	b0 00 00 00	 DD	 176			; 000000b0H
  00ed0	00 00 00 00	 DD	 $LN79@LoadMap
  00ed4	90 fd ff ff	 DD	 -624			; fffffd90H
  00ed8	04 00 00 00	 DD	 4
  00edc	00 00 00 00	 DD	 $LN80@LoadMap
  00ee0	c0 fc ff ff	 DD	 -832			; fffffcc0H
  00ee4	b0 00 00 00	 DD	 176			; 000000b0H
  00ee8	00 00 00 00	 DD	 $LN81@LoadMap
  00eec	68 fc ff ff	 DD	 -920			; fffffc68H
  00ef0	08 00 00 00	 DD	 8
  00ef4	00 00 00 00	 DD	 $LN82@LoadMap
  00ef8	34 fc ff ff	 DD	 -972			; fffffc34H
  00efc	08 00 00 00	 DD	 8
  00f00	00 00 00 00	 DD	 $LN83@LoadMap
  00f04	24 fc ff ff	 DD	 -988			; fffffc24H
  00f08	08 00 00 00	 DD	 8
  00f0c	00 00 00 00	 DD	 $LN84@LoadMap
  00f10	00 fc ff ff	 DD	 -1024			; fffffc00H
  00f14	1c 00 00 00	 DD	 28			; 0000001cH
  00f18	00 00 00 00	 DD	 $LN85@LoadMap
  00f1c	30 fb ff ff	 DD	 -1232			; fffffb30H
  00f20	b0 00 00 00	 DD	 176			; 000000b0H
  00f24	00 00 00 00	 DD	 $LN86@LoadMap
  00f28	d0 fa ff ff	 DD	 -1328			; fffffad0H
  00f2c	10 00 00 00	 DD	 16			; 00000010H
  00f30	00 00 00 00	 DD	 $LN87@LoadMap
  00f34	c0 fa ff ff	 DD	 -1344			; fffffac0H
  00f38	08 00 00 00	 DD	 8
  00f3c	00 00 00 00	 DD	 $LN88@LoadMap
  00f40	9c fa ff ff	 DD	 -1380			; fffffa9cH
  00f44	10 00 00 00	 DD	 16			; 00000010H
  00f48	00 00 00 00	 DD	 $LN89@LoadMap
  00f4c	d8 f9 ff ff	 DD	 -1576			; fffff9d8H
  00f50	b0 00 00 00	 DD	 176			; 000000b0H
  00f54	00 00 00 00	 DD	 $LN90@LoadMap
  00f58	b4 f9 ff ff	 DD	 -1612			; fffff9b4H
  00f5c	10 00 00 00	 DD	 16			; 00000010H
  00f60	00 00 00 00	 DD	 $LN91@LoadMap
$LN91@LoadMap:
  00f64	70		 DB	 112			; 00000070H
  00f65	73		 DB	 115			; 00000073H
  00f66	00		 DB	 0
$LN90@LoadMap:
  00f67	70		 DB	 112			; 00000070H
  00f68	6f		 DB	 111			; 0000006fH
  00f69	69		 DB	 105			; 00000069H
  00f6a	6e		 DB	 110			; 0000006eH
  00f6b	74		 DB	 116			; 00000074H
  00f6c	73		 DB	 115			; 00000073H
  00f6d	4e		 DB	 78			; 0000004eH
  00f6e	61		 DB	 97			; 00000061H
  00f6f	6d		 DB	 109			; 0000006dH
  00f70	65		 DB	 101			; 00000065H
  00f71	00		 DB	 0
$LN89@LoadMap:
  00f72	70		 DB	 112			; 00000070H
  00f73	6f		 DB	 111			; 0000006fH
  00f74	6c		 DB	 108			; 0000006cH
  00f75	79		 DB	 121			; 00000079H
  00f76	50		 DB	 80			; 00000050H
  00f77	61		 DB	 97			; 00000061H
  00f78	69		 DB	 105			; 00000069H
  00f79	72		 DB	 114			; 00000072H
  00f7a	73		 DB	 115			; 00000073H
  00f7b	00		 DB	 0
$LN88@LoadMap:
  00f7c	70		 DB	 112			; 00000070H
  00f7d	6f		 DB	 111			; 0000006fH
  00f7e	69		 DB	 105			; 00000069H
  00f7f	6e		 DB	 110			; 0000006eH
  00f80	74		 DB	 116			; 00000074H
  00f81	4f		 DB	 79			; 0000004fH
  00f82	6e		 DB	 110			; 0000006eH
  00f83	65		 DB	 101			; 00000065H
  00f84	00		 DB	 0
$LN87@LoadMap:
  00f85	73		 DB	 115			; 00000073H
  00f86	6c		 DB	 108			; 0000006cH
  00f87	6f		 DB	 111			; 0000006fH
  00f88	70		 DB	 112			; 00000070H
  00f89	65		 DB	 101			; 00000065H
  00f8a	50		 DB	 80			; 00000050H
  00f8b	6f		 DB	 111			; 0000006fH
  00f8c	69		 DB	 105			; 00000069H
  00f8d	6e		 DB	 110			; 0000006eH
  00f8e	74		 DB	 116			; 00000074H
  00f8f	73		 DB	 115			; 00000073H
  00f90	00		 DB	 0
$LN86@LoadMap:
  00f91	6e		 DB	 110			; 0000006eH
  00f92	61		 DB	 97			; 00000061H
  00f93	6d		 DB	 109			; 0000006dH
  00f94	65		 DB	 101			; 00000065H
  00f95	00		 DB	 0
$LN85@LoadMap:
  00f96	6e		 DB	 110			; 0000006eH
  00f97	65		 DB	 101			; 00000065H
  00f98	77		 DB	 119			; 00000077H
  00f99	54		 DB	 84			; 00000054H
  00f9a	69		 DB	 105			; 00000069H
  00f9b	6c		 DB	 108			; 0000006cH
  00f9c	65		 DB	 101			; 00000065H
  00f9d	00		 DB	 0
$LN84@LoadMap:
  00f9e	66		 DB	 102			; 00000066H
  00f9f	69		 DB	 105			; 00000069H
  00fa0	6e		 DB	 110			; 0000006eH
  00fa1	61		 DB	 97			; 00000061H
  00fa2	6c		 DB	 108			; 0000006cH
  00fa3	54		 DB	 84			; 00000054H
  00fa4	69		 DB	 105			; 00000069H
  00fa5	6c		 DB	 108			; 0000006cH
  00fa6	65		 DB	 101			; 00000065H
  00fa7	53		 DB	 83			; 00000053H
  00fa8	65		 DB	 101			; 00000065H
  00fa9	74		 DB	 116			; 00000074H
  00faa	50		 DB	 80			; 00000050H
  00fab	6f		 DB	 111			; 0000006fH
  00fac	73		 DB	 115			; 00000073H
  00fad	69		 DB	 105			; 00000069H
  00fae	74		 DB	 116			; 00000074H
  00faf	69		 DB	 105			; 00000069H
  00fb0	6f		 DB	 111			; 0000006fH
  00fb1	6e		 DB	 110			; 0000006eH
  00fb2	00		 DB	 0
$LN83@LoadMap:
  00fb3	66		 DB	 102			; 00000066H
  00fb4	69		 DB	 105			; 00000069H
  00fb5	6e		 DB	 110			; 0000006eH
  00fb6	61		 DB	 97			; 00000061H
  00fb7	6c		 DB	 108			; 0000006cH
  00fb8	54		 DB	 84			; 00000054H
  00fb9	69		 DB	 105			; 00000069H
  00fba	6c		 DB	 108			; 0000006cH
  00fbb	65		 DB	 101			; 00000065H
  00fbc	50		 DB	 80			; 00000050H
  00fbd	6f		 DB	 111			; 0000006fH
  00fbe	73		 DB	 115			; 00000073H
  00fbf	69		 DB	 105			; 00000069H
  00fc0	74		 DB	 116			; 00000074H
  00fc1	69		 DB	 105			; 00000069H
  00fc2	6f		 DB	 111			; 0000006fH
  00fc3	6e		 DB	 110			; 0000006eH
  00fc4	00		 DB	 0
$LN82@LoadMap:
  00fc5	6e		 DB	 110			; 0000006eH
  00fc6	65		 DB	 101			; 00000065H
  00fc7	78		 DB	 120			; 00000078H
  00fc8	74		 DB	 116			; 00000074H
  00fc9	54		 DB	 84			; 00000054H
  00fca	69		 DB	 105			; 00000069H
  00fcb	6c		 DB	 108			; 0000006cH
  00fcc	65		 DB	 101			; 00000065H
  00fcd	53		 DB	 83			; 00000053H
  00fce	65		 DB	 101			; 00000065H
  00fcf	74		 DB	 116			; 00000074H
  00fd0	00		 DB	 0
$LN81@LoadMap:
  00fd1	73		 DB	 115			; 00000073H
  00fd2	73		 DB	 115			; 00000073H
  00fd3	32		 DB	 50			; 00000032H
  00fd4	00		 DB	 0
$LN80@LoadMap:
  00fd5	66		 DB	 102			; 00000066H
  00fd6	69		 DB	 105			; 00000069H
  00fd7	72		 DB	 114			; 00000072H
  00fd8	73		 DB	 115			; 00000073H
  00fd9	74		 DB	 116			; 00000074H
  00fda	47		 DB	 71			; 00000047H
  00fdb	49		 DB	 73			; 00000049H
  00fdc	44		 DB	 68			; 00000044H
  00fdd	00		 DB	 0
$LN79@LoadMap:
  00fde	73		 DB	 115			; 00000073H
  00fdf	73		 DB	 115			; 00000073H
  00fe0	00		 DB	 0
$LN78@LoadMap:
  00fe1	64		 DB	 100			; 00000064H
  00fe2	6f		 DB	 111			; 0000006fH
  00fe3	63		 DB	 99			; 00000063H
  00fe4	75		 DB	 117			; 00000075H
  00fe5	6d		 DB	 109			; 0000006dH
  00fe6	65		 DB	 101			; 00000065H
  00fe7	6e		 DB	 110			; 0000006eH
  00fe8	74		 DB	 116			; 00000074H
  00fe9	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _MapName$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$1:
  00008	8d 8d 58 f8 ff
	ff		 lea	 ecx, DWORD PTR $T13[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$2:
  00013	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _document$[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1XMLDocument@tinyxml2@@UAE@XZ ; tinyxml2::XMLDocument::~XMLDocument
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$3:
  0001e	8d 8d b4 fd ff
	ff		 lea	 ecx, DWORD PTR _ss$[ebp]
  00024	e9 00 00 00 00	 jmp	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$4:
  00029	8d 8d a0 f8 ff
	ff		 lea	 ecx, DWORD PTR $T15[ebp]
  0002f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$5:
  00034	8d 8d c0 fc ff
	ff		 lea	 ecx, DWORD PTR _ss2$46[ebp]
  0003a	e9 00 00 00 00	 jmp	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$6:
  0003f	8d 8d c4 f8 ff
	ff		 lea	 ecx, DWORD PTR $T16[ebp]
  00045	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$7:
  0004a	8d 8d 30 fb ff
	ff		 lea	 ecx, DWORD PTR _name$32[ebp]
  00050	e9 00 00 00 00	 jmp	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$8:
  00055	8d 8d 74 f7 ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0005b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$9:
  00060	8d 8d c4 f7 ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00066	e9 00 00 00 00	 jmp	 ??1CaveRectangle@@QAE@XZ ; CaveRectangle::~CaveRectangle
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$10:
  0006b	8d 8d 34 f8 ff
	ff		 lea	 ecx, DWORD PTR $T12[ebp]
  00071	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$11:
  00076	8d 8d d0 fa ff
	ff		 lea	 ecx, DWORD PTR _slopePoints$25[ebp]
  0007c	e9 00 00 00 00	 jmp	 ??1?$vector@UVector2@@V?$allocator@UVector2@@@std@@@std@@QAE@XZ ; std::vector<Vector2,std::allocator<Vector2> >::~vector<Vector2,std::allocator<Vector2> >
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$12:
  00081	8d 8d 9c fa ff
	ff		 lea	 ecx, DWORD PTR _polyPairs$22[ebp]
  00087	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$13:
  0008c	8d 8d d8 f9 ff
	ff		 lea	 ecx, DWORD PTR _pointsName$20[ebp]
  00092	e9 00 00 00 00	 jmp	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$14:
  00097	8d 8d 7c f8 ff
	ff		 lea	 ecx, DWORD PTR $T14[ebp]
  0009d	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z$15:
  000a2	8d 8d b4 f9 ff
	ff		 lea	 ecx, DWORD PTR _ps$18[ebp]
  000a8	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z:
  000ad	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  000b1	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  000b4	8b 8a 54 f7 ff
	ff		 mov	 ecx, DWORD PTR [edx-2220]
  000ba	33 c8		 xor	 ecx, eax
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  000c4	33 c8		 xor	 ecx, eax
  000c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cb	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z
  000d0	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z ENDP ; Level::LoadMap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEXI@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00026	50		 push	 eax
  00027	6a 00		 push	 0
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?__autoclassinit2@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEXI@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z
_TEXT	SEGMENT
__Pnext$ = -48						; size = 4
__Lock$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  00045	8b f4		 mov	 esi, esp
  00047	6a 03		 push	 3
  00049	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00060	8b f4		 mov	 esi, esp
  00062	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  00075	83 7d d0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00079	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  0007b	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0007e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00081	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  00083	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00086	8b 08		 mov	 ecx, DWORD PTR [eax]
  00088	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0008b	3b 55 08	 cmp	 edx, DWORD PTR __First$[ebp]
  0008e	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00090	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00093	8b 08		 mov	 ecx, DWORD PTR [eax]
  00095	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00098	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0009b	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  0009d	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a2	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000a7	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000aa	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000ac	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000af	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b1	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000b6	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bb	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000c0	8b 4d d0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000c3	8b 10		 mov	 edx, DWORD PTR [eax]
  000c5	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000c7	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d0	8b f4		 mov	 esi, esp
  000d2	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000db	3b f4		 cmp	 esi, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e2	52		 push	 edx
  000e3	8b cd		 mov	 ecx, ebp
  000e5	50		 push	 eax
  000e6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000ec	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f1	58		 pop	 eax
  000f2	5a		 pop	 edx
  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00104	33 cd		 xor	 ecx, ebp
  00106	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010b	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  00111	3b ec		 cmp	 ebp, esp
  00113	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 08 00	 ret	 8
  0011e	8b ff		 npad	 2
$LN13@Orphan_ran:
  00120	01 00 00 00	 DD	 1
  00124	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00128	dc ff ff ff	 DD	 -36			; ffffffdcH
  0012c	04 00 00 00	 DD	 4
  00130	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00134	5f		 DB	 95			; 0000005fH
  00135	4c		 DB	 76			; 0000004cH
  00136	6f		 DB	 111			; 0000006fH
  00137	63		 DB	 99			; 00000063H
  00138	6b		 DB	 107			; 0000006bH
  00139	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xran@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXXZ PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1758
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1759
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xran:
; Line 1760
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xran@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXXZ ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlen@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXXZ PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xlen@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXXZ ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?_Tidy@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXXZ PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 78		 je	 SHORT $LN2@Tidy
; Line 1625
  0002c	8b f4		 mov	 esi, esp
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00037	3b f4		 cmp	 esi, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00044	51		 push	 ecx
  00045	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004b	50		 push	 eax
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?_Destroy@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXPAVCaveSlope@@0@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Destroy
; Line 1628
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0005d	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00060	99		 cdq
  00061	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00066	f7 f9		 idiv	 ecx
  00068	50		 push	 eax
  00069	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0006f	50		 push	 eax
  00070	8d 8d 2f ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00076	51		 push	 ecx
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@I@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::deallocate
; Line 1629
  00086	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00089	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 1630
  00090	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00093	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  0009a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
$LN2@Tidy:
; Line 1633
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000ad	3b ec		 cmp	 ebp, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?_Tidy@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXXZ ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reserve@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Unused_capacity
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0002e	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?max_size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::max_size
  00038	8b f0		 mov	 esi, eax
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::size
  00042	2b f0		 sub	 esi, eax
  00044	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00047	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Xlen
$LN1@Reserve:
; Line 1617
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::size
  00059	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEII@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Grow_to
  00065	50		 push	 eax
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?_Reserve@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -273						; size = 1
$T3 = -261						; size = 1
$T4 = -249						; size = 1
__Size$ = -48						; size = 4
__Ptr$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d bd e8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-280]
  00022	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00027	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002c	f3 ab		 rep stosd
  0002e	59		 pop	 ecx
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00034	33 c5		 xor	 eax, ebp
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00043	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00046	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00049	50		 push	 eax
  0004a	8d 8d ef fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00050	51		 push	 ecx
  00051	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEPAVCaveSlope@@I@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::allocate
  00060	89 45 dc	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  00063	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  0006a	8b 45 dc	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00074	52		 push	 edx
  00075	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007b	51		 push	 ecx
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ??$_Umove@PAVCaveSlope@@@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEPAVCaveSlope@@PAV2@00@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Umove<CaveSlope *>
  00084	eb 2d		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  00086	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0008d	51		 push	 ecx
  0008e	8d 95 fb fe ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00094	52		 push	 edx
  00095	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@I@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::deallocate
; Line 1594
  000a4	6a 00		 push	 0
  000a6	6a 00		 push	 0
  000a8	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000ad	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000b2	c3		 ret	 0
$LN5@Reallocate:
  000b3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ba	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000c3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	e8 00 00 00 00	 call	 ?size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::size
  000cb	89 45 d0	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000ce	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000d5	74 48		 je	 SHORT $LN1@Reallocate
; Line 1600
  000d7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e4	50		 push	 eax
  000e5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	e8 00 00 00 00	 call	 ?_Destroy@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXPAVCaveSlope@@0@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Destroy
; Line 1602
  000ed	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000f0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000f6	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  000f9	99		 cdq
  000fa	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  000ff	f7 f9		 idiv	 ecx
  00101	50		 push	 eax
  00102	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00105	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00108	50		 push	 eax
  00109	8d 8d 07 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0010f	51		 push	 ecx
  00110	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
  00118	8b c8		 mov	 ecx, eax
  0011a	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@I@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::deallocate
$LN1@Reallocate:
; Line 1605
  0011f	8b f4		 mov	 esi, esp
  00121	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0012a	3b f4		 cmp	 esi, esp
  0012c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  00131	6b 45 08 14	 imul	 eax, DWORD PTR __Count$[ebp], 20
  00135	03 45 dc	 add	 eax, DWORD PTR __Ptr$[ebp]
  00138	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 1607
  0013e	6b 45 d0 14	 imul	 eax, DWORD PTR __Size$[ebp], 20
  00142	03 45 dc	 add	 eax, DWORD PTR __Ptr$[ebp]
  00145	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00148	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0014b	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0014e	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00151	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
  00154	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00157	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0015e	59		 pop	 ecx
  0015f	5f		 pop	 edi
  00160	5e		 pop	 esi
  00161	5b		 pop	 ebx
  00162	81 c4 18 01 00
	00		 add	 esp, 280		; 00000118H
  00168	3b ec		 cmp	 ebp, esp
  0016a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016f	8b e5		 mov	 esp, ebp
  00171	5d		 pop	 ebp
  00172	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a e4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-284]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Reallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Inside@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBE_NPBVCaveSlope@@@Z
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBE_NPBVCaveSlope@@@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00029	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002c	73 17		 jae	 SHORT $LN3@Inside
  0002e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00031	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00034	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  00037	77 0c		 ja	 SHORT $LN3@Inside
  00039	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv76[ebp], 1
  00043	eb 0a		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00045	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0004f	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?_Inside@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBE_NPBVCaveSlope@@@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Grow_to@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEII@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?capacity@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::capacity
  0002b	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?max_size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::max_size
  00036	8b 4d ec	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00039	d1 e9		 shr	 ecx, 1
  0003b	2b c1		 sub	 eax, ecx
  0003d	3b 45 ec	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  00040	73 0c		 jae	 SHORT $LN4@Grow_to
  00042	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
  0004c	eb 0e		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0004e	8b 55 ec	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00051	d1 ea		 shr	 edx, 1
  00053	03 55 ec	 add	 edx, DWORD PTR __Capacity$[ebp]
  00056	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  0005c	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv73[ebp]
  00062	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00065	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
  00068	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0006b	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0006d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00070	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
$LN1@Grow_to:
; Line 1578
  00073	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?_Grow_to@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEII@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Destroy@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXPAVCaveSlope@@0@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXPAVCaveSlope@@0@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
; Line 1567
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YAXPAVCaveSlope@@0AAU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveSlope> > >
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0004d	52		 push	 edx
  0004e	8b cd		 mov	 ecx, ebp
  00050	50		 push	 eax
  00051	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00057	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0005c	58		 pop	 eax
  0005d	5a		 pop	 edx
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00064	33 cd		 xor	 ecx, ebp
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
  0007e	8b ff		 npad	 2
$LN5@Destroy:
  00080	01 00 00 00	 DD	 1
  00084	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00088	eb ff ff ff	 DD	 -21			; ffffffebH
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00094	5f		 DB	 95			; 0000005fH
  00095	41		 DB	 65			; 00000041H
  00096	6c		 DB	 108			; 0000006cH
  00097	76		 DB	 118			; 00000076H
  00098	61		 DB	 97			; 00000061H
  00099	6c		 DB	 108			; 0000006cH
  0009a	00		 DB	 0
?_Destroy@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXPAVCaveSlope@@0@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEXABVCaveSlope@@@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Idx$3 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEXABVCaveSlope@@@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$addressof@$$CBVCaveSlope@@@std@@YAPBVCaveSlope@@ABV1@@Z ; std::addressof<CaveSlope const >
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Inside@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBE_NPBVCaveSlope@@@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Inside
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 84 00 00
	00		 je	 $LN4@push_back
; Line 1246
  00043	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$addressof@$$CBVCaveSlope@@@std@@YAPBVCaveSlope@@ABV1@@Z ; std::addressof<CaveSlope const >
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00055	99		 cdq
  00056	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0005b	f7 f9		 idiv	 ecx
  0005d	89 45 ec	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  00060	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00069	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  0006c	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  0006e	6a 01		 push	 1
  00070	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Reserve
$LN3@push_back:
; Line 1249
  00078	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0007e	51		 push	 ecx
  0007f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00082	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00085	50		 push	 eax
  00086	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Orphan_range
; Line 1251
  0008e	6b 45 ec 14	 imul	 eax, DWORD PTR __Idx$3[ebp], 20
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00098	50		 push	 eax
  00099	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0009c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009f	50		 push	 eax
  000a0	8d 8d 17 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  000a6	51		 push	 ecx
  000a7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
  000af	8b c8		 mov	 ecx, eax
  000b1	e8 00 00 00 00	 call	 ??$construct@VCaveSlope@@AAV1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@AAV2@@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope &>
; Line 1252
  000b6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000bc	83 c1 14	 add	 ecx, 20			; 00000014H
  000bf	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c2	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 1254
  000c5	eb 5e		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000c7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000d0	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  000d3	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000d5	6a 01		 push	 1
  000d7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Reserve
$LN1@push_back:
; Line 1258
  000df	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000e5	51		 push	 ecx
  000e6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e9	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000ec	50		 push	 eax
  000ed	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Orphan_range
; Line 1260
  000f5	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  000f8	50		 push	 eax
  000f9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fc	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000ff	52		 push	 edx
  00100	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00106	50		 push	 eax
  00107	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010a	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
  0010f	8b c8		 mov	 ecx, eax
  00111	e8 00 00 00 00	 call	 ??$construct@VCaveSlope@@ABV1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@ABV2@@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope const &>
; Line 1261
  00116	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00119	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0011c	83 c1 14	 add	 ecx, 20			; 00000014H
  0011f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00122	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
  00125	5f		 pop	 edi
  00126	5e		 pop	 esi
  00127	5b		 pop	 ebx
  00128	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  0012e	3b ec		 cmp	 ebp, esp
  00130	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00135	8b e5		 mov	 esp, ebp
  00137	5d		 pop	 ebp
  00138	c2 04 00	 ret	 4
?push_back@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEXABVCaveSlope@@@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?at@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEAAVCaveSlope@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEAAVCaveSlope@@I@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::at, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1174
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1175
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::size
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0002e	77 08		 ja	 SHORT $LN1@at
; Line 1176
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Xran@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Xran
$LN1@at:
; Line 1177
  00038	6b 45 08 14	 imul	 eax, DWORD PTR __Pos$[ebp], 20
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	03 41 04	 add	 eax, DWORD PTR [ecx+4]
$LN3@at:
; Line 1178
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?at@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEAAVCaveSlope@@I@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::at
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00023	8d 85 2f ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<CaveSlope> >::max_size
; Line 1154
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?max_size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	99		 cdq
  00030	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00035	f7 f9		 idiv	 ecx
; Line 1149
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Unused_capacity@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unused_capacity@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0002f	99		 cdq
  00030	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00035	f7 f9		 idiv	 ecx
; Line 1016
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?_Unused_capacity@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?capacity@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	99		 cdq
  00030	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  00035	f7 f9		 idiv	 ecx
; Line 1011
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?capacity@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::~vector<CaveSlope,std::allocator<CaveSlope> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Tidy
; Line 946
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::~_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::~vector<CaveSlope,std::allocator<CaveSlope> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEX$$QAVCaveSlope@@@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Idx$3 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEX$$QAVCaveSlope@@@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 865
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 866
  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$addressof@VCaveSlope@@@std@@YAPAVCaveSlope@@AAV1@@Z ; std::addressof<CaveSlope>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Inside@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBE_NPBVCaveSlope@@@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Inside
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 8d 00 00
	00		 je	 $LN4@push_back
; Line 868
  00043	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$addressof@VCaveSlope@@@std@@YAPAVCaveSlope@@AAV1@@Z ; std::addressof<CaveSlope>
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00055	99		 cdq
  00056	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0005b	f7 f9		 idiv	 ecx
  0005d	89 45 ec	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 869
  00060	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00069	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  0006c	75 0a		 jne	 SHORT $LN3@push_back
; Line 870
  0006e	6a 01		 push	 1
  00070	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Reserve
$LN3@push_back:
; Line 871
  00078	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0007e	51		 push	 ecx
  0007f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00082	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00085	50		 push	 eax
  00086	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Orphan_range
; Line 873
  0008e	6b 45 ec 14	 imul	 eax, DWORD PTR __Idx$3[ebp], 20
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ??$forward@VCaveSlope@@@std@@YA$$QAVCaveSlope@@AAV1@@Z ; std::forward<CaveSlope>
  0009e	83 c4 04	 add	 esp, 4
  000a1	50		 push	 eax
  000a2	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a5	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000a8	50		 push	 eax
  000a9	8d 8d 17 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  000af	51		 push	 ecx
  000b0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
  000b8	8b c8		 mov	 ecx, eax
  000ba	e8 00 00 00 00	 call	 ??$construct@VCaveSlope@@V1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope>
; Line 874
  000bf	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c5	83 c1 14	 add	 ecx, 20			; 00000014H
  000c8	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000cb	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 876
  000ce	eb 67		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 878
  000d0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000d9	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  000dc	75 0a		 jne	 SHORT $LN1@push_back
; Line 879
  000de	6a 01		 push	 1
  000e0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e3	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IAEXI@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Reserve
$LN1@push_back:
; Line 880
  000e8	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000eb	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ee	51		 push	 ecx
  000ef	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000f2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f5	50		 push	 eax
  000f6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@IBEXPAVCaveSlope@@0@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Orphan_range
; Line 882
  000fe	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ??$forward@VCaveSlope@@@std@@YA$$QAVCaveSlope@@AAV1@@Z ; std::forward<CaveSlope>
  00107	83 c4 04	 add	 esp, 4
  0010a	50		 push	 eax
  0010b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00111	52		 push	 edx
  00112	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00118	50		 push	 eax
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
  00121	8b c8		 mov	 ecx, eax
  00123	e8 00 00 00 00	 call	 ??$construct@VCaveSlope@@V1@@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<CaveSlope> >::construct<CaveSlope,CaveSlope>
; Line 883
  00128	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0012b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0012e	83 c1 14	 add	 ecx, 20			; 00000014H
  00131	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00134	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 885
  00137	5f		 pop	 edi
  00138	5e		 pop	 esi
  00139	5b		 pop	 ebx
  0013a	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  00140	3b ec		 cmp	 ebp, esp
  00142	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c2 04 00	 ret	 4
?push_back@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEX$$QAVCaveSlope@@@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Assign_rv@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Assign_rv@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Assign_rv, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 837
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 838
  00023	8b f4		 mov	 esi, esp
  00025	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00028	50		 push	 eax
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 839
  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00042	89 50 04	 mov	 DWORD PTR [eax+4], edx
; Line 840
  00045	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0004b	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0004e	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 841
  00051	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00057	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0005a	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 843
  0005d	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 844
  00067	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0006a	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 845
  00071	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 846
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00084	3b ec		 cmp	 ebp, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 08 00	 ret	 8
?_Assign_rv@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::vector<CaveSlope,std::allocator<CaveSlope> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 812
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00021	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8d 85 17 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00048	50		 push	 eax
  00049	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
  00051	50		 push	 eax
  00052	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 813
  00061	33 c0		 xor	 eax, eax
  00063	88 85 23 ff ff
	ff		 mov	 BYTE PTR $T3[ebp], al
  00069	0f b6 8d 23 ff
	ff ff		 movzx	 ecx, BYTE PTR $T3[ebp]
  00070	51		 push	 ecx
  00071	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00074	52		 push	 edx
  00075	e8 00 00 00 00	 call	 ??$forward@V?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@YA$$QAV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@0@AAV10@@Z ; std::forward<std::vector<CaveSlope,std::allocator<CaveSlope> > >
  0007a	83 c4 04	 add	 esp, 4
  0007d	50		 push	 eax
  0007e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?_Assign_rv@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::_Assign_rv
; Line 814
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00090	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00093	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009a	59		 pop	 ecx
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  000a4	3b ec		 cmp	 ebp, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::~_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >
__ehhandler$??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 0c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-244]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::vector<CaveSlope,std::allocator<CaveSlope> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ PROC ; std::vector<CaveSlope,std::allocator<CaveSlope> >::vector<CaveSlope,std::allocator<CaveSlope> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8d 8d 2f ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00029	e8 00 00 00 00	 call	 ??0?$allocator@VCaveSlope@@@std@@QAE@XZ ; std::allocator<CaveSlope>::allocator<CaveSlope>
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >
; Line 681
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ENDP ; std::vector<CaveSlope,std::allocator<CaveSlope> >::vector<CaveSlope,std::allocator<CaveSlope> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  00023	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<CaveSlope> >::_Wrap_alloc<std::allocator<CaveSlope> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00047	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	51		 push	 ecx
  0004d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00050	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00055	6a 01		 push	 1
  00057	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	51		 push	 ecx
  0005d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00060	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00065	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 637
  0006e	52		 push	 edx
  0006f	8b cd		 mov	 ecx, ebp
  00071	50		 push	 eax
  00072	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00078	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0007d	58		 pop	 eax
  0007e	5a		 pop	 edx
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00085	33 cd		 xor	 ecx, ebp
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
  0009d	8d 49 00	 npad	 3
$LN5@Free_proxy:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  000a8	eb ff ff ff	 DD	 -21			; ffffffebH
  000ac	01 00 00 00	 DD	 1
  000b0	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  000b4	5f		 DB	 95			; 0000005fH
  000b5	41		 DB	 65			; 00000041H
  000b6	6c		 DB	 108			; 0000006cH
  000b7	70		 DB	 112			; 00000070H
  000b8	72		 DB	 114			; 00000072H
  000b9	6f		 DB	 111			; 0000006fH
  000ba	78		 DB	 120			; 00000078H
  000bb	79		 DB	 121			; 00000079H
  000bc	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -232						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00013	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00035	6a 01		 push	 1
  00037	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003a	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00044	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0004a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0004f	50		 push	 eax
  00050	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00059	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0005e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00066	89 11		 mov	 DWORD PTR [ecx], edx
; Line 627
  00068	52		 push	 edx
  00069	8b cd		 mov	 ecx, ebp
  0006b	50		 push	 eax
  0006c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00072	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00077	58		 pop	 eax
  00078	5a		 pop	 edx
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
  00097	90		 npad	 1
$LN5@Alloc_prox:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000a0	eb ff ff ff	 DD	 -21			; ffffffebH
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000ac	5f		 DB	 95			; 0000005fH
  000ad	41		 DB	 65			; 00000041H
  000ae	6c		 DB	 108			; 0000006cH
  000af	70		 DB	 112			; 00000070H
  000b0	72		 DB	 114			; 00000072H
  000b1	6f		 DB	 111			; 0000006fH
  000b2	78		 DB	 120			; 00000078H
  000b3	79		 DB	 121			; 00000079H
  000b4	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::~_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Free_proxy
; Line 609
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@VCaveSlope@@@std@@@std@@QAE@XZ
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::~_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@VCaveSlope@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CaveSlope> >::_Vector_val<std::_Simple_types<CaveSlope> >
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Alloc_proxy
; Line 604
  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@VCaveSlope@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveSlope@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >::_Vector_alloc<0,std::_Vec_base_types<CaveSlope,std::allocator<CaveSlope> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@VCaveSlope@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@VCaveSlope@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<CaveSlope> >::~_Vector_val<std::_Simple_types<CaveSlope> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@VCaveSlope@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<CaveSlope> >::~_Vector_val<std::_Simple_types<CaveSlope> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@VCaveSlope@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@VCaveSlope@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<CaveSlope> >::_Vector_val<std::_Simple_types<CaveSlope> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 484
  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 485
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@VCaveSlope@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<CaveSlope> >::_Vector_val<std::_Simple_types<CaveSlope> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<CaveSlope> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAIABV?$allocator@VCaveSlope@@@2@@Z ; std::allocator_traits<std::allocator<CaveSlope> >::max_size
  0002c	83 c4 04	 add	 esp, 4
; Line 885
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<CaveSlope> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@I@Z PROC ; std::_Wrap_alloc<std::allocator<CaveSlope> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@I@Z ; std::allocator<CaveSlope>::deallocate
; Line 859
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEXPAVCaveSlope@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<CaveSlope> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEPAVCaveSlope@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEPAVCaveSlope@@I@Z PROC ; std::_Wrap_alloc<std::allocator<CaveSlope> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@VCaveSlope@@@std@@QAEPAVCaveSlope@@I@Z ; std::allocator<CaveSlope>::allocate
; Line 848
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAEPAVCaveSlope@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<CaveSlope> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<CaveSlope> >::_Wrap_alloc<std::allocator<CaveSlope> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@VCaveSlope@@@std@@QAE@XZ ; std::allocator<CaveSlope>::allocator<CaveSlope>
; Line 802
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<CaveSlope> >::_Wrap_alloc<std::allocator<CaveSlope> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAIABV?$allocator@VCaveSlope@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAIABV?$allocator@VCaveSlope@@@2@@Z PROC ; std::allocator_traits<std::allocator<CaveSlope> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 735
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$allocator@VCaveSlope@@@std@@QBEIXZ ; std::allocator<CaveSlope>::max_size
; Line 736
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@VCaveSlope@@@std@@@std@@SAIABV?$allocator@VCaveSlope@@@2@@Z ENDP ; std::allocator_traits<std::allocator<CaveSlope> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator@VCaveSlope@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@VCaveSlope@@@std@@QBEIXZ PROC	; std::allocator<CaveSlope>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  00023	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH
; Line 613
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?max_size@?$allocator@VCaveSlope@@@std@@QBEIXZ ENDP	; std::allocator<CaveSlope>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?construct@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@ABV3@@Z
_TEXT	SEGMENT
tv69 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@ABV3@@Z PROC ; std::allocator<CaveSlope>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	6a 14		 push	 20			; 00000014H
  00029	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0002e	83 c4 08	 add	 esp, 8
  00031	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00037	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  0003e	74 33		 je	 SHORT $LN3@construct
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  00043	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00049	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004b	89 02		 mov	 DWORD PTR [edx], eax
  0004d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00050	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00053	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00056	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00059	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0005c	89 42 0c	 mov	 DWORD PTR [edx+12], eax
  0005f	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00062	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
  00065	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  0006b	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv69[ebp], edx
  00071	eb 0a		 jmp	 SHORT $LN1@construct
$LN3@construct:
  00073	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN1@construct:
; Line 594
  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx
  00080	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00086	3b ec		 cmp	 ebp, esp
  00088	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c2 08 00	 ret	 8
?construct@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@ABV3@@Z ENDP ; std::allocator<CaveSlope>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@VCaveSlope@@@std@@QAEPAVCaveSlope@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@VCaveSlope@@@std@@QAEPAVCaveSlope@@I@Z PROC ; std::allocator<CaveSlope>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  00023	6a 00		 push	 0
  00025	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??$_Allocate@VCaveSlope@@@std@@YAPAVCaveSlope@@IPAV1@@Z ; std::_Allocate<CaveSlope>
  0002e	83 c4 08	 add	 esp, 8
; Line 579
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?allocate@?$allocator@VCaveSlope@@@std@@QAEPAVCaveSlope@@I@Z ENDP ; std::allocator<CaveSlope>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@I@Z PROC ; std::allocator<CaveSlope>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	83 c4 04	 add	 esp, 4
; Line 574
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?deallocate@?$allocator@VCaveSlope@@@std@@QAEXPAVCaveSlope@@I@Z ENDP ; std::allocator<CaveSlope>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@VCaveSlope@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@VCaveSlope@@@std@@QAE@XZ PROC		; std::allocator<CaveSlope>::allocator<CaveSlope>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@VCaveSlope@@@std@@QAE@XZ ENDP		; std::allocator<CaveSlope>::allocator<CaveSlope>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXI@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00026	50		 push	 eax
  00027	6a 00		 push	 0
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?__autoclassinit2@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXI@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z
_TEXT	SEGMENT
__Pnext$ = -48						; size = 4
__Lock$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  00045	8b f4		 mov	 esi, esp
  00047	6a 03		 push	 3
  00049	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00060	8b f4		 mov	 esi, esp
  00062	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  00075	83 7d d0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00079	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  0007b	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0007e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00081	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  00083	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00086	8b 08		 mov	 ecx, DWORD PTR [eax]
  00088	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0008b	3b 55 08	 cmp	 edx, DWORD PTR __First$[ebp]
  0008e	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00090	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00093	8b 08		 mov	 ecx, DWORD PTR [eax]
  00095	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00098	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0009b	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  0009d	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a2	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000a7	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000aa	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000ac	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000af	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b1	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000b6	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bb	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000c0	8b 4d d0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000c3	8b 10		 mov	 edx, DWORD PTR [eax]
  000c5	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000c7	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d0	8b f4		 mov	 esi, esp
  000d2	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000db	3b f4		 cmp	 esi, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e2	52		 push	 edx
  000e3	8b cd		 mov	 ecx, ebp
  000e5	50		 push	 eax
  000e6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000ec	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f1	58		 pop	 eax
  000f2	5a		 pop	 edx
  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00104	33 cd		 xor	 ecx, ebp
  00106	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010b	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  00111	3b ec		 cmp	 ebp, esp
  00113	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 08 00	 ret	 8
  0011e	8b ff		 npad	 2
$LN13@Orphan_ran:
  00120	01 00 00 00	 DD	 1
  00124	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00128	dc ff ff ff	 DD	 -36			; ffffffdcH
  0012c	04 00 00 00	 DD	 4
  00130	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00134	5f		 DB	 95			; 0000005fH
  00135	4c		 DB	 76			; 0000004cH
  00136	6f		 DB	 111			; 0000006fH
  00137	63		 DB	 99			; 00000063H
  00138	6b		 DB	 107			; 0000006bH
  00139	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xran@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXXZ PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1758
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1759
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xran:
; Line 1760
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xran@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXXZ ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlen@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXXZ PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xlen@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXXZ ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?_Tidy@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXXZ PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 73		 je	 SHORT $LN2@Tidy
; Line 1625
  0002c	8b f4		 mov	 esi, esp
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00037	3b f4		 cmp	 esi, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00044	51		 push	 ecx
  00045	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004b	50		 push	 eax
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?_Destroy@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXPAVCaveRectangle@@0@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Destroy
; Line 1628
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0005d	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  00060	c1 fa 04	 sar	 edx, 4
  00063	52		 push	 edx
  00064	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	51		 push	 ecx
  0006b	8d 95 2f ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00071	52		 push	 edx
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@I@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::deallocate
; Line 1629
  00081	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00084	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 1630
  0008b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00095	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00098	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
$LN2@Tidy:
; Line 1633
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
  000a2	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000a8	3b ec		 cmp	 ebp, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
?_Tidy@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXXZ ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reserve@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Unused_capacity
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0002e	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?max_size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::max_size
  00038	8b f0		 mov	 esi, eax
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::size
  00042	2b f0		 sub	 esi, eax
  00044	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00047	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Xlen
$LN1@Reserve:
; Line 1617
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::size
  00059	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEII@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Grow_to
  00065	50		 push	 eax
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?_Reserve@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -273						; size = 1
$T3 = -261						; size = 1
$T4 = -249						; size = 1
__Size$ = -48						; size = 4
__Ptr$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d bd e8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-280]
  00022	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00027	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002c	f3 ab		 rep stosd
  0002e	59		 pop	 ecx
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00034	33 c5		 xor	 eax, ebp
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00043	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00046	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00049	50		 push	 eax
  0004a	8d 8d ef fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00050	51		 push	 ecx
  00051	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEPAVCaveRectangle@@I@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::allocate
  00060	89 45 dc	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  00063	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  0006a	8b 45 dc	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00074	52		 push	 edx
  00075	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007b	51		 push	 ecx
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ??$_Umove@PAVCaveRectangle@@@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEPAVCaveRectangle@@PAV2@00@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Umove<CaveRectangle *>
  00084	eb 2d		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  00086	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0008d	51		 push	 ecx
  0008e	8d 95 fb fe ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00094	52		 push	 edx
  00095	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@I@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::deallocate
; Line 1594
  000a4	6a 00		 push	 0
  000a6	6a 00		 push	 0
  000a8	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000ad	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000b2	c3		 ret	 0
$LN5@Reallocate:
  000b3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ba	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000c3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	e8 00 00 00 00	 call	 ?size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::size
  000cb	89 45 d0	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000ce	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000d5	74 43		 je	 SHORT $LN1@Reallocate
; Line 1600
  000d7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e4	50		 push	 eax
  000e5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	e8 00 00 00 00	 call	 ?_Destroy@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXPAVCaveRectangle@@0@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Destroy
; Line 1602
  000ed	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000f0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000f6	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000f9	c1 fa 04	 sar	 edx, 4
  000fc	52		 push	 edx
  000fd	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00103	51		 push	 ecx
  00104	8d 95 07 ff ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  0010a	52		 push	 edx
  0010b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
  00113	8b c8		 mov	 ecx, eax
  00115	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@I@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::deallocate
$LN1@Reallocate:
; Line 1605
  0011a	8b f4		 mov	 esi, esp
  0011c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00125	3b f4		 cmp	 esi, esp
  00127	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0012c	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0012f	c1 e0 04	 shl	 eax, 4
  00132	03 45 dc	 add	 eax, DWORD PTR __Ptr$[ebp]
  00135	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 1607
  0013b	8b 45 d0	 mov	 eax, DWORD PTR __Size$[ebp]
  0013e	c1 e0 04	 shl	 eax, 4
  00141	03 45 dc	 add	 eax, DWORD PTR __Ptr$[ebp]
  00144	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0014a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0014d	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00150	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
  00153	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00156	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0015d	59		 pop	 ecx
  0015e	5f		 pop	 edi
  0015f	5e		 pop	 esi
  00160	5b		 pop	 ebx
  00161	81 c4 18 01 00
	00		 add	 esp, 280		; 00000118H
  00167	3b ec		 cmp	 ebp, esp
  00169	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a e4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-284]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Reallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Inside@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBE_NPBVCaveRectangle@@@Z
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBE_NPBVCaveRectangle@@@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00029	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002c	73 17		 jae	 SHORT $LN3@Inside
  0002e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00031	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00034	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  00037	77 0c		 ja	 SHORT $LN3@Inside
  00039	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv76[ebp], 1
  00043	eb 0a		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00045	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0004f	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?_Inside@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBE_NPBVCaveRectangle@@@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Grow_to@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEII@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?capacity@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::capacity
  0002b	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?max_size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::max_size
  00036	8b 4d ec	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00039	d1 e9		 shr	 ecx, 1
  0003b	2b c1		 sub	 eax, ecx
  0003d	3b 45 ec	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  00040	73 0c		 jae	 SHORT $LN4@Grow_to
  00042	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
  0004c	eb 0e		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0004e	8b 55 ec	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00051	d1 ea		 shr	 edx, 1
  00053	03 55 ec	 add	 edx, DWORD PTR __Capacity$[ebp]
  00056	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  0005c	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv73[ebp]
  00062	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00065	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
  00068	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0006b	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0006d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00070	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
$LN1@Grow_to:
; Line 1578
  00073	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?_Grow_to@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEII@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Destroy@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXPAVCaveRectangle@@0@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXPAVCaveRectangle@@0@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
; Line 1567
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YAXPAVCaveRectangle@@0AAU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<CaveRectangle> > >
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0004d	52		 push	 edx
  0004e	8b cd		 mov	 ecx, ebp
  00050	50		 push	 eax
  00051	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00057	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0005c	58		 pop	 eax
  0005d	5a		 pop	 edx
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00064	33 cd		 xor	 ecx, ebp
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
  0007e	8b ff		 npad	 2
$LN5@Destroy:
  00080	01 00 00 00	 DD	 1
  00084	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00088	eb ff ff ff	 DD	 -21			; ffffffebH
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00094	5f		 DB	 95			; 0000005fH
  00095	41		 DB	 65			; 00000041H
  00096	6c		 DB	 108			; 0000006cH
  00097	76		 DB	 118			; 00000076H
  00098	61		 DB	 97			; 00000061H
  00099	6c		 DB	 108			; 0000006cH
  0009a	00		 DB	 0
?_Destroy@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXPAVCaveRectangle@@0@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXABVCaveRectangle@@@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Idx$3 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXABVCaveRectangle@@@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$addressof@$$CBVCaveRectangle@@@std@@YAPBVCaveRectangle@@ABV1@@Z ; std::addressof<CaveRectangle const >
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Inside@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBE_NPBVCaveRectangle@@@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Inside
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 81 00 00
	00		 je	 $LN4@push_back
; Line 1246
  00043	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$addressof@$$CBVCaveRectangle@@@std@@YAPBVCaveRectangle@@ABV1@@Z ; std::addressof<CaveRectangle const >
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00055	c1 f8 04	 sar	 eax, 4
  00058	89 45 ec	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  0005b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00064	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00067	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  00069	6a 01		 push	 1
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Reserve
$LN3@push_back:
; Line 1249
  00073	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00079	51		 push	 ecx
  0007a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00080	50		 push	 eax
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Orphan_range
; Line 1251
  00089	8b 45 ec	 mov	 eax, DWORD PTR __Idx$3[ebp]
  0008c	c1 e0 04	 shl	 eax, 4
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00095	50		 push	 eax
  00096	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00099	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009c	50		 push	 eax
  0009d	8d 8d 17 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  000a3	51		 push	 ecx
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
  000ac	8b c8		 mov	 ecx, eax
  000ae	e8 00 00 00 00	 call	 ??$construct@VCaveRectangle@@AAV1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@AAV2@@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle &>
; Line 1252
  000b3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b9	83 c1 10	 add	 ecx, 16			; 00000010H
  000bc	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000bf	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 1254
  000c2	eb 5e		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000c4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000cd	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  000d0	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000d2	6a 01		 push	 1
  000d4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Reserve
$LN1@push_back:
; Line 1258
  000dc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000df	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000e2	51		 push	 ecx
  000e3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e6	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000e9	50		 push	 eax
  000ea	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Orphan_range
; Line 1260
  000f2	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  000f5	50		 push	 eax
  000f6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000fc	52		 push	 edx
  000fd	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00103	50		 push	 eax
  00104	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00107	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
  0010c	8b c8		 mov	 ecx, eax
  0010e	e8 00 00 00 00	 call	 ??$construct@VCaveRectangle@@ABV1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@ABV2@@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle const &>
; Line 1261
  00113	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00116	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00119	83 c1 10	 add	 ecx, 16			; 00000010H
  0011c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0011f	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  0012b	3b ec		 cmp	 ebp, esp
  0012d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c2 04 00	 ret	 4
?push_back@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXABVCaveRectangle@@@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEAAVCaveRectangle@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEAAVCaveRectangle@@I@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::size
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0002e	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00034	8b f4		 mov	 esi, esp
  00036	68 b1 04 00 00	 push	 1201			; 000004b1H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@COBDDANL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN4@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	68 b2 04 00 00	 push	 1202			; 000004b2H
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@COBDDANL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007a	6a 02		 push	 2
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00082	83 c4 18	 add	 esp, 24			; 00000018H
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	83 f8 01	 cmp	 eax, 1
  0008f	75 01		 jne	 SHORT $LN5@operator
  00091	cc		 int	 3
$LN5@operator:
  00092	8b f4		 mov	 esi, esp
  00094	6a 00		 push	 0
  00096	68 b2 04 00 00	 push	 1202			; 000004b2H
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@COBDDANL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_1LC@DHGFLIFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAC?$AAa?$AAv?$AAe?$AAR?$AAe?$AAc?$AAt?$AAa?$AAn?$AAg?$AAl?$AAe?$AA?0@
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b0	83 c4 14	 add	 esp, 20			; 00000014H
  000b3	3b f4		 cmp	 esi, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000ba	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  000bd	c1 e0 04	 shl	 eax, 4
  000c0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	03 41 04	 add	 eax, DWORD PTR [ecx+4]
; Line 1210
  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000cf	3b ec		 cmp	 ebp, esp
  000d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
??A?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEAAVCaveRectangle@@I@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?at@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEAAVCaveRectangle@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEAAVCaveRectangle@@I@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::at, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1174
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1175
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::size
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0002e	77 08		 ja	 SHORT $LN1@at
; Line 1176
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Xran@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Xran
$LN1@at:
; Line 1177
  00038	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  0003b	c1 e0 04	 shl	 eax, 4
  0003e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	03 41 04	 add	 eax, DWORD PTR [ecx+4]
$LN3@at:
; Line 1178
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?at@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEAAVCaveRectangle@@I@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::at
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00023	8d 85 2f ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::max_size
; Line 1154
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?max_size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	c1 f8 04	 sar	 eax, 4
; Line 1149
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Unused_capacity@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unused_capacity@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0002f	c1 f8 04	 sar	 eax, 4
; Line 1016
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Unused_capacity@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?capacity@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	c1 f8 04	 sar	 eax, 4
; Line 1011
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?capacity@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::~vector<CaveRectangle,std::allocator<CaveRectangle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Tidy
; Line 946
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::~_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::~vector<CaveRectangle,std::allocator<CaveRectangle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEX$$QAVCaveRectangle@@@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Idx$3 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEX$$QAVCaveRectangle@@@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 865
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 866
  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$addressof@VCaveRectangle@@@std@@YAPAVCaveRectangle@@AAV1@@Z ; std::addressof<CaveRectangle>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Inside@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBE_NPBVCaveRectangle@@@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Inside
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 8a 00 00
	00		 je	 $LN4@push_back
; Line 868
  00043	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$addressof@VCaveRectangle@@@std@@YAPAVCaveRectangle@@AAV1@@Z ; std::addressof<CaveRectangle>
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00055	c1 f8 04	 sar	 eax, 4
  00058	89 45 ec	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 869
  0005b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00064	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00067	75 0a		 jne	 SHORT $LN3@push_back
; Line 870
  00069	6a 01		 push	 1
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Reserve
$LN3@push_back:
; Line 871
  00073	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00079	51		 push	 ecx
  0007a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00080	50		 push	 eax
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Orphan_range
; Line 873
  00089	8b 45 ec	 mov	 eax, DWORD PTR __Idx$3[ebp]
  0008c	c1 e0 04	 shl	 eax, 4
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??$forward@VCaveRectangle@@@std@@YA$$QAVCaveRectangle@@AAV1@@Z ; std::forward<CaveRectangle>
  0009b	83 c4 04	 add	 esp, 4
  0009e	50		 push	 eax
  0009f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a2	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000a5	50		 push	 eax
  000a6	8d 8d 17 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  000ac	51		 push	 ecx
  000ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??$construct@VCaveRectangle@@V1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle>
; Line 874
  000bc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c2	83 c1 10	 add	 ecx, 16			; 00000010H
  000c5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c8	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 876
  000cb	eb 67		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 878
  000cd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000d6	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  000d9	75 0a		 jne	 SHORT $LN1@push_back
; Line 879
  000db	6a 01		 push	 1
  000dd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IAEXI@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Reserve
$LN1@push_back:
; Line 880
  000e5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000eb	51		 push	 ecx
  000ec	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f2	50		 push	 eax
  000f3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@IBEXPAVCaveRectangle@@0@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Orphan_range
; Line 882
  000fb	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ??$forward@VCaveRectangle@@@std@@YA$$QAVCaveRectangle@@AAV1@@Z ; std::forward<CaveRectangle>
  00104	83 c4 04	 add	 esp, 4
  00107	50		 push	 eax
  00108	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0010e	52		 push	 edx
  0010f	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00115	50		 push	 eax
  00116	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ??$construct@VCaveRectangle@@V1@@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@$$QAV2@@Z ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::construct<CaveRectangle,CaveRectangle>
; Line 883
  00125	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00128	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0012b	83 c1 10	 add	 ecx, 16			; 00000010H
  0012e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00131	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 885
  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  0013d	3b ec		 cmp	 ebp, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	8b e5		 mov	 esp, ebp
  00146	5d		 pop	 ebp
  00147	c2 04 00	 ret	 4
?push_back@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEX$$QAVCaveRectangle@@@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Assign_rv@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Assign_rv@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Assign_rv, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 837
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 838
  00023	8b f4		 mov	 esi, esp
  00025	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00028	50		 push	 eax
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Swap_all@_Container_base12@std@@QAEXAAU12@@Z
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 839
  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00042	89 50 04	 mov	 DWORD PTR [eax+4], edx
; Line 840
  00045	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0004b	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0004e	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 841
  00051	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00057	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0005a	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 843
  0005d	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00060	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 844
  00067	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0006a	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 845
  00071	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 846
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00084	3b ec		 cmp	 ebp, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 08 00	 ret	 8
?_Assign_rv@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::vector<CaveRectangle,std::allocator<CaveRectangle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 812
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00021	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8d 85 17 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00048	50		 push	 eax
  00049	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
  00051	50		 push	 eax
  00052	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 813
  00061	33 c0		 xor	 eax, eax
  00063	88 85 23 ff ff
	ff		 mov	 BYTE PTR $T3[ebp], al
  00069	0f b6 8d 23 ff
	ff ff		 movzx	 ecx, BYTE PTR $T3[ebp]
  00070	51		 push	 ecx
  00071	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00074	52		 push	 edx
  00075	e8 00 00 00 00	 call	 ??$forward@V?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@YA$$QAV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@0@AAV10@@Z ; std::forward<std::vector<CaveRectangle,std::allocator<CaveRectangle> > >
  0007a	83 c4 04	 add	 esp, 4
  0007d	50		 push	 eax
  0007e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?_Assign_rv@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::_Assign_rv
; Line 814
  00086	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0008d	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00090	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00093	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009a	59		 pop	 ecx
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  000a4	3b ec		 cmp	 ebp, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::~_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >
__ehhandler$??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 0c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-244]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::vector<CaveRectangle,std::allocator<CaveRectangle> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ PROC ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::vector<CaveRectangle,std::allocator<CaveRectangle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8d 8d 2f ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00029	e8 00 00 00 00	 call	 ??0?$allocator@VCaveRectangle@@@std@@QAE@XZ ; std::allocator<CaveRectangle>::allocator<CaveRectangle>
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >
; Line 681
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ENDP ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::vector<CaveRectangle,std::allocator<CaveRectangle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  00023	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::_Wrap_alloc<std::allocator<CaveRectangle> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00047	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	51		 push	 ecx
  0004d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00050	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00055	6a 01		 push	 1
  00057	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	51		 push	 ecx
  0005d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00060	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00065	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 637
  0006e	52		 push	 edx
  0006f	8b cd		 mov	 ecx, ebp
  00071	50		 push	 eax
  00072	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00078	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0007d	58		 pop	 eax
  0007e	5a		 pop	 edx
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00085	33 cd		 xor	 ecx, ebp
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
  0009d	8d 49 00	 npad	 3
$LN5@Free_proxy:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  000a8	eb ff ff ff	 DD	 -21			; ffffffebH
  000ac	01 00 00 00	 DD	 1
  000b0	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  000b4	5f		 DB	 95			; 0000005fH
  000b5	41		 DB	 65			; 00000041H
  000b6	6c		 DB	 108			; 0000006cH
  000b7	70		 DB	 112			; 00000070H
  000b8	72		 DB	 114			; 00000072H
  000b9	6f		 DB	 111			; 0000006fH
  000ba	78		 DB	 120			; 00000078H
  000bb	79		 DB	 121			; 00000079H
  000bc	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -232						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00013	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00035	6a 01		 push	 1
  00037	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003a	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00044	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0004a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0004f	50		 push	 eax
  00050	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00059	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0005e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00066	89 11		 mov	 DWORD PTR [ecx], edx
; Line 627
  00068	52		 push	 edx
  00069	8b cd		 mov	 ecx, ebp
  0006b	50		 push	 eax
  0006c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00072	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00077	58		 pop	 eax
  00078	5a		 pop	 edx
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
  00097	90		 npad	 1
$LN5@Alloc_prox:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000a0	eb ff ff ff	 DD	 -21			; ffffffebH
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000ac	5f		 DB	 95			; 0000005fH
  000ad	41		 DB	 65			; 00000041H
  000ae	6c		 DB	 108			; 0000006cH
  000af	70		 DB	 112			; 00000070H
  000b0	72		 DB	 114			; 00000072H
  000b1	6f		 DB	 111			; 0000006fH
  000b2	78		 DB	 120			; 00000078H
  000b3	79		 DB	 121			; 00000079H
  000b4	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::~_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Free_proxy
; Line 609
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@VCaveRectangle@@@std@@@std@@QAE@XZ
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::~_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<CaveRectangle> >::_Vector_val<std::_Simple_types<CaveRectangle> >
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Alloc_proxy
; Line 604
  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@VCaveRectangle@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@@std@@QAE@ABV?$allocator@VCaveRectangle@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >::_Vector_alloc<0,std::_Vec_base_types<CaveRectangle,std::allocator<CaveRectangle> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@VCaveRectangle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@VCaveRectangle@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<CaveRectangle> >::~_Vector_val<std::_Simple_types<CaveRectangle> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@VCaveRectangle@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<CaveRectangle> >::~_Vector_val<std::_Simple_types<CaveRectangle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@VCaveRectangle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@VCaveRectangle@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<CaveRectangle> >::_Vector_val<std::_Simple_types<CaveRectangle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 484
  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 485
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@VCaveRectangle@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<CaveRectangle> >::_Vector_val<std::_Simple_types<CaveRectangle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAIABV?$allocator@VCaveRectangle@@@2@@Z ; std::allocator_traits<std::allocator<CaveRectangle> >::max_size
  0002c	83 c4 04	 add	 esp, 4
; Line 885
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@I@Z PROC ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@I@Z ; std::allocator<CaveRectangle>::deallocate
; Line 859
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXPAVCaveRectangle@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEPAVCaveRectangle@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEPAVCaveRectangle@@I@Z PROC ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@VCaveRectangle@@@std@@QAEPAVCaveRectangle@@I@Z ; std::allocator<CaveRectangle>::allocate
; Line 848
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAEPAVCaveRectangle@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::_Wrap_alloc<std::allocator<CaveRectangle> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@VCaveRectangle@@@std@@QAE@XZ ; std::allocator<CaveRectangle>::allocator<CaveRectangle>
; Line 802
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<CaveRectangle> >::_Wrap_alloc<std::allocator<CaveRectangle> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAIABV?$allocator@VCaveRectangle@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAIABV?$allocator@VCaveRectangle@@@2@@Z PROC ; std::allocator_traits<std::allocator<CaveRectangle> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 735
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$allocator@VCaveRectangle@@@std@@QBEIXZ ; std::allocator<CaveRectangle>::max_size
; Line 736
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@VCaveRectangle@@@std@@@std@@SAIABV?$allocator@VCaveRectangle@@@2@@Z ENDP ; std::allocator_traits<std::allocator<CaveRectangle> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator@VCaveRectangle@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@VCaveRectangle@@@std@@QBEIXZ PROC	; std::allocator<CaveRectangle>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  00023	b8 ff ff ff 0f	 mov	 eax, 268435455		; 0fffffffH
; Line 613
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?max_size@?$allocator@VCaveRectangle@@@std@@QBEIXZ ENDP	; std::allocator<CaveRectangle>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?construct@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@ABV3@@Z
_TEXT	SEGMENT
tv69 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@ABV3@@Z PROC ; std::allocator<CaveRectangle>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	6a 10		 push	 16			; 00000010H
  00029	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0002e	83 c4 08	 add	 esp, 8
  00031	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00037	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  0003e	74 2d		 je	 SHORT $LN3@construct
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  00043	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00049	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004b	89 02		 mov	 DWORD PTR [edx], eax
  0004d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00050	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00053	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00056	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00059	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  0005c	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  0005f	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00065	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv69[ebp], edx
  0006b	eb 0a		 jmp	 SHORT $LN1@construct
$LN3@construct:
  0006d	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN1@construct:
; Line 594
  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
  0007a	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00080	3b ec		 cmp	 ebp, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 08 00	 ret	 8
?construct@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@ABV3@@Z ENDP ; std::allocator<CaveRectangle>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@VCaveRectangle@@@std@@QAEPAVCaveRectangle@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@VCaveRectangle@@@std@@QAEPAVCaveRectangle@@I@Z PROC ; std::allocator<CaveRectangle>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  00023	6a 00		 push	 0
  00025	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??$_Allocate@VCaveRectangle@@@std@@YAPAVCaveRectangle@@IPAV1@@Z ; std::_Allocate<CaveRectangle>
  0002e	83 c4 08	 add	 esp, 8
; Line 579
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?allocate@?$allocator@VCaveRectangle@@@std@@QAEPAVCaveRectangle@@I@Z ENDP ; std::allocator<CaveRectangle>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@I@Z PROC ; std::allocator<CaveRectangle>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	83 c4 04	 add	 esp, 4
; Line 574
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?deallocate@?$allocator@VCaveRectangle@@@std@@QAEXPAVCaveRectangle@@I@Z ENDP ; std::allocator<CaveRectangle>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@VCaveRectangle@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@VCaveRectangle@@@std@@QAE@XZ PROC	; std::allocator<CaveRectangle>::allocator<CaveRectangle>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@VCaveRectangle@@@std@@QAE@XZ ENDP	; std::allocator<CaveRectangle>::allocator<CaveRectangle>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z
_TEXT	SEGMENT
__Pnext$ = -48						; size = 4
__Lock$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z PROC ; std::vector<TileSet,std::allocator<TileSet> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  00045	8b f4		 mov	 esi, esp
  00047	6a 03		 push	 3
  00049	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00060	8b f4		 mov	 esi, esp
  00062	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  00075	83 7d d0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00079	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  0007b	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0007e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00081	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  00083	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00086	8b 08		 mov	 ecx, DWORD PTR [eax]
  00088	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0008b	3b 55 08	 cmp	 edx, DWORD PTR __First$[ebp]
  0008e	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00090	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00093	8b 08		 mov	 ecx, DWORD PTR [eax]
  00095	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00098	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0009b	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  0009d	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a2	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000a7	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000aa	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000ac	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000af	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b1	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000b6	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bb	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000c0	8b 4d d0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000c3	8b 10		 mov	 edx, DWORD PTR [eax]
  000c5	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000c7	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d0	8b f4		 mov	 esi, esp
  000d2	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000db	3b f4		 cmp	 esi, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e2	52		 push	 edx
  000e3	8b cd		 mov	 ecx, ebp
  000e5	50		 push	 eax
  000e6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000ec	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f1	58		 pop	 eax
  000f2	5a		 pop	 edx
  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00104	33 cd		 xor	 ecx, ebp
  00106	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010b	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  00111	3b ec		 cmp	 ebp, esp
  00113	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 08 00	 ret	 8
  0011e	8b ff		 npad	 2
$LN13@Orphan_ran:
  00120	01 00 00 00	 DD	 1
  00124	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00128	dc ff ff ff	 DD	 -36			; ffffffdcH
  0012c	04 00 00 00	 DD	 4
  00130	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00134	5f		 DB	 95			; 0000005fH
  00135	4c		 DB	 76			; 0000004cH
  00136	6f		 DB	 111			; 0000006fH
  00137	63		 DB	 99			; 00000063H
  00138	6b		 DB	 107			; 0000006bH
  00139	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z ENDP ; std::vector<TileSet,std::allocator<TileSet> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xran@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXXZ PROC ; std::vector<TileSet,std::allocator<TileSet> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1758
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1759
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xran:
; Line 1760
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xran@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXXZ ENDP ; std::vector<TileSet,std::allocator<TileSet> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlen@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXXZ PROC ; std::vector<TileSet,std::allocator<TileSet> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xlen@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXXZ ENDP ; std::vector<TileSet,std::allocator<TileSet> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?_Tidy@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXXZ PROC ; std::vector<TileSet,std::allocator<TileSet> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 73		 je	 SHORT $LN2@Tidy
; Line 1625
  0002c	8b f4		 mov	 esi, esp
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00037	3b f4		 cmp	 esi, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00044	51		 push	 ecx
  00045	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004b	50		 push	 eax
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXPAUTileSet@@0@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Destroy
; Line 1628
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0005d	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  00060	c1 fa 03	 sar	 edx, 3
  00063	52		 push	 edx
  00064	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	51		 push	 ecx
  0006b	8d 95 2f ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00071	52		 push	 edx
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Getal
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@I@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::deallocate
; Line 1629
  00081	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00084	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 1630
  0008b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00095	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00098	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
$LN2@Tidy:
; Line 1633
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
  000a2	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000a8	3b ec		 cmp	 ebp, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
?_Tidy@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXXZ ENDP ; std::vector<TileSet,std::allocator<TileSet> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reserve@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z PROC ; std::vector<TileSet,std::allocator<TileSet> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::_Unused_capacity
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0002e	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?max_size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::max_size
  00038	8b f0		 mov	 esi, eax
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::size
  00042	2b f0		 sub	 esi, eax
  00044	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00047	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXXZ ; std::vector<TileSet,std::allocator<TileSet> >::_Xlen
$LN1@Reserve:
; Line 1617
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::size
  00059	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEII@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Grow_to
  00065	50		 push	 eax
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?_Reserve@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z ENDP ; std::vector<TileSet,std::allocator<TileSet> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -273						; size = 1
$T3 = -261						; size = 1
$T4 = -249						; size = 1
__Size$ = -48						; size = 4
__Ptr$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z PROC ; std::vector<TileSet,std::allocator<TileSet> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d bd e8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-280]
  00022	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00027	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002c	f3 ab		 rep stosd
  0002e	59		 pop	 ecx
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00034	33 c5		 xor	 eax, ebp
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00043	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00046	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00049	50		 push	 eax
  0004a	8d 8d ef fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00050	51		 push	 ecx
  00051	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Getal
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEPAUTileSet@@I@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::allocate
  00060	89 45 dc	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  00063	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  0006a	8b 45 dc	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00074	52		 push	 edx
  00075	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007b	51		 push	 ecx
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ??$_Umove@PAUTileSet@@@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEPAUTileSet@@PAU2@00@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Umove<TileSet *>
  00084	eb 2d		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  00086	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0008d	51		 push	 ecx
  0008e	8d 95 fb fe ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00094	52		 push	 edx
  00095	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Getal
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@I@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::deallocate
; Line 1594
  000a4	6a 00		 push	 0
  000a6	6a 00		 push	 0
  000a8	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000ad	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000b2	c3		 ret	 0
$LN5@Reallocate:
  000b3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ba	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000c3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	e8 00 00 00 00	 call	 ?size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::size
  000cb	89 45 d0	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000ce	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000d5	74 43		 je	 SHORT $LN1@Reallocate
; Line 1600
  000d7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e4	50		 push	 eax
  000e5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXPAUTileSet@@0@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Destroy
; Line 1602
  000ed	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000f0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000f6	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000f9	c1 fa 03	 sar	 edx, 3
  000fc	52		 push	 edx
  000fd	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00103	51		 push	 ecx
  00104	8d 95 07 ff ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  0010a	52		 push	 edx
  0010b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Getal
  00113	8b c8		 mov	 ecx, eax
  00115	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@I@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::deallocate
$LN1@Reallocate:
; Line 1605
  0011a	8b f4		 mov	 esi, esp
  0011c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00125	3b f4		 cmp	 esi, esp
  00127	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0012c	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0012f	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00132	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  00135	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00138	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 1607
  0013b	8b 45 d0	 mov	 eax, DWORD PTR __Size$[ebp]
  0013e	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00141	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  00144	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00147	89 50 08	 mov	 DWORD PTR [eax+8], edx
; Line 1608
  0014a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0014d	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00150	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
  00153	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00156	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0015d	59		 pop	 ecx
  0015e	5f		 pop	 edi
  0015f	5e		 pop	 esi
  00160	5b		 pop	 ebx
  00161	81 c4 18 01 00
	00		 add	 esp, 280		; 00000118H
  00167	3b ec		 cmp	 ebp, esp
  00169	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a e4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-284]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z ENDP ; std::vector<TileSet,std::allocator<TileSet> >::_Reallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Inside@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBE_NPBUTileSet@@@Z
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBE_NPBUTileSet@@@Z PROC ; std::vector<TileSet,std::allocator<TileSet> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00029	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002c	73 17		 jae	 SHORT $LN3@Inside
  0002e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00031	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00034	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  00037	77 0c		 ja	 SHORT $LN3@Inside
  00039	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv76[ebp], 1
  00043	eb 0a		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00045	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0004f	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?_Inside@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBE_NPBUTileSet@@@Z ENDP ; std::vector<TileSet,std::allocator<TileSet> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Grow_to@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEII@Z PROC ; std::vector<TileSet,std::allocator<TileSet> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?capacity@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::capacity
  0002b	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?max_size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::max_size
  00036	8b 4d ec	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00039	d1 e9		 shr	 ecx, 1
  0003b	2b c1		 sub	 eax, ecx
  0003d	3b 45 ec	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  00040	73 0c		 jae	 SHORT $LN4@Grow_to
  00042	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
  0004c	eb 0e		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0004e	8b 55 ec	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00051	d1 ea		 shr	 edx, 1
  00053	03 55 ec	 add	 edx, DWORD PTR __Capacity$[ebp]
  00056	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  0005c	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv73[ebp]
  00062	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00065	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
  00068	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0006b	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0006d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00070	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
$LN1@Grow_to:
; Line 1578
  00073	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?_Grow_to@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEII@Z ENDP ; std::vector<TileSet,std::allocator<TileSet> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Destroy@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXPAUTileSet@@0@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXPAUTileSet@@0@Z PROC ; std::vector<TileSet,std::allocator<TileSet> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Getal
; Line 1567
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@@std@@YAXPAUTileSet@@0AAU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<TileSet> > >
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0004d	52		 push	 edx
  0004e	8b cd		 mov	 ecx, ebp
  00050	50		 push	 eax
  00051	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00057	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0005c	58		 pop	 eax
  0005d	5a		 pop	 edx
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00064	33 cd		 xor	 ecx, ebp
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
  0007e	8b ff		 npad	 2
$LN5@Destroy:
  00080	01 00 00 00	 DD	 1
  00084	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00088	eb ff ff ff	 DD	 -21			; ffffffebH
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00094	5f		 DB	 95			; 0000005fH
  00095	41		 DB	 65			; 00000041H
  00096	6c		 DB	 108			; 0000006cH
  00097	76		 DB	 118			; 00000076H
  00098	61		 DB	 97			; 00000061H
  00099	6c		 DB	 108			; 0000006cH
  0009a	00		 DB	 0
?_Destroy@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXPAUTileSet@@0@Z ENDP ; std::vector<TileSet,std::allocator<TileSet> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEAAUTileSet@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEAAUTileSet@@I@Z PROC ; std::vector<TileSet,std::allocator<TileSet> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::size
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0002e	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00034	8b f4		 mov	 esi, esp
  00036	68 b1 04 00 00	 push	 1201			; 000004b1H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@COBDDANL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN4@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	68 b2 04 00 00	 push	 1202			; 000004b2H
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@COBDDANL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007a	6a 02		 push	 2
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00082	83 c4 18	 add	 esp, 24			; 00000018H
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	83 f8 01	 cmp	 eax, 1
  0008f	75 01		 jne	 SHORT $LN5@operator
  00091	cc		 int	 3
$LN5@operator:
  00092	8b f4		 mov	 esi, esp
  00094	6a 00		 push	 0
  00096	68 b2 04 00 00	 push	 1202			; 000004b2H
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@COBDDANL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_1JO@IKNBIAPH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAT?$AAi?$AAl?$AAe?$AAS?$AAe?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b0	83 c4 14	 add	 esp, 20			; 00000014H
  000b3	3b f4		 cmp	 esi, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000ba	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bd	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000c0	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  000c3	8d 04 d1	 lea	 eax, DWORD PTR [ecx+edx*8]
; Line 1210
  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000cf	3b ec		 cmp	 ebp, esp
  000d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
??A?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEAAUTileSet@@I@Z ENDP ; std::vector<TileSet,std::allocator<TileSet> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?at@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEAAUTileSet@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEAAUTileSet@@I@Z PROC ; std::vector<TileSet,std::allocator<TileSet> >::at, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1174
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1175
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::vector<TileSet,std::allocator<TileSet> >::size
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0002e	77 08		 ja	 SHORT $LN1@at
; Line 1176
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Xran@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXXZ ; std::vector<TileSet,std::allocator<TileSet> >::_Xran
$LN1@at:
; Line 1177
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003e	8b 55 08	 mov	 edx, DWORD PTR __Pos$[ebp]
  00041	8d 04 d1	 lea	 eax, DWORD PTR [ecx+edx*8]
$LN3@at:
; Line 1178
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004d	3b ec		 cmp	 ebp, esp
  0004f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c2 04 00	 ret	 4
?at@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEAAUTileSet@@I@Z ENDP ; std::vector<TileSet,std::allocator<TileSet> >::at
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ PROC ; std::vector<TileSet,std::allocator<TileSet> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00023	8d 85 2f ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Getal
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<TileSet> >::max_size
; Line 1154
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?max_size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ENDP ; std::vector<TileSet,std::allocator<TileSet> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ PROC ; std::vector<TileSet,std::allocator<TileSet> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	c1 f8 03	 sar	 eax, 3
; Line 1149
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?size@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ENDP ; std::vector<TileSet,std::allocator<TileSet> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Unused_capacity@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unused_capacity@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ PROC ; std::vector<TileSet,std::allocator<TileSet> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0002f	c1 f8 03	 sar	 eax, 3
; Line 1016
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Unused_capacity@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ENDP ; std::vector<TileSet,std::allocator<TileSet> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?capacity@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ PROC ; std::vector<TileSet,std::allocator<TileSet> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	c1 f8 03	 sar	 eax, 3
; Line 1011
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?capacity@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ENDP ; std::vector<TileSet,std::allocator<TileSet> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ PROC ; std::vector<TileSet,std::allocator<TileSet> >::~vector<TileSet,std::allocator<TileSet> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXXZ ; std::vector<TileSet,std::allocator<TileSet> >::_Tidy
; Line 946
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::~_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ ENDP ; std::vector<TileSet,std::allocator<TileSet> >::~vector<TileSet,std::allocator<TileSet> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEX$$QAUTileSet@@@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Idx$3 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEX$$QAUTileSet@@@Z PROC ; std::vector<TileSet,std::allocator<TileSet> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 865
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 866
  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$addressof@UTileSet@@@std@@YAPAUTileSet@@AAU1@@Z ; std::addressof<TileSet>
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Inside@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBE_NPBUTileSet@@@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Inside
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 8a 00 00
	00		 je	 $LN4@push_back
; Line 868
  00043	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$addressof@UTileSet@@@std@@YAPAUTileSet@@AAU1@@Z ; std::addressof<TileSet>
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00055	c1 f8 03	 sar	 eax, 3
  00058	89 45 ec	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 869
  0005b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00064	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00067	75 0a		 jne	 SHORT $LN3@push_back
; Line 870
  00069	6a 01		 push	 1
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Reserve
$LN3@push_back:
; Line 871
  00073	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00079	51		 push	 ecx
  0007a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00080	50		 push	 eax
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Orphan_range
; Line 873
  00089	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008f	8b 55 ec	 mov	 edx, DWORD PTR __Idx$3[ebp]
  00092	8d 04 d1	 lea	 eax, DWORD PTR [ecx+edx*8]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ??$forward@UTileSet@@@std@@YA$$QAUTileSet@@AAU1@@Z ; std::forward<TileSet>
  0009b	83 c4 04	 add	 esp, 4
  0009e	50		 push	 eax
  0009f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000a5	52		 push	 edx
  000a6	8d 85 17 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  000ac	50		 push	 eax
  000ad	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b0	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Getal
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??$construct@UTileSet@@U1@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::construct<TileSet,TileSet>
; Line 874
  000bc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c2	83 c1 08	 add	 ecx, 8
  000c5	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c8	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 876
  000cb	eb 67		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 878
  000cd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000d6	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  000d9	75 0a		 jne	 SHORT $LN1@push_back
; Line 879
  000db	6a 01		 push	 1
  000dd	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	e8 00 00 00 00	 call	 ?_Reserve@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IAEXI@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Reserve
$LN1@push_back:
; Line 880
  000e5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000eb	51		 push	 ecx
  000ec	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ef	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f2	50		 push	 eax
  000f3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f6	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@IBEXPAUTileSet@@0@Z ; std::vector<TileSet,std::allocator<TileSet> >::_Orphan_range
; Line 882
  000fb	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ??$forward@UTileSet@@@std@@YA$$QAUTileSet@@AAU1@@Z ; std::forward<TileSet>
  00104	83 c4 04	 add	 esp, 4
  00107	50		 push	 eax
  00108	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0010e	52		 push	 edx
  0010f	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00115	50		 push	 eax
  00116	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00119	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Getal
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ??$construct@UTileSet@@U1@@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<TileSet> >::construct<TileSet,TileSet>
; Line 883
  00125	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00128	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0012b	83 c1 08	 add	 ecx, 8
  0012e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00131	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 885
  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  0013d	3b ec		 cmp	 ebp, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	8b e5		 mov	 esp, ebp
  00146	5d		 pop	 ebp
  00147	c2 04 00	 ret	 4
?push_back@?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAEX$$QAUTileSet@@@Z ENDP ; std::vector<TileSet,std::allocator<TileSet> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
??0?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ PROC ; std::vector<TileSet,std::allocator<TileSet> >::vector<TileSet,std::allocator<TileSet> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8d 8d 2f ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00029	e8 00 00 00 00	 call	 ??0?$allocator@UTileSet@@@std@@QAE@XZ ; std::allocator<TileSet>::allocator<TileSet>
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >
; Line 681
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??0?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ ENDP ; std::vector<TileSet,std::allocator<TileSet> >::vector<TileSet,std::allocator<TileSet> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  00023	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<TileSet> >::_Wrap_alloc<std::allocator<TileSet> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00047	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	51		 push	 ecx
  0004d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00050	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00055	6a 01		 push	 1
  00057	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	51		 push	 ecx
  0005d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00060	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00065	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 637
  0006e	52		 push	 edx
  0006f	8b cd		 mov	 ecx, ebp
  00071	50		 push	 eax
  00072	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00078	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0007d	58		 pop	 eax
  0007e	5a		 pop	 edx
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00085	33 cd		 xor	 ecx, ebp
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
  0009d	8d 49 00	 npad	 3
$LN5@Free_proxy:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  000a8	eb ff ff ff	 DD	 -21			; ffffffebH
  000ac	01 00 00 00	 DD	 1
  000b0	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  000b4	5f		 DB	 95			; 0000005fH
  000b5	41		 DB	 65			; 00000041H
  000b6	6c		 DB	 108			; 0000006cH
  000b7	70		 DB	 112			; 00000070H
  000b8	72		 DB	 114			; 00000072H
  000b9	6f		 DB	 111			; 0000006fH
  000ba	78		 DB	 120			; 00000078H
  000bb	79		 DB	 121			; 00000079H
  000bc	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -232						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00013	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00035	6a 01		 push	 1
  00037	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003a	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00044	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0004a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0004f	50		 push	 eax
  00050	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00059	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0005e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00066	89 11		 mov	 DWORD PTR [ecx], edx
; Line 627
  00068	52		 push	 edx
  00069	8b cd		 mov	 ecx, ebp
  0006b	50		 push	 eax
  0006c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00072	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00077	58		 pop	 eax
  00078	5a		 pop	 edx
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
  00097	90		 npad	 1
$LN5@Alloc_prox:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000a0	eb ff ff ff	 DD	 -21			; ffffffebH
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000ac	5f		 DB	 95			; 0000005fH
  000ad	41		 DB	 65			; 00000041H
  000ae	6c		 DB	 108			; 0000006cH
  000af	70		 DB	 112			; 00000070H
  000b0	72		 DB	 114			; 00000072H
  000b1	6f		 DB	 111			; 0000006fH
  000b2	78		 DB	 120			; 00000078H
  000b3	79		 DB	 121			; 00000079H
  000b4	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::~_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Free_proxy
; Line 609
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@UTileSet@@@std@@@std@@QAE@XZ
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::~_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UTileSet@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<TileSet> >::_Vector_val<std::_Simple_types<TileSet> >
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Alloc_proxy
; Line 604
  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@UTileSet@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@@std@@QAE@ABV?$allocator@UTileSet@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >::_Vector_alloc<0,std::_Vec_base_types<TileSet,std::allocator<TileSet> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@UTileSet@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@UTileSet@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<TileSet> >::~_Vector_val<std::_Simple_types<TileSet> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@UTileSet@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<TileSet> >::~_Vector_val<std::_Simple_types<TileSet> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UTileSet@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@UTileSet@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<TileSet> >::_Vector_val<std::_Simple_types<TileSet> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 484
  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 485
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UTileSet@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<TileSet> >::_Vector_val<std::_Simple_types<TileSet> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<TileSet> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAIABV?$allocator@UTileSet@@@2@@Z ; std::allocator_traits<std::allocator<TileSet> >::max_size
  0002c	83 c4 04	 add	 esp, 4
; Line 885
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<TileSet> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@I@Z PROC ; std::_Wrap_alloc<std::allocator<TileSet> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@I@Z ; std::allocator<TileSet>::deallocate
; Line 859
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEXPAUTileSet@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<TileSet> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEPAUTileSet@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEPAUTileSet@@I@Z PROC ; std::_Wrap_alloc<std::allocator<TileSet> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@UTileSet@@@std@@QAEPAUTileSet@@I@Z ; std::allocator<TileSet>::allocate
; Line 848
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAEPAUTileSet@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<TileSet> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<TileSet> >::_Wrap_alloc<std::allocator<TileSet> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@UTileSet@@@std@@QAE@XZ ; std::allocator<TileSet>::allocator<TileSet>
; Line 802
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<TileSet> >::_Wrap_alloc<std::allocator<TileSet> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAIABV?$allocator@UTileSet@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAIABV?$allocator@UTileSet@@@2@@Z PROC ; std::allocator_traits<std::allocator<TileSet> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 735
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$allocator@UTileSet@@@std@@QBEIXZ ; std::allocator<TileSet>::max_size
; Line 736
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@UTileSet@@@std@@@std@@SAIABV?$allocator@UTileSet@@@2@@Z ENDP ; std::allocator_traits<std::allocator<TileSet> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator@UTileSet@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@UTileSet@@@std@@QBEIXZ PROC	; std::allocator<TileSet>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  00023	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH
; Line 613
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?max_size@?$allocator@UTileSet@@@std@@QBEIXZ ENDP	; std::allocator<TileSet>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@UTileSet@@@std@@QAEPAUTileSet@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UTileSet@@@std@@QAEPAUTileSet@@I@Z PROC ; std::allocator<TileSet>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  00023	6a 00		 push	 0
  00025	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??$_Allocate@UTileSet@@@std@@YAPAUTileSet@@IPAU1@@Z ; std::_Allocate<TileSet>
  0002e	83 c4 08	 add	 esp, 8
; Line 579
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?allocate@?$allocator@UTileSet@@@std@@QAEPAUTileSet@@I@Z ENDP ; std::allocator<TileSet>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@I@Z PROC ; std::allocator<TileSet>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	83 c4 04	 add	 esp, 4
; Line 574
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?deallocate@?$allocator@UTileSet@@@std@@QAEXPAUTileSet@@I@Z ENDP ; std::allocator<TileSet>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@UTileSet@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@UTileSet@@@std@@QAE@XZ PROC		; std::allocator<TileSet>::allocator<TileSet>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@UTileSet@@@std@@QAE@XZ ENDP		; std::allocator<TileSet>::allocator<TileSet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z
_TEXT	SEGMENT
__Pnext$ = -48						; size = 4
__Lock$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z PROC ; std::vector<Tile,std::allocator<Tile> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  00045	8b f4		 mov	 esi, esp
  00047	6a 03		 push	 3
  00049	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00060	8b f4		 mov	 esi, esp
  00062	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  00075	83 7d d0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00079	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  0007b	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0007e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00081	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  00083	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00086	8b 08		 mov	 ecx, DWORD PTR [eax]
  00088	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0008b	3b 55 08	 cmp	 edx, DWORD PTR __First$[ebp]
  0008e	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00090	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00093	8b 08		 mov	 ecx, DWORD PTR [eax]
  00095	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00098	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0009b	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  0009d	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a2	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000a7	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000aa	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000ac	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000af	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b1	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000b6	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bb	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000c0	8b 4d d0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000c3	8b 10		 mov	 edx, DWORD PTR [eax]
  000c5	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000c7	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d0	8b f4		 mov	 esi, esp
  000d2	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000db	3b f4		 cmp	 esi, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e2	52		 push	 edx
  000e3	8b cd		 mov	 ecx, ebp
  000e5	50		 push	 eax
  000e6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000ec	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f1	58		 pop	 eax
  000f2	5a		 pop	 edx
  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00104	33 cd		 xor	 ecx, ebp
  00106	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010b	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  00111	3b ec		 cmp	 ebp, esp
  00113	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 08 00	 ret	 8
  0011e	8b ff		 npad	 2
$LN13@Orphan_ran:
  00120	01 00 00 00	 DD	 1
  00124	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00128	dc ff ff ff	 DD	 -36			; ffffffdcH
  0012c	04 00 00 00	 DD	 4
  00130	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00134	5f		 DB	 95			; 0000005fH
  00135	4c		 DB	 76			; 0000004cH
  00136	6f		 DB	 111			; 0000006fH
  00137	63		 DB	 99			; 00000063H
  00138	6b		 DB	 107			; 0000006bH
  00139	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z ENDP ; std::vector<Tile,std::allocator<Tile> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xran@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXXZ PROC ; std::vector<Tile,std::allocator<Tile> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1758
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1759
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xran:
; Line 1760
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xran@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXXZ ENDP ; std::vector<Tile,std::allocator<Tile> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlen@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXXZ PROC ; std::vector<Tile,std::allocator<Tile> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xlen@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXXZ ENDP ; std::vector<Tile,std::allocator<Tile> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?_Tidy@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXXZ PROC ; std::vector<Tile,std::allocator<Tile> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 78		 je	 SHORT $LN2@Tidy
; Line 1625
  0002c	8b f4		 mov	 esi, esp
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00037	3b f4		 cmp	 esi, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00044	51		 push	 ecx
  00045	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004b	50		 push	 eax
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?_Destroy@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXPAVTile@@0@Z ; std::vector<Tile,std::allocator<Tile> >::_Destroy
; Line 1628
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0005d	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00060	99		 cdq
  00061	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00066	f7 f9		 idiv	 ecx
  00068	50		 push	 eax
  00069	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0006c	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0006f	50		 push	 eax
  00070	8d 8d 2f ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00076	51		 push	 ecx
  00077	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Getal
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@I@Z ; std::_Wrap_alloc<std::allocator<Tile> >::deallocate
; Line 1629
  00086	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00089	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 1630
  00090	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00093	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  0009a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
$LN2@Tidy:
; Line 1633
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000ad	3b ec		 cmp	 ebp, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?_Tidy@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXXZ ENDP ; std::vector<Tile,std::allocator<Tile> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reserve@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z PROC ; std::vector<Tile,std::allocator<Tile> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::_Unused_capacity
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0002e	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?max_size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::max_size
  00038	8b f0		 mov	 esi, eax
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::size
  00042	2b f0		 sub	 esi, eax
  00044	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00047	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXXZ ; std::vector<Tile,std::allocator<Tile> >::_Xlen
$LN1@Reserve:
; Line 1617
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::size
  00059	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEII@Z ; std::vector<Tile,std::allocator<Tile> >::_Grow_to
  00065	50		 push	 eax
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z ; std::vector<Tile,std::allocator<Tile> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?_Reserve@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Tile,std::allocator<Tile> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -273						; size = 1
$T3 = -261						; size = 1
$T4 = -249						; size = 1
__Size$ = -48						; size = 4
__Ptr$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z PROC ; std::vector<Tile,std::allocator<Tile> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d bd e8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-280]
  00022	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00027	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002c	f3 ab		 rep stosd
  0002e	59		 pop	 ecx
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00034	33 c5		 xor	 eax, ebp
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00043	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00046	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00049	50		 push	 eax
  0004a	8d 8d ef fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00050	51		 push	 ecx
  00051	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Getal
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEPAVTile@@I@Z ; std::_Wrap_alloc<std::allocator<Tile> >::allocate
  00060	89 45 dc	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  00063	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  0006a	8b 45 dc	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00074	52		 push	 edx
  00075	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007b	51		 push	 ecx
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ??$_Umove@PAVTile@@@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEPAVTile@@PAV2@00@Z ; std::vector<Tile,std::allocator<Tile> >::_Umove<Tile *>
  00084	eb 2d		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  00086	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0008d	51		 push	 ecx
  0008e	8d 95 fb fe ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00094	52		 push	 edx
  00095	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Getal
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@I@Z ; std::_Wrap_alloc<std::allocator<Tile> >::deallocate
; Line 1594
  000a4	6a 00		 push	 0
  000a6	6a 00		 push	 0
  000a8	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000ad	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000b2	c3		 ret	 0
$LN5@Reallocate:
  000b3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ba	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000c3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	e8 00 00 00 00	 call	 ?size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::size
  000cb	89 45 d0	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000ce	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000d5	74 48		 je	 SHORT $LN1@Reallocate
; Line 1600
  000d7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e4	50		 push	 eax
  000e5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	e8 00 00 00 00	 call	 ?_Destroy@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXPAVTile@@0@Z ; std::vector<Tile,std::allocator<Tile> >::_Destroy
; Line 1602
  000ed	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000f0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000f6	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  000f9	99		 cdq
  000fa	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  000ff	f7 f9		 idiv	 ecx
  00101	50		 push	 eax
  00102	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  00105	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00108	50		 push	 eax
  00109	8d 8d 07 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0010f	51		 push	 ecx
  00110	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00113	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Getal
  00118	8b c8		 mov	 ecx, eax
  0011a	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@I@Z ; std::_Wrap_alloc<std::allocator<Tile> >::deallocate
$LN1@Reallocate:
; Line 1605
  0011f	8b f4		 mov	 esi, esp
  00121	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00124	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  0012a	3b f4		 cmp	 esi, esp
  0012c	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  00131	6b 45 08 1c	 imul	 eax, DWORD PTR __Count$[ebp], 28
  00135	03 45 dc	 add	 eax, DWORD PTR __Ptr$[ebp]
  00138	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013b	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 1607
  0013e	6b 45 d0 1c	 imul	 eax, DWORD PTR __Size$[ebp], 28
  00142	03 45 dc	 add	 eax, DWORD PTR __Ptr$[ebp]
  00145	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00148	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0014b	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0014e	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00151	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
  00154	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00157	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0015e	59		 pop	 ecx
  0015f	5f		 pop	 edi
  00160	5e		 pop	 esi
  00161	5b		 pop	 ebx
  00162	81 c4 18 01 00
	00		 add	 esp, 280		; 00000118H
  00168	3b ec		 cmp	 ebp, esp
  0016a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016f	8b e5		 mov	 esp, ebp
  00171	5d		 pop	 ebp
  00172	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a e4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-284]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Tile,std::allocator<Tile> >::_Reallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Inside@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBE_NPBVTile@@@Z
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBE_NPBVTile@@@Z PROC ; std::vector<Tile,std::allocator<Tile> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00029	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002c	73 17		 jae	 SHORT $LN3@Inside
  0002e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00031	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00034	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  00037	77 0c		 ja	 SHORT $LN3@Inside
  00039	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv76[ebp], 1
  00043	eb 0a		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00045	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0004f	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?_Inside@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBE_NPBVTile@@@Z ENDP ; std::vector<Tile,std::allocator<Tile> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Grow_to@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEII@Z PROC ; std::vector<Tile,std::allocator<Tile> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?capacity@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::capacity
  0002b	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?max_size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::max_size
  00036	8b 4d ec	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00039	d1 e9		 shr	 ecx, 1
  0003b	2b c1		 sub	 eax, ecx
  0003d	3b 45 ec	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  00040	73 0c		 jae	 SHORT $LN4@Grow_to
  00042	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
  0004c	eb 0e		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0004e	8b 55 ec	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00051	d1 ea		 shr	 edx, 1
  00053	03 55 ec	 add	 edx, DWORD PTR __Capacity$[ebp]
  00056	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  0005c	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv73[ebp]
  00062	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00065	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
  00068	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0006b	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0006d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00070	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
$LN1@Grow_to:
; Line 1578
  00073	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?_Grow_to@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEII@Z ENDP ; std::vector<Tile,std::allocator<Tile> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Destroy@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXPAVTile@@0@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXPAVTile@@0@Z PROC ; std::vector<Tile,std::allocator<Tile> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Getal
; Line 1567
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@@std@@YAXPAVTile@@0AAU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<Tile> > >
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0004d	52		 push	 edx
  0004e	8b cd		 mov	 ecx, ebp
  00050	50		 push	 eax
  00051	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00057	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0005c	58		 pop	 eax
  0005d	5a		 pop	 edx
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00064	33 cd		 xor	 ecx, ebp
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
  0007e	8b ff		 npad	 2
$LN5@Destroy:
  00080	01 00 00 00	 DD	 1
  00084	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00088	eb ff ff ff	 DD	 -21			; ffffffebH
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00094	5f		 DB	 95			; 0000005fH
  00095	41		 DB	 65			; 00000041H
  00096	6c		 DB	 108			; 0000006cH
  00097	76		 DB	 118			; 00000076H
  00098	61		 DB	 97			; 00000061H
  00099	6c		 DB	 108			; 0000006cH
  0009a	00		 DB	 0
?_Destroy@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXPAVTile@@0@Z ENDP ; std::vector<Tile,std::allocator<Tile> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAEXABVTile@@@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Idx$3 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAEXABVTile@@@Z PROC ; std::vector<Tile,std::allocator<Tile> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$addressof@$$CBVTile@@@std@@YAPBVTile@@ABV1@@Z ; std::addressof<Tile const >
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Inside@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBE_NPBVTile@@@Z ; std::vector<Tile,std::allocator<Tile> >::_Inside
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 84 00 00
	00		 je	 $LN4@push_back
; Line 1246
  00043	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$addressof@$$CBVTile@@@std@@YAPBVTile@@ABV1@@Z ; std::addressof<Tile const >
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00055	99		 cdq
  00056	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  0005b	f7 f9		 idiv	 ecx
  0005d	89 45 ec	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  00060	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00069	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  0006c	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  0006e	6a 01		 push	 1
  00070	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z ; std::vector<Tile,std::allocator<Tile> >::_Reserve
$LN3@push_back:
; Line 1249
  00078	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0007e	51		 push	 ecx
  0007f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00082	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00085	50		 push	 eax
  00086	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z ; std::vector<Tile,std::allocator<Tile> >::_Orphan_range
; Line 1251
  0008e	6b 45 ec 1c	 imul	 eax, DWORD PTR __Idx$3[ebp], 28
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00098	50		 push	 eax
  00099	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0009c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009f	50		 push	 eax
  000a0	8d 8d 17 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  000a6	51		 push	 ecx
  000a7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Getal
  000af	8b c8		 mov	 ecx, eax
  000b1	e8 00 00 00 00	 call	 ??$construct@VTile@@AAV1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@AAV2@@Z ; std::_Wrap_alloc<std::allocator<Tile> >::construct<Tile,Tile &>
; Line 1252
  000b6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000bc	83 c1 1c	 add	 ecx, 28			; 0000001cH
  000bf	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c2	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 1254
  000c5	eb 5e		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000c7	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cd	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000d0	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  000d3	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000d5	6a 01		 push	 1
  000d7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	e8 00 00 00 00	 call	 ?_Reserve@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXI@Z ; std::vector<Tile,std::allocator<Tile> >::_Reserve
$LN1@push_back:
; Line 1258
  000df	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e2	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000e5	51		 push	 ecx
  000e6	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e9	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000ec	50		 push	 eax
  000ed	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f0	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXPAVTile@@0@Z ; std::vector<Tile,std::allocator<Tile> >::_Orphan_range
; Line 1260
  000f5	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  000f8	50		 push	 eax
  000f9	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fc	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000ff	52		 push	 edx
  00100	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00106	50		 push	 eax
  00107	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010a	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Getal
  0010f	8b c8		 mov	 ecx, eax
  00111	e8 00 00 00 00	 call	 ??$construct@VTile@@ABV1@@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@ABV2@@Z ; std::_Wrap_alloc<std::allocator<Tile> >::construct<Tile,Tile const &>
; Line 1261
  00116	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00119	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0011c	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0011f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00122	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
  00125	5f		 pop	 edi
  00126	5e		 pop	 esi
  00127	5b		 pop	 ebx
  00128	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  0012e	3b ec		 cmp	 ebp, esp
  00130	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00135	8b e5		 mov	 esp, ebp
  00137	5d		 pop	 ebp
  00138	c2 04 00	 ret	 4
?push_back@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAEXABVTile@@@Z ENDP ; std::vector<Tile,std::allocator<Tile> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?at@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAEAAVTile@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAEAAVTile@@I@Z PROC ; std::vector<Tile,std::allocator<Tile> >::at, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1174
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1175
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::size
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0002e	77 08		 ja	 SHORT $LN1@at
; Line 1176
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Xran@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IBEXXZ ; std::vector<Tile,std::allocator<Tile> >::_Xran
$LN1@at:
; Line 1177
  00038	6b 45 08 1c	 imul	 eax, DWORD PTR __Pos$[ebp], 28
  0003c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	03 41 04	 add	 eax, DWORD PTR [ecx+4]
$LN3@at:
; Line 1178
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?at@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAEAAVTile@@I@Z ENDP ; std::vector<Tile,std::allocator<Tile> >::at
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ PROC ; std::vector<Tile,std::allocator<Tile> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00023	8d 85 2f ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Getal
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<Tile> >::max_size
; Line 1154
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?max_size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ENDP ; std::vector<Tile,std::allocator<Tile> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ PROC ; std::vector<Tile,std::allocator<Tile> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	99		 cdq
  00030	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00035	f7 f9		 idiv	 ecx
; Line 1149
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ENDP ; std::vector<Tile,std::allocator<Tile> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Unused_capacity@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unused_capacity@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ PROC ; std::vector<Tile,std::allocator<Tile> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0002f	99		 cdq
  00030	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00035	f7 f9		 idiv	 ecx
; Line 1016
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?_Unused_capacity@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ENDP ; std::vector<Tile,std::allocator<Tile> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?capacity@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ PROC ; std::vector<Tile,std::allocator<Tile> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	99		 cdq
  00030	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  00035	f7 f9		 idiv	 ecx
; Line 1011
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?capacity@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ENDP ; std::vector<Tile,std::allocator<Tile> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ PROC ; std::vector<Tile,std::allocator<Tile> >::~vector<Tile,std::allocator<Tile> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@IAEXXZ ; std::vector<Tile,std::allocator<Tile> >::_Tidy
; Line 946
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::~_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ ENDP ; std::vector<Tile,std::allocator<Tile> >::~vector<Tile,std::allocator<Tile> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
??0?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ PROC ; std::vector<Tile,std::allocator<Tile> >::vector<Tile,std::allocator<Tile> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8d 8d 2f ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00029	e8 00 00 00 00	 call	 ??0?$allocator@VTile@@@std@@QAE@XZ ; std::allocator<Tile>::allocator<Tile>
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >
; Line 681
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??0?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ ENDP ; std::vector<Tile,std::allocator<Tile> >::vector<Tile,std::allocator<Tile> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  00023	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<Tile> >::_Wrap_alloc<std::allocator<Tile> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@VTile@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00047	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	51		 push	 ecx
  0004d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00050	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00055	6a 01		 push	 1
  00057	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	51		 push	 ecx
  0005d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00060	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00065	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 637
  0006e	52		 push	 edx
  0006f	8b cd		 mov	 ecx, ebp
  00071	50		 push	 eax
  00072	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00078	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0007d	58		 pop	 eax
  0007e	5a		 pop	 edx
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00085	33 cd		 xor	 ecx, ebp
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
  0009d	8d 49 00	 npad	 3
$LN5@Free_proxy:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  000a8	eb ff ff ff	 DD	 -21			; ffffffebH
  000ac	01 00 00 00	 DD	 1
  000b0	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  000b4	5f		 DB	 95			; 0000005fH
  000b5	41		 DB	 65			; 00000041H
  000b6	6c		 DB	 108			; 0000006cH
  000b7	70		 DB	 112			; 00000070H
  000b8	72		 DB	 114			; 00000072H
  000b9	6f		 DB	 111			; 0000006fH
  000ba	78		 DB	 120			; 00000078H
  000bb	79		 DB	 121			; 00000079H
  000bc	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -232						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00013	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00035	6a 01		 push	 1
  00037	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003a	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00044	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0004a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0004f	50		 push	 eax
  00050	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00059	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0005e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00066	89 11		 mov	 DWORD PTR [ecx], edx
; Line 627
  00068	52		 push	 edx
  00069	8b cd		 mov	 ecx, ebp
  0006b	50		 push	 eax
  0006c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00072	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00077	58		 pop	 eax
  00078	5a		 pop	 edx
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
  00097	90		 npad	 1
$LN5@Alloc_prox:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000a0	eb ff ff ff	 DD	 -21			; ffffffebH
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000ac	5f		 DB	 95			; 0000005fH
  000ad	41		 DB	 65			; 00000041H
  000ae	6c		 DB	 108			; 0000006cH
  000af	70		 DB	 112			; 00000070H
  000b0	72		 DB	 114			; 00000072H
  000b1	6f		 DB	 111			; 0000006fH
  000b2	78		 DB	 120			; 00000078H
  000b3	79		 DB	 121			; 00000079H
  000b4	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::~_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Free_proxy
; Line 609
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@VTile@@@std@@@std@@QAE@XZ
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::~_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@VTile@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Tile> >::_Vector_val<std::_Simple_types<Tile> >
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Alloc_proxy
; Line 604
  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@VTile@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@VTile@@V?$allocator@VTile@@@std@@@std@@@std@@QAE@ABV?$allocator@VTile@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >::_Vector_alloc<0,std::_Vec_base_types<Tile,std::allocator<Tile> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@VTile@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@VTile@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<Tile> >::~_Vector_val<std::_Simple_types<Tile> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@VTile@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<Tile> >::~_Vector_val<std::_Simple_types<Tile> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@VTile@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@VTile@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<Tile> >::_Vector_val<std::_Simple_types<Tile> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 484
  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 485
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@VTile@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<Tile> >::_Vector_val<std::_Simple_types<Tile> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<Tile> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAIABV?$allocator@VTile@@@2@@Z ; std::allocator_traits<std::allocator<Tile> >::max_size
  0002c	83 c4 04	 add	 esp, 4
; Line 885
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<Tile> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@I@Z PROC ; std::_Wrap_alloc<std::allocator<Tile> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@VTile@@@std@@QAEXPAVTile@@I@Z ; std::allocator<Tile>::deallocate
; Line 859
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEXPAVTile@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<Tile> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEPAVTile@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEPAVTile@@I@Z PROC ; std::_Wrap_alloc<std::allocator<Tile> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@VTile@@@std@@QAEPAVTile@@I@Z ; std::allocator<Tile>::allocate
; Line 848
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAEPAVTile@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<Tile> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<Tile> >::_Wrap_alloc<std::allocator<Tile> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@VTile@@@std@@QAE@XZ ; std::allocator<Tile>::allocator<Tile>
; Line 802
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@VTile@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<Tile> >::_Wrap_alloc<std::allocator<Tile> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAIABV?$allocator@VTile@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAIABV?$allocator@VTile@@@2@@Z PROC ; std::allocator_traits<std::allocator<Tile> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 735
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$allocator@VTile@@@std@@QBEIXZ ; std::allocator<Tile>::max_size
; Line 736
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@VTile@@@std@@@std@@SAIABV?$allocator@VTile@@@2@@Z ENDP ; std::allocator_traits<std::allocator<Tile> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator@VTile@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@VTile@@@std@@QBEIXZ PROC		; std::allocator<Tile>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  00023	b8 49 92 24 09	 mov	 eax, 153391689		; 09249249H
; Line 613
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?max_size@?$allocator@VTile@@@std@@QBEIXZ ENDP		; std::allocator<Tile>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?construct@?$allocator@VTile@@@std@@QAEXPAVTile@@ABV3@@Z
_TEXT	SEGMENT
tv69 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@VTile@@@std@@QAEXPAVTile@@ABV3@@Z PROC ; std::allocator<Tile>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	6a 1c		 push	 28			; 0000001cH
  00029	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0002e	83 c4 08	 add	 esp, 8
  00031	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00037	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  0003e	74 1e		 je	 SHORT $LN3@construct
  00040	b9 07 00 00 00	 mov	 ecx, 7
  00045	8b 75 0c	 mov	 esi, DWORD PTR __Val$[ebp]
  00048	8b bd 2c ff ff
	ff		 mov	 edi, DWORD PTR $T1[ebp]
  0004e	f3 a5		 rep movsd
  00050	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00056	89 8d 24 ff ff
	ff		 mov	 DWORD PTR tv69[ebp], ecx
  0005c	eb 0a		 jmp	 SHORT $LN1@construct
$LN3@construct:
  0005e	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN1@construct:
; Line 594
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx
  0006b	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
?construct@?$allocator@VTile@@@std@@QAEXPAVTile@@ABV3@@Z ENDP ; std::allocator<Tile>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@VTile@@@std@@QAEPAVTile@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@VTile@@@std@@QAEPAVTile@@I@Z PROC	; std::allocator<Tile>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  00023	6a 00		 push	 0
  00025	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??$_Allocate@VTile@@@std@@YAPAVTile@@IPAV1@@Z ; std::_Allocate<Tile>
  0002e	83 c4 08	 add	 esp, 8
; Line 579
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?allocate@?$allocator@VTile@@@std@@QAEPAVTile@@I@Z ENDP	; std::allocator<Tile>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@VTile@@@std@@QAEXPAVTile@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@VTile@@@std@@QAEXPAVTile@@I@Z PROC ; std::allocator<Tile>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	83 c4 04	 add	 esp, 4
; Line 574
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?deallocate@?$allocator@VTile@@@std@@QAEXPAVTile@@I@Z ENDP ; std::allocator<Tile>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@VTile@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@VTile@@@std@@QAE@XZ PROC			; std::allocator<Tile>::allocator<Tile>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@VTile@@@std@@QAE@XZ ENDP			; std::allocator<Tile>::allocator<Tile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z
_TEXT	SEGMENT
__Pnext$ = -48						; size = 4
__Lock$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1765
  00045	8b f4		 mov	 esi, esp
  00047	6a 03		 push	 3
  00049	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  00052	3b f4		 cmp	 esi, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
  00060	8b f4		 mov	 esi, esp
  00062	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1767
  00075	83 7d d0 00	 cmp	 DWORD PTR __Pnext$[ebp], 0
  00079	74 4e		 je	 SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
  0007b	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  0007e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00081	74 46		 je	 SHORT $LN6@Orphan_ran
; Line 1769
  00083	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00086	8b 08		 mov	 ecx, DWORD PTR [eax]
  00088	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0008b	3b 55 08	 cmp	 edx, DWORD PTR __First$[ebp]
  0008e	72 0d		 jb	 SHORT $LN2@Orphan_ran
  00090	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  00093	8b 08		 mov	 ecx, DWORD PTR [eax]
  00095	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00098	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0009b	73 0f		 jae	 SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
  0009d	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a2	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000a7	89 45 d0	 mov	 DWORD PTR __Pnext$[ebp], eax
; Line 1771
  000aa	eb 1b		 jmp	 SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
  000ac	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000af	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b1	e8 00 00 00 00	 call	 ?_Clrcont@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Clrcont
; Line 1774
  000b6	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$[ebp]
  000b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bb	e8 00 00 00 00	 call	 ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
  000c0	8b 4d d0	 mov	 ecx, DWORD PTR __Pnext$[ebp]
  000c3	8b 10		 mov	 edx, DWORD PTR [eax]
  000c5	89 11		 mov	 DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
  000c7	eb b2		 jmp	 SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
  000c9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d0	8b f4		 mov	 esi, esp
  000d2	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000db	3b f4		 cmp	 esi, esp
  000dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e2	52		 push	 edx
  000e3	8b cd		 mov	 ecx, ebp
  000e5	50		 push	 eax
  000e6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@Orphan_ran
  000ec	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000f1	58		 pop	 eax
  000f2	5a		 pop	 edx
  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00104	33 cd		 xor	 ecx, ebp
  00106	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010b	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  00111	3b ec		 cmp	 ebp, esp
  00113	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 08 00	 ret	 8
  0011e	8b ff		 npad	 2
$LN13@Orphan_ran:
  00120	01 00 00 00	 DD	 1
  00124	00 00 00 00	 DD	 $LN12@Orphan_ran
$LN12@Orphan_ran:
  00128	dc ff ff ff	 DD	 -36			; ffffffdcH
  0012c	04 00 00 00	 DD	 4
  00130	00 00 00 00	 DD	 $LN10@Orphan_ran
$LN10@Orphan_ran:
  00134	5f		 DB	 95			; 0000005fH
  00135	4c		 DB	 76			; 0000004cH
  00136	6f		 DB	 111			; 0000006fH
  00137	63		 DB	 99			; 00000063H
  00138	6b		 DB	 107			; 0000006bH
  00139	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z:
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlen@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXXZ PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 1755
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xlen@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXXZ ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?_Tidy@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXXZ PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1623
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0002a	74 73		 je	 SHORT $LN2@Tidy
; Line 1625
  0002c	8b f4		 mov	 esi, esp
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00037	3b f4		 cmp	 esi, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1626
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00044	51		 push	 ecx
  00045	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00048	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004b	50		 push	 eax
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?_Destroy@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXPAUSDL_Rect@@0@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Destroy
; Line 1628
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0005d	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  00060	c1 fa 04	 sar	 edx, 4
  00063	52		 push	 edx
  00064	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0006a	51		 push	 ecx
  0006b	8d 95 2f ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00071	52		 push	 edx
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Getal
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@I@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::deallocate
; Line 1629
  00081	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00084	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 1630
  0008b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 1631
  00095	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00098	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
$LN2@Tidy:
; Line 1633
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
  000a2	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000a8	3b ec		 cmp	 ebp, esp
  000aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
?_Tidy@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXXZ ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reserve@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1613
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Unused_capacity@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Unused_capacity
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0002e	73 3e		 jae	 SHORT $LN4@Reserve
; Line 1615
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?max_size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::max_size
  00038	8b f0		 mov	 esi, eax
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::size
  00042	2b f0		 sub	 esi, eax
  00044	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00047	73 08		 jae	 SHORT $LN1@Reserve
; Line 1616
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Xlen@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Xlen
$LN1@Reserve:
; Line 1617
  00051	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::size
  00059	03 45 08	 add	 eax, DWORD PTR __Count$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Grow_to@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEII@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Grow_to
  00065	50		 push	 eax
  00066	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Reallocate
$LN4@Reserve:
; Line 1619
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
?_Reserve@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -273						; size = 1
$T3 = -261						; size = 1
$T4 = -249						; size = 1
__Size$ = -48						; size = 4
__Ptr$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d bd e8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-280]
  00022	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00027	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002c	f3 ab		 rep stosd
  0002e	59		 pop	 ecx
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00034	33 c5		 xor	 eax, ebp
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00043	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1588
  00046	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00049	50		 push	 eax
  0004a	8d 8d ef fe ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00050	51		 push	 ecx
  00051	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Getal
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEPAUSDL_Rect@@I@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::allocate
  00060	89 45 dc	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 1590
  00063	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
  0006a	8b 45 dc	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00074	52		 push	 edx
  00075	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007b	51		 push	 ecx
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ??$_Umove@PAUSDL_Rect@@@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEPAUSDL_Rect@@PAU2@00@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Umove<SDL_Rect *>
  00084	eb 2d		 jmp	 SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z$0:
; Line 1593
  00086	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0008d	51		 push	 ecx
  0008e	8d 95 fb fe ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  00094	52		 push	 edx
  00095	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Getal
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@I@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::deallocate
; Line 1594
  000a4	6a 00		 push	 0
  000a6	6a 00		 push	 0
  000a8	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 1595
  000ad	b8 00 00 00 00	 mov	 eax, $LN8@Reallocate
  000b2	c3		 ret	 0
$LN5@Reallocate:
  000b3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ba	eb 07		 jmp	 SHORT __tryend$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
  000bc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z$1:
; Line 1597
  000c3	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c6	e8 00 00 00 00	 call	 ?size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::size
  000cb	89 45 d0	 mov	 DWORD PTR __Size$[ebp], eax
; Line 1598
  000ce	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000d5	74 43		 je	 SHORT $LN1@Reallocate
; Line 1600
  000d7	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000da	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000dd	51		 push	 ecx
  000de	8b 55 e8	 mov	 edx, DWORD PTR _this$[ebp]
  000e1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000e4	50		 push	 eax
  000e5	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000e8	e8 00 00 00 00	 call	 ?_Destroy@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXPAUSDL_Rect@@0@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Destroy
; Line 1602
  000ed	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  000f0	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000f6	2b 51 04	 sub	 edx, DWORD PTR [ecx+4]
  000f9	c1 fa 04	 sar	 edx, 4
  000fc	52		 push	 edx
  000fd	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00103	51		 push	 ecx
  00104	8d 95 07 ff ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  0010a	52		 push	 edx
  0010b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Getal
  00113	8b c8		 mov	 ecx, eax
  00115	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@I@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::deallocate
$LN1@Reallocate:
; Line 1605
  0011a	8b f4		 mov	 esi, esp
  0011c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0011f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00125	3b f4		 cmp	 esi, esp
  00127	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1606
  0012c	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0012f	c1 e0 04	 shl	 eax, 4
  00132	03 45 dc	 add	 eax, DWORD PTR __Ptr$[ebp]
  00135	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00138	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 1607
  0013b	8b 45 d0	 mov	 eax, DWORD PTR __Size$[ebp]
  0013e	c1 e0 04	 shl	 eax, 4
  00141	03 45 dc	 add	 eax, DWORD PTR __Ptr$[ebp]
  00144	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00147	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 1608
  0014a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0014d	8b 4d dc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00150	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
  00153	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00156	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0015d	59		 pop	 ecx
  0015e	5f		 pop	 edi
  0015f	5e		 pop	 esi
  00160	5b		 pop	 ebx
  00161	81 c4 18 01 00
	00		 add	 esp, 280		; 00000118H
  00167	3b ec		 cmp	 ebp, esp
  00169	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a e4 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-284]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Reallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Inside@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBE_NPBUSDL_Rect@@@Z
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBE_NPBUSDL_Rect@@@Z PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1583
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00029	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0002c	73 17		 jae	 SHORT $LN3@Inside
  0002e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00031	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00034	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  00037	77 0c		 ja	 SHORT $LN3@Inside
  00039	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv76[ebp], 1
  00043	eb 0a		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
  00045	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN4@Inside:
  0004f	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv76[ebp]
; Line 1584
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
?_Inside@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBE_NPBUSDL_Rect@@@Z ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Grow_to@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Capacity$ = -20					; size = 4
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEII@Z PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1572
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?capacity@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::capacity
  0002b	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1575
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?max_size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::max_size
  00036	8b 4d ec	 mov	 ecx, DWORD PTR __Capacity$[ebp]
  00039	d1 e9		 shr	 ecx, 1
  0003b	2b c1		 sub	 eax, ecx
  0003d	3b 45 ec	 cmp	 eax, DWORD PTR __Capacity$[ebp]
  00040	73 0c		 jae	 SHORT $LN4@Grow_to
  00042	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
  0004c	eb 0e		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0004e	8b 55 ec	 mov	 edx, DWORD PTR __Capacity$[ebp]
  00051	d1 ea		 shr	 edx, 1
  00053	03 55 ec	 add	 edx, DWORD PTR __Capacity$[ebp]
  00056	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
  0005c	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv73[ebp]
  00062	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
; Line 1576
  00065	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
  00068	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  0006b	73 06		 jae	 SHORT $LN1@Grow_to
; Line 1577
  0006d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00070	89 45 ec	 mov	 DWORD PTR __Capacity$[ebp], eax
$LN1@Grow_to:
; Line 1578
  00073	8b 45 ec	 mov	 eax, DWORD PTR __Capacity$[ebp]
; Line 1579
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?_Grow_to@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEII@Z ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Destroy@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXPAUSDL_Rect@@0@Z
_TEXT	SEGMENT
__Alval$ = -21						; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXPAUSDL_Rect@@0@Z PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1566
  0002d	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  00030	50		 push	 eax
  00031	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Getal
; Line 1567
  00039	8d 45 eb	 lea	 eax, DWORD PTR __Alval$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@@std@@YAXPAUSDL_Rect@@0AAU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<SDL_Rect> > >
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1568
  0004d	52		 push	 edx
  0004e	8b cd		 mov	 ecx, ebp
  00050	50		 push	 eax
  00051	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Destroy
  00057	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0005c	58		 pop	 eax
  0005d	5a		 pop	 edx
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00064	33 cd		 xor	 ecx, ebp
  00066	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006b	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 08 00	 ret	 8
  0007e	8b ff		 npad	 2
$LN5@Destroy:
  00080	01 00 00 00	 DD	 1
  00084	00 00 00 00	 DD	 $LN4@Destroy
$LN4@Destroy:
  00088	eb ff ff ff	 DD	 -21			; ffffffebH
  0008c	01 00 00 00	 DD	 1
  00090	00 00 00 00	 DD	 $LN3@Destroy
$LN3@Destroy:
  00094	5f		 DB	 95			; 0000005fH
  00095	41		 DB	 65			; 00000041H
  00096	6c		 DB	 108			; 0000006cH
  00097	76		 DB	 118			; 00000076H
  00098	61		 DB	 97			; 00000061H
  00099	6c		 DB	 108			; 0000006cH
  0009a	00		 DB	 0
?_Destroy@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXPAUSDL_Rect@@0@Z ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAEXABUSDL_Rect@@@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Idx$3 = -20						; size = 4
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAEXABUSDL_Rect@@@Z PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1244
  00023	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$addressof@$$CBUSDL_Rect@@@std@@YAPBUSDL_Rect@@ABU1@@Z ; std::addressof<SDL_Rect const >
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Inside@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBE_NPBUSDL_Rect@@@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Inside
  00038	0f b6 c8	 movzx	 ecx, al
  0003b	85 c9		 test	 ecx, ecx
  0003d	0f 84 81 00 00
	00		 je	 $LN4@push_back
; Line 1246
  00043	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$addressof@$$CBUSDL_Rect@@@std@@YAPBUSDL_Rect@@ABU1@@Z ; std::addressof<SDL_Rect const >
  0004c	83 c4 04	 add	 esp, 4
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  00055	c1 f8 04	 sar	 eax, 4
  00058	89 45 ec	 mov	 DWORD PTR __Idx$3[ebp], eax
; Line 1247
  0005b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00064	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00067	75 0a		 jne	 SHORT $LN3@push_back
; Line 1248
  00069	6a 01		 push	 1
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Reserve@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Reserve
$LN3@push_back:
; Line 1249
  00073	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00079	51		 push	 ecx
  0007a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0007d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00080	50		 push	 eax
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Orphan_range
; Line 1251
  00089	8b 45 ec	 mov	 eax, DWORD PTR __Idx$3[ebp]
  0008c	c1 e0 04	 shl	 eax, 4
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00095	50		 push	 eax
  00096	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00099	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0009c	50		 push	 eax
  0009d	8d 8d 17 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  000a3	51		 push	 ecx
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Getal
  000ac	8b c8		 mov	 ecx, eax
  000ae	e8 00 00 00 00	 call	 ??$construct@USDL_Rect@@AAU1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@AAU2@@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect &>
; Line 1252
  000b3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b9	83 c1 10	 add	 ecx, 16			; 00000010H
  000bc	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000bf	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 1254
  000c2	eb 5e		 jmp	 SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
  000c4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000cd	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  000d0	75 0a		 jne	 SHORT $LN1@push_back
; Line 1257
  000d2	6a 01		 push	 1
  000d4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	e8 00 00 00 00	 call	 ?_Reserve@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXI@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Reserve
$LN1@push_back:
; Line 1258
  000dc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000df	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000e2	51		 push	 ecx
  000e3	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e6	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000e9	50		 push	 eax
  000ea	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IBEXPAUSDL_Rect@@0@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Orphan_range
; Line 1260
  000f2	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  000f5	50		 push	 eax
  000f6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f9	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000fc	52		 push	 edx
  000fd	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00103	50		 push	 eax
  00104	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00107	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Getal
  0010c	8b c8		 mov	 ecx, eax
  0010e	e8 00 00 00 00	 call	 ??$construct@USDL_Rect@@ABU1@@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@ABU2@@Z ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::construct<SDL_Rect,SDL_Rect const &>
; Line 1261
  00113	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00116	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00119	83 c1 10	 add	 ecx, 16			; 00000010H
  0011c	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0011f	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN5@push_back:
; Line 1263
  00122	5f		 pop	 edi
  00123	5e		 pop	 esi
  00124	5b		 pop	 ebx
  00125	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  0012b	3b ec		 cmp	 ebp, esp
  0012d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c2 04 00	 ret	 4
?push_back@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAEXABUSDL_Rect@@@Z ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAEAAUSDL_Rect@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAEAAUSDL_Rect@@I@Z PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1199
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::size
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Pos$[ebp]
  0002e	0f 87 86 00 00
	00		 ja	 $LN1@operator
; Line 1201
  00034	8b f4		 mov	 esi, esp
  00036	68 b1 04 00 00	 push	 1201			; 000004b1H
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@COBDDANL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 1202
  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
  0005a	85 c0		 test	 eax, eax
  0005c	74 04		 je	 SHORT $LN4@operator
  0005e	33 c9		 xor	 ecx, ecx
  00060	75 30		 jne	 SHORT $LN5@operator
$LN4@operator:
  00062	8b f4		 mov	 esi, esp
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
  0006e	6a 00		 push	 0
  00070	68 b2 04 00 00	 push	 1202			; 000004b2H
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@COBDDANL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007a	6a 02		 push	 2
  0007c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00082	83 c4 18	 add	 esp, 24			; 00000018H
  00085	3b f4		 cmp	 esi, esp
  00087	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008c	83 f8 01	 cmp	 eax, 1
  0008f	75 01		 jne	 SHORT $LN5@operator
  00091	cc		 int	 3
$LN5@operator:
  00092	8b f4		 mov	 esi, esp
  00094	6a 00		 push	 0
  00096	68 b2 04 00 00	 push	 1202			; 000004b2H
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_1IM@COBDDANL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_1KC@FFCHHFHE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAS?$AAD?$AAL?$AA_?$AAR?$AAe?$AAc?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs@
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
  000aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000b0	83 c4 14	 add	 esp, 20			; 00000014H
  000b3	3b f4		 cmp	 esi, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@operator:
; Line 1209
  000ba	8b 45 08	 mov	 eax, DWORD PTR __Pos$[ebp]
  000bd	c1 e0 04	 shl	 eax, 4
  000c0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c3	03 41 04	 add	 eax, DWORD PTR [ecx+4]
; Line 1210
  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000cf	3b ec		 cmp	 ebp, esp
  000d1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
??A?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAEAAUSDL_Rect@@I@Z ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
?max_size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00023	8d 85 2f ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Getal
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::max_size
; Line 1154
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?max_size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1148
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	c1 f8 04	 sar	 eax, 4
; Line 1149
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Unused_capacity@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Unused_capacity@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1015
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 08	 sub	 eax, DWORD PTR [ecx+8]
  0002f	c1 f8 04	 sar	 eax, 4
; Line 1016
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?_Unused_capacity@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?capacity@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1010
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0002c	2b 41 04	 sub	 eax, DWORD PTR [ecx+4]
  0002f	c1 f8 04	 sar	 eax, 4
; Line 1011
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
?capacity@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::~vector<SDL_Rect,std::allocator<SDL_Rect> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 945
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Tidy@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@IAEXXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::_Tidy
; Line 946
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::~_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::~vector<SDL_Rect,std::allocator<SDL_Rect> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
??0?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ PROC ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::vector<SDL_Rect,std::allocator<SDL_Rect> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8d 8d 2f ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00029	e8 00 00 00 00	 call	 ??0?$allocator@USDL_Rect@@@std@@QAE@XZ ; std::allocator<SDL_Rect>::allocator<SDL_Rect>
  0002e	50		 push	 eax
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >
; Line 681
  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??0?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ ENDP ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::vector<SDL_Rect,std::allocator<SDL_Rect> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 642
  00023	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::_Wrap_alloc<std::allocator<SDL_Rect> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 632
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 634
  00047	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	51		 push	 ecx
  0004d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00050	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
  00055	6a 01		 push	 1
  00057	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	51		 push	 ecx
  0005d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00060	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
  00065	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 637
  0006e	52		 push	 edx
  0006f	8b cd		 mov	 ecx, ebp
  00071	50		 push	 eax
  00072	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00078	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0007d	58		 pop	 eax
  0007e	5a		 pop	 edx
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00085	33 cd		 xor	 ecx, ebp
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
  0009d	8d 49 00	 npad	 3
$LN5@Free_proxy:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  000a8	eb ff ff ff	 DD	 -21			; ffffffebH
  000ac	01 00 00 00	 DD	 1
  000b0	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  000b4	5f		 DB	 95			; 0000005fH
  000b5	41		 DB	 65			; 00000041H
  000b6	6c		 DB	 108			; 0000006cH
  000b7	70		 DB	 112			; 00000070H
  000b8	72		 DB	 114			; 00000072H
  000b9	6f		 DB	 111			; 0000006fH
  000ba	78		 DB	 120			; 00000078H
  000bb	79		 DB	 121			; 00000079H
  000bc	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -232						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00013	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 623
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
  00035	6a 01		 push	 1
  00037	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003a	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	89 01		 mov	 DWORD PTR [ecx], eax
; Line 625
  00044	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0004a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0004f	50		 push	 eax
  00050	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00059	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
  0005e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00066	89 11		 mov	 DWORD PTR [ecx], edx
; Line 627
  00068	52		 push	 edx
  00069	8b cd		 mov	 ecx, ebp
  0006b	50		 push	 eax
  0006c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00072	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00077	58		 pop	 eax
  00078	5a		 pop	 edx
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
  00097	90		 npad	 1
$LN5@Alloc_prox:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000a0	eb ff ff ff	 DD	 -21			; ffffffebH
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000ac	5f		 DB	 95			; 0000005fH
  000ad	41		 DB	 65			; 00000041H
  000ae	6c		 DB	 108			; 0000006cH
  000af	70		 DB	 112			; 00000070H
  000b0	72		 DB	 114			; 00000072H
  000b1	6f		 DB	 111			; 0000006fH
  000b2	78		 DB	 120			; 00000078H
  000b3	79		 DB	 121			; 00000079H
  000b4	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::~_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 608
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Free_proxy
; Line 609
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@USDL_Rect@@@std@@@std@@QAE@XZ
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::~_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@USDL_Rect@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<SDL_Rect> >::_Vector_val<std::_Simple_types<SDL_Rect> >
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Alloc_proxy
; Line 604
  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_val@U?$_Simple_types@USDL_Rect@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@@std@@QAE@ABV?$allocator@USDL_Rect@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >::_Vector_alloc<0,std::_Vec_base_types<SDL_Rect,std::allocator<SDL_Rect> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@USDL_Rect@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@USDL_Rect@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<SDL_Rect> >::~_Vector_val<std::_Simple_types<SDL_Rect> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@USDL_Rect@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<SDL_Rect> >::~_Vector_val<std::_Simple_types<SDL_Rect> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@USDL_Rect@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@USDL_Rect@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<SDL_Rect> >::_Vector_val<std::_Simple_types<SDL_Rect> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 482
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 483
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 484
  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 485
  00053	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@USDL_Rect@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<SDL_Rect> >::_Vector_val<std::_Simple_types<SDL_Rect> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAIABV?$allocator@USDL_Rect@@@2@@Z ; std::allocator_traits<std::allocator<SDL_Rect> >::max_size
  0002c	83 c4 04	 add	 esp, 4
; Line 885
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@I@Z PROC ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@I@Z ; std::allocator<SDL_Rect>::deallocate
; Line 859
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEXPAUSDL_Rect@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEPAUSDL_Rect@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEPAUSDL_Rect@@I@Z PROC ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@USDL_Rect@@@std@@QAEPAUSDL_Rect@@I@Z ; std::allocator<SDL_Rect>::allocate
; Line 848
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAEPAUSDL_Rect@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::_Wrap_alloc<std::allocator<SDL_Rect> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@USDL_Rect@@@std@@QAE@XZ ; std::allocator<SDL_Rect>::allocator<SDL_Rect>
; Line 802
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<SDL_Rect> >::_Wrap_alloc<std::allocator<SDL_Rect> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAIABV?$allocator@USDL_Rect@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAIABV?$allocator@USDL_Rect@@@2@@Z PROC ; std::allocator_traits<std::allocator<SDL_Rect> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 735
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$allocator@USDL_Rect@@@std@@QBEIXZ ; std::allocator<SDL_Rect>::max_size
; Line 736
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@USDL_Rect@@@std@@@std@@SAIABV?$allocator@USDL_Rect@@@2@@Z ENDP ; std::allocator_traits<std::allocator<SDL_Rect> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator@USDL_Rect@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@USDL_Rect@@@std@@QBEIXZ PROC	; std::allocator<SDL_Rect>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  00023	b8 ff ff ff 0f	 mov	 eax, 268435455		; 0fffffffH
; Line 613
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?max_size@?$allocator@USDL_Rect@@@std@@QBEIXZ ENDP	; std::allocator<SDL_Rect>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?construct@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@ABU3@@Z
_TEXT	SEGMENT
tv69 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@ABU3@@Z PROC ; std::allocator<SDL_Rect>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 593
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	6a 10		 push	 16			; 00000010H
  00029	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0002e	83 c4 08	 add	 esp, 8
  00031	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00037	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR $T1[ebp], 0
  0003e	74 2d		 je	 SHORT $LN3@construct
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  00043	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00049	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004b	89 02		 mov	 DWORD PTR [edx], eax
  0004d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00050	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00053	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00056	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00059	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  0005c	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  0005f	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00065	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv69[ebp], edx
  0006b	eb 0a		 jmp	 SHORT $LN1@construct
$LN3@construct:
  0006d	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN1@construct:
; Line 594
  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
  0007a	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00080	3b ec		 cmp	 ebp, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 08 00	 ret	 8
?construct@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@ABU3@@Z ENDP ; std::allocator<SDL_Rect>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@USDL_Rect@@@std@@QAEPAUSDL_Rect@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@USDL_Rect@@@std@@QAEPAUSDL_Rect@@I@Z PROC ; std::allocator<SDL_Rect>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  00023	6a 00		 push	 0
  00025	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??$_Allocate@USDL_Rect@@@std@@YAPAUSDL_Rect@@IPAU1@@Z ; std::_Allocate<SDL_Rect>
  0002e	83 c4 08	 add	 esp, 8
; Line 579
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?allocate@?$allocator@USDL_Rect@@@std@@QAEPAUSDL_Rect@@I@Z ENDP ; std::allocator<SDL_Rect>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@I@Z PROC ; std::allocator<SDL_Rect>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	83 c4 04	 add	 esp, 4
; Line 574
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?deallocate@?$allocator@USDL_Rect@@@std@@QAEXPAUSDL_Rect@@I@Z ENDP ; std::allocator<SDL_Rect>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@USDL_Rect@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@USDL_Rect@@@std@@QAE@XZ PROC		; std::allocator<SDL_Rect>::allocator<SDL_Rect>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@USDL_Rect@@@std@@QAE@XZ ENDP		; std::allocator<SDL_Rect>::allocator<SDL_Rect>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CheckSlopeCollision@Level@@QAE?AV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@ABVCaveRectangle@@@Z
_TEXT	SEGMENT
$T2 = -264						; size = 4
_i$3 = -60						; size = 4
_colliding$ = -48					; size = 16
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_Other$ = 12						; size = 4
?CheckSlopeCollision@Level@@QAE?AV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@ABVCaveRectangle@@@Z PROC ; Level::CheckSlopeCollision, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.cpp
; Line 322
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CheckSlopeCollision@Level@@QAE?AV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@ABVCaveRectangle@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00021	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00045	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
; Line 323
  0004f	6a 10		 push	 16			; 00000010H
  00051	8d 4d d0	 lea	 ecx, DWORD PTR _colliding$[ebp]
  00054	e8 00 00 00 00	 call	 ?__autoclassinit2@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEXI@Z
  00059	8d 4d d0	 lea	 ecx, DWORD PTR _colliding$[ebp]
  0005c	e8 00 00 00 00	 call	 ??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::vector<CaveSlope,std::allocator<CaveSlope> >
  00061	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 324
  00068	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  0006f	eb 09		 jmp	 SHORT $LN4@CheckSlope
$LN3@CheckSlope:
  00071	8b 45 c4	 mov	 eax, DWORD PTR _i$3[ebp]
  00074	83 c0 01	 add	 eax, 1
  00077	89 45 c4	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@CheckSlope:
  0007a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	83 c1 78	 add	 ecx, 120		; 00000078H
  00080	e8 00 00 00 00	 call	 ?size@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QBEIXZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::size
  00085	39 45 c4	 cmp	 DWORD PTR _i$3[ebp], eax
  00088	73 3b		 jae	 SHORT $LN2@CheckSlope
; Line 326
  0008a	8b 45 0c	 mov	 eax, DWORD PTR _Other$[ebp]
  0008d	50		 push	 eax
  0008e	8b 4d c4	 mov	 ecx, DWORD PTR _i$3[ebp]
  00091	51		 push	 ecx
  00092	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	83 c1 78	 add	 ecx, 120		; 00000078H
  00098	e8 00 00 00 00	 call	 ?at@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEAAVCaveSlope@@I@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::at
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ?CollidesWith@CaveSlope@@QBE_NABVCaveRectangle@@@Z ; CaveSlope::CollidesWith
  000a4	0f b6 d0	 movzx	 edx, al
  000a7	85 d2		 test	 edx, edx
  000a9	74 18		 je	 SHORT $LN1@CheckSlope
; Line 328
  000ab	8b 45 c4	 mov	 eax, DWORD PTR _i$3[ebp]
  000ae	50		 push	 eax
  000af	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	83 c1 78	 add	 ecx, 120		; 00000078H
  000b5	e8 00 00 00 00	 call	 ?at@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEAAVCaveSlope@@I@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::at
  000ba	50		 push	 eax
  000bb	8d 4d d0	 lea	 ecx, DWORD PTR _colliding$[ebp]
  000be	e8 00 00 00 00	 call	 ?push_back@?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAEXABVCaveSlope@@@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::push_back
$LN1@CheckSlope:
; Line 330
  000c3	eb ac		 jmp	 SHORT $LN3@CheckSlope
$LN2@CheckSlope:
; Line 331
  000c5	8d 45 d0	 lea	 eax, DWORD PTR _colliding$[ebp]
  000c8	50		 push	 eax
  000c9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000cc	e8 00 00 00 00	 call	 ??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<CaveSlope,std::allocator<CaveSlope> >::vector<CaveSlope,std::allocator<CaveSlope> >
  000d1	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000d7	83 c9 01	 or	 ecx, 1
  000da	89 8d f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000e0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e7	8d 4d d0	 lea	 ecx, DWORD PTR _colliding$[ebp]
  000ea	e8 00 00 00 00	 call	 ??1?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::~vector<CaveSlope,std::allocator<CaveSlope> >
  000ef	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 332
  000f2	52		 push	 edx
  000f3	8b cd		 mov	 ecx, ebp
  000f5	50		 push	 eax
  000f6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@CheckSlope
  000fc	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00101	58		 pop	 eax
  00102	5a		 pop	 edx
  00103	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00106	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010d	59		 pop	 ecx
  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	5b		 pop	 ebx
  00111	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00114	33 cd		 xor	 ecx, ebp
  00116	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011b	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  00121	3b ec		 cmp	 ebp, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00128	8b e5		 mov	 esp, ebp
  0012a	5d		 pop	 ebp
  0012b	c2 08 00	 ret	 8
  0012e	8b ff		 npad	 2
$LN13@CheckSlope:
  00130	01 00 00 00	 DD	 1
  00134	00 00 00 00	 DD	 $LN12@CheckSlope
$LN12@CheckSlope:
  00138	d0 ff ff ff	 DD	 -48			; ffffffd0H
  0013c	10 00 00 00	 DD	 16			; 00000010H
  00140	00 00 00 00	 DD	 $LN10@CheckSlope
$LN10@CheckSlope:
  00144	63		 DB	 99			; 00000063H
  00145	6f		 DB	 111			; 0000006fH
  00146	6c		 DB	 108			; 0000006cH
  00147	6c		 DB	 108			; 0000006cH
  00148	69		 DB	 105			; 00000069H
  00149	64		 DB	 100			; 00000064H
  0014a	69		 DB	 105			; 00000069H
  0014b	6e		 DB	 110			; 0000006eH
  0014c	67		 DB	 103			; 00000067H
  0014d	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CheckSlopeCollision@Level@@QAE?AV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@ABVCaveRectangle@@@Z$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR _colliding$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::~vector<CaveSlope,std::allocator<CaveSlope> >
__ehhandler$?CheckSlopeCollision@Level@@QAE?AV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@ABVCaveRectangle@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a f0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-272]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CheckSlopeCollision@Level@@QAE?AV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@ABVCaveRectangle@@@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CheckSlopeCollision@Level@@QAE?AV?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@ABVCaveRectangle@@@Z ENDP ; Level::CheckSlopeCollision
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CheckTileCollision@Level@@QAE?AV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@ABVCaveRectangle@@@Z
_TEXT	SEGMENT
$T2 = -264						; size = 4
_i$3 = -60						; size = 4
_colliding$ = -48					; size = 16
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_Other$ = 12						; size = 4
?CheckTileCollision@Level@@QAE?AV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@ABVCaveRectangle@@@Z PROC ; Level::CheckTileCollision, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.cpp
; Line 308
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CheckTileCollision@Level@@QAE?AV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@ABVCaveRectangle@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00021	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
  00045	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
; Line 309
  0004f	6a 10		 push	 16			; 00000010H
  00051	8d 4d d0	 lea	 ecx, DWORD PTR _colliding$[ebp]
  00054	e8 00 00 00 00	 call	 ?__autoclassinit2@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXI@Z
  00059	8d 4d d0	 lea	 ecx, DWORD PTR _colliding$[ebp]
  0005c	e8 00 00 00 00	 call	 ??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::vector<CaveRectangle,std::allocator<CaveRectangle> >
  00061	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 310
  00068	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _i$3[ebp], 0
  0006f	eb 09		 jmp	 SHORT $LN4@CheckTileC
$LN3@CheckTileC:
  00071	8b 45 c4	 mov	 eax, DWORD PTR _i$3[ebp]
  00074	83 c0 01	 add	 eax, 1
  00077	89 45 c4	 mov	 DWORD PTR _i$3[ebp], eax
$LN4@CheckTileC:
  0007a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007d	83 c1 68	 add	 ecx, 104		; 00000068H
  00080	e8 00 00 00 00	 call	 ?size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::size
  00085	39 45 c4	 cmp	 DWORD PTR _i$3[ebp], eax
  00088	73 3b		 jae	 SHORT $LN2@CheckTileC
; Line 312
  0008a	8b 45 0c	 mov	 eax, DWORD PTR _Other$[ebp]
  0008d	50		 push	 eax
  0008e	8b 4d c4	 mov	 ecx, DWORD PTR _i$3[ebp]
  00091	51		 push	 ecx
  00092	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	83 c1 68	 add	 ecx, 104		; 00000068H
  00098	e8 00 00 00 00	 call	 ?at@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEAAVCaveRectangle@@I@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::at
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ?CollidesWith@CaveRectangle@@QBE_NABV1@@Z ; CaveRectangle::CollidesWith
  000a4	0f b6 d0	 movzx	 edx, al
  000a7	85 d2		 test	 edx, edx
  000a9	74 18		 je	 SHORT $LN1@CheckTileC
; Line 314
  000ab	8b 45 c4	 mov	 eax, DWORD PTR _i$3[ebp]
  000ae	50		 push	 eax
  000af	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	83 c1 68	 add	 ecx, 104		; 00000068H
  000b5	e8 00 00 00 00	 call	 ?at@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEAAVCaveRectangle@@I@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::at
  000ba	50		 push	 eax
  000bb	8d 4d d0	 lea	 ecx, DWORD PTR _colliding$[ebp]
  000be	e8 00 00 00 00	 call	 ?push_back@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEXABVCaveRectangle@@@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::push_back
$LN1@CheckTileC:
; Line 316
  000c3	eb ac		 jmp	 SHORT $LN3@CheckTileC
$LN2@CheckTileC:
; Line 317
  000c5	8d 45 d0	 lea	 eax, DWORD PTR _colliding$[ebp]
  000c8	50		 push	 eax
  000c9	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000cc	e8 00 00 00 00	 call	 ??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::vector<CaveRectangle,std::allocator<CaveRectangle> >
  000d1	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  000d7	83 c9 01	 or	 ecx, 1
  000da	89 8d f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  000e0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e7	8d 4d d0	 lea	 ecx, DWORD PTR _colliding$[ebp]
  000ea	e8 00 00 00 00	 call	 ??1?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::~vector<CaveRectangle,std::allocator<CaveRectangle> >
  000ef	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 318
  000f2	52		 push	 edx
  000f3	8b cd		 mov	 ecx, ebp
  000f5	50		 push	 eax
  000f6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@CheckTileC
  000fc	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00101	58		 pop	 eax
  00102	5a		 pop	 edx
  00103	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00106	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0010d	59		 pop	 ecx
  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	5b		 pop	 ebx
  00111	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00114	33 cd		 xor	 ecx, ebp
  00116	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011b	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  00121	3b ec		 cmp	 ebp, esp
  00123	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00128	8b e5		 mov	 esp, ebp
  0012a	5d		 pop	 ebp
  0012b	c2 08 00	 ret	 8
  0012e	8b ff		 npad	 2
$LN13@CheckTileC:
  00130	01 00 00 00	 DD	 1
  00134	00 00 00 00	 DD	 $LN12@CheckTileC
$LN12@CheckTileC:
  00138	d0 ff ff ff	 DD	 -48			; ffffffd0H
  0013c	10 00 00 00	 DD	 16			; 00000010H
  00140	00 00 00 00	 DD	 $LN10@CheckTileC
$LN10@CheckTileC:
  00144	63		 DB	 99			; 00000063H
  00145	6f		 DB	 111			; 0000006fH
  00146	6c		 DB	 108			; 0000006cH
  00147	6c		 DB	 108			; 0000006cH
  00148	69		 DB	 105			; 00000069H
  00149	64		 DB	 100			; 00000064H
  0014a	69		 DB	 105			; 00000069H
  0014b	6e		 DB	 110			; 0000006eH
  0014c	67		 DB	 103			; 00000067H
  0014d	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CheckTileCollision@Level@@QAE?AV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@ABVCaveRectangle@@@Z$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR _colliding$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::~vector<CaveRectangle,std::allocator<CaveRectangle> >
__ehhandler$?CheckTileCollision@Level@@QAE?AV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@ABVCaveRectangle@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a f0 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-272]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CheckTileCollision@Level@@QAE?AV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@ABVCaveRectangle@@@Z
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CheckTileCollision@Level@@QAE?AV?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@ABVCaveRectangle@@@Z ENDP ; Level::CheckTileCollision
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawCollision@Level@@QAEXAAVGraphics@@@Z
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_this$ = -8						; size = 4
_Graphic$ = 8						; size = 4
?DrawCollision@Level@@QAEXAAVGraphics@@@Z PROC		; Level::DrawCollision, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.cpp
; Line 72
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 73
  00023	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0002a	eb 09		 jmp	 SHORT $LN3@DrawCollis
$LN2@DrawCollis:
  0002c	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  0002f	83 c0 01	 add	 eax, 1
  00032	89 45 ec	 mov	 DWORD PTR _i$1[ebp], eax
$LN3@DrawCollis:
  00035	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	83 c1 68	 add	 ecx, 104		; 00000068H
  0003b	e8 00 00 00 00	 call	 ?size@?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QBEIXZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::size
  00040	39 45 ec	 cmp	 DWORD PTR _i$1[ebp], eax
  00043	73 1a		 jae	 SHORT $LN4@DrawCollis
; Line 75
  00045	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00048	50		 push	 eax
  00049	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	83 c1 68	 add	 ecx, 104		; 00000068H
  0004f	e8 00 00 00 00	 call	 ??A?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAEAAVCaveRectangle@@I@Z ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::operator[]
  00054	50		 push	 eax
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _Graphic$[ebp]
  00058	e8 00 00 00 00	 call	 ?DrawTexture@Graphics@@QAEXAAVCaveRectangle@@@Z ; Graphics::DrawTexture
; Line 76
  0005d	eb cd		 jmp	 SHORT $LN2@DrawCollis
$LN4@DrawCollis:
; Line 77
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00068	3b ec		 cmp	 ebp, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
?DrawCollision@Level@@QAEXAAVGraphics@@@Z ENDP		; Level::DrawCollision
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Draw@Level@@QAEXAAVGraphics@@@Z
_TEXT	SEGMENT
_i$1 = -60						; size = 4
_i$2 = -48						; size = 4
_sourceRectangle$ = -36					; size = 16
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_Graphic$ = 8						; size = 4
?Draw@Level@@QAEXAAVGraphics@@@Z PROC			; Level::Draw, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.cpp
; Line 57
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 00 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-256]
  00013	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 58
  0002d	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _sourceRectangle$[ebp], 0
  00034	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _sourceRectangle$[ebp+4], 0
  0003b	c7 45 e4 40 00
	00 00		 mov	 DWORD PTR _sourceRectangle$[ebp+8], 64 ; 00000040H
  00042	c7 45 e8 40 00
	00 00		 mov	 DWORD PTR _sourceRectangle$[ebp+12], 64 ; 00000040H
; Line 59
  00049	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _i$2[ebp], 0
  00050	eb 09		 jmp	 SHORT $LN6@Draw
$LN5@Draw:
  00052	8b 45 d0	 mov	 eax, DWORD PTR _i$2[ebp]
  00055	83 c0 01	 add	 eax, 1
  00058	89 45 d0	 mov	 DWORD PTR _i$2[ebp], eax
$LN6@Draw:
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ?size@?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QBEIXZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::size
  00063	39 45 d0	 cmp	 DWORD PTR _i$2[ebp], eax
  00066	74 22		 je	 SHORT $LN4@Draw
; Line 61
  00068	8b 45 d0	 mov	 eax, DWORD PTR _i$2[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ??A?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAEAAUSDL_Rect@@I@Z ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::operator[]
  00074	50		 push	 eax
  00075	8d 4d dc	 lea	 ecx, DWORD PTR _sourceRectangle$[ebp]
  00078	51		 push	 ecx
  00079	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  0007c	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0007f	50		 push	 eax
  00080	8b 4d 08	 mov	 ecx, DWORD PTR _Graphic$[ebp]
  00083	e8 00 00 00 00	 call	 ?BlitSurface@Graphics@@QAEXPAUSDL_Texture@@PAUSDL_Rect@@1@Z ; Graphics::BlitSurface
; Line 62
  00088	eb c8		 jmp	 SHORT $LN5@Draw
$LN4@Draw:
; Line 64
  0008a	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  00091	eb 09		 jmp	 SHORT $LN3@Draw
$LN2@Draw:
  00093	8b 45 c4	 mov	 eax, DWORD PTR _i$1[ebp]
  00096	83 c0 01	 add	 eax, 1
  00099	89 45 c4	 mov	 DWORD PTR _i$1[ebp], eax
$LN3@Draw:
  0009c	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	83 c1 48	 add	 ecx, 72			; 00000048H
  000a2	e8 00 00 00 00	 call	 ?size@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QBEIXZ ; std::vector<Tile,std::allocator<Tile> >::size
  000a7	39 45 c4	 cmp	 DWORD PTR _i$1[ebp], eax
  000aa	73 1c		 jae	 SHORT $LN7@Draw
; Line 66
  000ac	8b 45 08	 mov	 eax, DWORD PTR _Graphic$[ebp]
  000af	50		 push	 eax
  000b0	8b 4d c4	 mov	 ecx, DWORD PTR _i$1[ebp]
  000b3	51		 push	 ecx
  000b4	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	83 c1 48	 add	 ecx, 72			; 00000048H
  000ba	e8 00 00 00 00	 call	 ?at@?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAEAAVTile@@I@Z ; std::vector<Tile,std::allocator<Tile> >::at
  000bf	8b c8		 mov	 ecx, eax
  000c1	e8 00 00 00 00	 call	 ?Draw@Tile@@QAEXAAVGraphics@@@Z ; Tile::Draw
; Line 67
  000c6	eb cb		 jmp	 SHORT $LN2@Draw
$LN7@Draw:
; Line 68
  000c8	52		 push	 edx
  000c9	8b cd		 mov	 ecx, ebp
  000cb	50		 push	 eax
  000cc	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN11@Draw
  000d2	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000d7	58		 pop	 eax
  000d8	5a		 pop	 edx
  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	5b		 pop	 ebx
  000dc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000df	33 cd		 xor	 ecx, ebp
  000e1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e6	81 c4 00 01 00
	00		 add	 esp, 256		; 00000100H
  000ec	3b ec		 cmp	 ebp, esp
  000ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f3	8b e5		 mov	 esp, ebp
  000f5	5d		 pop	 ebp
  000f6	c2 04 00	 ret	 4
  000f9	8d 49 00	 npad	 3
$LN11@Draw:
  000fc	01 00 00 00	 DD	 1
  00100	00 00 00 00	 DD	 $LN10@Draw
$LN10@Draw:
  00104	dc ff ff ff	 DD	 -36			; ffffffdcH
  00108	10 00 00 00	 DD	 16			; 00000010H
  0010c	00 00 00 00	 DD	 $LN9@Draw
$LN9@Draw:
  00110	73		 DB	 115			; 00000073H
  00111	6f		 DB	 111			; 0000006fH
  00112	75		 DB	 117			; 00000075H
  00113	72		 DB	 114			; 00000072H
  00114	63		 DB	 99			; 00000063H
  00115	65		 DB	 101			; 00000065H
  00116	52		 DB	 82			; 00000052H
  00117	65		 DB	 101			; 00000065H
  00118	63		 DB	 99			; 00000063H
  00119	74		 DB	 116			; 00000074H
  0011a	61		 DB	 97			; 00000061H
  0011b	6e		 DB	 110			; 0000006eH
  0011c	67		 DB	 103			; 00000067H
  0011d	6c		 DB	 108			; 0000006cH
  0011e	65		 DB	 101			; 00000065H
  0011f	00		 DB	 0
?Draw@Level@@QAEXAAVGraphics@@@Z ENDP			; Level::Draw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Tick@Level@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_DeltaTime$ = 8						; size = 4
?Tick@Level@@QAEXM@Z PROC				; Level::Tick, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.cpp
; Line 50
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 52
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?Tick@Level@@QAEXM@Z ENDP				; Level::Tick
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Level@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Level@@QAE@XZ PROC					; Level::~Level, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.cpp
; Line 44
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 46
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 78	 add	 ecx, 120		; 00000078H
  00029	e8 00 00 00 00	 call	 ??1?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::~vector<CaveSlope,std::allocator<CaveSlope> >
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 68	 add	 ecx, 104		; 00000068H
  00034	e8 00 00 00 00	 call	 ??1?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::~vector<CaveRectangle,std::allocator<CaveRectangle> >
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	83 c1 58	 add	 ecx, 88			; 00000058H
  0003f	e8 00 00 00 00	 call	 ??1?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ ; std::vector<TileSet,std::allocator<TileSet> >::~vector<TileSet,std::allocator<TileSet> >
  00044	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	83 c1 48	 add	 ecx, 72			; 00000048H
  0004a	e8 00 00 00 00	 call	 ??1?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ ; std::vector<Tile,std::allocator<Tile> >::~vector<Tile,std::allocator<Tile> >
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	83 c1 10	 add	 ecx, 16			; 00000010H
  00055	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	e8 00 00 00 00	 call	 ??1?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::~vector<SDL_Rect,std::allocator<SDL_Rect> >
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
??1Level@@QAE@XZ ENDP					; Level::~Level
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z
_TEXT	SEGMENT
tv166 = -232						; size = 4
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_MapName$ = 8						; size = 28
_SpawnPoint$ = 36					; size = 8
_Graphic$ = 44						; size = 4
??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z PROC ; Level::Level, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.cpp
; Line 37
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00021	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00049	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	e8 00 00 00 00	 call	 ??0?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::vector<SDL_Rect,std::allocator<SDL_Rect> >
  00051	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00055	8d 45 08	 lea	 eax, DWORD PTR _MapName$[ebp]
  00058	50		 push	 eax
  00059	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	83 c1 10	 add	 ecx, 16			; 00000010H
  0005f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00064	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00068	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 4d 24	 mov	 ecx, DWORD PTR _SpawnPoint$[ebp]
  0006e	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
  00071	8b 55 28	 mov	 edx, DWORD PTR _SpawnPoint$[ebp+4]
  00074	89 50 30	 mov	 DWORD PTR [eax+48], edx
  00077	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	83 c0 34	 add	 eax, 52			; 00000034H
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?Zero@Vector2@@SA?AU1@XZ ; Vector2::Zero
  00083	83 c4 04	 add	 esp, 4
  00086	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0008c	e8 00 00 00 00	 call	 ??0Vector2@@QAE@XZ	; Vector2::Vector2
  00091	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	83 c1 48	 add	 ecx, 72			; 00000048H
  00097	e8 00 00 00 00	 call	 ??0?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ ; std::vector<Tile,std::allocator<Tile> >::vector<Tile,std::allocator<Tile> >
  0009c	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000a0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	83 c1 58	 add	 ecx, 88			; 00000058H
  000a6	e8 00 00 00 00	 call	 ??0?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ ; std::vector<TileSet,std::allocator<TileSet> >::vector<TileSet,std::allocator<TileSet> >
  000ab	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000af	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b2	83 c1 68	 add	 ecx, 104		; 00000068H
  000b5	e8 00 00 00 00	 call	 ??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::vector<CaveRectangle,std::allocator<CaveRectangle> >
  000ba	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  000be	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	83 c1 78	 add	 ecx, 120		; 00000078H
  000c4	e8 00 00 00 00	 call	 ??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::vector<CaveSlope,std::allocator<CaveSlope> >
  000c9	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
; Line 38
  000cd	8b 45 2c	 mov	 eax, DWORD PTR _Graphic$[ebp]
  000d0	50		 push	 eax
  000d1	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000d4	83 c1 10	 add	 ecx, 16			; 00000010H
  000d7	83 ec 1c	 sub	 esp, 28			; 0000001cH
  000da	8b d4		 mov	 edx, esp
  000dc	89 a5 20 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], esp
  000e2	51		 push	 ecx
  000e3	8b ca		 mov	 ecx, edx
  000e5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ea	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv166[ebp], eax
  000f0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	e8 00 00 00 00	 call	 ?LoadMap@Level@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAVGraphics@@@Z ; Level::LoadMap
; Line 39
  000f8	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000fb	e8 00 00 00 00	 call	 ?StoreBackgroundLocations@Level@@AAEXXZ ; Level::StoreBackgroundLocations
; Line 40
  00100	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00107	8d 4d 08	 lea	 ecx, DWORD PTR _MapName$[ebp]
  0010a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0010f	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00112	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00115	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0011c	59		 pop	 ecx
  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx
  00120	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  00126	3b ec		 cmp	 ebp, esp
  00128	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$0:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _MapName$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::~vector<SDL_Rect,std::allocator<SDL_Rect> >
__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$2:
  00010	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 10	 add	 ecx, 16			; 00000010H
  00016	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$3:
  0001b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	83 c1 48	 add	 ecx, 72			; 00000048H
  00021	e9 00 00 00 00	 jmp	 ??1?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ ; std::vector<Tile,std::allocator<Tile> >::~vector<Tile,std::allocator<Tile> >
__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$4:
  00026	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	83 c1 58	 add	 ecx, 88			; 00000058H
  0002c	e9 00 00 00 00	 jmp	 ??1?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ ; std::vector<TileSet,std::allocator<TileSet> >::~vector<TileSet,std::allocator<TileSet> >
__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$5:
  00031	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	83 c1 68	 add	 ecx, 104		; 00000068H
  00037	e9 00 00 00 00	 jmp	 ??1?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::~vector<CaveRectangle,std::allocator<CaveRectangle> >
__unwindfunclet$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z$6:
  0003c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	83 c1 78	 add	 ecx, 120		; 00000078H
  00042	e9 00 00 00 00	 jmp	 ??1?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::~vector<CaveSlope,std::allocator<CaveSlope> >
__ehhandler$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z:
  00047	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0004b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0004e	8b 8a 14 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-236]
  00054	33 c8		 xor	 ecx, eax
  00056	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z
  00060	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Level@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UVector2@@AAVGraphics@@@Z ENDP ; Level::Level
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Level@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0Level@@QAE@XZ PROC					; Level::Level, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.cpp
; Line 26
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Level@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::vector<SDL_Rect,std::allocator<SDL_Rect> >
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	83 c1 10	 add	 ecx, 16			; 00000010H
  00057	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00060	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00066	e8 00 00 00 00	 call	 ??0Vector2@@QAE@XZ	; Vector2::Vector2
  0006b	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	83 c1 34	 add	 ecx, 52			; 00000034H
  00071	e8 00 00 00 00	 call	 ??0Vector2@@QAE@XZ	; Vector2::Vector2
  00076	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00079	83 c1 3c	 add	 ecx, 60			; 0000003cH
  0007c	e8 00 00 00 00	 call	 ??0Vector2@@QAE@XZ	; Vector2::Vector2
  00081	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	83 c1 48	 add	 ecx, 72			; 00000048H
  00087	e8 00 00 00 00	 call	 ??0?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ ; std::vector<Tile,std::allocator<Tile> >::vector<Tile,std::allocator<Tile> >
  0008c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00090	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	83 c1 58	 add	 ecx, 88			; 00000058H
  00096	e8 00 00 00 00	 call	 ??0?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ ; std::vector<TileSet,std::allocator<TileSet> >::vector<TileSet,std::allocator<TileSet> >
  0009b	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  0009f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a2	83 c1 68	 add	 ecx, 104		; 00000068H
  000a5	e8 00 00 00 00	 call	 ??0?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::vector<CaveRectangle,std::allocator<CaveRectangle> >
  000aa	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000ae	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	83 c1 78	 add	 ecx, 120		; 00000078H
  000b4	e8 00 00 00 00	 call	 ??0?$vector@VCaveSlope@@V?$allocator@VCaveSlope@@@std@@@std@@QAE@XZ ; std::vector<CaveSlope,std::allocator<CaveSlope> >::vector<CaveSlope,std::allocator<CaveSlope> >
; Line 28
  000b9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000c0	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  000c3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cd	59		 pop	 ecx
  000ce	5f		 pop	 edi
  000cf	5e		 pop	 esi
  000d0	5b		 pop	 ebx
  000d1	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000d7	3b ec		 cmp	 ebp, esp
  000d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Level@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@USDL_Rect@@V?$allocator@USDL_Rect@@@std@@@std@@QAE@XZ ; std::vector<SDL_Rect,std::allocator<SDL_Rect> >::~vector<SDL_Rect,std::allocator<SDL_Rect> >
__unwindfunclet$??0Level@@QAE@XZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 10	 add	 ecx, 16			; 00000010H
  0000e	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0Level@@QAE@XZ$2:
  00013	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 48	 add	 ecx, 72			; 00000048H
  00019	e9 00 00 00 00	 jmp	 ??1?$vector@VTile@@V?$allocator@VTile@@@std@@@std@@QAE@XZ ; std::vector<Tile,std::allocator<Tile> >::~vector<Tile,std::allocator<Tile> >
__unwindfunclet$??0Level@@QAE@XZ$3:
  0001e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 58	 add	 ecx, 88			; 00000058H
  00024	e9 00 00 00 00	 jmp	 ??1?$vector@UTileSet@@V?$allocator@UTileSet@@@std@@@std@@QAE@XZ ; std::vector<TileSet,std::allocator<TileSet> >::~vector<TileSet,std::allocator<TileSet> >
__unwindfunclet$??0Level@@QAE@XZ$4:
  00029	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	83 c1 68	 add	 ecx, 104		; 00000068H
  0002f	e9 00 00 00 00	 jmp	 ??1?$vector@VCaveRectangle@@V?$allocator@VCaveRectangle@@@std@@@std@@QAE@XZ ; std::vector<CaveRectangle,std::allocator<CaveRectangle> >::~vector<CaveRectangle,std::allocator<CaveRectangle> >
__ehhandler$??0Level@@QAE@XZ:
  00034	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00038	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003b	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Level@@QAE@XZ
  0004d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Level@@QAE@XZ ENDP					; Level::Level
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TileSet@@QAE@PAUSDL_Texture@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_TileTexture$ = 8					; size = 4
_GID$ = 12						; size = 4
??0TileSet@@QAE@PAUSDL_Texture@@H@Z PROC		; TileSet::TileSet, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.h
; Line 32
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 34
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _TileTexture$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
; Line 35
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 4d 0c	 mov	 ecx, DWORD PTR _GID$[ebp]
  00031	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; Line 36
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 08 00	 ret	 8
??0TileSet@@QAE@PAUSDL_Texture@@H@Z ENDP		; TileSet::TileSet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TileSet@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TileSet@@QAE@XZ PROC					; TileSet::TileSet, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\level.h
; Line 27
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 29
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 40 04 ff ff
	ff ff		 mov	 DWORD PTR [eax+4], -1
; Line 30
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
??0TileSet@@QAE@XZ ENDP					; TileSet::TileSet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CollidesWith@CaveSlope@@QBE_NABVCaveRectangle@@@Z
_TEXT	SEGMENT
tv176 = -208						; size = 4
_this$ = -8						; size = 4
_Other$ = 8						; size = 4
?CollidesWith@CaveSlope@@QBE_NABVCaveRectangle@@@Z PROC	; CaveSlope::CollidesWith, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\caveslope.h
; Line 49
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 68
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetRight@CaveRectangle@@QBEHXZ ; CaveRectangle::GetRight
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00031	7c 33		 jl	 SHORT $LN3@CollidesWi
  00033	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  00036	e8 00 00 00 00	 call	 ?GetLeft@CaveRectangle@@QBEHXZ ; CaveRectangle::GetLeft
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0003e	3b 02		 cmp	 eax, DWORD PTR [edx]
  00040	7f 24		 jg	 SHORT $LN3@CollidesWi
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  00045	e8 00 00 00 00	 call	 ?GetTop@CaveRectangle@@QBEHXZ ; CaveRectangle::GetTop
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  00050	7f 14		 jg	 SHORT $LN3@CollidesWi
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  00055	e8 00 00 00 00	 call	 ?GetBottom@CaveRectangle@@QBEHXZ ; CaveRectangle::GetBottom
  0005a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0005d	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00060	0f 8d cd 00 00
	00		 jge	 $LN5@CollidesWi
$LN3@CollidesWi:
  00066	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  00069	e8 00 00 00 00	 call	 ?GetRight@CaveRectangle@@QBEHXZ ; CaveRectangle::GetRight
  0006e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00073	7c 34		 jl	 SHORT $LN4@CollidesWi
  00075	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  00078	e8 00 00 00 00	 call	 ?GetLeft@CaveRectangle@@QBEHXZ ; CaveRectangle::GetLeft
  0007d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00080	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00083	7f 24		 jg	 SHORT $LN4@CollidesWi
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  00088	e8 00 00 00 00	 call	 ?GetTop@CaveRectangle@@QBEHXZ ; CaveRectangle::GetTop
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00093	7f 14		 jg	 SHORT $LN4@CollidesWi
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  00098	e8 00 00 00 00	 call	 ?GetBottom@CaveRectangle@@QBEHXZ ; CaveRectangle::GetBottom
  0009d	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000a0	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  000a3	0f 8d 8a 00 00
	00		 jge	 $LN5@CollidesWi
$LN4@CollidesWi:
  000a9	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  000ac	e8 00 00 00 00	 call	 ?GetLeft@CaveRectangle@@QBEHXZ ; CaveRectangle::GetLeft
  000b1	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b4	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000b6	7f 30		 jg	 SHORT $LN6@CollidesWi
  000b8	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  000bb	e8 00 00 00 00	 call	 ?GetRight@CaveRectangle@@QBEHXZ ; CaveRectangle::GetRight
  000c0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000c3	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  000c6	7c 20		 jl	 SHORT $LN6@CollidesWi
  000c8	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  000cb	e8 00 00 00 00	 call	 ?GetTop@CaveRectangle@@QBEHXZ ; CaveRectangle::GetTop
  000d0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d3	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  000d6	7f 10		 jg	 SHORT $LN6@CollidesWi
  000d8	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  000db	e8 00 00 00 00	 call	 ?GetBottom@CaveRectangle@@QBEHXZ ; CaveRectangle::GetBottom
  000e0	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000e3	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  000e6	7d 4b		 jge	 SHORT $LN5@CollidesWi
$LN6@CollidesWi:
  000e8	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  000eb	e8 00 00 00 00	 call	 ?GetLeft@CaveRectangle@@QBEHXZ ; CaveRectangle::GetLeft
  000f0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  000f6	7f 2f		 jg	 SHORT $LN7@CollidesWi
  000f8	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  000fb	e8 00 00 00 00	 call	 ?GetRight@CaveRectangle@@QBEHXZ ; CaveRectangle::GetRight
  00100	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00103	3b 02		 cmp	 eax, DWORD PTR [edx]
  00105	7c 20		 jl	 SHORT $LN7@CollidesWi
  00107	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  0010a	e8 00 00 00 00	 call	 ?GetTop@CaveRectangle@@QBEHXZ ; CaveRectangle::GetTop
  0010f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00112	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  00115	7f 10		 jg	 SHORT $LN7@CollidesWi
  00117	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  0011a	e8 00 00 00 00	 call	 ?GetBottom@CaveRectangle@@QBEHXZ ; CaveRectangle::GetBottom
  0011f	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00122	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00125	7d 0c		 jge	 SHORT $LN5@CollidesWi
$LN7@CollidesWi:
  00127	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv176[ebp], 0
  00131	eb 0a		 jmp	 SHORT $LN8@CollidesWi
$LN5@CollidesWi:
  00133	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv176[ebp], 1
$LN8@CollidesWi:
  0013d	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv176[ebp]
; Line 69
  00143	5f		 pop	 edi
  00144	5e		 pop	 esi
  00145	5b		 pop	 ebx
  00146	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  0014c	3b ec		 cmp	 ebp, esp
  0014e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c2 04 00	 ret	 4
?CollidesWith@CaveSlope@@QBE_NABVCaveRectangle@@@Z ENDP	; CaveSlope::CollidesWith
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CaveSlope@@QAE@UVector2@@0@Z
_TEXT	SEGMENT
tv167 = -232						; size = 4
tv176 = -228						; size = 4
tv161 = -224						; size = 4
tv174 = -220						; size = 4
tv155 = -216						; size = 4
tv172 = -212						; size = 4
tv149 = -208						; size = 4
_this$ = -8						; size = 4
_PointOne$ = 8						; size = 8
_PointTwo$ = 16						; size = 8
??0CaveSlope@@QAE@UVector2@@0@Z PROC			; CaveSlope::CaveSlope, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\caveslope.h
; Line 29
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _PointOne$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
  0002b	8b 55 0c	 mov	 edx, DWORD PTR _PointOne$[ebp+4]
  0002e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00031	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 10	 mov	 ecx, DWORD PTR _PointTwo$[ebp]
  00037	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0003a	8b 55 14	 mov	 edx, DWORD PTR _PointTwo$[ebp+4]
  0003d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 30
  00040	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00043	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00049	2b 11		 sub	 edx, DWORD PTR [ecx]
  0004b	0f 84 cb 00 00
	00		 je	 $LN1@CaveSlope
; Line 32
  00051	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00054	f3 0f 2a 40 0c	 cvtsi2ss xmm0, DWORD PTR [eax+12]
  00059	51		 push	 ecx
  0005a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005f	e8 00 00 00 00	 call	 ?fabs@@YAMM@Z		; fabs
  00064	83 c4 04	 add	 esp, 4
  00067	d9 9d 30 ff ff
	ff		 fstp	 DWORD PTR tv149[ebp]
  0006d	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR tv149[ebp]
  00075	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	f3 0f 2a 49 04	 cvtsi2ss xmm1, DWORD PTR [ecx+4]
  0007d	51		 push	 ecx
  0007e	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00083	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR tv172[ebp], xmm0
  0008b	e8 00 00 00 00	 call	 ?fabs@@YAMM@Z		; fabs
  00090	83 c4 04	 add	 esp, 4
  00093	d9 9d 28 ff ff
	ff		 fstp	 DWORD PTR tv155[ebp]
  00099	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR tv172[ebp]
  000a1	f3 0f 5c 85 28
	ff ff ff	 subss	 xmm0, DWORD PTR tv155[ebp]
  000a9	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ac	f3 0f 2a 4a 08	 cvtsi2ss xmm1, DWORD PTR [edx+8]
  000b1	51		 push	 ecx
  000b2	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000b7	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR tv174[ebp], xmm0
  000bf	e8 00 00 00 00	 call	 ?fabs@@YAMM@Z		; fabs
  000c4	83 c4 04	 add	 esp, 4
  000c7	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR tv161[ebp]
  000cd	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR tv161[ebp]
  000d5	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d8	f3 0f 2a 08	 cvtsi2ss xmm1, DWORD PTR [eax]
  000dc	51		 push	 ecx
  000dd	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000e2	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR tv176[ebp], xmm0
  000ea	e8 00 00 00 00	 call	 ?fabs@@YAMM@Z		; fabs
  000ef	83 c4 04	 add	 esp, 4
  000f2	d9 9d 18 ff ff
	ff		 fstp	 DWORD PTR tv167[ebp]
  000f8	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR tv176[ebp]
  00100	f3 0f 5c 85 18
	ff ff ff	 subss	 xmm0, DWORD PTR tv167[ebp]
  00108	f3 0f 10 8d 24
	ff ff ff	 movss	 xmm1, DWORD PTR tv174[ebp]
  00110	f3 0f 5e c8	 divss	 xmm1, xmm0
  00114	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	f3 0f 11 49 10	 movss	 DWORD PTR [ecx+16], xmm1
$LN1@CaveSlope:
; Line 34
  0011c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0011f	5f		 pop	 edi
  00120	5e		 pop	 esi
  00121	5b		 pop	 ebx
  00122	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  00128	3b ec		 cmp	 ebp, esp
  0012a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c2 10 00	 ret	 16			; 00000010H
??0CaveSlope@@QAE@UVector2@@0@Z ENDP			; CaveSlope::CaveSlope
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@Tile@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@Tile@@QAEXI@Z PROC			; Tile::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00026	50		 push	 eax
  00027	6a 00		 push	 0
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?__autoclassinit2@Tile@@QAEXI@Z ENDP			; Tile::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCaveRectangle@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCaveRectangle@@QAEPAXI@Z PROC			; CaveRectangle::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1CaveRectangle@@QAE@XZ ; CaveRectangle::~CaveRectangle
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_GCaveRectangle@@QAEPAXI@Z ENDP			; CaveRectangle::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CollidesWith@CaveRectangle@@QBE_NABV1@@Z
_TEXT	SEGMENT
tv84 = -208						; size = 4
_this$ = -8						; size = 4
_Other$ = 8						; size = 4
?CollidesWith@CaveRectangle@@QBE_NABV1@@Z PROC		; CaveRectangle::CollidesWith, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\caverectangle.h
; Line 90
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 94
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?GetRight@CaveRectangle@@QBEHXZ ; CaveRectangle::GetRight
  0002b	8b f0		 mov	 esi, eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  00030	e8 00 00 00 00	 call	 ?GetLeft@CaveRectangle@@QBEHXZ ; CaveRectangle::GetLeft
  00035	3b f0		 cmp	 esi, eax
  00037	7c 4e		 jl	 SHORT $LN3@CollidesWi
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ?GetBottom@CaveRectangle@@QBEHXZ ; CaveRectangle::GetBottom
  00041	8b f0		 mov	 esi, eax
  00043	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  00046	e8 00 00 00 00	 call	 ?GetTop@CaveRectangle@@QBEHXZ ; CaveRectangle::GetTop
  0004b	3b f0		 cmp	 esi, eax
  0004d	7c 38		 jl	 SHORT $LN3@CollidesWi
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?GetLeft@CaveRectangle@@QBEHXZ ; CaveRectangle::GetLeft
  00057	8b f0		 mov	 esi, eax
  00059	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  0005c	e8 00 00 00 00	 call	 ?GetRight@CaveRectangle@@QBEHXZ ; CaveRectangle::GetRight
  00061	3b f0		 cmp	 esi, eax
  00063	7f 22		 jg	 SHORT $LN3@CollidesWi
  00065	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00068	e8 00 00 00 00	 call	 ?GetTop@CaveRectangle@@QBEHXZ ; CaveRectangle::GetTop
  0006d	8b f0		 mov	 esi, eax
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR _Other$[ebp]
  00072	e8 00 00 00 00	 call	 ?GetBottom@CaveRectangle@@QBEHXZ ; CaveRectangle::GetBottom
  00077	3b f0		 cmp	 esi, eax
  00079	7f 0c		 jg	 SHORT $LN3@CollidesWi
  0007b	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv84[ebp], 1
  00085	eb 0a		 jmp	 SHORT $LN4@CollidesWi
$LN3@CollidesWi:
  00087	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv84[ebp], 0
$LN4@CollidesWi:
  00091	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv84[ebp]
; Line 95
  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  000a0	3b ec		 cmp	 ebp, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
?CollidesWith@CaveRectangle@@QBE_NABV1@@Z ENDP		; CaveRectangle::CollidesWith
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetBottom@CaveRectangle@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetBottom@CaveRectangle@@QBEHXZ PROC			; CaveRectangle::GetBottom, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\caverectangle.h
; Line 56
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	03 41 0c	 add	 eax, DWORD PTR [ecx+12]
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
?GetBottom@CaveRectangle@@QBEHXZ ENDP			; CaveRectangle::GetBottom
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetTop@CaveRectangle@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetTop@CaveRectangle@@QBEHXZ PROC			; CaveRectangle::GetTop, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\caverectangle.h
; Line 53
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?GetTop@CaveRectangle@@QBEHXZ ENDP			; CaveRectangle::GetTop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetRight@CaveRectangle@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetRight@CaveRectangle@@QBEHXZ PROC			; CaveRectangle::GetRight, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\caverectangle.h
; Line 50
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?GetRight@CaveRectangle@@QBEHXZ ENDP			; CaveRectangle::GetRight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetLeft@CaveRectangle@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLeft@CaveRectangle@@QBEHXZ PROC			; CaveRectangle::GetLeft, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\caverectangle.h
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?GetLeft@CaveRectangle@@QBEHXZ ENDP			; CaveRectangle::GetLeft
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CaveRectangle@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CaveRectangle@@QAE@XZ PROC				; CaveRectangle::~CaveRectangle, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\caverectangle.h
; Line 35
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??1CaveRectangle@@QAE@XZ ENDP				; CaveRectangle::~CaveRectangle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CaveRectangle@@QAE@HHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_X$ = 8							; size = 4
_Y$ = 12						; size = 4
_Width$ = 16						; size = 4
_Height$ = 20						; size = 4
??0CaveRectangle@@QAE@HHHH@Z PROC			; CaveRectangle::CaveRectangle, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\caverectangle.h
; Line 31
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _X$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 4d 0c	 mov	 ecx, DWORD PTR _Y$[ebp]
  00031	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 4d 10	 mov	 ecx, DWORD PTR _Width$[ebp]
  0003a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0003d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00040	8b 4d 14	 mov	 ecx, DWORD PTR _Height$[ebp]
  00043	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
; Line 32
  00046	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 10 00	 ret	 16			; 00000010H
??0CaveRectangle@@QAE@HHHH@Z ENDP			; CaveRectangle::CaveRectangle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__E_Tuple_alloc@std@@YAXXZ
text$di	SEGMENT
$T1 = -197						; size = 1
??__E_Tuple_alloc@std@@YAXXZ PROC			; std::`dynamic initializer for '_Tuple_alloc'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 66
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	33 c0		 xor	 eax, eax
  00020	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??__E_Tuple_alloc@std@@YAXXZ ENDP			; std::`dynamic initializer for '_Tuple_alloc''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Eignore@std@@YAXXZ
text$di	SEGMENT
??__Eignore@std@@YAXXZ PROC				; std::`dynamic initializer for 'ignore'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 59
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET _ignore
  00023	e8 00 00 00 00	 call	 ??0_Ignore@std@@QAE@XZ	; std::_Ignore::_Ignore
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
??__Eignore@std@@YAXXZ ENDP				; std::`dynamic initializer for 'ignore''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Ignore@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Ignore@std@@QAE@XZ PROC				; std::_Ignore::_Ignore, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\tuple
; Line 49
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 51
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0_Ignore@std@@QAE@XZ ENDP				; std::_Ignore::_Ignore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Zero@Vector2@@SA?AU1@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?Zero@Vector2@@SA?AU1@XZ PROC				; Vector2::Zero, COMDAT
; File f:\cavestory\cavestory\cavestory\globals.h
; Line 66
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00025	e8 00 00 00 00	 call	 ??0Vector2@@QAE@HH@Z	; Vector2::Vector2
  0002a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?Zero@Vector2@@SA?AU1@XZ ENDP				; Vector2::Zero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Vector2@@QAE@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_X$ = 8							; size = 4
_Y$ = 12						; size = 4
??0Vector2@@QAE@HH@Z PROC				; Vector2::Vector2, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\globals.h
; Line 65
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR _X$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 4d 0c	 mov	 ecx, DWORD PTR _Y$[ebp]
  00031	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 08 00	 ret	 8
??0Vector2@@QAE@HH@Z ENDP				; Vector2::Vector2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Vector2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Vector2@@QAE@XZ PROC					; Vector2::Vector2, COMDAT
; _this$ = ecx
; File f:\cavestory\cavestory\cavestory\globals.h
; Line 64
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??0Vector2@@QAE@XZ ENDP					; Vector2::Vector2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stoi@std@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAIH@Z
_TEXT	SEGMENT
tv78 = -240						; size = 4
tv76 = -236						; size = 4
__Ans$ = -36						; size = 4
__Eptr$ = -24						; size = 4
__Ptr$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Str$ = 8						; size = 4
__Idx$ = 12						; size = 4
__Base$ = 16						; size = 4
?stoi@std@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAIH@Z PROC ; std::stoi, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\string
; Line 228
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00012	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 229
  00028	8b 4d 08	 mov	 ecx, DWORD PTR __Str$[ebp]
  0002b	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00030	89 45 f4	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 231
  00033	8b f4		 mov	 esi, esp
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 232
  00048	8b f4		 mov	 esi, esp
  0004a	8b 45 10	 mov	 eax, DWORD PTR __Base$[ebp]
  0004d	50		 push	 eax
  0004e	8d 4d e8	 lea	 ecx, DWORD PTR __Eptr$[ebp]
  00051	51		 push	 ecx
  00052	8b 55 f4	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00055	52		 push	 edx
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtol
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005f	3b f4		 cmp	 esi, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	89 45 dc	 mov	 DWORD PTR __Ans$[ebp], eax
; Line 234
  00069	8b 45 f4	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0006c	3b 45 e8	 cmp	 eax, DWORD PTR __Eptr$[ebp]
  0006f	75 14		 jne	 SHORT $LN4@stoi
; Line 235
  00071	8b f4		 mov	 esi, esp
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HGEDEDEC@invalid?5stoi?5argument?$AA@
  00078	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xinvalid_argument@std@@YAXPBD@Z
  0007e	3b f4		 cmp	 esi, esp
  00080	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@stoi:
; Line 236
  00085	8b f4		 mov	 esi, esp
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  0008d	3b f4		 cmp	 esi, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00094	83 38 22	 cmp	 DWORD PTR [eax], 34	; 00000022H
  00097	74 4c		 je	 SHORT $LN2@stoi
  00099	81 7d dc 00 00
	00 80		 cmp	 DWORD PTR __Ans$[ebp], -2147483648 ; 80000000H
  000a0	7d 0c		 jge	 SHORT $LN7@stoi
  000a2	c7 85 14 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv76[ebp], 1
  000ac	eb 0a		 jmp	 SHORT $LN8@stoi
$LN7@stoi:
  000ae	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN8@stoi:
  000b8	81 7d dc ff ff
	ff 7f		 cmp	 DWORD PTR __Ans$[ebp], 2147483647 ; 7fffffffH
  000bf	7e 0c		 jle	 SHORT $LN9@stoi
  000c1	c7 85 10 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv78[ebp], 1
  000cb	eb 0a		 jmp	 SHORT $LN10@stoi
$LN9@stoi:
  000cd	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN10@stoi:
  000d7	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv76[ebp]
  000dd	3b 85 10 ff ff
	ff		 cmp	 eax, DWORD PTR tv78[ebp]
  000e3	74 14		 je	 SHORT $LN3@stoi
$LN2@stoi:
; Line 237
  000e5	8b f4		 mov	 esi, esp
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MFFNMGGC@stoi?5argument?5out?5of?5range?$AA@
  000ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN3@stoi:
; Line 238
  000f9	83 7d 0c 00	 cmp	 DWORD PTR __Idx$[ebp], 0
  000fd	74 0b		 je	 SHORT $LN1@stoi
; Line 239
  000ff	8b 45 e8	 mov	 eax, DWORD PTR __Eptr$[ebp]
  00102	2b 45 f4	 sub	 eax, DWORD PTR __Ptr$[ebp]
  00105	8b 4d 0c	 mov	 ecx, DWORD PTR __Idx$[ebp]
  00108	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@stoi:
; Line 240
  0010a	8b 45 dc	 mov	 eax, DWORD PTR __Ans$[ebp]
$LN6@stoi:
; Line 241
  0010d	52		 push	 edx
  0010e	8b cd		 mov	 ecx, ebp
  00110	50		 push	 eax
  00111	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN13@stoi
  00117	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0011c	58		 pop	 eax
  0011d	5a		 pop	 edx
  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx
  00121	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00124	33 cd		 xor	 ecx, ebp
  00126	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012b	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  00131	3b ec		 cmp	 ebp, esp
  00133	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c3		 ret	 0
$LN13@stoi:
  0013c	01 00 00 00	 DD	 1
  00140	00 00 00 00	 DD	 $LN12@stoi
$LN12@stoi:
  00144	e8 ff ff ff	 DD	 -24			; ffffffe8H
  00148	04 00 00 00	 DD	 4
  0014c	00 00 00 00	 DD	 $LN11@stoi
$LN11@stoi:
  00150	5f		 DB	 95			; 0000005fH
  00151	45		 DB	 69			; 00000045H
  00152	70		 DB	 112			; 00000070H
  00153	74		 DB	 116			; 00000074H
  00154	72		 DB	 114			; 00000072H
  00155	00		 DB	 0
?stoi@std@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAIH@Z ENDP ; std::stoi
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_System_error_category@std@@UAE@XZ
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_Generic_error_category@std@@UAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 614
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 615
  00023	8b f4		 mov	 esi, esp
  00025	8b 45 0c	 mov	 eax, DWORD PTR __Errval$[ebp]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Syserror_map@std@@YAPBDH@Z
  0002f	83 c4 04	 add	 esp, 4
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	85 c0		 test	 eax, eax
  0003b	74 19		 je	 SHORT $LN2@default_er
; Line 616
  0003d	e8 00 00 00 00	 call	 ?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
  00042	50		 push	 eax
  00043	8b 45 0c	 mov	 eax, DWORD PTR __Errval$[ebp]
  00046	50		 push	 eax
  00047	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004a	e8 00 00 00 00	 call	 ??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
  0004f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00052	eb 17		 jmp	 SHORT $LN3@default_er
; Line 617
  00054	eb 15		 jmp	 SHORT $LN3@default_er
$LN2@default_er:
; Line 618
  00056	e8 00 00 00 00	 call	 ?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
  0005b	50		 push	 eax
  0005c	8b 45 0c	 mov	 eax, DWORD PTR __Errval$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00063	e8 00 00 00 00	 call	 ??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
  00068	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:
; Line 619
  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	5b		 pop	 ebx
  0006e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00074	3b ec		 cmp	 ebp, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 08 00	 ret	 8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -232						; size = 4
$T1 = -224						; size = 4
__Name$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 607
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], 0
; Line 608
  0002d	8b f4		 mov	 esi, esp
  0002f	8b 45 0c	 mov	 eax, DWORD PTR __Errcode$[ebp]
  00032	50		 push	 eax
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Winerror_map@std@@YAPBDH@Z
  00039	83 c4 04	 add	 esp, 4
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	89 45 ec	 mov	 DWORD PTR __Name$[ebp], eax
; Line 609
  00046	83 7d ec 00	 cmp	 DWORD PTR __Name$[ebp], 0
  0004a	74 0b		 je	 SHORT $LN3@message
  0004c	8b 45 ec	 mov	 eax, DWORD PTR __Name$[ebp]
  0004f	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  00055	eb 0a		 jmp	 SHORT $LN4@message
$LN3@message:
  00057	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
  00061	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv69[ebp]
  00067	51		 push	 ecx
  00068	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0006b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00070	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00076	83 ca 01	 or	 edx, 1
  00079	89 95 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  0007f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 610
  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 08 00	 ret	 8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 602
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 603
  00023	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_06FHFOAHML@system?$AA@
; Line 604
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 597
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0_Generic_error_category@std@@QAE@XZ ; std::_Generic_error_category::_Generic_error_category
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@
; Line 599
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_Iostream_error_category@std@@UAE@XZ
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_Generic_error_category@std@@UAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 584
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], 0
; Line 585
  0002d	83 7d 0c 01	 cmp	 DWORD PTR __Errcode$[ebp], 1
  00031	75 23		 jne	 SHORT $LN2@message
; Line 586
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
  00038	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0003b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00040	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00046	83 c8 01	 or	 eax, 1
  00049	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0004f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00052	eb 24		 jmp	 SHORT $LN3@message
; Line 587
  00054	eb 22		 jmp	 SHORT $LN3@message
$LN2@message:
; Line 588
  00056	8b 45 0c	 mov	 eax, DWORD PTR __Errcode$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0005d	51		 push	 ecx
  0005e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
  00066	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  0006c	83 ca 01	 or	 edx, 1
  0006f	89 95 2c ff ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  00075	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:
; Line 589
  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00081	3b ec		 cmp	 ebp, esp
  00083	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 08 00	 ret	 8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 579
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 580
  00023	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@
; Line 581
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 574
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0_Generic_error_category@std@@QAE@XZ ; std::_Generic_error_category::_Generic_error_category
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@
; Line 576
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_Generic_error_category@std@@UAE@XZ
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1error_category@std@@UAE@XZ ; std::error_category::~error_category
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -232						; size = 4
$T1 = -224						; size = 4
__Name$ = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 563
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], 0
; Line 564
  0002d	8b f4		 mov	 esi, esp
  0002f	8b 45 0c	 mov	 eax, DWORD PTR __Errcode$[ebp]
  00032	50		 push	 eax
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Syserror_map@std@@YAPBDH@Z
  00039	83 c4 04	 add	 esp, 4
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	89 45 ec	 mov	 DWORD PTR __Name$[ebp], eax
; Line 565
  00046	83 7d ec 00	 cmp	 DWORD PTR __Name$[ebp], 0
  0004a	74 0b		 je	 SHORT $LN3@message
  0004c	8b 45 ec	 mov	 eax, DWORD PTR __Name$[ebp]
  0004f	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  00055	eb 0a		 jmp	 SHORT $LN4@message
$LN3@message:
  00057	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
  00061	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR tv69[ebp]
  00067	51		 push	 ecx
  00068	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0006b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00070	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00076	83 ca 01	 or	 edx, 1
  00079	89 95 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  0007f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 566
  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  0008b	3b ec		 cmp	 ebp, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 08 00	 ret	 8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 558
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 559
  00023	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@
; Line 560
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 553
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0error_category@std@@QAE@XZ ; std::error_category::error_category
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@
; Line 555
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 352
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 354
  00023	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00026	e8 00 00 00 00	 call	 ?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
  0002b	50		 push	 eax
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
  00034	8b c8		 mov	 ecx, eax
  00036	e8 00 00 00 00	 call	 ??8error_category@std@@QBE_NABV01@@Z ; std::error_category::operator==
  0003b	0f b6 c0	 movzx	 eax, al
  0003e	85 c0		 test	 eax, eax
  00040	74 22		 je	 SHORT $LN3@operator
  00042	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?value@error_condition@std@@QBEHXZ ; std::error_condition::value
  0004a	8b f0		 mov	 esi, eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0004f	e8 00 00 00 00	 call	 ?value@error_condition@std@@QBEHXZ ; std::error_condition::value
  00054	3b f0		 cmp	 esi, eax
  00056	75 0c		 jne	 SHORT $LN3@operator
  00058	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv78[ebp], 1
  00062	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00064	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN4@operator:
  0006e	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv78[ebp]
; Line 355
  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	5b		 pop	 ebx
  00077	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 04 00	 ret	 4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 337
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 338
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; Line 339
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 332
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 333
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 334
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 299
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 4d 08	 mov	 ecx, DWORD PTR __Val$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 4d 0c	 mov	 ecx, DWORD PTR __Cat$[ebp]
  00031	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; Line 300
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 08 00	 ret	 8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 246
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 247
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; Line 248
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 241
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 242
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 243
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1error_category@std@@UAE@XZ ; std::error_category::~error_category
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 176
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 177
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	3b 45 08	 cmp	 eax, DWORD PTR __Right$[ebp]
  00029	75 0c		 jne	 SHORT $LN3@operator
  0002b	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv65[ebp], 1
  00035	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00037	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv65[ebp], 0
$LN4@operator:
  00041	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv65[ebp]
; Line 178
  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 391
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 392
  00023	8b 4d 08	 mov	 ecx, DWORD PTR __Code$[ebp]
  00026	e8 00 00 00 00	 call	 ?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
  0002b	50		 push	 eax
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ??8error_category@std@@QBE_NABV01@@Z ; std::error_category::operator==
  00034	0f b6 c0	 movzx	 eax, al
  00037	85 c0		 test	 eax, eax
  00039	74 19		 je	 SHORT $LN3@equivalent
  0003b	8b 4d 08	 mov	 ecx, DWORD PTR __Code$[ebp]
  0003e	e8 00 00 00 00	 call	 ?value@error_code@std@@QBEHXZ ; std::error_code::value
  00043	3b 45 0c	 cmp	 eax, DWORD PTR __Errval$[ebp]
  00046	75 0c		 jne	 SHORT $LN3@equivalent
  00048	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv74[ebp], 1
  00052	eb 0a		 jmp	 SHORT $LN4@equivalent
$LN3@equivalent:
  00054	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv74[ebp], 0
$LN4@equivalent:
  0005e	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv74[ebp]
; Line 393
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 08 00	 ret	 8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -216						; size = 8
_this$ = -8						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 384
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 385
  00023	8b 45 0c	 mov	 eax, DWORD PTR __Cond$[ebp]
  00026	50		 push	 eax
  00027	8b f4		 mov	 esi, esp
  00029	8b 4d 08	 mov	 ecx, DWORD PTR __Errval$[ebp]
  0002c	51		 push	 ecx
  0002d	8d 95 28 ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00033	52		 push	 edx
  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 10		 mov	 edx, DWORD PTR [eax]
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0003f	ff d0		 call	 eax
  00041	3b f4		 cmp	 esi, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b c8		 mov	 ecx, eax
  0004a	e8 00 00 00 00	 call	 ??8error_condition@std@@QBE_NABV01@@Z ; std::error_condition::operator==
; Line 386
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 08 00	 ret	 8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 377
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 378
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 0c	 mov	 ecx, DWORD PTR __Errval$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
  00033	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 159
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 160
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 154
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 156
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 652
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 653
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
; Line 654
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 642
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 643
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
; Line 644
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 546
  0001e	83 7d 08 00	 cmp	 DWORD PTR __First$[ebp], 0
  00022	75 1f		 jne	 SHORT $LN2@Debug_poin
; Line 547
  00024	8b f4		 mov	 esi, esp
  00026	8b 45 10	 mov	 eax, DWORD PTR __Line$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR __File$[ebp]
  0002d	51		 push	 ecx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	3b f4		 cmp	 esi, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Debug_poin:
; Line 548
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 0c		 je	 SHORT $LN1@scalar
  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003c	83 c4 04	 add	 esp, 4
$LN1@scalar:
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2295
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xran:
; Line 2296
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2290
  00023	8b f4		 mov	 esi, esp
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
  00030	3b f4		 cmp	 esi, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Xlen:
; Line 2291
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Ptr$3 = -20						; size = 4
_this$ = -8						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2273
  00023	0f b6 45 08	 movzx	 eax, BYTE PTR __Built$[ebp]
  00027	85 c0		 test	 eax, eax
  00029	75 02		 jne	 SHORT $LN4@Tidy
  0002b	eb 79		 jmp	 SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	83 78 18 10	 cmp	 DWORD PTR [eax+24], 16	; 00000010H
  00034	72 70		 jb	 SHORT $LN3@Tidy
; Line 2277
  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003c	89 4d ec	 mov	 DWORD PTR __Ptr$3[ebp], ecx
; Line 2278
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 c0 04	 add	 eax, 4
  00045	50		 push	 eax
  00046	8d 8d 17 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0004c	51		 push	 ecx
  0004d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  00055	8b c8		 mov	 ecx, eax
  00057	e8 00 00 00 00	 call	 ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
; Line 2279
  0005c	83 7d 0c 00	 cmp	 DWORD PTR __Newsize$[ebp], 0
  00060	76 20		 jbe	 SHORT $LN1@Tidy
; Line 2281
  00062	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00065	50		 push	 eax
  00066	8b 4d ec	 mov	 ecx, DWORD PTR __Ptr$3[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ??$addressof@D@std@@YAPADAAD@Z ; std::addressof<char>
  0006f	83 c4 04	 add	 esp, 4
  00072	50		 push	 eax
  00073	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00076	83 c2 04	 add	 edx, 4
  00079	52		 push	 edx
  0007a	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Tidy:
; Line 2282
  00082	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00085	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00088	83 c1 01	 add	 ecx, 1
  0008b	51		 push	 ecx
  0008c	8b 55 ec	 mov	 edx, DWORD PTR __Ptr$3[ebp]
  0008f	52		 push	 edx
  00090	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00096	50		 push	 eax
  00097	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:
; Line 2284
  000a6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a9	c7 40 18 0f 00
	00 00		 mov	 DWORD PTR [eax+24], 15	; 0000000fH
; Line 2285
  000b0	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  000b3	50		 push	 eax
  000b4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b7	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2286
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  000c5	3b ec		 cmp	 ebp, esp
  000c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2258
  00023	83 7d 08 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00027	74 20		 je	 SHORT $LN2@Inside
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00031	39 45 08	 cmp	 DWORD PTR __Ptr$[ebp], eax
  00034	72 13		 jb	 SHORT $LN2@Inside
  00036	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0003e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	03 41 14	 add	 eax, DWORD PTR [ecx+20]
  00044	3b 45 08	 cmp	 eax, DWORD PTR __Ptr$[ebp]
  00047	77 06		 ja	 SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
  00049	32 c0		 xor	 al, al
  0004b	eb 04		 jmp	 SHORT $LN4@Inside
; Line 2260
  0004d	eb 02		 jmp	 SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
  0004f	b0 01		 mov	 al, 1
$LN4@Inside:
; Line 2262
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -208						; size = 4
tv129 = -208						; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2243
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0002b	3b 45 08	 cmp	 eax, DWORD PTR __Newsize$[ebp]
  0002e	73 08		 jae	 SHORT $LN6@Grow
; Line 2244
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 2245
  00038	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	3b 4d 08	 cmp	 ecx, DWORD PTR __Newsize$[ebp]
  00041	73 15		 jae	 SHORT $LN5@Grow
; Line 2246
  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00049	51		 push	 ecx
  0004a	8b 55 08	 mov	 edx, DWORD PTR __Newsize$[ebp]
  0004d	52		 push	 edx
  0004e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00056	eb 53		 jmp	 SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
  00058	0f b6 45 0c	 movzx	 eax, BYTE PTR __Trim$[ebp]
  0005c	85 c0		 test	 eax, eax
  0005e	74 3b		 je	 SHORT $LN3@Grow
  00060	83 7d 08 10	 cmp	 DWORD PTR __Newsize$[ebp], 16 ; 00000010H
  00064	73 35		 jae	 SHORT $LN3@Grow
; Line 2249
  00066	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00069	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  0006c	3b 48 14	 cmp	 ecx, DWORD PTR [eax+20]
  0006f	73 0b		 jae	 SHORT $LN9@Grow
  00071	8b 55 08	 mov	 edx, DWORD PTR __Newsize$[ebp]
  00074	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv129[ebp], edx
  0007a	eb 0c		 jmp	 SHORT $LN10@Grow
$LN9@Grow:
  0007c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00082	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv129[ebp], ecx
$LN10@Grow:
  00088	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv129[ebp]
  0008e	52		 push	 edx
  0008f	6a 01		 push	 1
  00091	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00099	eb 10		 jmp	 SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
  0009b	83 7d 08 00	 cmp	 DWORD PTR __Newsize$[ebp], 0
  0009f	75 0a		 jne	 SHORT $LN4@Grow
; Line 2251
  000a1	6a 00		 push	 0
  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 2252
  000ab	83 7d 08 00	 cmp	 DWORD PTR __Newsize$[ebp], 0
  000af	76 0c		 jbe	 SHORT $LN11@Grow
  000b1	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv136[ebp], 1
  000bb	eb 0a		 jmp	 SHORT $LN12@Grow
$LN11@Grow:
  000bd	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
$LN12@Grow:
  000c7	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
  000cd	5f		 pop	 edi
  000ce	5e		 pop	 esi
  000cf	5b		 pop	 ebx
  000d0	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  000d6	3b ec		 cmp	 ebp, esp
  000d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dd	8b e5		 mov	 esp, ebp
  000df	5d		 pop	 ebp
  000e0	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2237
  00023	c6 85 2f ff ff
	ff 00		 mov	 BYTE PTR $T1[ebp], 0
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$[ebp]
  00030	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  00033	8d 95 2f ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00039	52		 push	 edx
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00042	03 45 08	 add	 eax, DWORD PTR __Newsize$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
  0004b	83 c4 08	 add	 esp, 8
; Line 2238
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00057	3b ec		 cmp	 ebp, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -292						; size = 4
tv203 = -292						; size = 4
tv204 = -288						; size = 4
tv202 = -288						; size = 4
$T2 = -277						; size = 1
$T3 = -265						; size = 1
$T4 = -253						; size = 1
__Ptr$ = -52						; size = 4
__Newres$ = -40						; size = 4
_this$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d bd dc fe ff
	ff		 lea	 edi, DWORD PTR [ebp-292]
  00022	b9 45 00 00 00	 mov	 ecx, 69			; 00000045H
  00027	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002c	f3 ab		 rep stosd
  0002e	59		 pop	 ecx
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00034	33 c5		 xor	 eax, ebp
  00036	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00039	50		 push	 eax
  0003a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00043	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00046	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2202
  00049	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0004c	83 c8 0f	 or	 eax, 15			; 0000000fH
  0004f	89 45 d8	 mov	 DWORD PTR __Newres$[ebp], eax
; Line 2203
  00052	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005a	3b 45 d8	 cmp	 eax, DWORD PTR __Newres$[ebp]
  0005d	73 08		 jae	 SHORT $LN9@Copy
; Line 2204
  0005f	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00062	89 45 d8	 mov	 DWORD PTR __Newres$[ebp], eax
  00065	eb 52		 jmp	 SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
  00067	8b 45 d8	 mov	 eax, DWORD PTR __Newres$[ebp]
  0006a	33 d2		 xor	 edx, edx
  0006c	b9 03 00 00 00	 mov	 ecx, 3
  00071	f7 f1		 div	 ecx
  00073	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  00076	8b 4a 18	 mov	 ecx, DWORD PTR [edx+24]
  00079	d1 e9		 shr	 ecx, 1
  0007b	3b c8		 cmp	 ecx, eax
  0007d	77 02		 ja	 SHORT $LN7@Copy
  0007f	eb 38		 jmp	 SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
  00081	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00084	8b 70 18	 mov	 esi, DWORD PTR [eax+24]
  00087	d1 ee		 shr	 esi, 1
  00089	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00091	2b c6		 sub	 eax, esi
  00093	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	39 41 18	 cmp	 DWORD PTR [ecx+24], eax
  00099	77 13		 ja	 SHORT $LN5@Copy
; Line 2209
  0009b	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000a1	d1 e9		 shr	 ecx, 1
  000a3	8b 55 e4	 mov	 edx, DWORD PTR _this$[ebp]
  000a6	03 4a 18	 add	 ecx, DWORD PTR [edx+24]
  000a9	89 4d d8	 mov	 DWORD PTR __Newres$[ebp], ecx
; Line 2210
  000ac	eb 0b		 jmp	 SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
  000ae	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  000b6	89 45 d8	 mov	 DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
  000b9	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
  000c0	8d 85 eb fe ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  000c6	50		 push	 eax
  000c7	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  000ca	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  000cf	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv202[ebp], eax
  000d5	8b 4d d8	 mov	 ecx, DWORD PTR __Newres$[ebp]
  000d8	83 c1 01	 add	 ecx, 1
  000db	51		 push	 ecx
  000dc	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv202[ebp]
  000e2	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  000e7	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv203[ebp], eax
  000ed	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR tv203[ebp]
  000f3	89 55 cc	 mov	 DWORD PTR __Ptr$[ebp], edx
  000f6	eb 76		 jmp	 SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 2216
  000f8	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 2217
  000fb	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  000fe	89 45 d8	 mov	 DWORD PTR __Newres$[ebp], eax
; Line 2218
  00101	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
  00105	8d 85 f7 fe ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  0010b	50		 push	 eax
  0010c	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  00114	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv204[ebp], eax
  0011a	8b 4d d8	 mov	 ecx, DWORD PTR __Newres$[ebp]
  0011d	83 c1 01	 add	 ecx, 1
  00120	51		 push	 ecx
  00121	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv204[ebp]
  00127	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
  0012c	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv205[ebp], eax
  00132	8b 95 dc fe ff
	ff		 mov	 edx, DWORD PTR tv205[ebp]
  00138	89 55 cc	 mov	 DWORD PTR __Ptr$[ebp], edx
  0013b	eb 1b		 jmp	 SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 2221
  0013d	6a 00		 push	 0
  0013f	6a 01		 push	 1
  00141	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00144	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2222
  00149	6a 00		 push	 0
  0014b	6a 00		 push	 0
  0014d	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 2223
  00152	b8 00 00 00 00	 mov	 eax, $LN17@Copy
  00157	c3		 ret	 0
$LN14@Copy:
  00158	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
  0015f	eb 07		 jmp	 SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
  00161	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 2224
  00168	b8 00 00 00 00	 mov	 eax, $LN19@Copy
  0016d	c3		 ret	 0
$LN12@Copy:
  0016e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  00175	eb 07		 jmp	 SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
  00177	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 2226
  0017e	83 7d 0c 00	 cmp	 DWORD PTR __Oldlen$[ebp], 0
  00182	76 19		 jbe	 SHORT $LN1@Copy
; Line 2228
  00184	8b 45 0c	 mov	 eax, DWORD PTR __Oldlen$[ebp]
  00187	50		 push	 eax
  00188	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0018b	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00190	50		 push	 eax
  00191	8b 4d cc	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00194	51		 push	 ecx
  00195	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  0019a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@Copy:
; Line 2229
  0019d	6a 00		 push	 0
  0019f	6a 01		 push	 1
  001a1	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  001a4	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2230
  001a9	8d 45 cc	 lea	 eax, DWORD PTR __Ptr$[ebp]
  001ac	50		 push	 eax
  001ad	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  001b0	83 c1 04	 add	 ecx, 4
  001b3	51		 push	 ecx
  001b4	8d 95 03 ff ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  001ba	52		 push	 edx
  001bb	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  001be	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  001c3	8b c8		 mov	 ecx, eax
  001c5	e8 00 00 00 00	 call	 ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 2231
  001ca	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  001cd	8b 4d d8	 mov	 ecx, DWORD PTR __Newres$[ebp]
  001d0	89 48 18	 mov	 DWORD PTR [eax+24], ecx
; Line 2232
  001d3	8b 45 0c	 mov	 eax, DWORD PTR __Oldlen$[ebp]
  001d6	50		 push	 eax
  001d7	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  001da	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 2233
  001df	52		 push	 edx
  001e0	8b cd		 mov	 ecx, ebp
  001e2	50		 push	 eax
  001e3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN23@Copy
  001e9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  001ee	58		 pop	 eax
  001ef	5a		 pop	 edx
  001f0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001f3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001fa	59		 pop	 ecx
  001fb	5f		 pop	 edi
  001fc	5e		 pop	 esi
  001fd	5b		 pop	 ebx
  001fe	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00201	33 cd		 xor	 ecx, ebp
  00203	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00208	81 c4 24 01 00
	00		 add	 esp, 292		; 00000124H
  0020e	3b ec		 cmp	 ebp, esp
  00210	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00215	8b e5		 mov	 esp, ebp
  00217	5d		 pop	 ebp
  00218	c2 08 00	 ret	 8
  0021b	90		 npad	 1
$LN23@Copy:
  0021c	01 00 00 00	 DD	 1
  00220	00 00 00 00	 DD	 $LN22@Copy
$LN22@Copy:
  00224	cc ff ff ff	 DD	 -52			; ffffffccH
  00228	04 00 00 00	 DD	 4
  0022c	00 00 00 00	 DD	 $LN20@Copy
$LN20@Copy:
  00230	5f		 DB	 95			; 0000005fH
  00231	50		 DB	 80			; 00000050H
  00232	74		 DB	 116			; 00000074H
  00233	72		 DB	 114			; 00000072H
  00234	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a d8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-296]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00017	33 c8		 xor	 ecx, eax
  00019	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  00023	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2188
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2189
  00023	8d 85 2f ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  00032	50		 push	 eax
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00036	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@ABV01@@Z ; std::allocator<char>::allocator<char>
  0003b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 2190
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT
tv136 = -228						; size = 4
tv137 = -224						; size = 4
tv138 = -220						; size = 4
tv90 = -220						; size = 4
__Ans$ = -20						; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__Count$ = 20						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2170
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2172
  00023	83 7d 14 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00027	74 16		 je	 SHORT $LN3@compare
; Line 2173
  00029	68 7d 08 00 00	 push	 2173			; 0000087dH
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@JLPDPDPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00033	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char>
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@compare:
; Line 2176
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00045	3b 4d 08	 cmp	 ecx, DWORD PTR __Off$[ebp]
  00048	73 08		 jae	 SHORT $LN2@compare
; Line 2177
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN2@compare:
; Line 2178
  00052	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00058	2b 4d 08	 sub	 ecx, DWORD PTR __Off$[ebp]
  0005b	3b 4d 0c	 cmp	 ecx, DWORD PTR __N0$[ebp]
  0005e	73 0c		 jae	 SHORT $LN1@compare
; Line 2179
  00060	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00066	2b 4d 08	 sub	 ecx, DWORD PTR __Off$[ebp]
  00069	89 4d 0c	 mov	 DWORD PTR __N0$[ebp], ecx
$LN1@compare:
; Line 2182
  0006c	8b 45 0c	 mov	 eax, DWORD PTR __N0$[ebp]
  0006f	3b 45 14	 cmp	 eax, DWORD PTR __Count$[ebp]
  00072	73 0b		 jae	 SHORT $LN6@compare
  00074	8b 4d 0c	 mov	 ecx, DWORD PTR __N0$[ebp]
  00077	89 8d 24 ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  0007d	eb 09		 jmp	 SHORT $LN7@compare
$LN6@compare:
  0007f	8b 55 14	 mov	 edx, DWORD PTR __Count$[ebp]
  00082	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv90[ebp], edx
$LN7@compare:
  00088	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv90[ebp]
  0008e	50		 push	 eax
  0008f	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00092	51		 push	 ecx
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0009b	03 45 08	 add	 eax, DWORD PTR __Off$[ebp]
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
  000a4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a7	89 45 ec	 mov	 DWORD PTR __Ans$[ebp], eax
; Line 2184
  000aa	83 7d ec 00	 cmp	 DWORD PTR __Ans$[ebp], 0
  000ae	74 0b		 je	 SHORT $LN12@compare
  000b0	8b 45 ec	 mov	 eax, DWORD PTR __Ans$[ebp]
  000b3	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv138[ebp], eax
  000b9	eb 4a		 jmp	 SHORT $LN13@compare
$LN12@compare:
  000bb	8b 4d 0c	 mov	 ecx, DWORD PTR __N0$[ebp]
  000be	3b 4d 14	 cmp	 ecx, DWORD PTR __Count$[ebp]
  000c1	73 0c		 jae	 SHORT $LN10@compare
  000c3	c7 85 20 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR tv137[ebp], -1
  000cd	eb 2a		 jmp	 SHORT $LN11@compare
$LN10@compare:
  000cf	8b 55 0c	 mov	 edx, DWORD PTR __N0$[ebp]
  000d2	3b 55 14	 cmp	 edx, DWORD PTR __Count$[ebp]
  000d5	75 0c		 jne	 SHORT $LN8@compare
  000d7	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
  000e1	eb 0a		 jmp	 SHORT $LN9@compare
$LN8@compare:
  000e3	c7 85 1c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv136[ebp], 1
$LN9@compare:
  000ed	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR tv136[ebp]
  000f3	89 85 20 ff ff
	ff		 mov	 DWORD PTR tv137[ebp], eax
$LN11@compare:
  000f9	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR tv137[ebp]
  000ff	89 8d 24 ff ff
	ff		 mov	 DWORD PTR tv138[ebp], ecx
$LN13@compare:
  00105	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv138[ebp]
$LN5@compare:
; Line 2185
  0010b	5f		 pop	 edi
  0010c	5e		 pop	 esi
  0010d	5b		 pop	 ebx
  0010e	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00114	3b ec		 cmp	 ebp, esp
  00116	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c2 10 00	 ret	 16			; 00000010H
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2157
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 2158
  00023	68 6e 08 00 00	 push	 2158			; 0000086eH
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@JLPDPDPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002d	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char>
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2159
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SAIPBD@Z ; std::char_traits<char>::length
  00042	83 c4 04	 add	 esp, 4
  00045	50		 push	 eax
  00046	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00049	51		 push	 ecx
  0004a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0004d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00050	50		 push	 eax
  00051	6a 00		 push	 0
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Line 2160
  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z
_TEXT	SEGMENT
$T1 = -221						; size = 1
$T2 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2130
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
; Line 2131
  0002d	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00033	50		 push	 eax
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
  0003c	50		 push	 eax
  0003d	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 0c	 mov	 edx, DWORD PTR __Off$[ebp]
  00044	52		 push	 edx
  00045	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	50		 push	 eax
  00049	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0004c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00051	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00057	83 c9 01	 or	 ecx, 1
  0005a	89 8d 2c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00060	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 2132
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0006c	3b ec		 cmp	 ebp, esp
  0006e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 0c 00	 ret	 12			; 0000000cH
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ch$ = 8						; size = 1
__Off$ = 12						; size = 4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1923
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1924
  00023	6a 01		 push	 1
  00025	8b 45 0c	 mov	 eax, DWORD PTR __Off$[ebp]
  00028	50		 push	 eax
  00029	8d 4d 08	 lea	 ecx, DWORD PTR __Ch$[ebp]
  0002c	51		 push	 ecx
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Line 1925
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z
_TEXT	SEGMENT
__Vptr$1 = -44						; size = 4
__Uptr$2 = -32						; size = 4
__Nm$ = -20						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1893
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00013	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1895
  00023	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00027	74 16		 je	 SHORT $LN7@find
; Line 1896
  00029	68 68 07 00 00	 push	 1896			; 00000768H
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@JLPDPDPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00033	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char>
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@find:
; Line 1899
  0003f	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00043	75 13		 jne	 SHORT $LN6@find
  00045	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  0004b	3b 48 14	 cmp	 ecx, DWORD PTR [eax+20]
  0004e	77 08		 ja	 SHORT $LN6@find
; Line 1900
  00050	8b 45 0c	 mov	 eax, DWORD PTR __Off$[ebp]
  00053	e9 ac 00 00 00	 jmp	 $LN8@find
$LN6@find:
; Line 1903
  00058	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 4d 0c	 mov	 ecx, DWORD PTR __Off$[ebp]
  0005e	3b 48 14	 cmp	 ecx, DWORD PTR [eax+20]
  00061	0f 83 98 00 00
	00		 jae	 $LN5@find
  00067	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0006d	2b 4d 0c	 sub	 ecx, DWORD PTR __Off$[ebp]
  00070	89 4d ec	 mov	 DWORD PTR __Nm$[ebp], ecx
  00073	8b 55 10	 mov	 edx, DWORD PTR __Count$[ebp]
  00076	3b 55 ec	 cmp	 edx, DWORD PTR __Nm$[ebp]
  00079	0f 87 80 00 00
	00		 ja	 $LN5@find
; Line 1906
  0007f	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00082	83 e8 01	 sub	 eax, 1
  00085	8b 4d ec	 mov	 ecx, DWORD PTR __Nm$[ebp]
  00088	2b c8		 sub	 ecx, eax
  0008a	89 4d ec	 mov	 DWORD PTR __Nm$[ebp], ecx
  0008d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00090	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00095	03 45 0c	 add	 eax, DWORD PTR __Off$[ebp]
  00098	89 45 d4	 mov	 DWORD PTR __Vptr$1[ebp], eax
; Line 1908
  0009b	eb 1a		 jmp	 SHORT $LN4@find
$LN3@find:
  0009d	8b 45 e0	 mov	 eax, DWORD PTR __Uptr$2[ebp]
  000a0	2b 45 d4	 sub	 eax, DWORD PTR __Vptr$1[ebp]
  000a3	83 c0 01	 add	 eax, 1
  000a6	8b 4d ec	 mov	 ecx, DWORD PTR __Nm$[ebp]
  000a9	2b c8		 sub	 ecx, eax
  000ab	89 4d ec	 mov	 DWORD PTR __Nm$[ebp], ecx
  000ae	8b 55 e0	 mov	 edx, DWORD PTR __Uptr$2[ebp]
  000b1	83 c2 01	 add	 edx, 1
  000b4	89 55 d4	 mov	 DWORD PTR __Vptr$1[ebp], edx
$LN4@find:
  000b7	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000ba	50		 push	 eax
  000bb	8b 4d ec	 mov	 ecx, DWORD PTR __Nm$[ebp]
  000be	51		 push	 ecx
  000bf	8b 55 d4	 mov	 edx, DWORD PTR __Vptr$1[ebp]
  000c2	52		 push	 edx
  000c3	e8 00 00 00 00	 call	 ?find@?$char_traits@D@std@@SAPBDPBDIABD@Z ; std::char_traits<char>::find
  000c8	83 c4 0c	 add	 esp, 12			; 0000000cH
  000cb	89 45 e0	 mov	 DWORD PTR __Uptr$2[ebp], eax
  000ce	83 7d e0 00	 cmp	 DWORD PTR __Uptr$2[ebp], 0
  000d2	74 2b		 je	 SHORT $LN5@find
; Line 1909
  000d4	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  000d7	50		 push	 eax
  000d8	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000db	51		 push	 ecx
  000dc	8b 55 e0	 mov	 edx, DWORD PTR __Uptr$2[ebp]
  000df	52		 push	 edx
  000e0	e8 00 00 00 00	 call	 ?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
  000e5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000e8	85 c0		 test	 eax, eax
  000ea	75 11		 jne	 SHORT $LN1@find
; Line 1910
  000ec	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  000f4	8b 4d e0	 mov	 ecx, DWORD PTR __Uptr$2[ebp]
  000f7	2b c8		 sub	 ecx, eax
  000f9	8b c1		 mov	 eax, ecx
  000fb	eb 07		 jmp	 SHORT $LN8@find
$LN1@find:
; Line 1911
  000fd	eb 9e		 jmp	 SHORT $LN3@find
$LN5@find:
; Line 1913
  000ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
$LN8@find:
; Line 1914
  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	5b		 pop	 ebx
  00107	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  0010d	3b ec		 cmp	 ebp, esp
  0010f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c2 0c 00	 ret	 12			; 0000000cH
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv75 = -232						; size = 4
$T1 = -221						; size = 1
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00013	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1759
  00023	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00029	50		 push	 eax
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
  00039	89 45 ec	 mov	 DWORD PTR __Num$[ebp], eax
; Line 1760
  0003c	83 7d ec 01	 cmp	 DWORD PTR __Num$[ebp], 1
  00040	77 0c		 ja	 SHORT $LN3@max_size
  00042	c7 85 18 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv75[ebp], 1
  0004c	eb 0c		 jmp	 SHORT $LN4@max_size
$LN3@max_size:
  0004e	8b 45 ec	 mov	 eax, DWORD PTR __Num$[ebp]
  00051	83 e8 01	 sub	 eax, 1
  00054	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], eax
$LN4@max_size:
  0005a	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR tv75[ebp]
; Line 1761
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1754
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
; Line 1755
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1738
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1739
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
; Line 1740
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -32					; size = 4
__Ptr$2 = -20						; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1343
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00029	3b 4d 08	 cmp	 ecx, DWORD PTR __Off$[ebp]
  0002c	73 08		 jae	 SHORT $LN4@erase
; Line 1344
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:
; Line 1345
  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0003c	2b 4d 08	 sub	 ecx, DWORD PTR __Off$[ebp]
  0003f	3b 4d 0c	 cmp	 ecx, DWORD PTR __Count$[ebp]
  00042	77 0e		 ja	 SHORT $LN3@erase
; Line 1346
  00044	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00047	50		 push	 eax
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
  00050	eb 46		 jmp	 SHORT $LN2@erase
$LN3@erase:
; Line 1347
  00052	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00056	76 40		 jbe	 SHORT $LN2@erase
; Line 1349
  00058	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00060	03 45 08	 add	 eax, DWORD PTR __Off$[ebp]
  00063	89 45 ec	 mov	 DWORD PTR __Ptr$2[ebp], eax
; Line 1350
  00066	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00069	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0006c	2b 4d 0c	 sub	 ecx, DWORD PTR __Count$[ebp]
  0006f	89 4d e0	 mov	 DWORD PTR __Newsize$1[ebp], ecx
; Line 1351
  00072	8b 45 e0	 mov	 eax, DWORD PTR __Newsize$1[ebp]
  00075	2b 45 08	 sub	 eax, DWORD PTR __Off$[ebp]
  00078	50		 push	 eax
  00079	8b 4d ec	 mov	 ecx, DWORD PTR __Ptr$2[ebp]
  0007c	03 4d 0c	 add	 ecx, DWORD PTR __Count$[ebp]
  0007f	51		 push	 ecx
  00080	8b 55 ec	 mov	 edx, DWORD PTR __Ptr$2[ebp]
  00083	52		 push	 edx
  00084	e8 00 00 00 00	 call	 ?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
  00089	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1352
  0008c	8b 45 e0	 mov	 eax, DWORD PTR __Newsize$1[ebp]
  0008f	50		 push	 eax
  00090	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:
; Line 1354
  00098	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000a4	3b ec		 cmp	 ebp, esp
  000a6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1335
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00029	3b 4d 08	 cmp	 ecx, DWORD PTR __Off$[ebp]
  0002c	73 08		 jae	 SHORT $LN1@erase
; Line 1336
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:
; Line 1337
  00036	8b 45 08	 mov	 eax, DWORD PTR __Off$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1338
  00042	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1168
  00023	68 90 04 00 00	 push	 1168			; 00000490H
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@JLPDPDPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0002d	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char>
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1169
  00039	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SAIPBD@Z ; std::char_traits<char>::length
  00042	83 c4 04	 add	 esp, 4
  00045	50		 push	 eax
  00046	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00049	51		 push	 ecx
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1170
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
  00055	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005b	3b ec		 cmp	 ebp, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1150
  00023	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00027	74 16		 je	 SHORT $LN3@assign
; Line 1151
  00029	68 7f 04 00 00	 push	 1151			; 0000047fH
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_1IO@JLPDPDPD@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  00033	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ; std::_Debug_pointer<char>
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@assign:
; Line 1154
  0003f	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00042	50		 push	 eax
  00043	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
  0004b	0f b6 c8	 movzx	 ecx, al
  0004e	85 c9		 test	 ecx, ecx
  00050	74 20		 je	 SHORT $LN2@assign
; Line 1156
  00052	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00055	50		 push	 eax
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00061	2b c8		 sub	 ecx, eax
  00063	51		 push	 ecx
  00064	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00067	52		 push	 edx
  00068	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00070	eb 3d		 jmp	 SHORT $LN4@assign
$LN2@assign:
; Line 1158
  00072	6a 00		 push	 0
  00074	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00077	50		 push	 eax
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  00080	0f b6 c8	 movzx	 ecx, al
  00083	85 c9		 test	 ecx, ecx
  00085	74 25		 je	 SHORT $LN1@assign
; Line 1160
  00087	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0008e	51		 push	 ecx
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1161
  000a0	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  000a3	50		 push	 eax
  000a4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 1163
  000ac	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000b8	3b ec		 cmp	 ebp, esp
  000ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1130
  00023	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00026	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0002b	3b 45 0c	 cmp	 eax, DWORD PTR __Roff$[ebp]
  0002e	73 08		 jae	 SHORT $LN5@assign
; Line 1131
  00030	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 1132
  00038	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0003b	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00040	2b 45 0c	 sub	 eax, DWORD PTR __Roff$[ebp]
  00043	89 45 ec	 mov	 DWORD PTR __Num$[ebp], eax
; Line 1133
  00046	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00049	3b 45 ec	 cmp	 eax, DWORD PTR __Num$[ebp]
  0004c	73 06		 jae	 SHORT $LN4@assign
; Line 1134
  0004e	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00051	89 45 ec	 mov	 DWORD PTR __Num$[ebp], eax
$LN4@assign:
; Line 1136
  00054	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00057	3b 45 08	 cmp	 eax, DWORD PTR __Right$[ebp]
  0005a	75 1f		 jne	 SHORT $LN3@assign
; Line 1137
  0005c	8b 45 0c	 mov	 eax, DWORD PTR __Roff$[ebp]
  0005f	03 45 ec	 add	 eax, DWORD PTR __Num$[ebp]
  00062	50		 push	 eax
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  0006b	8b 4d 0c	 mov	 ecx, DWORD PTR __Roff$[ebp]
  0006e	51		 push	 ecx
  0006f	6a 00		 push	 0
  00071	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00079	eb 42		 jmp	 SHORT $LN2@assign
$LN3@assign:
; Line 1138
  0007b	6a 00		 push	 0
  0007d	8b 45 ec	 mov	 eax, DWORD PTR __Num$[ebp]
  00080	50		 push	 eax
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	e8 00 00 00 00	 call	 ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
  00089	0f b6 c8	 movzx	 ecx, al
  0008c	85 c9		 test	 ecx, ecx
  0008e	74 2d		 je	 SHORT $LN2@assign
; Line 1141
  00090	8b 45 ec	 mov	 eax, DWORD PTR __Num$[ebp]
  00093	50		 push	 eax
  00094	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00097	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0009c	03 45 0c	 add	 eax, DWORD PTR __Roff$[ebp]
  0009f	50		 push	 eax
  000a0	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
  000ae	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1142
  000b1	8b 45 ec	 mov	 eax, DWORD PTR __Num$[ebp]
  000b4	50		 push	 eax
  000b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 1144
  000bd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
  000c0	5f		 pop	 edi
  000c1	5e		 pop	 esi
  000c2	5b		 pop	 ebx
  000c3	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000c9	3b ec		 cmp	 ebp, esp
  000cb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 991
  00023	6a 00		 push	 0
  00025	6a 01		 push	 1
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 992
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 935
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 936
  00023	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00026	83 78 18 10	 cmp	 DWORD PTR [eax+24], 16	; 00000010H
  0002a	73 22		 jae	 SHORT $LN2@Assign_rv
; Line 938
  0002c	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0002f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00032	83 c1 01	 add	 ecx, 1
  00035	51		 push	 ecx
  00036	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00039	83 c2 04	 add	 edx, 4
  0003c	52		 push	 edx
  0003d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00040	83 c0 04	 add	 eax, 4
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 939
  0004c	eb 2e		 jmp	 SHORT $LN1@Assign_rv
$LN2@Assign_rv:
; Line 941
  0004e	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00051	83 c0 04	 add	 eax, 4
  00054	50		 push	 eax
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	83 c1 04	 add	 ecx, 4
  0005b	51		 push	 ecx
  0005c	8d 95 2f ff ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00062	52		 push	 edx
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  0006b	8b c8		 mov	 ecx, eax
  0006d	e8 00 00 00 00	 call	 ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 942
  00072	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00075	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
$LN1@Assign_rv:
; Line 944
  0007c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00082	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00085	89 50 14	 mov	 DWORD PTR [eax+20], edx
; Line 945
  00088	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0008e	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00091	89 50 18	 mov	 DWORD PTR [eax+24], edx
; Line 946
  00094	6a 00		 push	 0
  00096	6a 00		 push	 0
  00098	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0009b	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 947
  000a0	5f		 pop	 edi
  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000a9	3b ec		 cmp	 ebp, esp
  000ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 887
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8d 85 2f ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  00032	50		 push	 eax
  00033	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Line 888
  0003b	6a 00		 push	 0
  0003d	6a 00		 push	 0
  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 889
  00047	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00050	83 c4 04	 add	 esp, 4
  00053	50		 push	 eax
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
; Line 890
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00068	3b ec		 cmp	 ebp, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8d 8d 23 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00048	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
  0004d	50		 push	 eax
  0004e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
  0005d	6a 00		 push	 0
  0005f	6a 00		 push	 0
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 782
  00069	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 783
  00075	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00082	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00089	59		 pop	 ecx
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00093	3b ec		 cmp	 ebp, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 766
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8d 8d 23 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00048	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
  0004d	50		 push	 eax
  0004e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 767
  0005d	6a 00		 push	 0
  0005f	6a 00		 push	 0
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 768
  00069	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00070	51		 push	 ecx
  00071	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 769
  00079	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00080	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00083	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00086	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008d	59		 pop	 ecx
  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	5b		 pop	 ebx
  00091	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00097	3b ec		 cmp	 ebp, esp
  00099	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
__Al$ = 20						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 759
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00045	50		 push	 eax
  00046	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 760
  00055	6a 00		 push	 0
  00057	6a 00		 push	 0
  00059	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 761
  00061	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00064	50		 push	 eax
  00065	8b 4d 0c	 mov	 ecx, DWORD PTR __Roff$[ebp]
  00068	51		 push	 ecx
  00069	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  0006c	52		 push	 edx
  0006d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 762
  00075	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00082	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00089	59		 pop	 ecx
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00093	3b ec		 cmp	 ebp, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 738
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8d 8d 23 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00048	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
  0004d	50		 push	 eax
  0004e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 739
  0005d	6a 00		 push	 0
  0005f	6a 00		 push	 0
  00061	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00064	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 740
  00069	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00070	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00073	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00076	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007d	59		 pop	 ecx
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	5b		 pop	 ebx
  00081	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00087	3b ec		 cmp	 ebp, esp
  00089	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 724
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00021	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00048	50		 push	 eax
  00049	8d 8d 17 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  0004f	51		 push	 ecx
  00050	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00053	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
  00058	8b c8		 mov	 ecx, eax
  0005a	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
  0005f	50		 push	 eax
  00060	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	e8 00 00 00 00	 call	 ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
  00068	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 725
  0006f	6a 00		 push	 0
  00071	6a 00		 push	 0
  00073	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00076	e8 00 00 00 00	 call	 ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 726
  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
  00080	50		 push	 eax
  00081	6a 00		 push	 0
  00083	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00086	51		 push	 ecx
  00087	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 727
  0008f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00096	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00099	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a3	59		 pop	 ecx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  000ad	3b ec		 cmp	 ebp, esp
  000af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 0c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-244]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 684
  00023	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
  0002b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 674
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
  00035	8b f4		 mov	 esi, esp
  00037	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 676
  00047	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	51		 push	 ecx
  0004d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00050	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
  00055	6a 01		 push	 1
  00057	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	51		 push	 ecx
  0005d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00060	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
  00065	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 679
  0006e	52		 push	 edx
  0006f	8b cd		 mov	 ecx, ebp
  00071	50		 push	 eax
  00072	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  00078	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0007d	58		 pop	 eax
  0007e	5a		 pop	 edx
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00085	33 cd		 xor	 ecx, ebp
  00087	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008c	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00092	3b ec		 cmp	 ebp, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
  0009d	8d 49 00	 npad	 3
$LN5@Free_proxy:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  000a8	eb ff ff ff	 DD	 -21			; ffffffebH
  000ac	01 00 00 00	 DD	 1
  000b0	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  000b4	5f		 DB	 95			; 0000005fH
  000b5	41		 DB	 65			; 00000041H
  000b6	6c		 DB	 108			; 0000006cH
  000b7	70		 DB	 112			; 00000070H
  000b8	72		 DB	 114			; 00000072H
  000b9	6f		 DB	 111			; 0000006fH
  000ba	78		 DB	 120			; 00000078H
  000bb	79		 DB	 121			; 00000079H
  000bc	00		 DB	 0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -232						; size = 8
__Alproxy$ = -21					; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00013	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 665
  0002d	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
  00035	6a 01		 push	 1
  00037	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  0003a	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	89 01		 mov	 DWORD PTR [ecx], eax
; Line 667
  00044	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0004a	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  0004f	50		 push	 eax
  00050	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	51		 push	 ecx
  00056	8d 4d eb	 lea	 ecx, DWORD PTR __Alproxy$[ebp]
  00059	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
  0005e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  00066	89 11		 mov	 DWORD PTR [ecx], edx
; Line 669
  00068	52		 push	 edx
  00069	8b cd		 mov	 ecx, ebp
  0006b	50		 push	 eax
  0006c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  00072	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00077	58		 pop	 eax
  00078	5a		 pop	 edx
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00086	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
  00097	90		 npad	 1
$LN5@Alloc_prox:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000a0	eb ff ff ff	 DD	 -21			; ffffffebH
  000a4	01 00 00 00	 DD	 1
  000a8	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000ac	5f		 DB	 95			; 0000005fH
  000ad	41		 DB	 65			; 00000041H
  000ae	6c		 DB	 108			; 0000006cH
  000af	70		 DB	 112			; 00000070H
  000b0	72		 DB	 114			; 00000072H
  000b1	6f		 DB	 111			; 0000006fH
  000b2	78		 DB	 120			; 00000078H
  000b3	79		 DB	 121			; 00000079H
  000b4	00		 DB	 0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 650
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
; Line 651
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
; Line 646
  00059	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00060	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00066	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006d	59		 pop	 ecx
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00077	3b ec		 cmp	 ebp, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 520
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 18 10	 cmp	 DWORD PTR [eax+24], 16	; 00000010H
  0002a	72 17		 jb	 SHORT $LN3@Myptr
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$addressof@D@std@@YAPADAAD@Z ; std::addressof<char>
  00038	83 c4 04	 add	 esp, 4
  0003b	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], eax
  00041	eb 0c		 jmp	 SHORT $LN4@Myptr
$LN3@Myptr:
  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	83 c0 04	 add	 eax, 4
  00049	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], eax
$LN4@Myptr:
  0004f	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv72[ebp]
; Line 521
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 513
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 18 10	 cmp	 DWORD PTR [eax+24], 16	; 00000010H
  0002a	72 17		 jb	 SHORT $LN3@Myptr
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$addressof@D@std@@YAPADAAD@Z ; std::addressof<char>
  00038	83 c4 04	 add	 esp, 4
  0003b	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], eax
  00041	eb 0c		 jmp	 SHORT $LN4@Myptr
$LN3@Myptr:
  00043	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00046	83 c0 04	 add	 eax, 4
  00049	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv72[ebp], eax
$LN4@Myptr:
  0004f	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv72[ebp]
; Line 514
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b f4		 mov	 esi, esp
  00025	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
  0002e	3b f4		 cmp	 esi, esp
  00030	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 494
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0
; Line 495
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
; Line 496
  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 884
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
  0002c	83 c4 04	 add	 esp, 4
; Line 885
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 858
  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
; Line 859
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 847
  00023	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
; Line 848
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 806
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@ABV01@@Z ; std::allocator<char>::allocator<char>
; Line 807
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
; Line 802
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ PROC ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 778
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 779
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	8d 8d 2f ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
  00033	83 c4 08	 add	 esp, 8
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0003a	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
  0003f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 780
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx
  00045	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 740
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 741
  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR __Al$[ebp]
  00025	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ ; std::allocator<char>::select_on_container_copy_construction
  0002a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 742
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 735
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00021	e8 00 00 00 00	 call	 ?max_size@?$allocator@D@std@@QBEIXZ ; std::allocator<char>::max_size
; Line 736
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002f	3b ec		 cmp	 ebp, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 612
  00023	83 c8 ff	 or	 eax, -1
; Line 613
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 578
  00023	6a 00		 push	 0
  00025	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??$_Allocate@D@std@@YAPADIPAD@Z ; std::_Allocate<char>
  0002e	83 c4 08	 add	 esp, 8
; Line 579
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 573
  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	83 c4 04	 add	 esp, 4
; Line 574
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00038	3b ec		 cmp	 ebp, esp
  0003a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 556
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 558
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 554
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ PROC ; std::allocator<char>::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 532
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 533
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@ABV01@@Z ; std::allocator<char>::allocator<char>
  0002f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 534
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ ENDP ; std::allocator<char>::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -197						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	33 c0		 xor	 eax, eax
  00020	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 187
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 188
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
; Line 189
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 177
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 178
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 179
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
; Line 69
  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -197						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	33 c0		 xor	 eax, eax
  00020	88 85 3b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 604
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 605
  0001e	83 c8 ff	 or	 eax, -1
; Line 606
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
tv68 = -200						; size = 4
tv69 = -196						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 599
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 00 00
	00		 sub	 esp, 200		; 000000c8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 38 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-200]
  00012	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 600
  0001e	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00023	8b 4d 08	 mov	 ecx, DWORD PTR __Meta$[ebp]
  00026	39 01		 cmp	 DWORD PTR [ecx], eax
  00028	74 0d		 je	 SHORT $LN5@not_eof
  0002a	8b 55 08	 mov	 edx, DWORD PTR __Meta$[ebp]
  0002d	8b 02		 mov	 eax, DWORD PTR [edx]
  0002f	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  00035	eb 2b		 jmp	 SHORT $LN6@not_eof
$LN5@not_eof:
  00037	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  0003c	85 c0		 test	 eax, eax
  0003e	75 0c		 jne	 SHORT $LN3@not_eof
  00040	c7 85 38 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv68[ebp], 1
  0004a	eb 0a		 jmp	 SHORT $LN4@not_eof
$LN3@not_eof:
  0004c	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN4@not_eof:
  00056	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR tv68[ebp]
  0005c	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], ecx
$LN6@not_eof:
  00062	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv69[ebp]
; Line 601
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx
  0006b	81 c4 c8 00 00
	00		 add	 esp, 200		; 000000c8H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
tv65 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 593
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 594
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00028	75 0c		 jne	 SHORT $LN3@eq_int_typ
  0002a	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv65[ebp], 1
  00034	eb 0a		 jmp	 SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
  00036	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv65[ebp], 0
$LN4@eq_int_typ:
  00040	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv65[ebp]
; Line 595
  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 588
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ch$[ebp]
  00021	0f b6 00	 movzx	 eax, BYTE PTR [eax]
; Line 589
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 581
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 582
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Meta$[ebp]
  00021	8a 00		 mov	 al, BYTE PTR [eax]
; Line 583
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eq@?$char_traits@D@std@@SA_NABD0@Z
_TEXT	SEGMENT
tv67 = -196						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$char_traits@D@std@@SA_NABD0@Z PROC		; std::char_traits<char>::eq, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 569
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 570
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00024	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  00027	0f be 02	 movsx	 eax, BYTE PTR [edx]
  0002a	3b c8		 cmp	 ecx, eax
  0002c	75 0c		 jne	 SHORT $LN3@eq
  0002e	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv67[ebp], 1
  00038	eb 0a		 jmp	 SHORT $LN4@eq
$LN3@eq:
  0003a	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv67[ebp], 0
$LN4@eq:
  00044	8a 85 3c ff ff
	ff		 mov	 al, BYTE PTR tv67[ebp]
; Line 571
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?eq@?$char_traits@D@std@@SA_NABD0@Z ENDP		; std::char_traits<char>::eq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 563
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 564
  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00024	8a 11		 mov	 dl, BYTE PTR [ecx]
  00026	88 10		 mov	 BYTE PTR [eax], dl
; Line 565
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 551
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 553
  0001e	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00022	75 0b		 jne	 SHORT $LN3@move
  00024	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00027	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  0002d	eb 24		 jmp	 SHORT $LN4@move
$LN3@move:
  0002f	8b f4		 mov	 esi, esp
  00031	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  00034	51		 push	 ecx
  00035	8b 55 0c	 mov	 edx, DWORD PTR __First2$[ebp]
  00038	52		 push	 edx
  00039	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memmove
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
  00046	3b f4		 cmp	 esi, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
$LN4@move:
  00053	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv69[ebp]
; Line 554
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?find@?$char_traits@D@std@@SAPBDPBDIABD@Z
_TEXT	SEGMENT
tv70 = -196						; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 4
?find@?$char_traits@D@std@@SAPBDPBDIABD@Z PROC		; std::char_traits<char>::find, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 544
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 546
  0001e	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00022	75 0c		 jne	 SHORT $LN3@find
  00024	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
  0002e	eb 27		 jmp	 SHORT $LN4@find
$LN3@find:
  00030	8b f4		 mov	 esi, esp
  00032	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00035	50		 push	 eax
  00036	8b 4d 10	 mov	 ecx, DWORD PTR __Ch$[ebp]
  00039	0f be 11	 movsx	 edx, BYTE PTR [ecx]
  0003c	52		 push	 edx
  0003d	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00040	50		 push	 eax
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__memchr
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv70[ebp], eax
$LN4@find:
  00057	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv70[ebp]
; Line 547
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?find@?$char_traits@D@std@@SAPBDPBDIABD@Z ENDP		; std::char_traits<char>::find
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 528
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 530
  0001e	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00022	75 0b		 jne	 SHORT $LN3@copy
  00024	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  00027	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  0002d	eb 1a		 jmp	 SHORT $LN4@copy
$LN3@copy:
  0002f	8b 4d 10	 mov	 ecx, DWORD PTR __Count$[ebp]
  00032	51		 push	 ecx
  00033	8b 55 0c	 mov	 edx, DWORD PTR __First2$[ebp]
  00036	52		 push	 edx
  00037	8b 45 08	 mov	 eax, DWORD PTR __First1$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 _memcpy
  00040	83 c4 0c	 add	 esp, 12			; 0000000cH
  00043	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
$LN4@copy:
  00049	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv69[ebp]
; Line 531
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 521
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 523
  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00024	85 c9		 test	 ecx, ecx
  00026	75 0c		 jne	 SHORT $LN3@length
  00028	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
  00032	eb 12		 jmp	 SHORT $LN4@length
$LN3@length:
  00034	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 _strlen
  0003d	83 c4 04	 add	 esp, 4
  00040	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
$LN4@length:
  00046	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv68[ebp]
; Line 524
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT
tv69 = -196						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@D@std@@SAHPBD0I@Z PROC		; std::char_traits<char>::compare, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 515
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 517
  0001e	83 7d 10 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00022	75 0c		 jne	 SHORT $LN3@compare
  00024	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
  0002e	eb 1a		 jmp	 SHORT $LN4@compare
$LN3@compare:
  00030	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00033	50		 push	 eax
  00034	8b 4d 0c	 mov	 ecx, DWORD PTR __First2$[ebp]
  00037	51		 push	 ecx
  00038	8b 55 08	 mov	 edx, DWORD PTR __First1$[ebp]
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 _memcmp
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH
  00044	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
$LN4@compare:
  0004a	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv69[ebp]
; Line 518
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?compare@?$char_traits@D@std@@SAHPBD0I@Z ENDP		; std::char_traits<char>::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 65
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 60
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
; Line 61
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?fabs@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?fabs@@YAMM@Z PROC					; fabs, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 1066
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	51		 push	 ecx
  0001f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __X$[ebp]
  00024	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00029	e8 00 00 00 00	 call	 _fabsf
  0002e	83 c4 04	 add	 esp, 4
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?fabs@@YAMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceil@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?ceil@@YAMM@Z PROC					; ceil, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 1048
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	51		 push	 ecx
  0001f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __X$[ebp]
  00024	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00029	e8 00 00 00 00	 call	 _ceilf
  0002e	83 c4 04	 add	 esp, 4
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003a	3b ec		 cmp	 ebp, esp
  0003c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
?ceil@@YAMM@Z ENDP					; ceil
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -196						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 686
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 687
  0001e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  00023	83 ec 08	 sub	 esp, 8
  00026	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0002b	e8 00 00 00 00	 call	 _fabs
  00030	83 c4 08	 add	 esp, 8
  00033	d9 9d 3c ff ff
	ff		 fstp	 DWORD PTR tv71[ebp]
  00039	d9 85 3c ff ff
	ff		 fld	 DWORD PTR tv71[ebp]
; Line 688
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ceilf
_TEXT	SEGMENT
tv73 = -196						; size = 4
__X$ = 8						; size = 4
_ceilf	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 658
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 659
  0001e	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  00023	8b f4		 mov	 esi, esp
  00025	83 ec 08	 sub	 esp, 8
  00028	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ceil
  00033	83 c4 08	 add	 esp, 8
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	d9 9d 3c ff ff
	ff		 fstp	 DWORD PTR tv73[ebp]
  00043	d9 85 3c ff ff
	ff		 fld	 DWORD PTR tv73[ebp]
; Line 660
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
  0004c	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00052	3b ec		 cmp	 ebp, esp
  00054	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
_ceilf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 557
  0001e	8b f4		 mov	 esi, esp
  00020	83 ec 08	 sub	 esp, 8
  00023	f2 0f 10 45 10	 movsd	 xmm0, QWORD PTR __Y$[ebp]
  00028	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0002d	83 ec 08	 sub	 esp, 8
  00030	f2 0f 10 45 08	 movsd	 xmm0, QWORD PTR __X$[ebp]
  00035	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0003a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___hypot
  00040	83 c4 10	 add	 esp, 16			; 00000010H
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
; Line 558
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
_hypot	ENDP
_TEXT	ENDS
END
